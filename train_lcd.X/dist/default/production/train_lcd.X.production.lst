

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Jan 10 12:31:17 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x220,48
    68                           	dabs	1,0x1B6,58
    69                           	dabs	1,0x2106,0,_trains
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.35
    73                           ; Generated 06/12/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F1827 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011A                     	;# 
   165  011B                     	;# 
   166  011D                     	;# 
   167  011E                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0191                     	;# 
   171  0191                     	;# 
   172  0192                     	;# 
   173  0193                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019C                     	;# 
   186  019C                     	;# 
   187  019D                     	;# 
   188  019E                     	;# 
   189  019F                     	;# 
   190  020C                     	;# 
   191  020D                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  0219                     	;# 
   208  021A                     	;# 
   209  021B                     	;# 
   210  021C                     	;# 
   211  021D                     	;# 
   212  021E                     	;# 
   213  021F                     	;# 
   214  0291                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0293                     	;# 
   218  0294                     	;# 
   219  0295                     	;# 
   220  0295                     	;# 
   221  0296                     	;# 
   222  0298                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  029A                     	;# 
   226  029B                     	;# 
   227  029C                     	;# 
   228  029C                     	;# 
   229  029D                     	;# 
   230  029E                     	;# 
   231  029E                     	;# 
   232  0311                     	;# 
   233  0311                     	;# 
   234  0312                     	;# 
   235  0313                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  0394                     	;# 
   241  0395                     	;# 
   242  0396                     	;# 
   243  039A                     	;# 
   244  039C                     	;# 
   245  039D                     	;# 
   246  039E                     	;# 
   247  039F                     	;# 
   248  0415                     	;# 
   249  0416                     	;# 
   250  0417                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  0FE4                     	;# 
   255  0FE5                     	;# 
   256  0FE6                     	;# 
   257  0FE7                     	;# 
   258  0FE8                     	;# 
   259  0FE9                     	;# 
   260  0FEA                     	;# 
   261  0FEB                     	;# 
   262  0FED                     	;# 
   263  0FEE                     	;# 
   264  0FEF                     	;# 
   265  0000                     	;# 
   266  0001                     	;# 
   267  0002                     	;# 
   268  0003                     	;# 
   269  0004                     	;# 
   270  0005                     	;# 
   271  0006                     	;# 
   272  0007                     	;# 
   273  0008                     	;# 
   274  0009                     	;# 
   275  000A                     	;# 
   276  000B                     	;# 
   277  000C                     	;# 
   278  000D                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001E                     	;# 
   293  001F                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  0111                     	;# 
   314  0112                     	;# 
   315  0113                     	;# 
   316  0114                     	;# 
   317  0115                     	;# 
   318  0116                     	;# 
   319  0117                     	;# 
   320  0118                     	;# 
   321  0119                     	;# 
   322  011A                     	;# 
   323  011B                     	;# 
   324  011D                     	;# 
   325  011E                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0191                     	;# 
   329  0191                     	;# 
   330  0192                     	;# 
   331  0193                     	;# 
   332  0193                     	;# 
   333  0193                     	;# 
   334  0194                     	;# 
   335  0195                     	;# 
   336  0196                     	;# 
   337  0199                     	;# 
   338  019A                     	;# 
   339  019B                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019C                     	;# 
   344  019C                     	;# 
   345  019D                     	;# 
   346  019E                     	;# 
   347  019F                     	;# 
   348  020C                     	;# 
   349  020D                     	;# 
   350  0211                     	;# 
   351  0211                     	;# 
   352  0212                     	;# 
   353  0212                     	;# 
   354  0213                     	;# 
   355  0213                     	;# 
   356  0214                     	;# 
   357  0214                     	;# 
   358  0215                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0216                     	;# 
   362  0216                     	;# 
   363  0217                     	;# 
   364  0217                     	;# 
   365  0219                     	;# 
   366  021A                     	;# 
   367  021B                     	;# 
   368  021C                     	;# 
   369  021D                     	;# 
   370  021E                     	;# 
   371  021F                     	;# 
   372  0291                     	;# 
   373  0291                     	;# 
   374  0292                     	;# 
   375  0293                     	;# 
   376  0294                     	;# 
   377  0295                     	;# 
   378  0295                     	;# 
   379  0296                     	;# 
   380  0298                     	;# 
   381  0298                     	;# 
   382  0299                     	;# 
   383  029A                     	;# 
   384  029B                     	;# 
   385  029C                     	;# 
   386  029C                     	;# 
   387  029D                     	;# 
   388  029E                     	;# 
   389  029E                     	;# 
   390  0311                     	;# 
   391  0311                     	;# 
   392  0312                     	;# 
   393  0313                     	;# 
   394  0318                     	;# 
   395  0318                     	;# 
   396  0319                     	;# 
   397  031A                     	;# 
   398  0394                     	;# 
   399  0395                     	;# 
   400  0396                     	;# 
   401  039A                     	;# 
   402  039C                     	;# 
   403  039D                     	;# 
   404  039E                     	;# 
   405  039F                     	;# 
   406  0415                     	;# 
   407  0416                     	;# 
   408  0417                     	;# 
   409  041C                     	;# 
   410  041D                     	;# 
   411  041E                     	;# 
   412  0FE4                     	;# 
   413  0FE5                     	;# 
   414  0FE6                     	;# 
   415  0FE7                     	;# 
   416  0FE8                     	;# 
   417  0FE9                     	;# 
   418  0FEA                     	;# 
   419  0FEB                     	;# 
   420  0FED                     	;# 
   421  0FEE                     	;# 
   422  0FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000D                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  0111                     	;# 
   472  0112                     	;# 
   473  0113                     	;# 
   474  0114                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011D                     	;# 
   483  011E                     	;# 
   484  018C                     	;# 
   485  018D                     	;# 
   486  0191                     	;# 
   487  0191                     	;# 
   488  0192                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0194                     	;# 
   493  0195                     	;# 
   494  0196                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  020C                     	;# 
   507  020D                     	;# 
   508  0211                     	;# 
   509  0211                     	;# 
   510  0212                     	;# 
   511  0212                     	;# 
   512  0213                     	;# 
   513  0213                     	;# 
   514  0214                     	;# 
   515  0214                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0216                     	;# 
   520  0216                     	;# 
   521  0217                     	;# 
   522  0217                     	;# 
   523  0219                     	;# 
   524  021A                     	;# 
   525  021B                     	;# 
   526  021C                     	;# 
   527  021D                     	;# 
   528  021E                     	;# 
   529  021F                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0294                     	;# 
   535  0295                     	;# 
   536  0295                     	;# 
   537  0296                     	;# 
   538  0298                     	;# 
   539  0298                     	;# 
   540  0299                     	;# 
   541  029A                     	;# 
   542  029B                     	;# 
   543  029C                     	;# 
   544  029C                     	;# 
   545  029D                     	;# 
   546  029E                     	;# 
   547  029E                     	;# 
   548  0311                     	;# 
   549  0311                     	;# 
   550  0312                     	;# 
   551  0313                     	;# 
   552  0318                     	;# 
   553  0318                     	;# 
   554  0319                     	;# 
   555  031A                     	;# 
   556  0394                     	;# 
   557  0395                     	;# 
   558  0396                     	;# 
   559  039A                     	;# 
   560  039C                     	;# 
   561  039D                     	;# 
   562  039E                     	;# 
   563  039F                     	;# 
   564  0415                     	;# 
   565  0416                     	;# 
   566  0417                     	;# 
   567  041C                     	;# 
   568  041D                     	;# 
   569  041E                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000D                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0014                     	;# 
   599  0015                     	;# 
   600  0016                     	;# 
   601  0016                     	;# 
   602  0017                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  001B                     	;# 
   607  001C                     	;# 
   608  001E                     	;# 
   609  001F                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  010C                     	;# 
   628  010D                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0113                     	;# 
   632  0114                     	;# 
   633  0115                     	;# 
   634  0116                     	;# 
   635  0117                     	;# 
   636  0118                     	;# 
   637  0119                     	;# 
   638  011A                     	;# 
   639  011B                     	;# 
   640  011D                     	;# 
   641  011E                     	;# 
   642  018C                     	;# 
   643  018D                     	;# 
   644  0191                     	;# 
   645  0191                     	;# 
   646  0192                     	;# 
   647  0193                     	;# 
   648  0193                     	;# 
   649  0193                     	;# 
   650  0194                     	;# 
   651  0195                     	;# 
   652  0196                     	;# 
   653  0199                     	;# 
   654  019A                     	;# 
   655  019B                     	;# 
   656  019B                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019C                     	;# 
   660  019C                     	;# 
   661  019D                     	;# 
   662  019E                     	;# 
   663  019F                     	;# 
   664  020C                     	;# 
   665  020D                     	;# 
   666  0211                     	;# 
   667  0211                     	;# 
   668  0212                     	;# 
   669  0212                     	;# 
   670  0213                     	;# 
   671  0213                     	;# 
   672  0214                     	;# 
   673  0214                     	;# 
   674  0215                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0216                     	;# 
   678  0216                     	;# 
   679  0217                     	;# 
   680  0217                     	;# 
   681  0219                     	;# 
   682  021A                     	;# 
   683  021B                     	;# 
   684  021C                     	;# 
   685  021D                     	;# 
   686  021E                     	;# 
   687  021F                     	;# 
   688  0291                     	;# 
   689  0291                     	;# 
   690  0292                     	;# 
   691  0293                     	;# 
   692  0294                     	;# 
   693  0295                     	;# 
   694  0295                     	;# 
   695  0296                     	;# 
   696  0298                     	;# 
   697  0298                     	;# 
   698  0299                     	;# 
   699  029A                     	;# 
   700  029B                     	;# 
   701  029C                     	;# 
   702  029C                     	;# 
   703  029D                     	;# 
   704  029E                     	;# 
   705  029E                     	;# 
   706  0311                     	;# 
   707  0311                     	;# 
   708  0312                     	;# 
   709  0313                     	;# 
   710  0318                     	;# 
   711  0318                     	;# 
   712  0319                     	;# 
   713  031A                     	;# 
   714  0394                     	;# 
   715  0395                     	;# 
   716  0396                     	;# 
   717  039A                     	;# 
   718  039C                     	;# 
   719  039D                     	;# 
   720  039E                     	;# 
   721  039F                     	;# 
   722  0415                     	;# 
   723  0416                     	;# 
   724  0417                     	;# 
   725  041C                     	;# 
   726  041D                     	;# 
   727  041E                     	;# 
   728  0FE4                     	;# 
   729  0FE5                     	;# 
   730  0FE6                     	;# 
   731  0FE7                     	;# 
   732  0FE8                     	;# 
   733  0FE9                     	;# 
   734  0FEA                     	;# 
   735  0FEB                     	;# 
   736  0FED                     	;# 
   737  0FEE                     	;# 
   738  0FEF                     	;# 
   739  0000                     	;# 
   740  0001                     	;# 
   741  0002                     	;# 
   742  0003                     	;# 
   743  0004                     	;# 
   744  0005                     	;# 
   745  0006                     	;# 
   746  0007                     	;# 
   747  0008                     	;# 
   748  0009                     	;# 
   749  000A                     	;# 
   750  000B                     	;# 
   751  000C                     	;# 
   752  000D                     	;# 
   753  0011                     	;# 
   754  0012                     	;# 
   755  0013                     	;# 
   756  0014                     	;# 
   757  0015                     	;# 
   758  0016                     	;# 
   759  0016                     	;# 
   760  0017                     	;# 
   761  0018                     	;# 
   762  0019                     	;# 
   763  001A                     	;# 
   764  001B                     	;# 
   765  001C                     	;# 
   766  001E                     	;# 
   767  001F                     	;# 
   768  008C                     	;# 
   769  008D                     	;# 
   770  0091                     	;# 
   771  0092                     	;# 
   772  0093                     	;# 
   773  0094                     	;# 
   774  0095                     	;# 
   775  0096                     	;# 
   776  0097                     	;# 
   777  0098                     	;# 
   778  0099                     	;# 
   779  009A                     	;# 
   780  009B                     	;# 
   781  009B                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009E                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  0111                     	;# 
   788  0112                     	;# 
   789  0113                     	;# 
   790  0114                     	;# 
   791  0115                     	;# 
   792  0116                     	;# 
   793  0117                     	;# 
   794  0118                     	;# 
   795  0119                     	;# 
   796  011A                     	;# 
   797  011B                     	;# 
   798  011D                     	;# 
   799  011E                     	;# 
   800  018C                     	;# 
   801  018D                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0193                     	;# 
   808  0194                     	;# 
   809  0195                     	;# 
   810  0196                     	;# 
   811  0199                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019D                     	;# 
   820  019E                     	;# 
   821  019F                     	;# 
   822  020C                     	;# 
   823  020D                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0219                     	;# 
   840  021A                     	;# 
   841  021B                     	;# 
   842  021C                     	;# 
   843  021D                     	;# 
   844  021E                     	;# 
   845  021F                     	;# 
   846  0291                     	;# 
   847  0291                     	;# 
   848  0292                     	;# 
   849  0293                     	;# 
   850  0294                     	;# 
   851  0295                     	;# 
   852  0295                     	;# 
   853  0296                     	;# 
   854  0298                     	;# 
   855  0298                     	;# 
   856  0299                     	;# 
   857  029A                     	;# 
   858  029B                     	;# 
   859  029C                     	;# 
   860  029C                     	;# 
   861  029D                     	;# 
   862  029E                     	;# 
   863  029E                     	;# 
   864  0311                     	;# 
   865  0311                     	;# 
   866  0312                     	;# 
   867  0313                     	;# 
   868  0318                     	;# 
   869  0318                     	;# 
   870  0319                     	;# 
   871  031A                     	;# 
   872  0394                     	;# 
   873  0395                     	;# 
   874  0396                     	;# 
   875  039A                     	;# 
   876  039C                     	;# 
   877  039D                     	;# 
   878  039E                     	;# 
   879  039F                     	;# 
   880  0415                     	;# 
   881  0416                     	;# 
   882  0417                     	;# 
   883  041C                     	;# 
   884  041D                     	;# 
   885  041E                     	;# 
   886  0FE4                     	;# 
   887  0FE5                     	;# 
   888  0FE6                     	;# 
   889  0FE7                     	;# 
   890  0FE8                     	;# 
   891  0FE9                     	;# 
   892  0FEA                     	;# 
   893  0FEB                     	;# 
   894  0FED                     	;# 
   895  0FEE                     	;# 
   896  0FEF                     	;# 
   897  0000                     	;# 
   898  0001                     	;# 
   899  0002                     	;# 
   900  0003                     	;# 
   901  0004                     	;# 
   902  0005                     	;# 
   903  0006                     	;# 
   904  0007                     	;# 
   905  0008                     	;# 
   906  0009                     	;# 
   907  000A                     	;# 
   908  000B                     	;# 
   909  000C                     	;# 
   910  000D                     	;# 
   911  0011                     	;# 
   912  0012                     	;# 
   913  0013                     	;# 
   914  0014                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0016                     	;# 
   918  0017                     	;# 
   919  0018                     	;# 
   920  0019                     	;# 
   921  001A                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  001E                     	;# 
   925  001F                     	;# 
   926  008C                     	;# 
   927  008D                     	;# 
   928  0091                     	;# 
   929  0092                     	;# 
   930  0093                     	;# 
   931  0094                     	;# 
   932  0095                     	;# 
   933  0096                     	;# 
   934  0097                     	;# 
   935  0098                     	;# 
   936  0099                     	;# 
   937  009A                     	;# 
   938  009B                     	;# 
   939  009B                     	;# 
   940  009C                     	;# 
   941  009D                     	;# 
   942  009E                     	;# 
   943  010C                     	;# 
   944  010D                     	;# 
   945  0111                     	;# 
   946  0112                     	;# 
   947  0113                     	;# 
   948  0114                     	;# 
   949  0115                     	;# 
   950  0116                     	;# 
   951  0117                     	;# 
   952  0118                     	;# 
   953  0119                     	;# 
   954  011A                     	;# 
   955  011B                     	;# 
   956  011D                     	;# 
   957  011E                     	;# 
   958  018C                     	;# 
   959  018D                     	;# 
   960  0191                     	;# 
   961  0191                     	;# 
   962  0192                     	;# 
   963  0193                     	;# 
   964  0193                     	;# 
   965  0193                     	;# 
   966  0194                     	;# 
   967  0195                     	;# 
   968  0196                     	;# 
   969  0199                     	;# 
   970  019A                     	;# 
   971  019B                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019B                     	;# 
   975  019C                     	;# 
   976  019C                     	;# 
   977  019D                     	;# 
   978  019E                     	;# 
   979  019F                     	;# 
   980  020C                     	;# 
   981  020D                     	;# 
   982  0211                     	;# 
   983  0211                     	;# 
   984  0212                     	;# 
   985  0212                     	;# 
   986  0213                     	;# 
   987  0213                     	;# 
   988  0214                     	;# 
   989  0214                     	;# 
   990  0215                     	;# 
   991  0215                     	;# 
   992  0215                     	;# 
   993  0216                     	;# 
   994  0216                     	;# 
   995  0217                     	;# 
   996  0217                     	;# 
   997  0219                     	;# 
   998  021A                     	;# 
   999  021B                     	;# 
  1000  021C                     	;# 
  1001  021D                     	;# 
  1002  021E                     	;# 
  1003  021F                     	;# 
  1004  0291                     	;# 
  1005  0291                     	;# 
  1006  0292                     	;# 
  1007  0293                     	;# 
  1008  0294                     	;# 
  1009  0295                     	;# 
  1010  0295                     	;# 
  1011  0296                     	;# 
  1012  0298                     	;# 
  1013  0298                     	;# 
  1014  0299                     	;# 
  1015  029A                     	;# 
  1016  029B                     	;# 
  1017  029C                     	;# 
  1018  029C                     	;# 
  1019  029D                     	;# 
  1020  029E                     	;# 
  1021  029E                     	;# 
  1022  0311                     	;# 
  1023  0311                     	;# 
  1024  0312                     	;# 
  1025  0313                     	;# 
  1026  0318                     	;# 
  1027  0318                     	;# 
  1028  0319                     	;# 
  1029  031A                     	;# 
  1030  0394                     	;# 
  1031  0395                     	;# 
  1032  0396                     	;# 
  1033  039A                     	;# 
  1034  039C                     	;# 
  1035  039D                     	;# 
  1036  039E                     	;# 
  1037  039F                     	;# 
  1038  0415                     	;# 
  1039  0416                     	;# 
  1040  0417                     	;# 
  1041  041C                     	;# 
  1042  041D                     	;# 
  1043  041E                     	;# 
  1044  0FE4                     	;# 
  1045  0FE5                     	;# 
  1046  0FE6                     	;# 
  1047  0FE7                     	;# 
  1048  0FE8                     	;# 
  1049  0FE9                     	;# 
  1050  0FEA                     	;# 
  1051  0FEB                     	;# 
  1052  0FED                     	;# 
  1053  0FEE                     	;# 
  1054  0FEF                     	;# 
  1055  0000                     	;# 
  1056  0001                     	;# 
  1057  0002                     	;# 
  1058  0003                     	;# 
  1059  0004                     	;# 
  1060  0005                     	;# 
  1061  0006                     	;# 
  1062  0007                     	;# 
  1063  0008                     	;# 
  1064  0009                     	;# 
  1065  000A                     	;# 
  1066  000B                     	;# 
  1067  000C                     	;# 
  1068  000D                     	;# 
  1069  0011                     	;# 
  1070  0012                     	;# 
  1071  0013                     	;# 
  1072  0014                     	;# 
  1073  0015                     	;# 
  1074  0016                     	;# 
  1075  0016                     	;# 
  1076  0017                     	;# 
  1077  0018                     	;# 
  1078  0019                     	;# 
  1079  001A                     	;# 
  1080  001B                     	;# 
  1081  001C                     	;# 
  1082  001E                     	;# 
  1083  001F                     	;# 
  1084  008C                     	;# 
  1085  008D                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0094                     	;# 
  1090  0095                     	;# 
  1091  0096                     	;# 
  1092  0097                     	;# 
  1093  0098                     	;# 
  1094  0099                     	;# 
  1095  009A                     	;# 
  1096  009B                     	;# 
  1097  009B                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009E                     	;# 
  1101  010C                     	;# 
  1102  010D                     	;# 
  1103  0111                     	;# 
  1104  0112                     	;# 
  1105  0113                     	;# 
  1106  0114                     	;# 
  1107  0115                     	;# 
  1108  0116                     	;# 
  1109  0117                     	;# 
  1110  0118                     	;# 
  1111  0119                     	;# 
  1112  011A                     	;# 
  1113  011B                     	;# 
  1114  011D                     	;# 
  1115  011E                     	;# 
  1116  018C                     	;# 
  1117  018D                     	;# 
  1118  0191                     	;# 
  1119  0191                     	;# 
  1120  0192                     	;# 
  1121  0193                     	;# 
  1122  0193                     	;# 
  1123  0193                     	;# 
  1124  0194                     	;# 
  1125  0195                     	;# 
  1126  0196                     	;# 
  1127  0199                     	;# 
  1128  019A                     	;# 
  1129  019B                     	;# 
  1130  019B                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019C                     	;# 
  1134  019C                     	;# 
  1135  019D                     	;# 
  1136  019E                     	;# 
  1137  019F                     	;# 
  1138  020C                     	;# 
  1139  020D                     	;# 
  1140  0211                     	;# 
  1141  0211                     	;# 
  1142  0212                     	;# 
  1143  0212                     	;# 
  1144  0213                     	;# 
  1145  0213                     	;# 
  1146  0214                     	;# 
  1147  0214                     	;# 
  1148  0215                     	;# 
  1149  0215                     	;# 
  1150  0215                     	;# 
  1151  0216                     	;# 
  1152  0216                     	;# 
  1153  0217                     	;# 
  1154  0217                     	;# 
  1155  0219                     	;# 
  1156  021A                     	;# 
  1157  021B                     	;# 
  1158  021C                     	;# 
  1159  021D                     	;# 
  1160  021E                     	;# 
  1161  021F                     	;# 
  1162  0291                     	;# 
  1163  0291                     	;# 
  1164  0292                     	;# 
  1165  0293                     	;# 
  1166  0294                     	;# 
  1167  0295                     	;# 
  1168  0295                     	;# 
  1169  0296                     	;# 
  1170  0298                     	;# 
  1171  0298                     	;# 
  1172  0299                     	;# 
  1173  029A                     	;# 
  1174  029B                     	;# 
  1175  029C                     	;# 
  1176  029C                     	;# 
  1177  029D                     	;# 
  1178  029E                     	;# 
  1179  029E                     	;# 
  1180  0311                     	;# 
  1181  0311                     	;# 
  1182  0312                     	;# 
  1183  0313                     	;# 
  1184  0318                     	;# 
  1185  0318                     	;# 
  1186  0319                     	;# 
  1187  031A                     	;# 
  1188  0394                     	;# 
  1189  0395                     	;# 
  1190  0396                     	;# 
  1191  039A                     	;# 
  1192  039C                     	;# 
  1193  039D                     	;# 
  1194  039E                     	;# 
  1195  039F                     	;# 
  1196  0415                     	;# 
  1197  0416                     	;# 
  1198  0417                     	;# 
  1199  041C                     	;# 
  1200  041D                     	;# 
  1201  041E                     	;# 
  1202  0FE4                     	;# 
  1203  0FE5                     	;# 
  1204  0FE6                     	;# 
  1205  0FE7                     	;# 
  1206  0FE8                     	;# 
  1207  0FE9                     	;# 
  1208  0FEA                     	;# 
  1209  0FEB                     	;# 
  1210  0FED                     	;# 
  1211  0FEE                     	;# 
  1212  0FEF                     	;# 
  1213  0000                     	;# 
  1214  0001                     	;# 
  1215  0002                     	;# 
  1216  0003                     	;# 
  1217  0004                     	;# 
  1218  0005                     	;# 
  1219  0006                     	;# 
  1220  0007                     	;# 
  1221  0008                     	;# 
  1222  0009                     	;# 
  1223  000A                     	;# 
  1224  000B                     	;# 
  1225  000C                     	;# 
  1226  000D                     	;# 
  1227  0011                     	;# 
  1228  0012                     	;# 
  1229  0013                     	;# 
  1230  0014                     	;# 
  1231  0015                     	;# 
  1232  0016                     	;# 
  1233  0016                     	;# 
  1234  0017                     	;# 
  1235  0018                     	;# 
  1236  0019                     	;# 
  1237  001A                     	;# 
  1238  001B                     	;# 
  1239  001C                     	;# 
  1240  001E                     	;# 
  1241  001F                     	;# 
  1242  008C                     	;# 
  1243  008D                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0093                     	;# 
  1247  0094                     	;# 
  1248  0095                     	;# 
  1249  0096                     	;# 
  1250  0097                     	;# 
  1251  0098                     	;# 
  1252  0099                     	;# 
  1253  009A                     	;# 
  1254  009B                     	;# 
  1255  009B                     	;# 
  1256  009C                     	;# 
  1257  009D                     	;# 
  1258  009E                     	;# 
  1259  010C                     	;# 
  1260  010D                     	;# 
  1261  0111                     	;# 
  1262  0112                     	;# 
  1263  0113                     	;# 
  1264  0114                     	;# 
  1265  0115                     	;# 
  1266  0116                     	;# 
  1267  0117                     	;# 
  1268  0118                     	;# 
  1269  0119                     	;# 
  1270  011A                     	;# 
  1271  011B                     	;# 
  1272  011D                     	;# 
  1273  011E                     	;# 
  1274  018C                     	;# 
  1275  018D                     	;# 
  1276  0191                     	;# 
  1277  0191                     	;# 
  1278  0192                     	;# 
  1279  0193                     	;# 
  1280  0193                     	;# 
  1281  0193                     	;# 
  1282  0194                     	;# 
  1283  0195                     	;# 
  1284  0196                     	;# 
  1285  0199                     	;# 
  1286  019A                     	;# 
  1287  019B                     	;# 
  1288  019B                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019C                     	;# 
  1292  019C                     	;# 
  1293  019D                     	;# 
  1294  019E                     	;# 
  1295  019F                     	;# 
  1296  020C                     	;# 
  1297  020D                     	;# 
  1298  0211                     	;# 
  1299  0211                     	;# 
  1300  0212                     	;# 
  1301  0212                     	;# 
  1302  0213                     	;# 
  1303  0213                     	;# 
  1304  0214                     	;# 
  1305  0214                     	;# 
  1306  0215                     	;# 
  1307  0215                     	;# 
  1308  0215                     	;# 
  1309  0216                     	;# 
  1310  0216                     	;# 
  1311  0217                     	;# 
  1312  0217                     	;# 
  1313  0219                     	;# 
  1314  021A                     	;# 
  1315  021B                     	;# 
  1316  021C                     	;# 
  1317  021D                     	;# 
  1318  021E                     	;# 
  1319  021F                     	;# 
  1320  0291                     	;# 
  1321  0291                     	;# 
  1322  0292                     	;# 
  1323  0293                     	;# 
  1324  0294                     	;# 
  1325  0295                     	;# 
  1326  0295                     	;# 
  1327  0296                     	;# 
  1328  0298                     	;# 
  1329  0298                     	;# 
  1330  0299                     	;# 
  1331  029A                     	;# 
  1332  029B                     	;# 
  1333  029C                     	;# 
  1334  029C                     	;# 
  1335  029D                     	;# 
  1336  029E                     	;# 
  1337  029E                     	;# 
  1338  0311                     	;# 
  1339  0311                     	;# 
  1340  0312                     	;# 
  1341  0313                     	;# 
  1342  0318                     	;# 
  1343  0318                     	;# 
  1344  0319                     	;# 
  1345  031A                     	;# 
  1346  0394                     	;# 
  1347  0395                     	;# 
  1348  0396                     	;# 
  1349  039A                     	;# 
  1350  039C                     	;# 
  1351  039D                     	;# 
  1352  039E                     	;# 
  1353  039F                     	;# 
  1354  0415                     	;# 
  1355  0416                     	;# 
  1356  0417                     	;# 
  1357  041C                     	;# 
  1358  041D                     	;# 
  1359  041E                     	;# 
  1360  0FE4                     	;# 
  1361  0FE5                     	;# 
  1362  0FE6                     	;# 
  1363  0FE7                     	;# 
  1364  0FE8                     	;# 
  1365  0FE9                     	;# 
  1366  0FEA                     	;# 
  1367  0FEB                     	;# 
  1368  0FED                     	;# 
  1369  0FEE                     	;# 
  1370  0FEF                     	;# 
  1371  0000                     	;# 
  1372  0001                     	;# 
  1373  0002                     	;# 
  1374  0003                     	;# 
  1375  0004                     	;# 
  1376  0005                     	;# 
  1377  0006                     	;# 
  1378  0007                     	;# 
  1379  0008                     	;# 
  1380  0009                     	;# 
  1381  000A                     	;# 
  1382  000B                     	;# 
  1383  000C                     	;# 
  1384  000D                     	;# 
  1385  0011                     	;# 
  1386  0012                     	;# 
  1387  0013                     	;# 
  1388  0014                     	;# 
  1389  0015                     	;# 
  1390  0016                     	;# 
  1391  0016                     	;# 
  1392  0017                     	;# 
  1393  0018                     	;# 
  1394  0019                     	;# 
  1395  001A                     	;# 
  1396  001B                     	;# 
  1397  001C                     	;# 
  1398  001E                     	;# 
  1399  001F                     	;# 
  1400  008C                     	;# 
  1401  008D                     	;# 
  1402  0091                     	;# 
  1403  0092                     	;# 
  1404  0093                     	;# 
  1405  0094                     	;# 
  1406  0095                     	;# 
  1407  0096                     	;# 
  1408  0097                     	;# 
  1409  0098                     	;# 
  1410  0099                     	;# 
  1411  009A                     	;# 
  1412  009B                     	;# 
  1413  009B                     	;# 
  1414  009C                     	;# 
  1415  009D                     	;# 
  1416  009E                     	;# 
  1417  010C                     	;# 
  1418  010D                     	;# 
  1419  0111                     	;# 
  1420  0112                     	;# 
  1421  0113                     	;# 
  1422  0114                     	;# 
  1423  0115                     	;# 
  1424  0116                     	;# 
  1425  0117                     	;# 
  1426  0118                     	;# 
  1427  0119                     	;# 
  1428  011A                     	;# 
  1429  011B                     	;# 
  1430  011D                     	;# 
  1431  011E                     	;# 
  1432  018C                     	;# 
  1433  018D                     	;# 
  1434  0191                     	;# 
  1435  0191                     	;# 
  1436  0192                     	;# 
  1437  0193                     	;# 
  1438  0193                     	;# 
  1439  0193                     	;# 
  1440  0194                     	;# 
  1441  0195                     	;# 
  1442  0196                     	;# 
  1443  0199                     	;# 
  1444  019A                     	;# 
  1445  019B                     	;# 
  1446  019B                     	;# 
  1447  019B                     	;# 
  1448  019B                     	;# 
  1449  019C                     	;# 
  1450  019C                     	;# 
  1451  019D                     	;# 
  1452  019E                     	;# 
  1453  019F                     	;# 
  1454  020C                     	;# 
  1455  020D                     	;# 
  1456  0211                     	;# 
  1457  0211                     	;# 
  1458  0212                     	;# 
  1459  0212                     	;# 
  1460  0213                     	;# 
  1461  0213                     	;# 
  1462  0214                     	;# 
  1463  0214                     	;# 
  1464  0215                     	;# 
  1465  0215                     	;# 
  1466  0215                     	;# 
  1467  0216                     	;# 
  1468  0216                     	;# 
  1469  0217                     	;# 
  1470  0217                     	;# 
  1471  0219                     	;# 
  1472  021A                     	;# 
  1473  021B                     	;# 
  1474  021C                     	;# 
  1475  021D                     	;# 
  1476  021E                     	;# 
  1477  021F                     	;# 
  1478  0291                     	;# 
  1479  0291                     	;# 
  1480  0292                     	;# 
  1481  0293                     	;# 
  1482  0294                     	;# 
  1483  0295                     	;# 
  1484  0295                     	;# 
  1485  0296                     	;# 
  1486  0298                     	;# 
  1487  0298                     	;# 
  1488  0299                     	;# 
  1489  029A                     	;# 
  1490  029B                     	;# 
  1491  029C                     	;# 
  1492  029C                     	;# 
  1493  029D                     	;# 
  1494  029E                     	;# 
  1495  029E                     	;# 
  1496  0311                     	;# 
  1497  0311                     	;# 
  1498  0312                     	;# 
  1499  0313                     	;# 
  1500  0318                     	;# 
  1501  0318                     	;# 
  1502  0319                     	;# 
  1503  031A                     	;# 
  1504  0394                     	;# 
  1505  0395                     	;# 
  1506  0396                     	;# 
  1507  039A                     	;# 
  1508  039C                     	;# 
  1509  039D                     	;# 
  1510  039E                     	;# 
  1511  039F                     	;# 
  1512  0415                     	;# 
  1513  0416                     	;# 
  1514  0417                     	;# 
  1515  041C                     	;# 
  1516  041D                     	;# 
  1517  041E                     	;# 
  1518  0FE4                     	;# 
  1519  0FE5                     	;# 
  1520  0FE6                     	;# 
  1521  0FE7                     	;# 
  1522  0FE8                     	;# 
  1523  0FE9                     	;# 
  1524  0FEA                     	;# 
  1525  0FEB                     	;# 
  1526  0FED                     	;# 
  1527  0FEE                     	;# 
  1528  0FEF                     	;_trains
  1529                           
  1530                           	psect	idataBIGRAM
  1531  0008                     __pidataBIGRAM:
  1532                           
  1533                           ;initializer for _trains
  1534  0008  3406               	retlw	6
  1535  0009  340F               	retlw	15
  1536  000A  3406               	retlw	6
  1537  000B  3419               	retlw	25
  1538  000C  3406               	retlw	6
  1539  000D  3431               	retlw	49
  1540  000E  3407               	retlw	7
  1541  000F  3401               	retlw	1
  1542  0010  3407               	retlw	7
  1543  0011  340D               	retlw	13
  1544  0012  3407               	retlw	7
  1545  0013  3419               	retlw	25
  1546  0014  3407               	retlw	7
  1547  0015  3431               	retlw	49
  1548  0016  3408               	retlw	8
  1549  0017  3401               	retlw	1
  1550  0018  3408               	retlw	8
  1551  0019  340D               	retlw	13
  1552  001A  3408               	retlw	8
  1553  001B  3419               	retlw	25
  1554  001C  3408               	retlw	8
  1555  001D  3425               	retlw	37
  1556  001E  3409               	retlw	9
  1557  001F  3401               	retlw	1
  1558  0020  3409               	retlw	9
  1559  0021  3419               	retlw	25
  1560  0022  3409               	retlw	9
  1561  0023  3431               	retlw	49
  1562  0024  340A               	retlw	10
  1563  0025  340D               	retlw	13
  1564  0026  340A               	retlw	10
  1565  0027  3425               	retlw	37
  1566  0028  340B               	retlw	11
  1567  0029  3401               	retlw	1
  1568  002A  340B               	retlw	11
  1569  002B  3419               	retlw	25
  1570  002C  340B               	retlw	11
  1571  002D  3431               	retlw	49
  1572  002E  340C               	retlw	12
  1573  002F  340D               	retlw	13
  1574  0030  340C               	retlw	12
  1575  0031  3425               	retlw	37
  1576  0032  340D               	retlw	13
  1577  0033  3401               	retlw	1
  1578  0034  340D               	retlw	13
  1579  0035  3419               	retlw	25
  1580  0036  340D               	retlw	13
  1581  0037  3431               	retlw	49
  1582  0038  340E               	retlw	14
  1583  0039  340D               	retlw	13
  1584  003A  340E               	retlw	14
  1585  003B  3425               	retlw	37
  1586  003C  340F               	retlw	15
  1587  003D  3401               	retlw	1
  1588  003E  340F               	retlw	15
  1589  003F  3419               	retlw	25
  1590  0040  340F               	retlw	15
  1591  0041  3431               	retlw	49
  1592  0042  3410               	retlw	16
  1593  0043  340D               	retlw	13
  1594  0044  3410               	retlw	16
  1595  0045  3425               	retlw	37
  1596  0046  3410               	retlw	16
  1597  0047  3431               	retlw	49
  1598  0048  3411               	retlw	17
  1599  0049  3401               	retlw	1
  1600  004A  3411               	retlw	17
  1601  004B  340D               	retlw	13
  1602  004C  3411               	retlw	17
  1603  004D  3419               	retlw	25
  1604  004E  3411               	retlw	17
  1605  004F  3425               	retlw	37
  1606  0050  3411               	retlw	17
  1607  0051  3431               	retlw	49
  1608  0052  3412               	retlw	18
  1609  0053  3401               	retlw	1
  1610  0054  3412               	retlw	18
  1611  0055  340D               	retlw	13
  1612  0056  3412               	retlw	18
  1613  0057  3419               	retlw	25
  1614  0058  3412               	retlw	18
  1615  0059  3425               	retlw	37
  1616  005A  3412               	retlw	18
  1617  005B  3431               	retlw	49
  1618  005C  3413               	retlw	19
  1619  005D  3401               	retlw	1
  1620  005E  3413               	retlw	19
  1621  005F  340D               	retlw	13
  1622  0060  3413               	retlw	19
  1623  0061  3419               	retlw	25
  1624  0062  3413               	retlw	19
  1625  0063  3425               	retlw	37
  1626  0064  3413               	retlw	19
  1627  0065  3431               	retlw	49
  1628  0066  3414               	retlw	20
  1629  0067  340D               	retlw	13
  1630  0068  3414               	retlw	20
  1631  0069  3425               	retlw	37
  1632  006A  3415               	retlw	21
  1633  006B  3401               	retlw	1
  1634  006C  3415               	retlw	21
  1635  006D  3418               	retlw	24
  1636  006E  3415               	retlw	21
  1637  006F  3430               	retlw	48
  1638  0070  3416               	retlw	22
  1639  0071  3412               	retlw	18
  1640                           
  1641                           	psect	idataBANK1
  1642  0004                     __pidataBANK1:
  1643                           
  1644                           ;initializer for lcd_set_cursor@F2511
  1645  0004  3400               	retlw	0
  1646  0005  3440               	retlw	64
  1647  0006  3414               	retlw	20
  1648  0007  3454               	retlw	84
  1649                           
  1650                           	psect	stringtext1
  1651  083C                     __pstringtext1:
  1652  083C                     _HOUR_4_MONEY:
  1653  083C  3454               	retlw	84
  1654  083D  3406               	retlw	6
  1655  083E                     __end_of_HOUR_4_MONEY:
  1656                           
  1657                           	psect	stringtext2
  1658  083E                     __pstringtext2:
  1659  083E                     _MIN_4_MONEY:
  1660  083E  341B               	retlw	27
  1661  083F  3400               	retlw	0
  1662  0840                     __end_of_MIN_4_MONEY:
  1663                           
  1664                           	psect	stringtext3
  1665  0800                     __pstringtext3:
  1666  0800                     _REGULAR_HOUR:
  1667  0800  3411               	retlw	17
  1668  0801  3400               	retlw	0
  1669  0802                     __end_of_REGULAR_HOUR:
  1670  0095                     _OPTION_REGbits	set	149
  1671  008D                     _TRISB	set	141
  1672  008C                     _TRISA	set	140
  1673  0097                     _WDTCON	set	151
  1674  0098                     _OSCTUNE	set	152
  1675  0099                     _OSCCON	set	153
  1676  011E                     _APFCON1	set	286
  1677  011D                     _APFCON0	set	285
  1678  010D                     _LATB	set	269
  1679  010C                     _LATA	set	268
  1680  0116                     _BORCON	set	278
  1681  018C                     _ANSELA	set	396
  1682  018D                     _ANSELB	set	397
  1683  021D                     _SSP2CON1bits	set	541
  1684  021C                     _SSP2STATbits	set	540
  1685  0219                     _SSP2BUF	set	537
  1686  021E                     _SSP2CON2bits	set	542
  1687  021C                     _SSP2STAT	set	540
  1688  021E                     _SSP2CON2	set	542
  1689  021D                     _SSP2CON1	set	541
  1690  021A                     _SSP2ADD	set	538
  1691  020C                     _WPUA	set	524
  1692  020D                     _WPUB	set	525
  1693  0802                     STR_1:
  1694  0802  344B               	retlw	75	;'K'
  1695  0803  3457               	retlw	87	;'W'
  1696  0804  3420               	retlw	32	;' '
  1697  0805  343E               	retlw	62	;'>'
  1698  0806  3420               	retlw	32	;' '
  1699  0807  344D               	retlw	77	;'M'
  1700  0808  3454               	retlw	84	;'T'
  1701  0809  3420               	retlw	32	;' '
  1702  080A  3425               	retlw	37	;'%'
  1703  080B  3430               	retlw	48	;'0'
  1704  080C  3432               	retlw	50	;'2'
  1705  080D  3464               	retlw	100	;'d'
  1706  080E  343A               	retlw	58	;':'
  1707  080F  3425               	retlw	37	;'%'
  1708  0810  3430               	retlw	48	;'0'
  1709  0811  3432               	retlw	50	;'2'
  1710  0812  3464               	retlw	100	;'d'
  1711  0813  3400               	retlw	0
  1712                           
  1713                           	psect	stringtext4
  1714  0814                     __pstringtext4:
  1715  0814                     STR_5:
  1716  0814  3454               	retlw	84	;'T'
  1717  0815  3469               	retlw	105	;'i'
  1718  0816  346D               	retlw	109	;'m'
  1719  0817  3465               	retlw	101	;'e'
  1720  0818  3420               	retlw	32	;' '
  1721  0819  343A               	retlw	58	;':'
  1722  081A  3425               	retlw	37	;'%'
  1723  081B  3430               	retlw	48	;'0'
  1724  081C  3432               	retlw	50	;'2'
  1725  081D  3464               	retlw	100	;'d'
  1726  081E  343A               	retlw	58	;':'
  1727  081F  3425               	retlw	37	;'%'
  1728  0820  3430               	retlw	48	;'0'
  1729  0821  3432               	retlw	50	;'2'
  1730  0822  3464               	retlw	100	;'d'
  1731  0823  3400               	retlw	0
  1732                           
  1733                           	psect	stringtext5
  1734  0824                     __pstringtext5:
  1735  0824                     STR_6:
  1736  0824  344D               	retlw	77	;'M'
  1737  0825  346F               	retlw	111	;'o'
  1738  0826  346E               	retlw	110	;'n'
  1739  0827  3465               	retlw	101	;'e'
  1740  0828  3479               	retlw	121	;'y'
  1741  0829  343A               	retlw	58	;':'
  1742  082A  3425               	retlw	37	;'%'
  1743  082B  3464               	retlw	100	;'d'
  1744  082C  3459               	retlw	89	;'Y'
  1745  082D  3445               	retlw	69	;'E'
  1746  082E  344E               	retlw	78	;'N'
  1747  082F  3400               	retlw	0
  1748                           
  1749                           	psect	stringtext6
  1750  0830                     __pstringtext6:
  1751  0830                     STR_4:
  1752  0830  3425               	retlw	37	;'%'
  1753  0831  3464               	retlw	100	;'d'
  1754  0832  3420               	retlw	32	;' '
  1755  0833  346D               	retlw	109	;'m'
  1756  0834  3469               	retlw	105	;'i'
  1757  0835  346E               	retlw	110	;'n'
  1758  0836  3420               	retlw	32	;' '
  1759  0837  346C               	retlw	108	;'l'
  1760  0838  3465               	retlw	101	;'e'
  1761  0839  3466               	retlw	102	;'f'
  1762  083A  3474               	retlw	116	;'t'
  1763  083B  3400               	retlw	0
  1764                           
  1765                           	psect	stringtext7
  1766  0840                     __pstringtext7:
  1767  0840                     STR_7:
  1768  0840  3420               	retlw	32	;' '
  1769  0841  3400               	retlw	0
  1770                           
  1771                           	psect	stringtext8
  1772  0000                     __pstringtext8:
  1773  0802                     
  1774                           	psect	cinit
  1775  07CB                     start_initialization:	
  1776                           ; #config settings
  1777                           
  1778  07CB                     __initialization:	;BIGRAM
  1779                           
  1780                           ; Initialize objects allocated to BIGRAM
  1781  07CB  3008               	movlw	low __pidataBIGRAM
  1782  07CC  0084               	movwf	4
  1783  07CD  3080               	movlw	(high __pidataBIGRAM)| (0+128)
  1784  07CE  0085               	movwf	5
  1785  07CF  3006               	movlw	low (0+8454)
  1786  07D0  0086               	movwf	6
  1787  07D1  3021               	movlw	high (0+8454)
  1788  07D2  0087               	movwf	7
  1789  07D3  3000               	movlw	0
  1790  07D4  00FF               	movwf	btemp+1
  1791  07D5  306A               	movlw	106
  1792  07D6  318A  226B  3187   	fcall	init_ram
  1793                           
  1794                           ; Initialize objects allocated to BANK1
  1795  07D9  3004               	movlw	low __pidataBANK1
  1796  07DA  0084               	movwf	4
  1797  07DB  3080               	movlw	(high __pidataBANK1)| (0+128)
  1798  07DC  0085               	movwf	5
  1799  07DD  30E2               	movlw	low __pdataBANK1
  1800  07DE  0086               	movwf	6
  1801  07DF  3000               	movlw	high __pdataBANK1
  1802  07E0  0087               	movwf	7
  1803  07E1  3000               	movlw	0
  1804  07E2  00FF               	movwf	btemp+1
  1805  07E3  3004               	movlw	4
  1806  07E4  318A  226B  3187   	fcall	init_ram
  1807                           
  1808                           ; Clear objects allocated to BANK1
  1809  07E7  30C6               	movlw	low __pbssBANK1
  1810  07E8  0084               	movwf	4
  1811  07E9  3000               	movlw	high __pbssBANK1
  1812  07EA  0085               	movwf	5
  1813  07EB  301C               	movlw	28
  1814  07EC  00FE               	movwf	btemp
  1815  07ED  3000               	movlw	0
  1816  07EE  00FF               	movwf	btemp+1
  1817  07EF  318A  225F  3187   	fcall	clear_ram0
  1818                           
  1819                           ; Clear objects allocated to BANK2
  1820  07F2  3020               	movlw	low __pbssBANK2
  1821  07F3  0084               	movwf	4
  1822  07F4  3001               	movlw	high __pbssBANK2
  1823  07F5  0085               	movwf	5
  1824  07F6  3020               	movlw	32
  1825  07F7  00FE               	movwf	btemp
  1826  07F8  3000               	movlw	0
  1827  07F9  00FF               	movwf	btemp+1
  1828  07FA  318A  225F  3187   	fcall	clear_ram0
  1829  07FD                     end_of_initialization:	
  1830                           ;End of C runtime variable initialization code
  1831                           
  1832  07FD                     __end_of__initialization:
  1833  07FD  0020               	movlb	0
  1834  07FE  3181  2911         	ljmp	_main	;jump to C main() function
  1835                           
  1836                           	psect	bssBANK1
  1837  00C6                     __pbssBANK1:
  1838  00C6                     _nout:
  1839  00C6                     	ds	2
  1840  00C8                     _width:
  1841  00C8                     	ds	2
  1842  00CA                     _prec:
  1843  00CA                     	ds	2
  1844  00CC                     _flags:
  1845  00CC                     	ds	2
  1846  00CE                     _money:
  1847  00CE                     	ds	2
  1848  00D0                     _regular_flg:
  1849  00D0                     	ds	1
  1850  00D1                     __backlightval:
  1851  00D1                     	ds	1
  1852  00D2                     _line:
  1853  00D2                     	ds	16
  1854                           
  1855                           	psect	dataBANK1
  1856  00E2                     __pdataBANK1:
  1857  00E2                     lcd_set_cursor@F2511:
  1858  00E2                     	ds	4
  1859                           
  1860                           	psect	bssBANK2
  1861  0120                     __pbssBANK2:
  1862  0120                     _dbuf:
  1863  0120                     	ds	32
  1864                           
  1865                           	psect	inittext
  1866  0A6B                     init_ram:
  1867  0A6B  00FE               	movwf	btemp
  1868  0A6C                     initloop:
  1869  0A6C  0012               	moviw fsr0++
  1870  0A6D  001E               	movwi fsr1++
  1871  0A6E  3001               	movlw	1
  1872  0A6F  02FE               	subwf	btemp,f
  1873  0A70  3000               	movlw	0
  1874  0A71  3BFF               	subwfb	btemp+1,f
  1875  0A72  087F               	movf	btemp+1,w
  1876  0A73  047E               	iorwf	btemp,w
  1877  0A74  1D03               	skipz
  1878  0A75  2A6C               	goto	initloop
  1879  0A76  3400               	retlw	0
  1880                           
  1881                           	psect	clrtext
  1882  0A5F                     clear_ram0:	
  1883                           ;	Called with FSR0 containing the base address, and
  1884                           ;	btemp/btemp+1 has the size to clear
  1885                           
  1886  0A5F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1887  0A60                     clrloop0:
  1888  0A60  0180               	clrf	0	;clear RAM location pointed to by FSR
  1889  0A61  3101               	addfsr 0,1
  1890  0A62  3001               	movlw	1
  1891  0A63  02FE               	subwf	btemp,f
  1892  0A64  3000               	movlw	0
  1893  0A65  3BFF               	subwfb	btemp+1,f
  1894  0A66  087F               	movf	btemp+1,w
  1895  0A67  047E               	iorwf	btemp,w
  1896  0A68  1D03               	skipz
  1897  0A69  2A60               	goto	clrloop0	;have we reached the end yet?
  1898  0A6A  3400               	retlw	0	;all done for this memory range, return
  1899                           
  1900                           	psect	cstackBANK1
  1901  00A0                     __pcstackBANK1:
  1902  00A0                     sprintf@ap:
  1903                           
  1904                           ; 1 bytes @ 0x0
  1905  00A0                     	ds	1
  1906  00A1                     sprintf@s:
  1907                           
  1908                           ; 1 bytes @ 0x1
  1909  00A1                     	ds	1
  1910  00A2                     sprintf@f:
  1911                           
  1912                           ; 10 bytes @ 0x2
  1913  00A2                     	ds	10
  1914  00AC                     ?_print_train:
  1915  00AC                     ?_print_remaing:	
  1916                           ; 1 bytes @ 0xC
  1917                           
  1918  00AC                     ?_print_money:	
  1919                           ; 1 bytes @ 0xC
  1920                           
  1921  00AC                     print_train@next:	
  1922                           ; 1 bytes @ 0xC
  1923                           
  1924  00AC                     print_remaing@date:	
  1925                           ; 2 bytes @ 0xC
  1926                           
  1927  00AC                     print_money@date:	
  1928                           ; 6 bytes @ 0xC
  1929                           
  1930                           
  1931                           ; 6 bytes @ 0xC
  1932  00AC                     	ds	2
  1933  00AE                     print_train@next1:
  1934                           
  1935                           ; 2 bytes @ 0xE
  1936  00AE                     	ds	2
  1937  00B0                     ??_print_train:
  1938                           
  1939                           ; 1 bytes @ 0x10
  1940  00B0                     	ds	2
  1941  00B2                     print_remaing@next:
  1942  00B2                     print_money@money:	
  1943                           ; 2 bytes @ 0x12
  1944                           
  1945                           
  1946                           ; 2 bytes @ 0x12
  1947  00B2                     	ds	2
  1948  00B4                     ??_print_remaing:
  1949  00B4                     ??_print_money:	
  1950                           ; 1 bytes @ 0x14
  1951                           
  1952                           
  1953                           ; 1 bytes @ 0x14
  1954  00B4                     	ds	4
  1955  00B8                     print_remaing@now_min:
  1956                           
  1957                           ; 2 bytes @ 0x18
  1958  00B8                     	ds	2
  1959  00BA                     print_remaing@next_min:
  1960                           
  1961                           ; 2 bytes @ 0x1A
  1962  00BA                     	ds	2
  1963  00BC                     main@next1:
  1964                           
  1965                           ; 2 bytes @ 0x1C
  1966  00BC                     	ds	2
  1967  00BE                     main@next:
  1968                           
  1969                           ; 2 bytes @ 0x1E
  1970  00BE                     	ds	2
  1971  00C0                     main@date:
  1972                           
  1973                           ; 6 bytes @ 0x20
  1974  00C0                     	ds	6
  1975                           
  1976                           	psect	cstackCOMMON
  1977  0070                     __pcstackCOMMON:
  1978  0070                     ?_PIN_MANAGER_Initialize:
  1979  0070                     ??_PIN_MANAGER_Initialize:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982  0070                     ?_OSCILLATOR_Initialize:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985  0070                     ??_OSCILLATOR_Initialize:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988  0070                     ?_WDT_Initialize:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991  0070                     ??_WDT_Initialize:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994  0070                     ?_lcd_init:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997  0070                     ?_lcd_backlight:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  0070                     ?_read_date:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003  0070                     ?_lcd_clear:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006  0070                     ?_putch:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009  0070                     ??_putch:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012  0070                     ?_SYSTEM_Initialize:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015  0070                     ??_SYSTEM_Initialize:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018  0070                     ?_main:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021  0070                     ?_i2c_wait:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024  0070                     ??_i2c_wait:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027  0070                     ?_i2c_start:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030  0070                     ??_i2c_start:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033  0070                     ?_i2c_stop:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036  0070                     ??_i2c_stop:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039  0070                     ?_i2c_repeated_start:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042  0070                     ??_i2c_repeated_start:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045  0070                     ?_i2c_write:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048  0070                     ??_i2c_write:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051  0070                     ?_i2c_read:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054  0070                     ??_i2c_read:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057  0070                     ?_lcd_cmd:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060  0070                     ?_bcd_2_decimal:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063  0070                     ?__read:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066  0070                     ?___bmul:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069  0070                     ??___aodiv:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072  0070                     ??___aomod:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075  0070                     ?_fputc:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078  0070                     ?_strlen:	
  2079                           ; 2 bytes @ 0x0
  2080                           
  2081  0070                     ?_isdigit:	
  2082                           ; 2 bytes @ 0x0
  2083                           
  2084  0070                     ?_isspace:	
  2085                           ; 2 bytes @ 0x0
  2086                           
  2087  0070                     ?___wmul:	
  2088                           ; 2 bytes @ 0x0
  2089                           
  2090  0070                     i2c_write@data:	
  2091                           ; 2 bytes @ 0x0
  2092                           
  2093  0070                     ___bmul@multiplicand:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096  0070                     putch@c:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0070                     ___wmul@multiplier:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0070                     isdigit@c:	
  2103                           ; 2 bytes @ 0x0
  2104                           
  2105  0070                     isspace@c:	
  2106                           ; 2 bytes @ 0x0
  2107                           
  2108  0070                     fputc@c:	
  2109                           ; 2 bytes @ 0x0
  2110                           
  2111                           
  2112                           ; 2 bytes @ 0x0
  2113  0070                     	ds	1
  2114  0071                     ??_lcd_cmd:
  2115  0071                     ??___bmul:	
  2116                           ; 1 bytes @ 0x1
  2117                           
  2118  0071                     i2c_read@ack:	
  2119                           ; 1 bytes @ 0x1
  2120                           
  2121  0071                     lcd_cmd@cmd:	
  2122                           ; 1 bytes @ 0x1
  2123                           
  2124  0071                     ___aodiv@counter:	
  2125                           ; 1 bytes @ 0x1
  2126                           
  2127  0071                     ___aomod@counter:	
  2128                           ; 1 bytes @ 0x1
  2129                           
  2130                           
  2131                           ; 1 bytes @ 0x1
  2132  0071                     	ds	1
  2133  0072                     ??_lcd_init:
  2134  0072                     ??_lcd_backlight:	
  2135                           ; 1 bytes @ 0x2
  2136                           
  2137  0072                     ?_command:	
  2138                           ; 1 bytes @ 0x2
  2139                           
  2140  0072                     ??_strlen:	
  2141                           ; 1 bytes @ 0x2
  2142                           
  2143  0072                     ??_isdigit:	
  2144                           ; 1 bytes @ 0x2
  2145                           
  2146  0072                     ??_isspace:	
  2147                           ; 1 bytes @ 0x2
  2148                           
  2149  0072                     i2c_read@data:	
  2150                           ; 1 bytes @ 0x2
  2151                           
  2152  0072                     command@mode:	
  2153                           ; 1 bytes @ 0x2
  2154                           
  2155  0072                     ___bmul@product:	
  2156                           ; 1 bytes @ 0x2
  2157                           
  2158  0072                     ___aodiv@sign:	
  2159                           ; 1 bytes @ 0x2
  2160                           
  2161  0072                     ___aomod@sign:	
  2162                           ; 1 bytes @ 0x2
  2163                           
  2164  0072                     fputc@fp:	
  2165                           ; 1 bytes @ 0x2
  2166                           
  2167  0072                     ___wmul@multiplicand:	
  2168                           ; 1 bytes @ 0x2
  2169                           
  2170                           
  2171                           ; 2 bytes @ 0x2
  2172  0072                     	ds	1
  2173  0073                     ??_command:
  2174  0073                     ??_fputc:	
  2175                           ; 1 bytes @ 0x3
  2176                           
  2177  0073                     ?_abs:	
  2178                           ; 1 bytes @ 0x3
  2179                           
  2180  0073                     ___bmul@multiplier:	
  2181                           ; 2 bytes @ 0x3
  2182                           
  2183  0073                     strlen@a:	
  2184                           ; 1 bytes @ 0x3
  2185                           
  2186  0073                     abs@a:	
  2187                           ; 1 bytes @ 0x3
  2188                           
  2189  0073                     ___aodiv@quotient:	
  2190                           ; 2 bytes @ 0x3
  2191                           
  2192                           
  2193                           ; 8 bytes @ 0x3
  2194  0073                     	ds	1
  2195  0074                     ??_bcd_2_decimal:
  2196  0074                     ??___wmul:	
  2197                           ; 1 bytes @ 0x4
  2198                           
  2199  0074                     _isspace$1087:	
  2200                           ; 1 bytes @ 0x4
  2201                           
  2202  0074                     strlen@s:	
  2203                           ; 1 bytes @ 0x4
  2204                           
  2205  0074                     ___wmul@product:	
  2206                           ; 1 bytes @ 0x4
  2207                           
  2208                           
  2209                           ; 2 bytes @ 0x4
  2210  0074                     	ds	1
  2211  0075                     ??_abs:
  2212  0075                     command@val:	
  2213                           ; 1 bytes @ 0x5
  2214                           
  2215                           
  2216                           ; 1 bytes @ 0x5
  2217  0075                     	ds	1
  2218  0076                     ?_get_next:
  2219  0076                     ?_calc_money:	
  2220                           ; 1 bytes @ 0x6
  2221                           
  2222  0076                     ?_atoi:	
  2223                           ; 2 bytes @ 0x6
  2224                           
  2225  0076                     command@highnib:	
  2226                           ; 2 bytes @ 0x6
  2227                           
  2228  0076                     get_next@next:	
  2229                           ; 1 bytes @ 0x6
  2230                           
  2231  0076                     atoi@s:	
  2232                           ; 2 bytes @ 0x6
  2233                           
  2234  0076                     calc_money@date:	
  2235                           ; 2 bytes @ 0x6
  2236                           
  2237                           
  2238                           ; 6 bytes @ 0x6
  2239  0076                     	ds	1
  2240  0077                     command@lownib:
  2241  0077                     bcd_2_decimal@number:	
  2242                           ; 1 bytes @ 0x7
  2243                           
  2244                           
  2245                           ; 1 bytes @ 0x7
  2246  0077                     	ds	1
  2247  0078                     ?_lcd_set_cursor:
  2248  0078                     ?_lcd_print:	
  2249                           ; 1 bytes @ 0x8
  2250                           
  2251  0078                     ??_atoi:	
  2252                           ; 1 bytes @ 0x8
  2253                           
  2254  0078                     ??__read:	
  2255                           ; 1 bytes @ 0x8
  2256                           
  2257  0078                     ?_fputs:	
  2258                           ; 1 bytes @ 0x8
  2259                           
  2260  0078                     lcd_set_cursor@row:	
  2261                           ; 2 bytes @ 0x8
  2262                           
  2263  0078                     get_next@hour:	
  2264                           ; 1 bytes @ 0x8
  2265                           
  2266  0078                     fputs@fp:	
  2267                           ; 1 bytes @ 0x8
  2268                           
  2269  0078                     lcd_print@str:	
  2270                           ; 1 bytes @ 0x8
  2271                           
  2272                           
  2273                           ; 2 bytes @ 0x8
  2274  0078                     	ds	1
  2275  0079                     ??_lcd_set_cursor:
  2276  0079                     ??_fputs:	
  2277                           ; 1 bytes @ 0x9
  2278                           
  2279  0079                     get_next@min:	
  2280                           ; 1 bytes @ 0x9
  2281                           
  2282  0079                     __read@address:	
  2283                           ; 1 bytes @ 0x9
  2284                           
  2285                           
  2286                           ; 1 bytes @ 0x9
  2287  0079                     	ds	1
  2288  007A                     ??_lcd_print:
  2289  007A                     __read@data:	
  2290                           ; 1 bytes @ 0xA
  2291                           
  2292                           
  2293                           ; 1 bytes @ 0xA
  2294  007A                     	ds	1
  2295  007B                     ??_read_date:
  2296  007B                     lcd_print@cmd:	
  2297                           ; 1 bytes @ 0xB
  2298                           
  2299                           
  2300                           ; 1 bytes @ 0xB
  2301  007B                     	ds	1
  2302  007C                     ??_lcd_clear:
  2303  007C                     ??_pad:	
  2304                           ; 1 bytes @ 0xC
  2305                           
  2306  007C                     read_date@date:	
  2307                           ; 1 bytes @ 0xC
  2308                           
  2309                           
  2310                           ; 1 bytes @ 0xC
  2311  007C                     	ds	1
  2312  007D                     ??_sprintf:
  2313                           
  2314                           ; 1 bytes @ 0xD
  2315  007D                     	ds	1
  2316                           
  2317                           	psect	cstackBANK0
  2318  0020                     __pcstackBANK0:
  2319  0020                     ??_get_next:
  2320  0020                     ??_calc_money:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323  0020                     ?___aodiv:	
  2324                           ; 1 bytes @ 0x0
  2325                           
  2326  0020                     ?___aomod:	
  2327                           ; 8 bytes @ 0x0
  2328                           
  2329  0020                     fputs@c:	
  2330                           ; 8 bytes @ 0x0
  2331                           
  2332  0020                     atoi@neg:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335  0020                     lcd_set_cursor@row_offsets:	
  2336                           ; 2 bytes @ 0x0
  2337                           
  2338  0020                     ___aodiv@divisor:	
  2339                           ; 4 bytes @ 0x0
  2340                           
  2341  0020                     ___aomod@divisor:	
  2342                           ; 8 bytes @ 0x0
  2343                           
  2344                           
  2345                           ; 8 bytes @ 0x0
  2346  0020                     	ds	1
  2347  0021                     fputs@i:
  2348                           
  2349                           ; 2 bytes @ 0x1
  2350  0021                     	ds	1
  2351  0022                     atoi@n:
  2352                           
  2353                           ; 2 bytes @ 0x2
  2354  0022                     	ds	1
  2355  0023                     fputs@s:
  2356                           
  2357                           ; 1 bytes @ 0x3
  2358  0023                     	ds	1
  2359  0024                     ?_pad:
  2360  0024                     lcd_set_cursor@col:	
  2361                           ; 2 bytes @ 0x4
  2362                           
  2363  0024                     pad@buf:	
  2364                           ; 1 bytes @ 0x4
  2365                           
  2366  0024                     calc_money@hour:	
  2367                           ; 1 bytes @ 0x4
  2368                           
  2369                           
  2370                           ; 2 bytes @ 0x4
  2371  0024                     	ds	1
  2372  0025                     lcd_set_cursor@cmd:
  2373  0025                     pad@p:	
  2374                           ; 1 bytes @ 0x5
  2375                           
  2376                           
  2377                           ; 2 bytes @ 0x5
  2378  0025                     	ds	1
  2379  0026                     lcd_clear@row:
  2380  0026                     calc_money@min:	
  2381                           ; 1 bytes @ 0x6
  2382                           
  2383                           
  2384                           ; 2 bytes @ 0x6
  2385  0026                     	ds	1
  2386  0027                     lcd_clear@col:
  2387  0027                     pad@i:	
  2388                           ; 1 bytes @ 0x7
  2389                           
  2390                           
  2391                           ; 2 bytes @ 0x7
  2392  0027                     	ds	1
  2393  0028                     ___aodiv@dividend:
  2394  0028                     ___aomod@dividend:	
  2395                           ; 8 bytes @ 0x8
  2396                           
  2397                           
  2398                           ; 8 bytes @ 0x8
  2399  0028                     	ds	1
  2400  0029                     pad@w:
  2401                           
  2402                           ; 2 bytes @ 0x9
  2403  0029                     	ds	2
  2404  002B                     pad@fp:
  2405                           
  2406                           ; 1 bytes @ 0xB
  2407  002B                     	ds	1
  2408  002C                     get_next@now_min:
  2409                           
  2410                           ; 2 bytes @ 0xC
  2411  002C                     	ds	2
  2412  002E                     get_next@t_min:
  2413                           
  2414                           ; 2 bytes @ 0xE
  2415  002E                     	ds	2
  2416  0030                     ?_dtoa:
  2417  0030                     get_next@idx:	
  2418                           ; 2 bytes @ 0x10
  2419                           
  2420  0030                     dtoa@d:	
  2421                           ; 1 bytes @ 0x10
  2422                           
  2423                           
  2424                           ; 8 bytes @ 0x10
  2425  0030                     	ds	1
  2426  0031                     get_next@i:
  2427                           
  2428                           ; 1 bytes @ 0x11
  2429  0031                     	ds	7
  2430  0038                     ??_dtoa:
  2431                           
  2432                           ; 1 bytes @ 0x18
  2433  0038                     	ds	3
  2434  003B                     _dtoa$1038:
  2435                           
  2436                           ; 2 bytes @ 0x1B
  2437  003B                     	ds	2
  2438  003D                     dtoa@fp:
  2439                           
  2440                           ; 1 bytes @ 0x1D
  2441  003D                     	ds	1
  2442  003E                     dtoa@p:
  2443                           
  2444                           ; 2 bytes @ 0x1E
  2445  003E                     	ds	2
  2446  0040                     dtoa@w:
  2447                           
  2448                           ; 2 bytes @ 0x20
  2449  0040                     	ds	2
  2450  0042                     dtoa@s:
  2451                           
  2452                           ; 2 bytes @ 0x22
  2453  0042                     	ds	2
  2454  0044                     dtoa@n:
  2455                           
  2456                           ; 8 bytes @ 0x24
  2457  0044                     	ds	8
  2458  004C                     dtoa@i:
  2459                           
  2460                           ; 2 bytes @ 0x2C
  2461  004C                     	ds	2
  2462  004E                     ?_vfpfcnvrt:
  2463  004E                     vfpfcnvrt@fmt:	
  2464                           ; 2 bytes @ 0x2E
  2465                           
  2466                           
  2467                           ; 1 bytes @ 0x2E
  2468  004E                     	ds	1
  2469  004F                     vfpfcnvrt@ap:
  2470                           
  2471                           ; 1 bytes @ 0x2F
  2472  004F                     	ds	1
  2473  0050                     ??_vfpfcnvrt:
  2474                           
  2475                           ; 1 bytes @ 0x30
  2476  0050                     	ds	5
  2477  0055                     vfpfcnvrt@ll:
  2478                           
  2479                           ; 8 bytes @ 0x35
  2480  0055                     	ds	8
  2481  005D                     vfpfcnvrt@done:
  2482                           
  2483                           ; 2 bytes @ 0x3D
  2484  005D                     	ds	2
  2485  005F                     vfpfcnvrt@fp:
  2486                           
  2487                           ; 1 bytes @ 0x3F
  2488  005F                     	ds	1
  2489  0060                     ?_vfprintf:
  2490  0060                     vfprintf@fmt:	
  2491                           ; 2 bytes @ 0x40
  2492                           
  2493                           
  2494                           ; 2 bytes @ 0x40
  2495  0060                     	ds	2
  2496  0062                     vfprintf@ap:
  2497                           
  2498                           ; 1 bytes @ 0x42
  2499  0062                     	ds	1
  2500  0063                     ??_vfprintf:
  2501                           
  2502                           ; 1 bytes @ 0x43
  2503  0063                     	ds	2
  2504  0065                     vfprintf@fp:
  2505                           
  2506                           ; 1 bytes @ 0x45
  2507  0065                     	ds	1
  2508  0066                     vfprintf@cfmt:
  2509                           
  2510                           ; 2 bytes @ 0x46
  2511  0066                     	ds	2
  2512  0068                     ?_sprintf:
  2513  0068                     sprintf@fmt:	
  2514                           ; 2 bytes @ 0x48
  2515                           
  2516                           
  2517                           ; 2 bytes @ 0x48
  2518  0068                     	ds	6
  2519  006E                     ??_main:
  2520                           
  2521                           ; 1 bytes @ 0x4E
  2522  006E                     	ds	2
  2523                           
  2524                           	psect	maintext
  2525  0111                     __pmaintext:	
  2526 ;;
  2527 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2528 ;;
  2529 ;; *************** function _main *****************
  2530 ;; Defined at:
  2531 ;;		line 19 in file "main.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  date            6   32[BANK1 ] struct Date
  2536 ;;  next            2   30[BANK1 ] struct train
  2537 ;;  next1           2   28[BANK1 ] struct train
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : B1F/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2547 ;;      Params:         0       0       0       0       0       0
  2548 ;;      Locals:         0       0      10       0       0       0
  2549 ;;      Temps:          0       2       0       0       0       0
  2550 ;;      Totals:         0       2      10       0       0       0
  2551 ;;Total ram usage:       12 bytes
  2552 ;; Hardware stack levels required when called: 9
  2553 ;; This function calls:
  2554 ;;		_SYSTEM_Initialize
  2555 ;;		_calc_money
  2556 ;;		_get_next
  2557 ;;		_lcd_backlight
  2558 ;;		_lcd_init
  2559 ;;		_lcd_set_cursor
  2560 ;;		_print_money
  2561 ;;		_print_remaing
  2562 ;;		_print_train
  2563 ;;		_read_date
  2564 ;; This function is called by:
  2565 ;;		Startup code after reset
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569  0111                     _main:	
  2570                           ;psect for function _main
  2571                           
  2572  0111                     l2524:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2575                           
  2576                           
  2577                           ;main.c: 22:     SYSTEM_Initialize();
  2578  0111  318A  2235  3181   	fcall	_SYSTEM_Initialize
  2579  0114                     l2526:
  2580                           
  2581                           ;main.c: 24:     WPUB = 0x24;
  2582  0114  3024               	movlw	36
  2583  0115  0024               	movlb	4	; select bank4
  2584  0116  008D               	movwf	13	;volatile
  2585  0117                     l2528:
  2586                           
  2587                           ;main.c: 25:     OPTION_REGbits.nWPUEN = 0;
  2588  0117  0021               	movlb	1	; select bank1
  2589  0118  1395               	bcf	21,7	;volatile
  2590  0119                     l2530:
  2591                           
  2592                           ;main.c: 27:     SSP2ADD = 0x13;
  2593  0119  3013               	movlw	19
  2594  011A  0024               	movlb	4	; select bank4
  2595  011B  009A               	movwf	26	;volatile
  2596  011C                     l2532:
  2597                           
  2598                           ;main.c: 28:     SSP2CON1 = 0x28;
  2599  011C  3028               	movlw	40
  2600  011D  009D               	movwf	29	;volatile
  2601  011E                     l2534:
  2602                           
  2603                           ;main.c: 29:     SSP2CON2 = 0x0;
  2604  011E  019E               	clrf	30	;volatile
  2605  011F                     l2536:
  2606                           
  2607                           ;main.c: 30:     SSP2STAT = 0;
  2608  011F  019C               	clrf	28	;volatile
  2609  0120                     l2538:
  2610                           
  2611                           ;main.c: 32:     lcd_init();
  2612  0120  3182  22D9  3181   	fcall	_lcd_init
  2613  0123                     l2540:
  2614                           
  2615                           ;main.c: 33:     lcd_backlight();
  2616  0123  318A  2277  3181   	fcall	_lcd_backlight
  2617  0126                     l2542:
  2618                           
  2619                           ;main.c: 34:     lcd_set_cursor(0, 0);
  2620  0126  01F8               	clrf	lcd_set_cursor@row
  2621  0127  3000               	movlw	0
  2622  0128  318C  243F  3181   	fcall	_lcd_set_cursor
  2623  012B                     l2544:
  2624                           
  2625                           ;main.c: 36:     struct Date date;;main.c: 37:     date.year = 21;
  2626  012B  3015               	movlw	21
  2627  012C  0020               	movlb	0	; select bank0
  2628  012D  00EE               	movwf	??_main
  2629  012E  086E               	movf	??_main,w
  2630  012F  0021               	movlb	1	; select bank1
  2631  0130  00C0               	movwf	main@date^(0+128)
  2632  0131                     l2546:
  2633                           
  2634                           ;main.c: 38:     date.month = 3;
  2635  0131  3003               	movlw	3
  2636  0132  0020               	movlb	0	; select bank0
  2637  0133  00EE               	movwf	??_main
  2638  0134  086E               	movf	??_main,w
  2639  0135  0021               	movlb	1	; select bank1
  2640  0136  00C1               	movwf	(main@date^(0+128)+1)
  2641  0137                     l2548:
  2642                           
  2643                           ;main.c: 39:     date.day = 1;
  2644  0137  01C2               	clrf	(main@date^(0+128)+2)
  2645  0138  0AC2               	incf	(main@date^(0+128)+2),f
  2646  0139                     l2550:
  2647                           
  2648                           ;main.c: 40:     date.hour = 21;
  2649  0139  3015               	movlw	21
  2650  013A  0020               	movlb	0	; select bank0
  2651  013B  00EE               	movwf	??_main
  2652  013C  086E               	movf	??_main,w
  2653  013D  0021               	movlb	1	; select bank1
  2654  013E  00C3               	movwf	(main@date^(0+128)+3)
  2655  013F                     l2552:
  2656                           
  2657                           ;main.c: 41:     date.min = 46;
  2658  013F  302E               	movlw	46
  2659  0140  0020               	movlb	0	; select bank0
  2660  0141  00EE               	movwf	??_main
  2661  0142  086E               	movf	??_main,w
  2662  0143  0021               	movlb	1	; select bank1
  2663  0144  00C4               	movwf	(main@date^(0+128)+4)
  2664  0145                     l2554:
  2665                           
  2666                           ;main.c: 42:     date.sec = 0;
  2667  0145  01C5               	clrf	(main@date^(0+128)+5)
  2668  0146                     l2556:
  2669                           
  2670                           ;main.c: 44:     money = 0;
  2671  0146  01CE               	clrf	_money^(0+128)
  2672  0147  01CF               	clrf	(_money+1)^(0+128)
  2673  0148                     l2558:
  2674                           
  2675                           ;main.c: 51:     {;main.c: 52:         read_date(&date);
  2676  0148  30C0               	movlw	(low (main@date| 0))& (0+255)
  2677  0149  318C  24D2  3181   	fcall	_read_date
  2678  014C                     l2560:
  2679                           
  2680                           ;main.c: 53:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2681  014C  301A               	movlw	26
  2682  014D  0020               	movlb	0	; select bank0
  2683  014E  00EE               	movwf	??_main
  2684  014F  30F8               	movlw	248
  2685  0150                     u1927:
  2686  0150  0B89               	decfsz	9,f
  2687  0151  2950               	goto	u1927
  2688  0152  0BEE               	decfsz	??_main,f
  2689  0153  2950               	goto	u1927
  2690  0154  0000               	nop
  2691  0155                     l2562:
  2692                           
  2693                           ;main.c: 54:         get_next(&next, date.hour, date.min);
  2694  0155  30BE               	movlw	low main@next
  2695  0156  00F6               	movwf	get_next@next
  2696  0157  3000               	movlw	high main@next
  2697  0158  00F7               	movwf	get_next@next+1
  2698  0159  0021               	movlb	1	; select bank1
  2699  015A  0843               	movf	(main@date^(0+128)+3),w
  2700  015B  0020               	movlb	0	; select bank0
  2701  015C  00EE               	movwf	??_main
  2702  015D  086E               	movf	??_main,w
  2703  015E  00F8               	movwf	get_next@hour
  2704  015F  0021               	movlb	1	; select bank1
  2705  0160  0844               	movf	(main@date^(0+128)+4),w
  2706  0161  0020               	movlb	0	; select bank0
  2707  0162  00EF               	movwf	??_main+1
  2708  0163  086F               	movf	??_main+1,w
  2709  0164  00F9               	movwf	get_next@min
  2710  0165  3180  2072  3181   	fcall	_get_next
  2711  0168                     l2564:
  2712                           
  2713                           ;main.c: 55:         get_next(&next1, next.hour, next.min);
  2714  0168  30BC               	movlw	low main@next1
  2715  0169  00F6               	movwf	get_next@next
  2716  016A  3000               	movlw	high main@next1
  2717  016B  00F7               	movwf	get_next@next+1
  2718  016C  0021               	movlb	1	; select bank1
  2719  016D  083E               	movf	main@next^(0+128),w
  2720  016E  0020               	movlb	0	; select bank0
  2721  016F  00EE               	movwf	??_main
  2722  0170  086E               	movf	??_main,w
  2723  0171  00F8               	movwf	get_next@hour
  2724  0172  0021               	movlb	1	; select bank1
  2725  0173  083F               	movf	(main@next^(0+128)+1),w
  2726  0174  0020               	movlb	0	; select bank0
  2727  0175  00EF               	movwf	??_main+1
  2728  0176  086F               	movf	??_main+1,w
  2729  0177  00F9               	movwf	get_next@min
  2730  0178  3180  2072  3181   	fcall	_get_next
  2731  017B                     l2566:
  2732                           
  2733                           ;main.c: 57:         if(date.sec == 0){
  2734  017B  0021               	movlb	1	; select bank1
  2735  017C  0845               	movf	(main@date^(0+128)+5),w
  2736  017D  1D03               	btfss	3,2
  2737  017E  2980               	goto	u1891
  2738  017F  2981               	goto	u1890
  2739  0180                     u1891:
  2740  0180  298D               	goto	l2570
  2741  0181                     u1890:
  2742  0181                     l2568:
  2743                           
  2744                           ;main.c: 58:             print_train(next, next1);
  2745  0181  083F               	movf	(main@next+1)^(0+128),w
  2746  0182  00AD               	movwf	(print_train@next+1)^(0+128)
  2747  0183  083E               	movf	main@next^(0+128),w
  2748  0184  00AC               	movwf	print_train@next^(0+128)
  2749  0185  083D               	movf	(main@next1+1)^(0+128),w
  2750  0186  00AF               	movwf	(print_train@next1+1)^(0+128)
  2751  0187  083C               	movf	main@next1^(0+128),w
  2752  0188  00AE               	movwf	print_train@next1^(0+128)
  2753  0189  318E  2610  3181   	fcall	_print_train
  2754                           
  2755                           ;main.c: 59:             continue;
  2756  018C  2948               	goto	l2558
  2757  018D                     l2570:
  2758                           
  2759                           ;main.c: 62:         if(date.sec == 30){
  2760  018D  301E               	movlw	30
  2761  018E  0645               	xorwf	(main@date^(0+128)+5),w
  2762  018F  1D03               	btfss	3,2
  2763  0190  2992               	goto	u1901
  2764  0191  2993               	goto	u1900
  2765  0192                     u1901:
  2766  0192  29AF               	goto	l2574
  2767  0193                     u1900:
  2768  0193                     l2572:
  2769                           
  2770                           ;main.c: 63:             print_remaing(date, next);
  2771  0193  30C0               	movlw	low main@date
  2772  0194  0086               	movwf	6
  2773  0195  3000               	movlw	high main@date
  2774  0196  0087               	movwf	7
  2775  0197  30AC               	movlw	low print_remaing@date
  2776  0198  0084               	movwf	4
  2777  0199  3000               	movlw	high print_remaing@date
  2778  019A  0085               	movwf	5
  2779  019B  3F40               	moviw [0]fsr1
  2780  019C  3F80               	movwi [0]fsr0
  2781  019D  3F41               	moviw [1]fsr1
  2782  019E  3F81               	movwi [1]fsr0
  2783  019F  3F42               	moviw [2]fsr1
  2784  01A0  3F82               	movwi [2]fsr0
  2785  01A1  3F43               	moviw [3]fsr1
  2786  01A2  3F83               	movwi [3]fsr0
  2787  01A3  3F44               	moviw [4]fsr1
  2788  01A4  3F84               	movwi [4]fsr0
  2789  01A5  3F45               	moviw [5]fsr1
  2790  01A6  3F85               	movwi [5]fsr0
  2791  01A7  083F               	movf	(main@next+1)^(0+128),w
  2792  01A8  00B3               	movwf	(print_remaing@next+1)^(0+128)
  2793  01A9  083E               	movf	main@next^(0+128),w
  2794  01AA  00B2               	movwf	print_remaing@next^(0+128)
  2795  01AB  318E  266B  3181   	fcall	_print_remaing
  2796                           
  2797                           ;main.c: 64:             continue;
  2798  01AE  2948               	goto	l2558
  2799  01AF                     l2574:
  2800                           
  2801                           ;main.c: 67:         if(date.sec == 45){
  2802  01AF  302D               	movlw	45
  2803  01B0  0645               	xorwf	(main@date^(0+128)+5),w
  2804  01B1  1D03               	btfss	3,2
  2805  01B2  29B4               	goto	u1911
  2806  01B3  29B5               	goto	u1910
  2807  01B4                     u1911:
  2808  01B4  2948               	goto	l2558
  2809  01B5                     u1910:
  2810  01B5                     l2576:
  2811                           
  2812                           ;main.c: 68:             money = calc_money(date);
  2813  01B5  30C0               	movlw	low main@date
  2814  01B6  0086               	movwf	6
  2815  01B7  3000               	movlw	high main@date
  2816  01B8  0087               	movwf	7
  2817  01B9  3076               	movlw	low calc_money@date
  2818  01BA  0084               	movwf	4
  2819  01BB  3000               	movlw	high calc_money@date
  2820  01BC  0085               	movwf	5
  2821  01BD  3F40               	moviw [0]fsr1
  2822  01BE  3F80               	movwi [0]fsr0
  2823  01BF  3F41               	moviw [1]fsr1
  2824  01C0  3F81               	movwi [1]fsr0
  2825  01C1  3F42               	moviw [2]fsr1
  2826  01C2  3F82               	movwi [2]fsr0
  2827  01C3  3F43               	moviw [3]fsr1
  2828  01C4  3F83               	movwi [3]fsr0
  2829  01C5  3F44               	moviw [4]fsr1
  2830  01C6  3F84               	movwi [4]fsr0
  2831  01C7  3F45               	moviw [5]fsr1
  2832  01C8  3F85               	movwi [5]fsr0
  2833  01C9  318E  26EB  3181   	fcall	_calc_money
  2834  01CC  0877               	movf	?_calc_money+1,w
  2835  01CD  0021               	movlb	1	; select bank1
  2836  01CE  00CF               	movwf	(_money+1)^(0+128)
  2837  01CF  0876               	movf	?_calc_money,w
  2838  01D0  00CE               	movwf	_money^(0+128)
  2839                           
  2840                           ;main.c: 69:             print_money(date, money);
  2841  01D1  30C0               	movlw	low main@date
  2842  01D2  0086               	movwf	6
  2843  01D3  3000               	movlw	high main@date
  2844  01D4  0087               	movwf	7
  2845  01D5  30AC               	movlw	low print_money@date
  2846  01D6  0084               	movwf	4
  2847  01D7  3000               	movlw	high print_money@date
  2848  01D8  0085               	movwf	5
  2849  01D9  3F40               	moviw [0]fsr1
  2850  01DA  3F80               	movwi [0]fsr0
  2851  01DB  3F41               	moviw [1]fsr1
  2852  01DC  3F81               	movwi [1]fsr0
  2853  01DD  3F42               	moviw [2]fsr1
  2854  01DE  3F82               	movwi [2]fsr0
  2855  01DF  3F43               	moviw [3]fsr1
  2856  01E0  3F83               	movwi [3]fsr0
  2857  01E1  3F44               	moviw [4]fsr1
  2858  01E2  3F84               	movwi [4]fsr0
  2859  01E3  3F45               	moviw [5]fsr1
  2860  01E4  3F85               	movwi [5]fsr0
  2861  01E5  084F               	movf	(_money+1)^(0+128),w
  2862  01E6  00B3               	movwf	(print_money@money+1)^(0+128)
  2863  01E7  084E               	movf	_money^(0+128),w
  2864  01E8  00B2               	movwf	print_money@money^(0+128)
  2865  01E9  318D  2518  3181   	fcall	_print_money
  2866                           
  2867                           ;main.c: 70:             continue;
  2868  01EC  2948               	goto	l2558
  2869  01ED  3180  2802         	ljmp	start
  2870  01EF                     __end_of_main:
  2871                           
  2872                           	psect	text1
  2873  0CD2                     __ptext1:	
  2874 ;; *************** function _read_date *****************
  2875 ;; Defined at:
  2876 ;;		line 77 in file "DS3231.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  date            1    wreg     PTR struct Date
  2879 ;;		 -> main@date(6), 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  date            1   12[COMMON] PTR struct Date
  2882 ;;		 -> main@date(6), 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2892 ;;      Params:         0       0       0       0       0       0
  2893 ;;      Locals:         1       0       0       0       0       0
  2894 ;;      Temps:          1       0       0       0       0       0
  2895 ;;      Totals:         2       0       0       0       0       0
  2896 ;;Total ram usage:        2 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; Hardware stack levels required when called: 3
  2899 ;; This function calls:
  2900 ;;		__read
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906  0CD2                     _read_date:	
  2907                           ;psect for function _read_date
  2908                           
  2909                           
  2910                           ;incstack = 0
  2911                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2912                           ;read_date@date stored from wreg
  2913  0CD2  00FC               	movwf	read_date@date
  2914  0CD3                     l2432:
  2915                           
  2916                           ;DS3231.c: 78:     date->year = _read(6);
  2917  0CD3  3006               	movlw	6
  2918  0CD4  318B  23A8  318C   	fcall	__read
  2919  0CD7  00FB               	movwf	??_read_date
  2920  0CD8  087C               	movf	read_date@date,w
  2921  0CD9  0086               	movwf	6
  2922  0CDA  0187               	clrf	7
  2923  0CDB  087B               	movf	??_read_date,w
  2924  0CDC  0081               	movwf	1
  2925                           
  2926                           ;DS3231.c: 79:     date->month = _read(5);
  2927  0CDD  3005               	movlw	5
  2928  0CDE  318B  23A8  318C   	fcall	__read
  2929  0CE1  00FB               	movwf	??_read_date
  2930  0CE2  0A7C               	incf	read_date@date,w
  2931  0CE3  0086               	movwf	6
  2932  0CE4  0187               	clrf	7
  2933  0CE5  087B               	movf	??_read_date,w
  2934  0CE6  0081               	movwf	1
  2935                           
  2936                           ;DS3231.c: 80:     date->day = _read(4);
  2937  0CE7  3004               	movlw	4
  2938  0CE8  318B  23A8  318C   	fcall	__read
  2939  0CEB  00FB               	movwf	??_read_date
  2940  0CEC  087C               	movf	read_date@date,w
  2941  0CED  3E02               	addlw	2
  2942  0CEE  0086               	movwf	6
  2943  0CEF  0187               	clrf	7
  2944  0CF0  087B               	movf	??_read_date,w
  2945  0CF1  0081               	movwf	1
  2946  0CF2                     l2434:
  2947                           
  2948                           ;DS3231.c: 81:     _read(3);
  2949  0CF2  3003               	movlw	3
  2950  0CF3  318B  23A8  318C   	fcall	__read
  2951  0CF6                     l2436:
  2952                           
  2953                           ;DS3231.c: 82:     date->hour = _read(2);
  2954  0CF6  3002               	movlw	2
  2955  0CF7  318B  23A8  318C   	fcall	__read
  2956  0CFA  00FB               	movwf	??_read_date
  2957  0CFB  087C               	movf	read_date@date,w
  2958  0CFC  3E03               	addlw	3
  2959  0CFD  0086               	movwf	6
  2960  0CFE  0187               	clrf	7
  2961  0CFF  087B               	movf	??_read_date,w
  2962  0D00  0081               	movwf	1
  2963  0D01                     l2438:
  2964                           
  2965                           ;DS3231.c: 83:     date->min = _read(1);
  2966  0D01  3001               	movlw	1
  2967  0D02  318B  23A8  318C   	fcall	__read
  2968  0D05  00FB               	movwf	??_read_date
  2969  0D06  087C               	movf	read_date@date,w
  2970  0D07  3E04               	addlw	4
  2971  0D08  0086               	movwf	6
  2972  0D09  0187               	clrf	7
  2973  0D0A  087B               	movf	??_read_date,w
  2974  0D0B  0081               	movwf	1
  2975  0D0C                     l2440:
  2976                           
  2977                           ;DS3231.c: 84:     date->sec = _read(0);
  2978  0D0C  3000               	movlw	0
  2979  0D0D  318B  23A8  318C   	fcall	__read
  2980  0D10  00FB               	movwf	??_read_date
  2981  0D11  087C               	movf	read_date@date,w
  2982  0D12  3E05               	addlw	5
  2983  0D13  0086               	movwf	6
  2984  0D14  0187               	clrf	7
  2985  0D15  087B               	movf	??_read_date,w
  2986  0D16  0081               	movwf	1
  2987  0D17                     l257:
  2988  0D17  0008               	return
  2989  0D18                     __end_of_read_date:
  2990                           
  2991                           	psect	text2
  2992  0BA8                     __ptext2:	
  2993 ;; *************** function __read *****************
  2994 ;; Defined at:
  2995 ;;		line 58 in file "DS3231.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  address         1    wreg     unsigned char 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  address         1    9[COMMON] unsigned char 
  3000 ;;  data            1   10[COMMON] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      unsigned char 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3010 ;;      Params:         0       0       0       0       0       0
  3011 ;;      Locals:         2       0       0       0       0       0
  3012 ;;      Temps:          1       0       0       0       0       0
  3013 ;;      Totals:         3       0       0       0       0       0
  3014 ;;Total ram usage:        3 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 2
  3017 ;; This function calls:
  3018 ;;		_bcd_2_decimal
  3019 ;;		_i2c_read
  3020 ;;		_i2c_repeated_start
  3021 ;;		_i2c_start
  3022 ;;		_i2c_stop
  3023 ;;		_i2c_write
  3024 ;; This function is called by:
  3025 ;;		_read_date
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029  0BA8                     __read:	
  3030                           ;psect for function __read
  3031                           
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  3035                           ;__read@address stored from wreg
  3036  0BA8  00F9               	movwf	__read@address
  3037  0BA9                     l2352:
  3038                           
  3039                           ;DS3231.c: 59:     uint8_t data;;DS3231.c: 60:     i2c_start();
  3040  0BA9  318A  223F  318B   	fcall	_i2c_start
  3041                           
  3042                           ;DS3231.c: 61:     i2c_write(0xD0);
  3043  0BAC  30D0               	movlw	208
  3044  0BAD  318A  2285  318B   	fcall	_i2c_write
  3045                           
  3046                           ;DS3231.c: 62:     i2c_write(address);
  3047  0BB0  0879               	movf	__read@address,w
  3048  0BB1  318A  2285  318B   	fcall	_i2c_write
  3049                           
  3050                           ;DS3231.c: 64:     i2c_repeated_start();
  3051  0BB4  318A  2249  318B   	fcall	_i2c_repeated_start
  3052                           
  3053                           ;DS3231.c: 66:     i2c_write(0xD0 | 0x01);
  3054  0BB7  30D1               	movlw	209
  3055  0BB8  318A  2285  318B   	fcall	_i2c_write
  3056                           
  3057                           ;DS3231.c: 67:     data = bcd_2_decimal(i2c_read(1));
  3058  0BBB  3001               	movlw	1
  3059  0BBC  318A  22E8  318B   	fcall	_i2c_read
  3060  0BBF  318A  22A9  318B   	fcall	_bcd_2_decimal
  3061  0BC2  00F8               	movwf	??__read
  3062  0BC3  0878               	movf	??__read,w
  3063  0BC4  00FA               	movwf	__read@data
  3064  0BC5                     l2354:
  3065                           
  3066                           ;DS3231.c: 68:     i2c_stop();
  3067  0BC5  318A  222E  318B   	fcall	_i2c_stop
  3068                           
  3069                           ;DS3231.c: 70:     return data;
  3070  0BC8  087A               	movf	__read@data,w
  3071  0BC9                     l254:
  3072  0BC9  0008               	return
  3073  0BCA                     __end_of__read:
  3074                           
  3075                           	psect	text3
  3076  0A49                     __ptext3:	
  3077 ;; *************** function _i2c_repeated_start *****************
  3078 ;; Defined at:
  3079 ;;		line 20 in file "i2c.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3093 ;;      Params:         0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 1
  3100 ;; This function calls:
  3101 ;;		_i2c_wait
  3102 ;; This function is called by:
  3103 ;;		__read
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107  0A49                     _i2c_repeated_start:	
  3108                           ;psect for function _i2c_repeated_start
  3109                           
  3110  0A49                     l2262:	
  3111                           ;incstack = 0
  3112                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  3113                           
  3114                           
  3115                           ;i2c.c: 21:     i2c_wait();
  3116  0A49  318A  2253  318A   	fcall	_i2c_wait
  3117  0A4C                     l2264:
  3118                           
  3119                           ;i2c.c: 22:     SSP2CON2bits.RSEN = 1;
  3120  0A4C  0024               	movlb	4	; select bank4
  3121  0A4D  149E               	bsf	30,1	;volatile
  3122  0A4E                     l157:	
  3123                           ;i2c.c: 23:     while(SSP2CON2bits.RSEN);
  3124                           
  3125  0A4E  189E               	btfsc	30,1	;volatile
  3126  0A4F  2A51               	goto	u1771
  3127  0A50  2A52               	goto	u1770
  3128  0A51                     u1771:
  3129  0A51  2A4E               	goto	l157
  3130  0A52                     u1770:
  3131  0A52                     l160:
  3132  0A52  0008               	return
  3133  0A53                     __end_of_i2c_repeated_start:
  3134                           
  3135                           	psect	text4
  3136  0AE8                     __ptext4:	
  3137 ;; *************** function _i2c_read *****************
  3138 ;; Defined at:
  3139 ;;		line 33 in file "i2c.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  ack             1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  ack             1    1[COMMON] unsigned char 
  3144 ;;  data            1    2[COMMON] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      unsigned char 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3154 ;;      Params:         0       0       0       0       0       0
  3155 ;;      Locals:         2       0       0       0       0       0
  3156 ;;      Temps:          1       0       0       0       0       0
  3157 ;;      Totals:         3       0       0       0       0       0
  3158 ;;Total ram usage:        3 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 1
  3161 ;; This function calls:
  3162 ;;		_i2c_wait
  3163 ;; This function is called by:
  3164 ;;		__read
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168  0AE8                     _i2c_read:	
  3169                           ;psect for function _i2c_read
  3170                           
  3171                           
  3172                           ;incstack = 0
  3173                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3174                           ;i2c_read@ack stored from wreg
  3175  0AE8  00F1               	movwf	i2c_read@ack
  3176  0AE9                     l2266:
  3177                           
  3178                           ;i2c.c: 34:     uint8_t data;;i2c.c: 36:     SSP2CON2bits.ACKDT = ack;
  3179  0AE9  0C71               	rrf	i2c_read@ack,w
  3180  0AEA  0024               	movlb	4	; select bank4
  3181  0AEB  1C03               	skipc
  3182  0AEC  129E               	bcf	30,5	;volatile
  3183  0AED  1803               	skipnc
  3184  0AEE  169E               	bsf	30,5	;volatile
  3185  0AEF                     l2268:
  3186                           
  3187                           ;i2c.c: 37:     SSP2CON2bits.RCEN = 1;
  3188  0AEF  159E               	bsf	30,3	;volatile
  3189  0AF0                     l172:	
  3190                           ;i2c.c: 38:     while(!SSP2STATbits.BF);
  3191                           
  3192  0AF0  1C1C               	btfss	28,0	;volatile
  3193  0AF1  2AF3               	goto	u1781
  3194  0AF2  2AF4               	goto	u1780
  3195  0AF3                     u1781:
  3196  0AF3  2AF0               	goto	l172
  3197  0AF4                     u1780:
  3198  0AF4                     l174:
  3199                           
  3200                           ;i2c.c: 39:     SSP2CON2bits.ACKEN = 1;
  3201  0AF4  161E               	bsf	30,4	;volatile
  3202  0AF5                     l2270:
  3203                           
  3204                           ;i2c.c: 40:     data = SSP2BUF;
  3205  0AF5  0819               	movf	25,w	;volatile
  3206  0AF6  00F0               	movwf	??_i2c_read
  3207  0AF7  0870               	movf	??_i2c_read,w
  3208  0AF8  00F2               	movwf	i2c_read@data
  3209  0AF9                     l2272:
  3210                           
  3211                           ;i2c.c: 41:     SSP2CON1bits.SSPOV = 0;
  3212  0AF9  131D               	bcf	29,6	;volatile
  3213  0AFA                     l2274:
  3214                           
  3215                           ;i2c.c: 42:     i2c_wait();
  3216  0AFA  318A  2253  318A   	fcall	_i2c_wait
  3217  0AFD                     l2276:
  3218                           
  3219                           ;i2c.c: 44:     return data;
  3220  0AFD  0872               	movf	i2c_read@data,w
  3221  0AFE                     l175:
  3222  0AFE  0008               	return
  3223  0AFF                     __end_of_i2c_read:
  3224                           
  3225                           	psect	text5
  3226  0AA9                     __ptext5:	
  3227 ;; *************** function _bcd_2_decimal *****************
  3228 ;; Defined at:
  3229 ;;		line 18 in file "DS3231.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  number          1    wreg     unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  number          1    7[COMMON] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      unsigned char 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3243 ;;      Params:         0       0       0       0       0       0
  3244 ;;      Locals:         1       0       0       0       0       0
  3245 ;;      Temps:          3       0       0       0       0       0
  3246 ;;      Totals:         4       0       0       0       0       0
  3247 ;;Total ram usage:        4 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; Hardware stack levels required when called: 1
  3250 ;; This function calls:
  3251 ;;		___bmul
  3252 ;; This function is called by:
  3253 ;;		__read
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257  0AA9                     _bcd_2_decimal:	
  3258                           ;psect for function _bcd_2_decimal
  3259                           
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  3263                           ;bcd_2_decimal@number stored from wreg
  3264  0AA9  00F7               	movwf	bcd_2_decimal@number
  3265  0AAA                     l2280:
  3266                           
  3267                           ;DS3231.c: 19:     return ((number >> 4) * 10 + (number & 0x0F));
  3268  0AAA  300F               	movlw	15
  3269  0AAB  0577               	andwf	bcd_2_decimal@number,w
  3270  0AAC  00F4               	movwf	??_bcd_2_decimal
  3271  0AAD  300A               	movlw	10
  3272  0AAE  00F5               	movwf	??_bcd_2_decimal+1
  3273  0AAF  0875               	movf	??_bcd_2_decimal+1,w
  3274  0AB0  00F0               	movwf	___bmul@multiplicand
  3275  0AB1  0877               	movf	bcd_2_decimal@number,w
  3276  0AB2  00F6               	movwf	??_bcd_2_decimal+2
  3277  0AB3  3004               	movlw	4
  3278  0AB4                     u1795:
  3279  0AB4  36F6               	lsrf	??_bcd_2_decimal+2,f
  3280  0AB5  0B89               	decfsz	9,f
  3281  0AB6  2AB4               	goto	u1795
  3282  0AB7  0876               	movf	??_bcd_2_decimal+2,w
  3283  0AB8  318A  22BD  318A   	fcall	___bmul
  3284  0ABB  0774               	addwf	??_bcd_2_decimal,w
  3285  0ABC                     l245:
  3286  0ABC  0008               	return
  3287  0ABD                     __end_of_bcd_2_decimal:
  3288                           
  3289                           	psect	text6
  3290  0ABD                     __ptext6:	
  3291 ;; *************** function ___bmul *****************
  3292 ;; Defined at:
  3293 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul8.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  multiplier      1    wreg     unsigned char 
  3296 ;;  multiplicand    1    0[COMMON] unsigned char 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  multiplier      1    3[COMMON] unsigned char 
  3299 ;;  product         1    2[COMMON] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      unsigned char 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3309 ;;      Params:         1       0       0       0       0       0
  3310 ;;      Locals:         2       0       0       0       0       0
  3311 ;;      Temps:          1       0       0       0       0       0
  3312 ;;      Totals:         4       0       0       0       0       0
  3313 ;;Total ram usage:        4 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_bcd_2_decimal
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322  0ABD                     ___bmul:	
  3323                           ;psect for function ___bmul
  3324                           
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3328                           ;___bmul@multiplier stored from wreg
  3329  0ABD  00F3               	movwf	___bmul@multiplier
  3330  0ABE                     l2140:
  3331  0ABE  01F2               	clrf	___bmul@product
  3332  0ABF                     l2142:
  3333  0ABF  1C73               	btfss	___bmul@multiplier,0
  3334  0AC0  2AC2               	goto	u1641
  3335  0AC1  2AC3               	goto	u1640
  3336  0AC2                     u1641:
  3337  0AC2  2AC7               	goto	l2146
  3338  0AC3                     u1640:
  3339  0AC3                     l2144:
  3340  0AC3  0870               	movf	___bmul@multiplicand,w
  3341  0AC4  00F1               	movwf	??___bmul
  3342  0AC5  0871               	movf	??___bmul,w
  3343  0AC6  07F2               	addwf	___bmul@product,f
  3344  0AC7                     l2146:
  3345  0AC7  1003               	clrc
  3346  0AC8  0DF0               	rlf	___bmul@multiplicand,f
  3347  0AC9                     l2148:
  3348  0AC9  1003               	clrc
  3349  0ACA  0CF3               	rrf	___bmul@multiplier,f
  3350  0ACB  0873               	movf	___bmul@multiplier,w
  3351  0ACC  1D03               	btfss	3,2
  3352  0ACD  2ACF               	goto	u1651
  3353  0ACE  2AD0               	goto	u1650
  3354  0ACF                     u1651:
  3355  0ACF  2ABF               	goto	l2142
  3356  0AD0                     u1650:
  3357  0AD0                     l2150:
  3358  0AD0  0872               	movf	___bmul@product,w
  3359  0AD1                     l450:
  3360  0AD1  0008               	return
  3361  0AD2                     __end_of___bmul:
  3362                           
  3363                           	psect	text7
  3364  0E10                     __ptext7:	
  3365 ;; *************** function _print_train *****************
  3366 ;; Defined at:
  3367 ;;		line 77 in file "main.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  next            2   12[BANK1 ] struct train
  3370 ;;  next1           2   14[BANK1 ] struct train
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3382 ;;      Params:         0       0       4       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0
  3384 ;;      Temps:          0       0       4       0       0       0
  3385 ;;      Totals:         0       0       8       0       0       0
  3386 ;;Total ram usage:        8 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 8
  3389 ;; This function calls:
  3390 ;;		_lcd_clear
  3391 ;;		_lcd_print
  3392 ;;		_lcd_set_cursor
  3393 ;;		_sprintf
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399  0E10                     _print_train:	
  3400                           ;psect for function _print_train
  3401                           
  3402  0E10                     l2464:	
  3403                           ;incstack = 0
  3404                           ; Regs used in _print_train: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3405                           
  3406                           
  3407                           ;main.c: 78:     lcd_clear();
  3408  0E10  318B  23EE  318E   	fcall	_lcd_clear
  3409                           
  3410                           ;main.c: 80:     sprintf(line, "KW > MT %02d:%02d", next.hour, next.min);
  3411  0E13  3002               	movlw	low (STR_1| (0+32768))
  3412  0E14  0020               	movlb	0	; select bank0
  3413  0E15  00E8               	movwf	sprintf@fmt
  3414  0E16  3088               	movlw	high (STR_1| (0+32768))
  3415  0E17  00E9               	movwf	sprintf@fmt+1
  3416  0E18  0021               	movlb	1	; select bank1
  3417  0E19  082C               	movf	print_train@next^(0+128),w
  3418  0E1A  00B0               	movwf	??_print_train^(0+128)
  3419  0E1B  01B1               	clrf	(??_print_train^(0+128)+1)
  3420  0E1C  0830               	movf	??_print_train^(0+128),w
  3421  0E1D  0020               	movlb	0	; select bank0
  3422  0E1E  00EA               	movwf	?_sprintf+2
  3423  0E1F  0021               	movlb	1	; select bank1
  3424  0E20  0831               	movf	(??_print_train+1)^(0+128),w
  3425  0E21  0020               	movlb	0	; select bank0
  3426  0E22  00EB               	movwf	?_sprintf+3
  3427  0E23  0021               	movlb	1	; select bank1
  3428  0E24  082D               	movf	(print_train@next^(0+128)+1),w
  3429  0E25  00B2               	movwf	(??_print_train+2)^(0+128)
  3430  0E26  01B3               	clrf	((??_print_train+2)^(0+128)+1)
  3431  0E27  0832               	movf	(??_print_train+2)^(0+128),w
  3432  0E28  0020               	movlb	0	; select bank0
  3433  0E29  00EC               	movwf	?_sprintf+4
  3434  0E2A  0021               	movlb	1	; select bank1
  3435  0E2B  0833               	movf	(??_print_train+3)^(0+128),w
  3436  0E2C  0020               	movlb	0	; select bank0
  3437  0E2D  00ED               	movwf	?_sprintf+5
  3438  0E2E  30D2               	movlw	(low (_line| 0))& (0+255)
  3439  0E2F  318B  23CA  318E   	fcall	_sprintf
  3440  0E32                     l2466:
  3441                           
  3442                           ;main.c: 81:     lcd_set_cursor(0, 0);
  3443  0E32  01F8               	clrf	lcd_set_cursor@row
  3444  0E33  3000               	movlw	0
  3445  0E34  318C  243F  318E   	fcall	_lcd_set_cursor
  3446  0E37                     l2468:
  3447                           
  3448                           ;main.c: 82:     lcd_print(line);
  3449  0E37  30D2               	movlw	low _line
  3450  0E38  00F8               	movwf	lcd_print@str
  3451  0E39  3000               	movlw	high _line
  3452  0E3A  00F9               	movwf	lcd_print@str+1
  3453  0E3B  318B  234B  318E   	fcall	_lcd_print
  3454  0E3E                     l2470:
  3455                           
  3456                           ;main.c: 84:     sprintf(line, "KW > MT %02d:%02d", next1.hour, next1.min);
  3457  0E3E  3002               	movlw	low (STR_1| (0+32768))
  3458  0E3F  0020               	movlb	0	; select bank0
  3459  0E40  00E8               	movwf	sprintf@fmt
  3460  0E41  3088               	movlw	high (STR_1| (0+32768))
  3461  0E42  00E9               	movwf	sprintf@fmt+1
  3462  0E43  0021               	movlb	1	; select bank1
  3463  0E44  082E               	movf	print_train@next1^(0+128),w
  3464  0E45  00B0               	movwf	??_print_train^(0+128)
  3465  0E46  01B1               	clrf	(??_print_train^(0+128)+1)
  3466  0E47  0830               	movf	??_print_train^(0+128),w
  3467  0E48  0020               	movlb	0	; select bank0
  3468  0E49  00EA               	movwf	?_sprintf+2
  3469  0E4A  0021               	movlb	1	; select bank1
  3470  0E4B  0831               	movf	(??_print_train+1)^(0+128),w
  3471  0E4C  0020               	movlb	0	; select bank0
  3472  0E4D  00EB               	movwf	?_sprintf+3
  3473  0E4E  0021               	movlb	1	; select bank1
  3474  0E4F  082F               	movf	(print_train@next1^(0+128)+1),w
  3475  0E50  00B2               	movwf	(??_print_train+2)^(0+128)
  3476  0E51  01B3               	clrf	((??_print_train+2)^(0+128)+1)
  3477  0E52  0832               	movf	(??_print_train+2)^(0+128),w
  3478  0E53  0020               	movlb	0	; select bank0
  3479  0E54  00EC               	movwf	?_sprintf+4
  3480  0E55  0021               	movlb	1	; select bank1
  3481  0E56  0833               	movf	(??_print_train+3)^(0+128),w
  3482  0E57  0020               	movlb	0	; select bank0
  3483  0E58  00ED               	movwf	?_sprintf+5
  3484  0E59  30D2               	movlw	(low (_line| 0))& (0+255)
  3485  0E5A  318B  23CA  318E   	fcall	_sprintf
  3486  0E5D                     l2472:
  3487                           
  3488                           ;main.c: 85:     lcd_set_cursor(0, 1);
  3489  0E5D  01F8               	clrf	lcd_set_cursor@row
  3490  0E5E  0AF8               	incf	lcd_set_cursor@row,f
  3491  0E5F  3000               	movlw	0
  3492  0E60  318C  243F  318E   	fcall	_lcd_set_cursor
  3493                           
  3494                           ;main.c: 86:     lcd_print(line);
  3495  0E63  30D2               	movlw	low _line
  3496  0E64  00F8               	movwf	lcd_print@str
  3497  0E65  3000               	movlw	high _line
  3498  0E66  00F9               	movwf	lcd_print@str+1
  3499  0E67  318B  234B  318E   	fcall	_lcd_print
  3500  0E6A                     l117:
  3501  0E6A  0008               	return
  3502  0E6B                     __end_of_print_train:
  3503                           
  3504                           	psect	text8
  3505  0E6B                     __ptext8:	
  3506 ;; *************** function _print_remaing *****************
  3507 ;; Defined at:
  3508 ;;		line 89 in file "main.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  date            6   12[BANK1 ] struct Date
  3511 ;;  next            2   18[BANK1 ] struct train
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  next_min        2   26[BANK1 ] unsigned short 
  3514 ;;  now_min         2   24[BANK1 ] unsigned short 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3524 ;;      Params:         0       0       8       0       0       0
  3525 ;;      Locals:         0       0       4       0       0       0
  3526 ;;      Temps:          0       0       4       0       0       0
  3527 ;;      Totals:         0       0      16       0       0       0
  3528 ;;Total ram usage:       16 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 8
  3531 ;; This function calls:
  3532 ;;		___wmul
  3533 ;;		_lcd_clear
  3534 ;;		_lcd_print
  3535 ;;		_lcd_set_cursor
  3536 ;;		_sprintf
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542  0E6B                     _print_remaing:	
  3543                           ;psect for function _print_remaing
  3544                           
  3545  0E6B                     l2474:	
  3546                           ;incstack = 0
  3547                           ; Regs used in _print_remaing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3548                           
  3549                           
  3550                           ;main.c: 90:     lcd_clear();
  3551  0E6B  318B  23EE  318E   	fcall	_lcd_clear
  3552  0E6E                     l2476:
  3553                           
  3554                           ;main.c: 92:     uint16_t now_min = ((uint16_t)date.hour * 60) + date.min;
  3555  0E6E  0021               	movlb	1	; select bank1
  3556  0E6F  0830               	movf	(print_remaing@date^(0+128)+4),w
  3557  0E70  00B4               	movwf	??_print_remaing^(0+128)
  3558  0E71  01B5               	clrf	(??_print_remaing^(0+128)+1)
  3559  0E72  082F               	movf	(print_remaing@date^(0+128)+3),w
  3560  0E73  00B6               	movwf	(??_print_remaing+2)^(0+128)
  3561  0E74  01B7               	clrf	((??_print_remaing+2)^(0+128)+1)
  3562  0E75  0836               	movf	(??_print_remaing+2)^(0+128),w
  3563  0E76  00F0               	movwf	___wmul@multiplier
  3564  0E77  0837               	movf	(??_print_remaing+3)^(0+128),w
  3565  0E78  00F1               	movwf	___wmul@multiplier+1
  3566  0E79  303C               	movlw	60
  3567  0E7A  00F2               	movwf	___wmul@multiplicand
  3568  0E7B  3000               	movlw	0
  3569  0E7C  00F3               	movwf	___wmul@multiplicand+1
  3570  0E7D  318B  2368  318E   	fcall	___wmul
  3571  0E80  0021               	movlb	1	; select bank1
  3572  0E81  0834               	movf	??_print_remaing^(0+128),w
  3573  0E82  0770               	addwf	?___wmul,w
  3574  0E83  00B8               	movwf	print_remaing@now_min^(0+128)
  3575  0E84  0835               	movf	(??_print_remaing+1)^(0+128),w
  3576  0E85  3D71               	addwfc	?___wmul+1,w
  3577  0E86  00B9               	movwf	(print_remaing@now_min+1)^(0+128)
  3578  0E87                     l2478:
  3579                           
  3580                           ;main.c: 93:     uint16_t next_min = ((uint16_t)next.hour * 60) + next.min;
  3581  0E87  0833               	movf	(print_remaing@next^(0+128)+1),w
  3582  0E88  00B4               	movwf	??_print_remaing^(0+128)
  3583  0E89  01B5               	clrf	(??_print_remaing^(0+128)+1)
  3584  0E8A  0832               	movf	print_remaing@next^(0+128),w
  3585  0E8B  00B6               	movwf	(??_print_remaing+2)^(0+128)
  3586  0E8C  01B7               	clrf	((??_print_remaing+2)^(0+128)+1)
  3587  0E8D  0836               	movf	(??_print_remaing+2)^(0+128),w
  3588  0E8E  00F0               	movwf	___wmul@multiplier
  3589  0E8F  0837               	movf	(??_print_remaing+3)^(0+128),w
  3590  0E90  00F1               	movwf	___wmul@multiplier+1
  3591  0E91  303C               	movlw	60
  3592  0E92  00F2               	movwf	___wmul@multiplicand
  3593  0E93  3000               	movlw	0
  3594  0E94  00F3               	movwf	___wmul@multiplicand+1
  3595  0E95  318B  2368  318E   	fcall	___wmul
  3596  0E98  0021               	movlb	1	; select bank1
  3597  0E99  0834               	movf	??_print_remaing^(0+128),w
  3598  0E9A  0770               	addwf	?___wmul,w
  3599  0E9B  00BA               	movwf	print_remaing@next_min^(0+128)
  3600  0E9C  0835               	movf	(??_print_remaing+1)^(0+128),w
  3601  0E9D  3D71               	addwfc	?___wmul+1,w
  3602  0E9E  00BB               	movwf	(print_remaing@next_min+1)^(0+128)
  3603                           
  3604                           ;main.c: 95:     sprintf(line, "KW > MT %02d:%02d", next.hour, next.min);
  3605  0E9F  3002               	movlw	low (STR_1| (0+32768))
  3606  0EA0  0020               	movlb	0	; select bank0
  3607  0EA1  00E8               	movwf	sprintf@fmt
  3608  0EA2  3088               	movlw	high (STR_1| (0+32768))
  3609  0EA3  00E9               	movwf	sprintf@fmt+1
  3610  0EA4  0021               	movlb	1	; select bank1
  3611  0EA5  0832               	movf	print_remaing@next^(0+128),w
  3612  0EA6  00B4               	movwf	??_print_remaing^(0+128)
  3613  0EA7  01B5               	clrf	(??_print_remaing^(0+128)+1)
  3614  0EA8  0834               	movf	??_print_remaing^(0+128),w
  3615  0EA9  0020               	movlb	0	; select bank0
  3616  0EAA  00EA               	movwf	?_sprintf+2
  3617  0EAB  0021               	movlb	1	; select bank1
  3618  0EAC  0835               	movf	(??_print_remaing+1)^(0+128),w
  3619  0EAD  0020               	movlb	0	; select bank0
  3620  0EAE  00EB               	movwf	?_sprintf+3
  3621  0EAF  0021               	movlb	1	; select bank1
  3622  0EB0  0833               	movf	(print_remaing@next^(0+128)+1),w
  3623  0EB1  00B6               	movwf	(??_print_remaing+2)^(0+128)
  3624  0EB2  01B7               	clrf	((??_print_remaing+2)^(0+128)+1)
  3625  0EB3  0836               	movf	(??_print_remaing+2)^(0+128),w
  3626  0EB4  0020               	movlb	0	; select bank0
  3627  0EB5  00EC               	movwf	?_sprintf+4
  3628  0EB6  0021               	movlb	1	; select bank1
  3629  0EB7  0837               	movf	(??_print_remaing+3)^(0+128),w
  3630  0EB8  0020               	movlb	0	; select bank0
  3631  0EB9  00ED               	movwf	?_sprintf+5
  3632  0EBA  30D2               	movlw	(low (_line| 0))& (0+255)
  3633  0EBB  318B  23CA  318E   	fcall	_sprintf
  3634  0EBE                     l2480:
  3635                           
  3636                           ;main.c: 96:     lcd_set_cursor(0, 0);
  3637  0EBE  01F8               	clrf	lcd_set_cursor@row
  3638  0EBF  3000               	movlw	0
  3639  0EC0  318C  243F  318E   	fcall	_lcd_set_cursor
  3640  0EC3                     l2482:
  3641                           
  3642                           ;main.c: 97:     lcd_print(line);
  3643  0EC3  30D2               	movlw	low _line
  3644  0EC4  00F8               	movwf	lcd_print@str
  3645  0EC5  3000               	movlw	high _line
  3646  0EC6  00F9               	movwf	lcd_print@str+1
  3647  0EC7  318B  234B  318E   	fcall	_lcd_print
  3648  0ECA                     l2484:
  3649                           
  3650                           ;main.c: 99:     sprintf(line, "%d min left", (next_min - now_min));
  3651  0ECA  3030               	movlw	low (STR_4| (0+32768))
  3652  0ECB  0020               	movlb	0	; select bank0
  3653  0ECC  00E8               	movwf	sprintf@fmt
  3654  0ECD  3088               	movlw	high (STR_4| (0+32768))
  3655  0ECE  00E9               	movwf	sprintf@fmt+1
  3656  0ECF  0021               	movlb	1	; select bank1
  3657  0ED0  0838               	movf	print_remaing@now_min^(0+128),w
  3658  0ED1  023A               	subwf	print_remaing@next_min^(0+128),w
  3659  0ED2  0020               	movlb	0	; select bank0
  3660  0ED3  00EA               	movwf	?_sprintf+2
  3661  0ED4  0021               	movlb	1	; select bank1
  3662  0ED5  0839               	movf	(print_remaing@now_min+1)^(0+128),w
  3663  0ED6  3B3B               	subwfb	(print_remaing@next_min+1)^(0+128),w
  3664  0ED7  0020               	movlb	0	; select bank0
  3665  0ED8  00EB               	movwf	?_sprintf+3
  3666  0ED9  30D2               	movlw	(low (_line| 0))& (0+255)
  3667  0EDA  318B  23CA  318E   	fcall	_sprintf
  3668  0EDD                     l2486:
  3669                           
  3670                           ;main.c: 100:     lcd_set_cursor(0, 1);
  3671  0EDD  01F8               	clrf	lcd_set_cursor@row
  3672  0EDE  0AF8               	incf	lcd_set_cursor@row,f
  3673  0EDF  3000               	movlw	0
  3674  0EE0  318C  243F  318E   	fcall	_lcd_set_cursor
  3675                           
  3676                           ;main.c: 101:     lcd_print(line);
  3677  0EE3  30D2               	movlw	low _line
  3678  0EE4  00F8               	movwf	lcd_print@str
  3679  0EE5  3000               	movlw	high _line
  3680  0EE6  00F9               	movwf	lcd_print@str+1
  3681  0EE7  318B  234B  318E   	fcall	_lcd_print
  3682  0EEA                     l121:
  3683  0EEA  0008               	return
  3684  0EEB                     __end_of_print_remaing:
  3685                           
  3686                           	psect	text9
  3687  0D18                     __ptext9:	
  3688 ;; *************** function _print_money *****************
  3689 ;; Defined at:
  3690 ;;		line 109 in file "main.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  date            6   12[BANK1 ] struct Date
  3693 ;;  money           2   18[BANK1 ] unsigned short 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3705 ;;      Params:         0       0       8       0       0       0
  3706 ;;      Locals:         0       0       0       0       0       0
  3707 ;;      Temps:          0       0       4       0       0       0
  3708 ;;      Totals:         0       0      12       0       0       0
  3709 ;;Total ram usage:       12 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 8
  3712 ;; This function calls:
  3713 ;;		_lcd_clear
  3714 ;;		_lcd_print
  3715 ;;		_lcd_set_cursor
  3716 ;;		_sprintf
  3717 ;; This function is called by:
  3718 ;;		_main
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722  0D18                     _print_money:	
  3723                           ;psect for function _print_money
  3724                           
  3725  0D18                     l2514:	
  3726                           ;incstack = 0
  3727                           ; Regs used in _print_money: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3728                           
  3729                           
  3730                           ;main.c: 110:     lcd_clear();
  3731  0D18  318B  23EE  318D   	fcall	_lcd_clear
  3732                           
  3733                           ;main.c: 112:     sprintf(line, "Time :%02d:%02d", date.hour, date.min);
  3734  0D1B  3014               	movlw	low (STR_5| (0+32768))
  3735  0D1C  0020               	movlb	0	; select bank0
  3736  0D1D  00E8               	movwf	sprintf@fmt
  3737  0D1E  3088               	movlw	high (STR_5| (0+32768))
  3738  0D1F  00E9               	movwf	sprintf@fmt+1
  3739  0D20  0021               	movlb	1	; select bank1
  3740  0D21  082F               	movf	(print_money@date^(0+128)+3),w
  3741  0D22  00B4               	movwf	??_print_money^(0+128)
  3742  0D23  01B5               	clrf	(??_print_money^(0+128)+1)
  3743  0D24  0834               	movf	??_print_money^(0+128),w
  3744  0D25  0020               	movlb	0	; select bank0
  3745  0D26  00EA               	movwf	?_sprintf+2
  3746  0D27  0021               	movlb	1	; select bank1
  3747  0D28  0835               	movf	(??_print_money+1)^(0+128),w
  3748  0D29  0020               	movlb	0	; select bank0
  3749  0D2A  00EB               	movwf	?_sprintf+3
  3750  0D2B  0021               	movlb	1	; select bank1
  3751  0D2C  0830               	movf	(print_money@date^(0+128)+4),w
  3752  0D2D  00B6               	movwf	(??_print_money+2)^(0+128)
  3753  0D2E  01B7               	clrf	((??_print_money+2)^(0+128)+1)
  3754  0D2F  0836               	movf	(??_print_money+2)^(0+128),w
  3755  0D30  0020               	movlb	0	; select bank0
  3756  0D31  00EC               	movwf	?_sprintf+4
  3757  0D32  0021               	movlb	1	; select bank1
  3758  0D33  0837               	movf	(??_print_money+3)^(0+128),w
  3759  0D34  0020               	movlb	0	; select bank0
  3760  0D35  00ED               	movwf	?_sprintf+5
  3761  0D36  30D2               	movlw	(low (_line| 0))& (0+255)
  3762  0D37  318B  23CA  318D   	fcall	_sprintf
  3763  0D3A                     l2516:
  3764                           
  3765                           ;main.c: 113:     lcd_set_cursor(0, 0);
  3766  0D3A  01F8               	clrf	lcd_set_cursor@row
  3767  0D3B  3000               	movlw	0
  3768  0D3C  318C  243F  318D   	fcall	_lcd_set_cursor
  3769  0D3F                     l2518:
  3770                           
  3771                           ;main.c: 114:     lcd_print(line);
  3772  0D3F  30D2               	movlw	low _line
  3773  0D40  00F8               	movwf	lcd_print@str
  3774  0D41  3000               	movlw	high _line
  3775  0D42  00F9               	movwf	lcd_print@str+1
  3776  0D43  318B  234B  318D   	fcall	_lcd_print
  3777  0D46                     l2520:
  3778                           
  3779                           ;main.c: 116:     sprintf(line, "Money:%dYEN", money);
  3780  0D46  3024               	movlw	low (STR_6| (0+32768))
  3781  0D47  0020               	movlb	0	; select bank0
  3782  0D48  00E8               	movwf	sprintf@fmt
  3783  0D49  3088               	movlw	high (STR_6| (0+32768))
  3784  0D4A  00E9               	movwf	sprintf@fmt+1
  3785  0D4B  0021               	movlb	1	; select bank1
  3786  0D4C  0833               	movf	(print_money@money+1)^(0+128),w
  3787  0D4D  0020               	movlb	0	; select bank0
  3788  0D4E  00EB               	movwf	?_sprintf+3
  3789  0D4F  0021               	movlb	1	; select bank1
  3790  0D50  0832               	movf	print_money@money^(0+128),w
  3791  0D51  0020               	movlb	0	; select bank0
  3792  0D52  00EA               	movwf	?_sprintf+2
  3793  0D53  30D2               	movlw	(low (_line| 0))& (0+255)
  3794  0D54  318B  23CA  318D   	fcall	_sprintf
  3795  0D57                     l2522:
  3796                           
  3797                           ;main.c: 117:     lcd_set_cursor(0, 1);
  3798  0D57  01F8               	clrf	lcd_set_cursor@row
  3799  0D58  0AF8               	incf	lcd_set_cursor@row,f
  3800  0D59  3000               	movlw	0
  3801  0D5A  318C  243F  318D   	fcall	_lcd_set_cursor
  3802                           
  3803                           ;main.c: 118:     lcd_print(line);
  3804  0D5D  30D2               	movlw	low _line
  3805  0D5E  00F8               	movwf	lcd_print@str
  3806  0D5F  3000               	movlw	high _line
  3807  0D60  00F9               	movwf	lcd_print@str+1
  3808  0D61  318B  234B  318D   	fcall	_lcd_print
  3809  0D64                     l124:
  3810  0D64  0008               	return
  3811  0D65                     __end_of_print_money:
  3812                           
  3813                           	psect	text10
  3814  0BCA                     __ptext10:	
  3815 ;; *************** function _sprintf *****************
  3816 ;; Defined at:
  3817 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  s               1    wreg     PTR unsigned char 
  3820 ;;		 -> line(16), 
  3821 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  3822 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  3823 ;;		 -> STR_2(18), STR_1(18), 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  s               1    1[BANK1 ] PTR unsigned char 
  3826 ;;		 -> line(16), 
  3827 ;;  f              10    2[BANK1 ] struct _IO_FILE
  3828 ;;  ret             2    0        int 
  3829 ;;  ap              1    0[BANK1 ] PTR void [1]
  3830 ;;		 -> ?_sprintf(2), 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2   72[BANK0 ] int 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3840 ;;      Params:         0       6       0       0       0       0
  3841 ;;      Locals:         0       0      12       0       0       0
  3842 ;;      Temps:          1       0       0       0       0       0
  3843 ;;      Totals:         1       6      12       0       0       0
  3844 ;;Total ram usage:       19 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 7
  3847 ;; This function calls:
  3848 ;;		_vfprintf
  3849 ;; This function is called by:
  3850 ;;		_print_train
  3851 ;;		_print_remaing
  3852 ;;		_print_money
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856  0BCA                     _sprintf:	
  3857                           ;psect for function _sprintf
  3858                           
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3862                           ;sprintf@s stored from wreg
  3863  0BCA  0021               	movlb	1	; select bank1
  3864  0BCB  00A1               	movwf	sprintf@s^(0+128)
  3865  0BCC                     l2340:
  3866  0BCC  306A               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3867  0BCD  00FD               	movwf	??_sprintf
  3868  0BCE  087D               	movf	??_sprintf,w
  3869  0BCF  00A0               	movwf	sprintf@ap^(0+128)
  3870  0BD0  0821               	movf	sprintf@s^(0+128),w
  3871  0BD1  00FD               	movwf	??_sprintf
  3872  0BD2  087D               	movf	??_sprintf,w
  3873  0BD3  00A2               	movwf	sprintf@f^(0+128)
  3874  0BD4                     l2342:
  3875  0BD4  01A4               	clrf	(sprintf@f^(0+128)+2)
  3876  0BD5  01A5               	clrf	((sprintf@f+1)^(0+128)+2)
  3877  0BD6                     l2344:
  3878  0BD6  01AA               	clrf	(sprintf@f^(0+128)+8)
  3879  0BD7  01AB               	clrf	((sprintf@f+1)^(0+128)+8)
  3880  0BD8                     l2346:
  3881  0BD8  0020               	movlb	0	; select bank0
  3882  0BD9  0869               	movf	sprintf@fmt+1,w
  3883  0BDA  00E1               	movwf	vfprintf@fmt+1
  3884  0BDB  0868               	movf	sprintf@fmt,w
  3885  0BDC  00E0               	movwf	vfprintf@fmt
  3886  0BDD  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  3887  0BDE  00FD               	movwf	??_sprintf
  3888  0BDF  087D               	movf	??_sprintf,w
  3889  0BE0  00E2               	movwf	vfprintf@ap
  3890  0BE1  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  3891  0BE2  318C  2469  318B   	fcall	_vfprintf
  3892  0BE5                     l2348:
  3893  0BE5  0021               	movlb	1	; select bank1
  3894  0BE6  0824               	movf	(sprintf@f^(0+128)+2),w
  3895  0BE7  0721               	addwf	sprintf@s^(0+128),w
  3896  0BE8  00FD               	movwf	??_sprintf
  3897  0BE9  087D               	movf	??_sprintf,w
  3898  0BEA  0086               	movwf	6
  3899  0BEB  0187               	clrf	7
  3900  0BEC  0181               	clrf	1
  3901  0BED                     l887:
  3902  0BED  0008               	return
  3903  0BEE                     __end_of_sprintf:
  3904                           
  3905                           	psect	text11
  3906  0C69                     __ptext11:	
  3907 ;; *************** function _vfprintf *****************
  3908 ;; Defined at:
  3909 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  fp              1    wreg     PTR struct _IO_FILE
  3912 ;;		 -> sprintf@f(10), 
  3913 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  3914 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  3915 ;;		 -> STR_2(18), STR_1(18), 
  3916 ;;  ap              1   66[BANK0 ] PTR PTR void 
  3917 ;;		 -> sprintf@ap(1), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  fp              1   69[BANK0 ] PTR struct _IO_FILE
  3920 ;;		 -> sprintf@f(10), 
  3921 ;;  cfmt            2   70[BANK0 ] PTR unsigned char 
  3922 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  3923 ;;		 -> STR_2(18), STR_1(18), 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2   64[BANK0 ] int 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3933 ;;      Params:         0       3       0       0       0       0
  3934 ;;      Locals:         0       3       0       0       0       0
  3935 ;;      Temps:          0       2       0       0       0       0
  3936 ;;      Totals:         0       8       0       0       0       0
  3937 ;;Total ram usage:        8 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 6
  3940 ;; This function calls:
  3941 ;;		_vfpfcnvrt
  3942 ;; This function is called by:
  3943 ;;		_sprintf
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947  0C69                     _vfprintf:	
  3948                           ;psect for function _vfprintf
  3949                           
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3953                           ;vfprintf@fp stored from wreg
  3954  0C69  0020               	movlb	0	; select bank0
  3955  0C6A  00E5               	movwf	vfprintf@fp
  3956  0C6B                     l2284:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3959  0C6B  0861               	movf	vfprintf@fmt+1,w
  3960  0C6C  00E7               	movwf	vfprintf@cfmt+1
  3961  0C6D  0860               	movf	vfprintf@fmt,w
  3962  0C6E  00E6               	movwf	vfprintf@cfmt
  3963  0C6F                     l2286:
  3964                           
  3965                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3966  0C6F  0021               	movlb	1	; select bank1
  3967  0C70  01C6               	clrf	_nout^(0+128)
  3968  0C71  01C7               	clrf	(_nout+1)^(0+128)
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3971  0C72  2C87               	goto	l2290
  3972  0C73                     l2288:
  3973                           
  3974                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3975  0C73  3066               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3976  0C74  00E3               	movwf	??_vfprintf
  3977  0C75  0863               	movf	??_vfprintf,w
  3978  0C76  00CE               	movwf	vfpfcnvrt@fmt
  3979  0C77  0862               	movf	vfprintf@ap,w
  3980  0C78  00E4               	movwf	??_vfprintf+1
  3981  0C79  0864               	movf	??_vfprintf+1,w
  3982  0C7A  00CF               	movwf	vfpfcnvrt@ap
  3983  0C7B  0865               	movf	vfprintf@fp,w
  3984  0C7C  3186  2636  318C   	fcall	_vfpfcnvrt
  3985  0C7F  0020               	movlb	0	; select bank0
  3986  0C80  084E               	movf	?_vfpfcnvrt,w
  3987  0C81  0021               	movlb	1	; select bank1
  3988  0C82  07C6               	addwf	_nout^(0+128),f
  3989  0C83  0020               	movlb	0	; select bank0
  3990  0C84  084F               	movf	?_vfpfcnvrt+1,w
  3991  0C85  0021               	movlb	1	; select bank1
  3992  0C86  3DC7               	addwfc	(_nout+1)^(0+128),f
  3993  0C87                     l2290:
  3994                           
  3995                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3996  0C87  0020               	movlb	0	; select bank0
  3997  0C88  0866               	movf	vfprintf@cfmt,w
  3998  0C89  0084               	movwf	4
  3999  0C8A  0867               	movf	vfprintf@cfmt+1,w
  4000  0C8B  0085               	movwf	5
  4001  0C8C  0012               	moviw fsr0++
  4002  0C8D  1D03               	btfss	3,2
  4003  0C8E  2C90               	goto	u1801
  4004  0C8F  2C91               	goto	u1800
  4005  0C90                     u1801:
  4006  0C90  2C73               	goto	l2288
  4007  0C91                     u1800:
  4008  0C91                     l2292:
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4011  0C91  0021               	movlb	1	; select bank1
  4012  0C92  0847               	movf	(_nout+1)^(0+128),w
  4013  0C93  0020               	movlb	0	; select bank0
  4014  0C94  00E1               	movwf	?_vfprintf+1
  4015  0C95  0021               	movlb	1	; select bank1
  4016  0C96  0846               	movf	_nout^(0+128),w
  4017  0C97  0020               	movlb	0	; select bank0
  4018  0C98  00E0               	movwf	?_vfprintf
  4019  0C99                     l983:
  4020  0C99  0008               	return
  4021  0C9A                     __end_of_vfprintf:
  4022                           
  4023                           	psect	text12
  4024  0636                     __ptext12:	
  4025 ;; *************** function _vfpfcnvrt *****************
  4026 ;; Defined at:
  4027 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  fp              1    wreg     PTR struct _IO_FILE
  4030 ;;		 -> sprintf@f(10), 
  4031 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4032 ;;		 -> vfprintf@cfmt(2), 
  4033 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4034 ;;		 -> sprintf@ap(1), 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  fp              1   63[BANK0 ] PTR struct _IO_FILE
  4037 ;;		 -> sprintf@f(10), 
  4038 ;;  ll              8   53[BANK0 ] long long 
  4039 ;;  llu             8    0        unsigned long long 
  4040 ;;  f               4    0        unsigned long long 
  4041 ;;  ct              3    0        unsigned char [3]
  4042 ;;  done            2   61[BANK0 ] int 
  4043 ;;  vp              2    0        PTR void 
  4044 ;;  i               2    0        int 
  4045 ;;  cp              2    0        PTR unsigned char 
  4046 ;;  c               1    0        unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2   46[BANK0 ] int 
  4049 ;; Registers used:
  4050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4056 ;;      Params:         0       2       0       0       0       0
  4057 ;;      Locals:         0      11       0       0       0       0
  4058 ;;      Temps:          0       5       0       0       0       0
  4059 ;;      Totals:         0      18       0       0       0       0
  4060 ;;Total ram usage:       18 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 5
  4063 ;; This function calls:
  4064 ;;		_atoi
  4065 ;;		_dtoa
  4066 ;;		_fputc
  4067 ;;		_isdigit
  4068 ;; This function is called by:
  4069 ;;		_vfprintf
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073  0636                     _vfpfcnvrt:	
  4074                           ;psect for function _vfpfcnvrt
  4075                           
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4079                           ;vfpfcnvrt@fp stored from wreg
  4080  0636  0020               	movlb	0	; select bank0
  4081  0637  00DF               	movwf	vfpfcnvrt@fp
  4082  0638                     l2154:
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4085  0638  084E               	movf	vfpfcnvrt@fmt,w
  4086  0639  0086               	movwf	6
  4087  063A  0187               	clrf	7
  4088  063B  3F40               	moviw [0]fsr1
  4089  063C  00D0               	movwf	??_vfpfcnvrt
  4090  063D  3F41               	moviw [1]fsr1
  4091  063E  00D1               	movwf	??_vfpfcnvrt+1
  4092  063F  0850               	movf	??_vfpfcnvrt,w
  4093  0640  0084               	movwf	4
  4094  0641  0851               	movf	??_vfpfcnvrt+1,w
  4095  0642  0085               	movwf	5
  4096  0643  0012               	moviw fsr0++
  4097  0644  3A25               	xorlw	37
  4098  0645  1D03               	btfss	3,2
  4099  0646  2E48               	goto	u1661
  4100  0647  2E49               	goto	u1660
  4101  0648                     u1661:
  4102  0648  2FA7               	goto	l2232
  4103  0649                     u1660:
  4104  0649                     l2156:
  4105                           
  4106                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4107  0649  084E               	movf	vfpfcnvrt@fmt,w
  4108  064A  0086               	movwf	6
  4109  064B  0187               	clrf	7
  4110  064C  3001               	movlw	1
  4111  064D  0781               	addwf	1,f
  4112  064E  3141               	addfsr 1,1
  4113  064F  1803               	skipnc
  4114  0650  0A81               	incf	1,f
  4115  0651                     l2158:
  4116                           
  4117                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4118  0651  0021               	movlb	1	; select bank1
  4119  0652  01C8               	clrf	_width^(0+128)
  4120  0653  01C9               	clrf	(_width+1)^(0+128)
  4121  0654  01CC               	clrf	_flags^(0+128)
  4122  0655  01CD               	clrf	(_flags+1)^(0+128)
  4123  0656                     l2160:
  4124                           
  4125                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4126  0656  30FF               	movlw	255
  4127  0657  00CA               	movwf	_prec^(0+128)
  4128  0658  30FF               	movlw	255
  4129  0659  00CB               	movwf	(_prec^(0+128)+1)
  4130  065A                     l2162:
  4131                           
  4132                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4133  065A  0020               	movlb	0	; select bank0
  4134  065B  01DD               	clrf	vfpfcnvrt@done
  4135  065C  01DE               	clrf	vfpfcnvrt@done+1
  4136                           
  4137                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4138  065D  2E9F               	goto	l2180
  4139  065E                     l956:	
  4140                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  4141                           
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4144  065E  0021               	movlb	1	; select bank1
  4145  065F  144C               	bsf	_flags^(0+128),0
  4146  0660                     l2164:
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4149  0660  0020               	movlb	0	; select bank0
  4150  0661  084E               	movf	vfpfcnvrt@fmt,w
  4151  0662  0086               	movwf	6
  4152  0663  0187               	clrf	7
  4153  0664  3001               	movlw	1
  4154  0665  0781               	addwf	1,f
  4155  0666  3141               	addfsr 1,1
  4156  0667  1803               	skipnc
  4157  0668  0A81               	incf	1,f
  4158                           
  4159                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4160  0669  2E9F               	goto	l2180
  4161  066A                     l958:	
  4162                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  4163                           
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4166  066A  0021               	movlb	1	; select bank1
  4167  066B  14CC               	bsf	_flags^(0+128),1
  4168  066C  2E60               	goto	l2164
  4169  066D                     l959:	
  4170                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  4171                           
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4174  066D  0021               	movlb	1	; select bank1
  4175  066E  154C               	bsf	_flags^(0+128),2
  4176  066F  2E60               	goto	l2164
  4177  0670                     l960:	
  4178                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  4179                           
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4182  0670  0021               	movlb	1	; select bank1
  4183  0671  15CC               	bsf	_flags^(0+128),3
  4184  0672  2E60               	goto	l2164
  4185  0673                     l961:	
  4186                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  4187                           
  4188                           
  4189                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4190  0673  0021               	movlb	1	; select bank1
  4191  0674  164C               	bsf	_flags^(0+128),4
  4192  0675  2E60               	goto	l2164
  4193  0676                     l2174:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4196  0676  3001               	movlw	1
  4197  0677  00DD               	movwf	vfpfcnvrt@done
  4198  0678  3000               	movlw	0
  4199  0679  00DE               	movwf	vfpfcnvrt@done+1
  4200                           
  4201                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4202  067A  2E9F               	goto	l2180
  4203  067B                     l2178:
  4204  067B  084E               	movf	vfpfcnvrt@fmt,w
  4205  067C  0086               	movwf	6
  4206  067D  0187               	clrf	7
  4207  067E  3F40               	moviw [0]fsr1
  4208  067F  00D0               	movwf	??_vfpfcnvrt
  4209  0680  3F41               	moviw [1]fsr1
  4210  0681  00D1               	movwf	??_vfpfcnvrt+1
  4211  0682  0850               	movf	??_vfpfcnvrt,w
  4212  0683  0084               	movwf	4
  4213  0684  0851               	movf	??_vfpfcnvrt+1,w
  4214  0685  0085               	movwf	5
  4215  0686  0800               	movf	0,w	;code access
  4216  0687  00D2               	movwf	??_vfpfcnvrt+2
  4217  0688  01D3               	clrf	??_vfpfcnvrt+3
  4218                           
  4219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4220                           ; Switch size 1, requested type "simple"
  4221                           ; Number of cases is 1, Range of values is 0 to 0
  4222                           ; switch strategies available:
  4223                           ; Name         Instructions Cycles
  4224                           ; simple_byte            4     3 (average)
  4225                           ; direct_byte            8     6 (fixed)
  4226                           ; jumptable            260     6 (fixed)
  4227                           ;	Chosen strategy is simple_byte
  4228  0689  0853               	movf	??_vfpfcnvrt+3,w
  4229  068A  3A00               	xorlw	0	; case 0
  4230  068B  1903               	skipnz
  4231  068C  2E8E               	goto	l2632
  4232  068D  2E76               	goto	l2174
  4233  068E                     l2632:
  4234                           
  4235                           ; Switch size 1, requested type "simple"
  4236                           ; Number of cases is 5, Range of values is 32 to 48
  4237                           ; switch strategies available:
  4238                           ; Name         Instructions Cycles
  4239                           ; simple_byte           16     9 (average)
  4240                           ; direct_byte           43     9 (fixed)
  4241                           ; jumptable            263     9 (fixed)
  4242                           ;	Chosen strategy is simple_byte
  4243  068E  0852               	movf	??_vfpfcnvrt+2,w
  4244  068F  3A20               	xorlw	32	; case 32
  4245  0690  1903               	skipnz
  4246  0691  2E70               	goto	l960
  4247  0692  3A03               	xorlw	3	; case 35
  4248  0693  1903               	skipnz
  4249  0694  2E73               	goto	l961
  4250  0695  3A08               	xorlw	8	; case 43
  4251  0696  1903               	skipnz
  4252  0697  2E6D               	goto	l959
  4253  0698  3A06               	xorlw	6	; case 45
  4254  0699  1903               	skipnz
  4255  069A  2E5E               	goto	l956
  4256  069B  3A1D               	xorlw	29	; case 48
  4257  069C  1903               	skipnz
  4258  069D  2E6A               	goto	l958
  4259  069E  2E76               	goto	l2174
  4260  069F                     l2180:
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4263  069F  085D               	movf	vfpfcnvrt@done,w
  4264  06A0  045E               	iorwf	vfpfcnvrt@done+1,w
  4265  06A1  1903               	btfsc	3,2
  4266  06A2  2EA4               	goto	u1671
  4267  06A3  2EA5               	goto	u1670
  4268  06A4                     u1671:
  4269  06A4  2E7B               	goto	l2178
  4270  06A5                     u1670:
  4271  06A5                     l963:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4274  06A5  0021               	movlb	1	; select bank1
  4275  06A6  1C4C               	btfss	_flags^(0+128),0
  4276  06A7  2EA9               	goto	u1681
  4277  06A8  2EAA               	goto	u1680
  4278  06A9                     u1681:
  4279  06A9  2EAE               	goto	l2184
  4280  06AA                     u1680:
  4281  06AA                     l2182:
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4284  06AA  30FD               	movlw	253
  4285  06AB  05CC               	andwf	_flags^(0+128),f
  4286  06AC  30FF               	movlw	255
  4287  06AD  05CD               	andwf	(_flags+1)^(0+128),f
  4288  06AE                     l2184:
  4289                           
  4290                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4291  06AE  0020               	movlb	0	; select bank0
  4292  06AF  084E               	movf	vfpfcnvrt@fmt,w
  4293  06B0  0086               	movwf	6
  4294  06B1  0187               	clrf	7
  4295  06B2  3F40               	moviw [0]fsr1
  4296  06B3  00D0               	movwf	??_vfpfcnvrt
  4297  06B4  3F41               	moviw [1]fsr1
  4298  06B5  00D1               	movwf	??_vfpfcnvrt+1
  4299  06B6  0850               	movf	??_vfpfcnvrt,w
  4300  06B7  0084               	movwf	4
  4301  06B8  0851               	movf	??_vfpfcnvrt+1,w
  4302  06B9  0085               	movwf	5
  4303  06BA  0012               	moviw fsr0++
  4304  06BB  3A2A               	xorlw	42
  4305  06BC  1D03               	btfss	3,2
  4306  06BD  2EBF               	goto	u1691
  4307  06BE  2EC0               	goto	u1690
  4308  06BF                     u1691:
  4309  06BF  2EE0               	goto	l2196
  4310  06C0                     u1690:
  4311  06C0                     l2186:
  4312                           
  4313                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4314  06C0  084E               	movf	vfpfcnvrt@fmt,w
  4315  06C1  0086               	movwf	6
  4316  06C2  0187               	clrf	7
  4317  06C3  3001               	movlw	1
  4318  06C4  0781               	addwf	1,f
  4319  06C5  3141               	addfsr 1,1
  4320  06C6  1803               	skipnc
  4321  06C7  0A81               	incf	1,f
  4322  06C8                     l2188:
  4323                           
  4324                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4325  06C8  084F               	movf	vfpfcnvrt@ap,w
  4326  06C9  0086               	movwf	6
  4327  06CA  0187               	clrf	7
  4328  06CB  0801               	movf	1,w
  4329  06CC  0084               	movwf	4
  4330  06CD  0185               	clrf	5
  4331  06CE  3002               	movlw	2
  4332  06CF  0781               	addwf	1,f
  4333  06D0  3F00               	moviw [0]fsr0
  4334  06D1  0021               	movlb	1	; select bank1
  4335  06D2  00C8               	movwf	_width^(0+128)
  4336  06D3  3F01               	moviw [1]fsr0
  4337  06D4  00C9               	movwf	(_width+1)^(0+128)
  4338  06D5                     l2190:
  4339                           
  4340                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4341  06D5  1FC9               	btfss	(_width+1)^(0+128),7
  4342  06D6  2ED8               	goto	u1701
  4343  06D7  2ED9               	goto	u1700
  4344  06D8                     u1701:
  4345  06D8  2F14               	goto	l2204
  4346  06D9                     u1700:
  4347  06D9                     l2192:
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4350  06D9  144C               	bsf	_flags^(0+128),0
  4351  06DA                     l2194:
  4352                           
  4353                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4354  06DA  09C8               	comf	_width^(0+128),f
  4355  06DB  09C9               	comf	(_width+1)^(0+128),f
  4356  06DC  0AC8               	incf	_width^(0+128),f
  4357  06DD  1903               	skipnz
  4358  06DE  0AC9               	incf	(_width+1)^(0+128),f
  4359  06DF  2F14               	goto	l2204
  4360  06E0                     l2196:
  4361                           
  4362                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4363  06E0  084E               	movf	vfpfcnvrt@fmt,w
  4364  06E1  0086               	movwf	6
  4365  06E2  0187               	clrf	7
  4366  06E3  3F40               	moviw [0]fsr1
  4367  06E4  00F6               	movwf	atoi@s
  4368  06E5  3F41               	moviw [1]fsr1
  4369  06E6  00F7               	movwf	atoi@s+1
  4370  06E7  318F  276C  3186   	fcall	_atoi
  4371  06EA  0877               	movf	?_atoi+1,w
  4372  06EB  0021               	movlb	1	; select bank1
  4373  06EC  00C9               	movwf	(_width+1)^(0+128)
  4374  06ED  0876               	movf	?_atoi,w
  4375  06EE  00C8               	movwf	_width^(0+128)
  4376                           
  4377                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4378  06EF  2EF8               	goto	l2202
  4379  06F0                     l2198:
  4380                           
  4381                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  4382  06F0  084E               	movf	vfpfcnvrt@fmt,w
  4383  06F1  0086               	movwf	6
  4384  06F2  0187               	clrf	7
  4385  06F3  3001               	movlw	1
  4386  06F4  0781               	addwf	1,f
  4387  06F5  3141               	addfsr 1,1
  4388  06F6  1803               	skipnc
  4389  06F7  0A81               	incf	1,f
  4390  06F8                     l2202:
  4391  06F8  0020               	movlb	0	; select bank0
  4392  06F9  084E               	movf	vfpfcnvrt@fmt,w
  4393  06FA  0086               	movwf	6
  4394  06FB  0187               	clrf	7
  4395  06FC  3F40               	moviw [0]fsr1
  4396  06FD  00D0               	movwf	??_vfpfcnvrt
  4397  06FE  3F41               	moviw [1]fsr1
  4398  06FF  00D1               	movwf	??_vfpfcnvrt+1
  4399  0700  0850               	movf	??_vfpfcnvrt,w
  4400  0701  0084               	movwf	4
  4401  0702  0851               	movf	??_vfpfcnvrt+1,w
  4402  0703  0085               	movwf	5
  4403  0704  0800               	movf	0,w	;code access
  4404  0705  3ED0               	addlw	208
  4405  0706  00D2               	movwf	??_vfpfcnvrt+2
  4406  0707  30FF               	movlw	255
  4407  0708  1803               	skipnc
  4408  0709  3000               	movlw	0
  4409  070A  00D3               	movwf	??_vfpfcnvrt+3
  4410  070B  3000               	movlw	0
  4411  070C  0253               	subwf	??_vfpfcnvrt+3,w
  4412  070D  300A               	movlw	10
  4413  070E  1903               	skipnz
  4414  070F  0252               	subwf	??_vfpfcnvrt+2,w
  4415  0710  1C03               	skipc
  4416  0711  2F13               	goto	u1711
  4417  0712  2F14               	goto	u1710
  4418  0713                     u1711:
  4419  0713  2EF0               	goto	l2198
  4420  0714                     u1710:
  4421  0714                     l2204:
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4424  0714  0020               	movlb	0	; select bank0
  4425  0715  084E               	movf	vfpfcnvrt@fmt,w
  4426  0716  0086               	movwf	6
  4427  0717  0187               	clrf	7
  4428  0718  3F40               	moviw [0]fsr1
  4429  0719  00D0               	movwf	??_vfpfcnvrt
  4430  071A  3F41               	moviw [1]fsr1
  4431  071B  00D1               	movwf	??_vfpfcnvrt+1
  4432  071C  0850               	movf	??_vfpfcnvrt,w
  4433  071D  0084               	movwf	4
  4434  071E  0851               	movf	??_vfpfcnvrt+1,w
  4435  071F  0085               	movwf	5
  4436  0720  0012               	moviw fsr0++
  4437  0721  3A64               	xorlw	100
  4438  0722  1903               	btfsc	3,2
  4439  0723  2F25               	goto	u1721
  4440  0724  2F26               	goto	u1720
  4441  0725                     u1721:
  4442  0725  2F37               	goto	l2208
  4443  0726                     u1720:
  4444  0726                     l2206:
  4445  0726  084E               	movf	vfpfcnvrt@fmt,w
  4446  0727  0086               	movwf	6
  4447  0728  0187               	clrf	7
  4448  0729  3F40               	moviw [0]fsr1
  4449  072A  00D0               	movwf	??_vfpfcnvrt
  4450  072B  3F41               	moviw [1]fsr1
  4451  072C  00D1               	movwf	??_vfpfcnvrt+1
  4452  072D  0850               	movf	??_vfpfcnvrt,w
  4453  072E  0084               	movwf	4
  4454  072F  0851               	movf	??_vfpfcnvrt+1,w
  4455  0730  0085               	movwf	5
  4456  0731  0012               	moviw fsr0++
  4457  0732  3A69               	xorlw	105
  4458  0733  1D03               	btfss	3,2
  4459  0734  2F36               	goto	u1731
  4460  0735  2F37               	goto	u1730
  4461  0736                     u1731:
  4462  0736  2F72               	goto	l2216
  4463  0737                     u1730:
  4464  0737                     l2208:
  4465                           
  4466                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4467  0737  084E               	movf	vfpfcnvrt@fmt,w
  4468  0738  0086               	movwf	6
  4469  0739  0187               	clrf	7
  4470  073A  3001               	movlw	1
  4471  073B  0781               	addwf	1,f
  4472  073C  3141               	addfsr 1,1
  4473  073D  1803               	skipnc
  4474  073E  0A81               	incf	1,f
  4475  073F                     l2210:
  4476                           
  4477                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4478  073F  084F               	movf	vfpfcnvrt@ap,w
  4479  0740  0086               	movwf	6
  4480  0741  0187               	clrf	7
  4481  0742  0801               	movf	1,w
  4482  0743  0084               	movwf	4
  4483  0744  0185               	clrf	5
  4484  0745  3002               	movlw	2
  4485  0746  0781               	addwf	1,f
  4486  0747  3F00               	moviw [0]fsr0
  4487  0748  00D0               	movwf	??_vfpfcnvrt
  4488  0749  3F01               	moviw [1]fsr0
  4489  074A  00D1               	movwf	??_vfpfcnvrt+1
  4490  074B  0850               	movf	??_vfpfcnvrt,w
  4491  074C  00D5               	movwf	vfpfcnvrt@ll
  4492  074D  0851               	movf	??_vfpfcnvrt+1,w
  4493  074E  00D6               	movwf	vfpfcnvrt@ll+1
  4494  074F  0D89               	rlf	9,f
  4495  0750  3B89               	subwfb	9,f
  4496  0751  0989               	comf	9,f
  4497  0752  00D7               	movwf	vfpfcnvrt@ll+2
  4498  0753  00D8               	movwf	vfpfcnvrt@ll+3
  4499  0754  00D9               	movwf	vfpfcnvrt@ll+4
  4500  0755  00DA               	movwf	vfpfcnvrt@ll+5
  4501  0756  00DB               	movwf	vfpfcnvrt@ll+6
  4502  0757  00DC               	movwf	vfpfcnvrt@ll+7
  4503  0758                     l2212:
  4504                           
  4505                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4506  0758  0855               	movf	vfpfcnvrt@ll,w
  4507  0759  00B0               	movwf	dtoa@d
  4508  075A  0856               	movf	vfpfcnvrt@ll+1,w
  4509  075B  00B1               	movwf	dtoa@d+1
  4510  075C  0857               	movf	vfpfcnvrt@ll+2,w
  4511  075D  00B2               	movwf	dtoa@d+2
  4512  075E  0858               	movf	vfpfcnvrt@ll+3,w
  4513  075F  00B3               	movwf	dtoa@d+3
  4514  0760  0859               	movf	vfpfcnvrt@ll+4,w
  4515  0761  00B4               	movwf	dtoa@d+4
  4516  0762  085A               	movf	vfpfcnvrt@ll+5,w
  4517  0763  00B5               	movwf	dtoa@d+5
  4518  0764  085B               	movf	vfpfcnvrt@ll+6,w
  4519  0765  00B6               	movwf	dtoa@d+6
  4520  0766  085C               	movf	vfpfcnvrt@ll+7,w
  4521  0767  00B7               	movwf	dtoa@d+7
  4522  0768  085F               	movf	vfpfcnvrt@fp,w
  4523  0769  3184  24C6  3186   	fcall	_dtoa
  4524  076C  0020               	movlb	0	; select bank0
  4525  076D  0831               	movf	?_dtoa+1,w
  4526  076E  00CF               	movwf	?_vfpfcnvrt+1
  4527  076F  0830               	movf	?_dtoa,w
  4528  0770  00CE               	movwf	?_vfpfcnvrt
  4529  0771  2FCA               	goto	l976
  4530  0772                     l2216:
  4531                           
  4532                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4533  0772  084E               	movf	vfpfcnvrt@fmt,w
  4534  0773  0086               	movwf	6
  4535  0774  0187               	clrf	7
  4536  0775  3F40               	moviw [0]fsr1
  4537  0776  00D0               	movwf	??_vfpfcnvrt
  4538  0777  3F41               	moviw [1]fsr1
  4539  0778  00D1               	movwf	??_vfpfcnvrt+1
  4540  0779  0850               	movf	??_vfpfcnvrt,w
  4541  077A  0084               	movwf	4
  4542  077B  0851               	movf	??_vfpfcnvrt+1,w
  4543  077C  0085               	movwf	5
  4544  077D  0012               	moviw fsr0++
  4545  077E  3A25               	xorlw	37
  4546  077F  1D03               	btfss	3,2
  4547  0780  2F82               	goto	u1741
  4548  0781  2F83               	goto	u1740
  4549  0782                     u1741:
  4550  0782  2F9C               	goto	l2226
  4551  0783                     u1740:
  4552  0783                     l2218:
  4553                           
  4554                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4555  0783  084E               	movf	vfpfcnvrt@fmt,w
  4556  0784  0086               	movwf	6
  4557  0785  0187               	clrf	7
  4558  0786  3001               	movlw	1
  4559  0787  0781               	addwf	1,f
  4560  0788  3141               	addfsr 1,1
  4561  0789  1803               	skipnc
  4562  078A  0A81               	incf	1,f
  4563  078B                     l2220:
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4566  078B  3025               	movlw	37
  4567  078C  00F0               	movwf	fputc@c
  4568  078D  3000               	movlw	0
  4569  078E  00F1               	movwf	fputc@c+1
  4570  078F  085F               	movf	vfpfcnvrt@fp,w
  4571  0790  00D0               	movwf	??_vfpfcnvrt
  4572  0791  0850               	movf	??_vfpfcnvrt,w
  4573  0792  00F2               	movwf	fputc@fp
  4574  0793  318D  2565  3186   	fcall	_fputc
  4575  0796                     l2222:
  4576                           
  4577                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4578  0796  3001               	movlw	1
  4579  0797  0020               	movlb	0	; select bank0
  4580  0798  00CE               	movwf	?_vfpfcnvrt
  4581  0799  3000               	movlw	0
  4582  079A  00CF               	movwf	?_vfpfcnvrt+1
  4583  079B  2FCA               	goto	l976
  4584  079C                     l2226:
  4585                           
  4586                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4587  079C  084E               	movf	vfpfcnvrt@fmt,w
  4588  079D  0086               	movwf	6
  4589  079E  0187               	clrf	7
  4590  079F  3001               	movlw	1
  4591  07A0  0781               	addwf	1,f
  4592  07A1  3141               	addfsr 1,1
  4593  07A2  1803               	skipnc
  4594  07A3  0A81               	incf	1,f
  4595  07A4                     l2228:
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4598  07A4  01CE               	clrf	?_vfpfcnvrt
  4599  07A5  01CF               	clrf	?_vfpfcnvrt+1
  4600  07A6  2FCA               	goto	l976
  4601  07A7                     l2232:
  4602                           
  4603                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4604  07A7  084E               	movf	vfpfcnvrt@fmt,w
  4605  07A8  0086               	movwf	6
  4606  07A9  0187               	clrf	7
  4607  07AA  3F40               	moviw [0]fsr1
  4608  07AB  00D0               	movwf	??_vfpfcnvrt
  4609  07AC  3F41               	moviw [1]fsr1
  4610  07AD  00D1               	movwf	??_vfpfcnvrt+1
  4611  07AE  0850               	movf	??_vfpfcnvrt,w
  4612  07AF  0084               	movwf	4
  4613  07B0  0851               	movf	??_vfpfcnvrt+1,w
  4614  07B1  0085               	movwf	5
  4615  07B2  0800               	movf	0,w	;code access
  4616  07B3  00D2               	movwf	??_vfpfcnvrt+2
  4617  07B4  01D3               	clrf	??_vfpfcnvrt+3
  4618  07B5  0852               	movf	??_vfpfcnvrt+2,w
  4619  07B6  00F0               	movwf	fputc@c
  4620  07B7  0853               	movf	??_vfpfcnvrt+3,w
  4621  07B8  00F1               	movwf	fputc@c+1
  4622  07B9  085F               	movf	vfpfcnvrt@fp,w
  4623  07BA  00D4               	movwf	??_vfpfcnvrt+4
  4624  07BB  0854               	movf	??_vfpfcnvrt+4,w
  4625  07BC  00F2               	movwf	fputc@fp
  4626  07BD  318D  2565  3186   	fcall	_fputc
  4627  07C0                     l2234:
  4628                           
  4629                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4630  07C0  0020               	movlb	0	; select bank0
  4631  07C1  084E               	movf	vfpfcnvrt@fmt,w
  4632  07C2  0086               	movwf	6
  4633  07C3  0187               	clrf	7
  4634  07C4  3001               	movlw	1
  4635  07C5  0781               	addwf	1,f
  4636  07C6  3141               	addfsr 1,1
  4637  07C7  1803               	skipnc
  4638  07C8  0A81               	incf	1,f
  4639  07C9  2F96               	goto	l2222
  4640  07CA                     l976:
  4641  07CA  0008               	return
  4642  07CB                     __end_of_vfpfcnvrt:
  4643                           
  4644                           	psect	text13
  4645  04C6                     __ptext13:	
  4646 ;; *************** function _dtoa *****************
  4647 ;; Defined at:
  4648 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  fp              1    wreg     PTR struct _IO_FILE
  4651 ;;		 -> sprintf@f(10), 
  4652 ;;  d               8   16[BANK0 ] long long 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  4655 ;;		 -> sprintf@f(10), 
  4656 ;;  n               8   36[BANK0 ] long long 
  4657 ;;  i               2   44[BANK0 ] int 
  4658 ;;  s               2   34[BANK0 ] int 
  4659 ;;  w               2   32[BANK0 ] int 
  4660 ;;  p               2   30[BANK0 ] int 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  2   16[BANK0 ] int 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4670 ;;      Params:         0       8       0       0       0       0
  4671 ;;      Locals:         0      19       0       0       0       0
  4672 ;;      Temps:          0       3       0       0       0       0
  4673 ;;      Totals:         0      30       0       0       0       0
  4674 ;;Total ram usage:       30 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 4
  4677 ;; This function calls:
  4678 ;;		___aodiv
  4679 ;;		___aomod
  4680 ;;		_abs
  4681 ;;		_pad
  4682 ;; This function is called by:
  4683 ;;		_vfpfcnvrt
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687  04C6                     _dtoa:	
  4688                           ;psect for function _dtoa
  4689                           
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4693                           ;dtoa@fp stored from wreg
  4694  04C6  0020               	movlb	0	; select bank0
  4695  04C7  00BD               	movwf	dtoa@fp
  4696  04C8                     l2032:
  4697                           
  4698                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4699  04C8  0830               	movf	dtoa@d,w
  4700  04C9  00C4               	movwf	dtoa@n
  4701  04CA  0831               	movf	dtoa@d+1,w
  4702  04CB  00C5               	movwf	dtoa@n+1
  4703  04CC  0832               	movf	dtoa@d+2,w
  4704  04CD  00C6               	movwf	dtoa@n+2
  4705  04CE  0833               	movf	dtoa@d+3,w
  4706  04CF  00C7               	movwf	dtoa@n+3
  4707  04D0  0834               	movf	dtoa@d+4,w
  4708  04D1  00C8               	movwf	dtoa@n+4
  4709  04D2  0835               	movf	dtoa@d+5,w
  4710  04D3  00C9               	movwf	dtoa@n+5
  4711  04D4  0836               	movf	dtoa@d+6,w
  4712  04D5  00CA               	movwf	dtoa@n+6
  4713  04D6  0837               	movf	dtoa@d+7,w
  4714  04D7  00CB               	movwf	dtoa@n+7
  4715  04D8                     l2034:
  4716                           
  4717                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4718  04D8  3044               	movlw	low dtoa@n
  4719  04D9  0086               	movwf	6
  4720  04DA  3000               	movlw	high dtoa@n
  4721  04DB  0087               	movwf	7
  4722  04DC  3F47               	moviw [7]fsr1
  4723  04DD  00B8               	movwf	??_dtoa
  4724  04DE  1BB8               	btfsc	??_dtoa,7
  4725  04DF  2CE1               	goto	u1431
  4726  04E0  2CE3               	goto	u1430
  4727  04E1                     u1431:
  4728  04E1  3001               	movlw	1
  4729  04E2  2CE4               	goto	u1440
  4730  04E3                     u1430:
  4731  04E3  3000               	movlw	0
  4732  04E4                     u1440:
  4733  04E4  0020               	movlb	0	; select bank0
  4734  04E5  00B9               	movwf	??_dtoa+1
  4735  04E6  01BA               	clrf	??_dtoa+2
  4736  04E7  0839               	movf	??_dtoa+1,w
  4737  04E8  00C2               	movwf	dtoa@s
  4738  04E9  083A               	movf	??_dtoa+2,w
  4739  04EA  00C3               	movwf	dtoa@s+1
  4740  04EB                     l2036:
  4741                           
  4742                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4743  04EB  0842               	movf	dtoa@s,w
  4744  04EC  0443               	iorwf	dtoa@s+1,w
  4745  04ED  1903               	btfsc	3,2
  4746  04EE  2CF0               	goto	u1451
  4747  04EF  2CF1               	goto	u1450
  4748  04F0                     u1451:
  4749  04F0  2D0F               	goto	l926
  4750  04F1                     u1450:
  4751  04F1                     l2038:
  4752                           
  4753                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4754  04F1  09C4               	comf	dtoa@n,f
  4755  04F2  09C5               	comf	dtoa@n+1,f
  4756  04F3  09C6               	comf	dtoa@n+2,f
  4757  04F4  09C7               	comf	dtoa@n+3,f
  4758  04F5  09C8               	comf	dtoa@n+4,f
  4759  04F6  09C9               	comf	dtoa@n+5,f
  4760  04F7  09CA               	comf	dtoa@n+6,f
  4761  04F8  09CB               	comf	dtoa@n+7,f
  4762  04F9  0AC4               	incf	dtoa@n,f
  4763  04FA  1D03               	skipz
  4764  04FB  2D0F               	goto	u146lld
  4765  04FC  0AC5               	incf	dtoa@n+1,f
  4766  04FD  1D03               	skipz
  4767  04FE  2D0F               	goto	u146lld
  4768  04FF  0AC6               	incf	dtoa@n+2,f
  4769  0500  1D03               	skipz
  4770  0501  2D0F               	goto	u146lld
  4771  0502  0AC7               	incf	dtoa@n+3,f
  4772  0503  1D03               	skipz
  4773  0504  2D0F               	goto	u146lld
  4774  0505  0AC8               	incf	dtoa@n+4,f
  4775  0506  1D03               	skipz
  4776  0507  2D0F               	goto	u146lld
  4777  0508  0AC9               	incf	dtoa@n+5,f
  4778  0509  1D03               	skipz
  4779  050A  2D0F               	goto	u146lld
  4780  050B  0ACA               	incf	dtoa@n+6,f
  4781  050C  1D03               	skipz
  4782  050D  2D0F               	goto	u146lld
  4783  050E  0ACB               	incf	dtoa@n+7,f
  4784  050F                     u146lld:
  4785  050F                     l926:	
  4786                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 297:     }
  4787                           
  4788                           
  4789                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4790  050F  0021               	movlb	1	; select bank1
  4791  0510  1BCB               	btfsc	(_prec+1)^(0+128),7
  4792  0511  2D13               	goto	u1471
  4793  0512  2D14               	goto	u1470
  4794  0513                     u1471:
  4795  0513  2D18               	goto	l927
  4796  0514                     u1470:
  4797  0514                     l2040:
  4798                           
  4799                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4800  0514  30FD               	movlw	253
  4801  0515  05CC               	andwf	_flags^(0+128),f
  4802  0516  30FF               	movlw	255
  4803  0517  05CD               	andwf	(_flags+1)^(0+128),f
  4804  0518                     l927:	
  4805                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 302:     }
  4806                           
  4807                           
  4808                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4809  0518  084B               	movf	(_prec+1)^(0+128),w
  4810  0519  3A80               	xorlw	128
  4811  051A  0020               	movlb	0	; select bank0
  4812  051B  00B8               	movwf	??_dtoa
  4813  051C  3080               	movlw	128
  4814  051D  0238               	subwf	??_dtoa,w
  4815  051E  1D03               	skipz
  4816  051F  2D23               	goto	u1485
  4817  0520  3001               	movlw	1
  4818  0521  0021               	movlb	1	; select bank1
  4819  0522  024A               	subwf	_prec^(0+128),w
  4820  0523                     u1485:
  4821  0523  1803               	skipnc
  4822  0524  2D26               	goto	u1481
  4823  0525  2D27               	goto	u1480
  4824  0526                     u1481:
  4825  0526  2D2D               	goto	l2044
  4826  0527                     u1480:
  4827  0527                     l2042:
  4828  0527  3001               	movlw	1
  4829  0528  0020               	movlb	0	; select bank0
  4830  0529  00BE               	movwf	dtoa@p
  4831  052A  3000               	movlw	0
  4832  052B  00BF               	movwf	dtoa@p+1
  4833  052C  2D35               	goto	l931
  4834  052D                     l2044:
  4835  052D  0021               	movlb	1	; select bank1
  4836  052E  084B               	movf	(_prec+1)^(0+128),w
  4837  052F  0020               	movlb	0	; select bank0
  4838  0530  00BF               	movwf	dtoa@p+1
  4839  0531  0021               	movlb	1	; select bank1
  4840  0532  084A               	movf	_prec^(0+128),w
  4841  0533  0020               	movlb	0	; select bank0
  4842  0534  00BE               	movwf	dtoa@p
  4843  0535                     l931:
  4844                           
  4845                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4846  0535  0021               	movlb	1	; select bank1
  4847  0536  0849               	movf	(_width+1)^(0+128),w
  4848  0537  0020               	movlb	0	; select bank0
  4849  0538  00C1               	movwf	dtoa@w+1
  4850  0539  0021               	movlb	1	; select bank1
  4851  053A  0848               	movf	_width^(0+128),w
  4852  053B  0020               	movlb	0	; select bank0
  4853  053C  00C0               	movwf	dtoa@w
  4854  053D                     l2046:
  4855                           
  4856                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4857  053D  0842               	movf	dtoa@s,w
  4858  053E  0443               	iorwf	dtoa@s+1,w
  4859  053F  1D03               	btfss	3,2
  4860  0540  2D42               	goto	u1491
  4861  0541  2D43               	goto	u1490
  4862  0542                     u1491:
  4863  0542  2D48               	goto	l2050
  4864  0543                     u1490:
  4865  0543                     l2048:
  4866  0543  0021               	movlb	1	; select bank1
  4867  0544  1D4C               	btfss	_flags^(0+128),2
  4868  0545  2D47               	goto	u1501
  4869  0546  2D48               	goto	u1500
  4870  0547                     u1501:
  4871  0547  2D4D               	goto	l932
  4872  0548                     u1500:
  4873  0548                     l2050:
  4874                           
  4875                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  4876  0548  30FF               	movlw	255
  4877  0549  0020               	movlb	0	; select bank0
  4878  054A  07C0               	addwf	dtoa@w,f
  4879  054B  30FF               	movlw	255
  4880  054C  3DC1               	addwfc	dtoa@w+1,f
  4881  054D                     l932:	
  4882                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 307:     }
  4883                           
  4884                           
  4885                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4886  054D  301F               	movlw	31
  4887  054E  0020               	movlb	0	; select bank0
  4888  054F  00CC               	movwf	dtoa@i
  4889  0550  3000               	movlw	0
  4890  0551  00CD               	movwf	dtoa@i+1
  4891  0552                     l2052:
  4892                           
  4893                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4894  0552  0022               	movlb	2	; select bank2
  4895  0553  01BF               	clrf	(_dbuf^(0+256)+31)
  4896                           
  4897                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4898  0554  2DBE               	goto	l935
  4899  0555                     l2054:
  4900                           
  4901                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  4902  0555  30FF               	movlw	255
  4903  0556  0020               	movlb	0	; select bank0
  4904  0557  07CC               	addwf	dtoa@i,f
  4905  0558  30FF               	movlw	255
  4906  0559  3DCD               	addwfc	dtoa@i+1,f
  4907  055A                     l2056:
  4908                           
  4909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4910  055A  300A               	movlw	10
  4911  055B  00A0               	movwf	___aomod@divisor
  4912  055C  01A1               	clrf	___aomod@divisor+1
  4913  055D  01A2               	clrf	___aomod@divisor+2
  4914  055E  01A3               	clrf	___aomod@divisor+3
  4915  055F  01A4               	clrf	___aomod@divisor+4
  4916  0560  01A5               	clrf	___aomod@divisor+5
  4917  0561  01A6               	clrf	___aomod@divisor+6
  4918  0562  01A7               	clrf	___aomod@divisor+7
  4919  0563  0844               	movf	dtoa@n,w
  4920  0564  00A8               	movwf	___aomod@dividend
  4921  0565  0845               	movf	dtoa@n+1,w
  4922  0566  00A9               	movwf	___aomod@dividend+1
  4923  0567  0846               	movf	dtoa@n+2,w
  4924  0568  00AA               	movwf	___aomod@dividend+2
  4925  0569  0847               	movf	dtoa@n+3,w
  4926  056A  00AB               	movwf	___aomod@dividend+3
  4927  056B  0848               	movf	dtoa@n+4,w
  4928  056C  00AC               	movwf	___aomod@dividend+4
  4929  056D  0849               	movf	dtoa@n+5,w
  4930  056E  00AD               	movwf	___aomod@dividend+5
  4931  056F  084A               	movf	dtoa@n+6,w
  4932  0570  00AE               	movwf	___aomod@dividend+6
  4933  0571  084B               	movf	dtoa@n+7,w
  4934  0572  00AF               	movwf	___aomod@dividend+7
  4935  0573  3181  21EF  3184   	fcall	___aomod
  4936  0576  0020               	movlb	0	; select bank0
  4937  0577  0821               	movf	?___aomod+1,w
  4938  0578  00F4               	movwf	abs@a+1
  4939  0579  0820               	movf	?___aomod,w
  4940  057A  00F3               	movwf	abs@a
  4941  057B  318B  2317  3184   	fcall	_abs
  4942  057E  0873               	movf	?_abs,w
  4943  057F  3E30               	addlw	48
  4944  0580  0020               	movlb	0	; select bank0
  4945  0581  00B8               	movwf	??_dtoa
  4946  0582  084C               	movf	dtoa@i,w
  4947  0583  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4948  0584  0086               	movwf	6
  4949  0585  3001               	movlw	1	; select bank2/3
  4950  0586  0087               	movwf	7
  4951  0587  0838               	movf	??_dtoa,w
  4952  0588  0081               	movwf	1
  4953  0589                     l2058:
  4954                           
  4955                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  4956  0589  30FF               	movlw	255
  4957  058A  07BE               	addwf	dtoa@p,f
  4958  058B  30FF               	movlw	255
  4959  058C  3DBF               	addwfc	dtoa@p+1,f
  4960  058D                     l2060:
  4961                           
  4962                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  4963  058D  30FF               	movlw	255
  4964  058E  07C0               	addwf	dtoa@w,f
  4965  058F  30FF               	movlw	255
  4966  0590  3DC1               	addwfc	dtoa@w+1,f
  4967  0591                     l2062:
  4968                           
  4969                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4970  0591  300A               	movlw	10
  4971  0592  00A0               	movwf	___aodiv@divisor
  4972  0593  01A1               	clrf	___aodiv@divisor+1
  4973  0594  01A2               	clrf	___aodiv@divisor+2
  4974  0595  01A3               	clrf	___aodiv@divisor+3
  4975  0596  01A4               	clrf	___aodiv@divisor+4
  4976  0597  01A5               	clrf	___aodiv@divisor+5
  4977  0598  01A6               	clrf	___aodiv@divisor+6
  4978  0599  01A7               	clrf	___aodiv@divisor+7
  4979  059A  0844               	movf	dtoa@n,w
  4980  059B  00A8               	movwf	___aodiv@dividend
  4981  059C  0845               	movf	dtoa@n+1,w
  4982  059D  00A9               	movwf	___aodiv@dividend+1
  4983  059E  0846               	movf	dtoa@n+2,w
  4984  059F  00AA               	movwf	___aodiv@dividend+2
  4985  05A0  0847               	movf	dtoa@n+3,w
  4986  05A1  00AB               	movwf	___aodiv@dividend+3
  4987  05A2  0848               	movf	dtoa@n+4,w
  4988  05A3  00AC               	movwf	___aodiv@dividend+4
  4989  05A4  0849               	movf	dtoa@n+5,w
  4990  05A5  00AD               	movwf	___aodiv@dividend+5
  4991  05A6  084A               	movf	dtoa@n+6,w
  4992  05A7  00AE               	movwf	___aodiv@dividend+6
  4993  05A8  084B               	movf	dtoa@n+7,w
  4994  05A9  00AF               	movwf	___aodiv@dividend+7
  4995  05AA  3183  23C5  3184   	fcall	___aodiv
  4996  05AD  0020               	movlb	0	; select bank0
  4997  05AE  0820               	movf	?___aodiv,w
  4998  05AF  00C4               	movwf	dtoa@n
  4999  05B0  0821               	movf	?___aodiv+1,w
  5000  05B1  00C5               	movwf	dtoa@n+1
  5001  05B2  0822               	movf	?___aodiv+2,w
  5002  05B3  00C6               	movwf	dtoa@n+2
  5003  05B4  0823               	movf	?___aodiv+3,w
  5004  05B5  00C7               	movwf	dtoa@n+3
  5005  05B6  0824               	movf	?___aodiv+4,w
  5006  05B7  00C8               	movwf	dtoa@n+4
  5007  05B8  0825               	movf	?___aodiv+5,w
  5008  05B9  00C9               	movwf	dtoa@n+5
  5009  05BA  0826               	movf	?___aodiv+6,w
  5010  05BB  00CA               	movwf	dtoa@n+6
  5011  05BC  0827               	movf	?___aodiv+7,w
  5012  05BD  00CB               	movwf	dtoa@n+7
  5013  05BE                     l935:	
  5014                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 318:     }
  5015                           
  5016                           
  5017                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5018  05BE  0020               	movlb	0	; select bank0
  5019  05BF  084D               	movf	dtoa@i+1,w
  5020  05C0  3A80               	xorlw	128
  5021  05C1  00B8               	movwf	??_dtoa
  5022  05C2  3080               	movlw	128
  5023  05C3  0238               	subwf	??_dtoa,w
  5024  05C4  1D03               	skipz
  5025  05C5  2DC8               	goto	u1515
  5026  05C6  3001               	movlw	1
  5027  05C7  024C               	subwf	dtoa@i,w
  5028  05C8                     u1515:
  5029  05C8  1C03               	skipc
  5030  05C9  2DCB               	goto	u1511
  5031  05CA  2DCC               	goto	u1510
  5032  05CB                     u1511:
  5033  05CB  2DF9               	goto	l2072
  5034  05CC                     u1510:
  5035  05CC                     l2064:
  5036  05CC  0020               	movlb	0	; select bank0
  5037  05CD  0844               	movf	dtoa@n,w
  5038  05CE  0445               	iorwf	dtoa@n+1,w
  5039  05CF  0446               	iorwf	dtoa@n+2,w
  5040  05D0  0447               	iorwf	dtoa@n+3,w
  5041  05D1  0448               	iorwf	dtoa@n+4,w
  5042  05D2  0449               	iorwf	dtoa@n+5,w
  5043  05D3  044A               	iorwf	dtoa@n+6,w
  5044  05D4  044B               	iorwf	dtoa@n+7,w
  5045  05D5  1D03               	skipz
  5046  05D6  2DD8               	goto	u1521
  5047  05D7  2DD9               	goto	u1520
  5048  05D8                     u1521:
  5049  05D8  2D55               	goto	l2054
  5050  05D9                     u1520:
  5051  05D9                     l2066:
  5052  05D9  083F               	movf	dtoa@p+1,w
  5053  05DA  3A80               	xorlw	128
  5054  05DB  00B8               	movwf	??_dtoa
  5055  05DC  3080               	movlw	128
  5056  05DD  0238               	subwf	??_dtoa,w
  5057  05DE  1D03               	skipz
  5058  05DF  2DE2               	goto	u1535
  5059  05E0  3001               	movlw	1
  5060  05E1  023E               	subwf	dtoa@p,w
  5061  05E2                     u1535:
  5062  05E2  1803               	skipnc
  5063  05E3  2DE5               	goto	u1531
  5064  05E4  2DE6               	goto	u1530
  5065  05E5                     u1531:
  5066  05E5  2D55               	goto	l2054
  5067  05E6                     u1530:
  5068  05E6                     l2068:
  5069  05E6  0020               	movlb	0	; select bank0
  5070  05E7  0841               	movf	dtoa@w+1,w
  5071  05E8  3A80               	xorlw	128
  5072  05E9  00B8               	movwf	??_dtoa
  5073  05EA  3080               	movlw	128
  5074  05EB  0238               	subwf	??_dtoa,w
  5075  05EC  1D03               	skipz
  5076  05ED  2DF0               	goto	u1545
  5077  05EE  3001               	movlw	1
  5078  05EF  0240               	subwf	dtoa@w,w
  5079  05F0                     u1545:
  5080  05F0  1C03               	skipc
  5081  05F1  2DF3               	goto	u1541
  5082  05F2  2DF4               	goto	u1540
  5083  05F3                     u1541:
  5084  05F3  2DF9               	goto	l2072
  5085  05F4                     u1540:
  5086  05F4                     l2070:
  5087  05F4  0021               	movlb	1	; select bank1
  5088  05F5  18CC               	btfsc	_flags^(0+128),1
  5089  05F6  2DF8               	goto	u1551
  5090  05F7  2DF9               	goto	u1550
  5091  05F8                     u1551:
  5092  05F8  2D55               	goto	l2054
  5093  05F9                     u1550:
  5094  05F9                     l2072:
  5095                           
  5096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5097  05F9  0020               	movlb	0	; select bank0
  5098  05FA  0842               	movf	dtoa@s,w
  5099  05FB  0443               	iorwf	dtoa@s+1,w
  5100  05FC  1D03               	btfss	3,2
  5101  05FD  2DFF               	goto	u1561
  5102  05FE  2E00               	goto	u1560
  5103  05FF                     u1561:
  5104  05FF  2E05               	goto	l2076
  5105  0600                     u1560:
  5106  0600                     l2074:
  5107  0600  0021               	movlb	1	; select bank1
  5108  0601  1D4C               	btfss	_flags^(0+128),2
  5109  0602  2E04               	goto	u1571
  5110  0603  2E05               	goto	u1570
  5111  0604                     u1571:
  5112  0604  2E22               	goto	l2086
  5113  0605                     u1570:
  5114  0605                     l2076:
  5115                           
  5116                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  5117  0605  30FF               	movlw	255
  5118  0606  0020               	movlb	0	; select bank0
  5119  0607  07CC               	addwf	dtoa@i,f
  5120  0608  30FF               	movlw	255
  5121  0609  3DCD               	addwfc	dtoa@i+1,f
  5122  060A                     l2078:
  5123                           
  5124                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5125  060A  0842               	movf	dtoa@s,w
  5126  060B  0443               	iorwf	dtoa@s+1,w
  5127  060C  1D03               	btfss	3,2
  5128  060D  2E0F               	goto	u1581
  5129  060E  2E10               	goto	u1580
  5130  060F                     u1581:
  5131  060F  2E15               	goto	l2082
  5132  0610                     u1580:
  5133  0610                     l2080:
  5134  0610  302B               	movlw	43
  5135  0611  00BB               	movwf	_dtoa$1038
  5136  0612  3000               	movlw	0
  5137  0613  00BC               	movwf	_dtoa$1038+1
  5138  0614  2E19               	goto	l2084
  5139  0615                     l2082:
  5140  0615  302D               	movlw	45
  5141  0616  00BB               	movwf	_dtoa$1038
  5142  0617  3000               	movlw	0
  5143  0618  00BC               	movwf	_dtoa$1038+1
  5144  0619                     l2084:
  5145  0619  083B               	movf	_dtoa$1038,w
  5146  061A  00B8               	movwf	??_dtoa
  5147  061B  084C               	movf	dtoa@i,w
  5148  061C  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5149  061D  0086               	movwf	6
  5150  061E  3001               	movlw	1	; select bank2/3
  5151  061F  0087               	movwf	7
  5152  0620  0838               	movf	??_dtoa,w
  5153  0621  0081               	movwf	1
  5154  0622                     l2086:
  5155                           
  5156                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5157  0622  0020               	movlb	0	; select bank0
  5158  0623  084C               	movf	dtoa@i,w
  5159  0624  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5160  0625  00B8               	movwf	??_dtoa
  5161  0626  0838               	movf	??_dtoa,w
  5162  0627  00A4               	movwf	pad@buf
  5163  0628  0841               	movf	dtoa@w+1,w
  5164  0629  00A6               	movwf	pad@p+1
  5165  062A  0840               	movf	dtoa@w,w
  5166  062B  00A5               	movwf	pad@p
  5167  062C  083D               	movf	dtoa@fp,w
  5168  062D  318D  25B7  3184   	fcall	_pad
  5169  0630  0020               	movlb	0	; select bank0
  5170  0631  0825               	movf	?_pad+1,w
  5171  0632  00B1               	movwf	?_dtoa+1
  5172  0633  0824               	movf	?_pad,w
  5173  0634  00B0               	movwf	?_dtoa
  5174  0635                     l949:
  5175  0635  0008               	return
  5176  0636                     __end_of_dtoa:
  5177                           
  5178                           	psect	text14
  5179  0DB7                     __ptext14:	
  5180 ;; *************** function _pad *****************
  5181 ;; Defined at:
  5182 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  fp              1    wreg     PTR struct _IO_FILE
  5185 ;;		 -> sprintf@f(10), 
  5186 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5187 ;;		 -> dbuf(32), 
  5188 ;;  p               2    5[BANK0 ] int 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5191 ;;		 -> sprintf@f(10), 
  5192 ;;  w               2    9[BANK0 ] int 
  5193 ;;  i               2    7[BANK0 ] int 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  2    4[BANK0 ] int 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5203 ;;      Params:         0       3       0       0       0       0
  5204 ;;      Locals:         0       5       0       0       0       0
  5205 ;;      Temps:          1       0       0       0       0       0
  5206 ;;      Totals:         1       8       0       0       0       0
  5207 ;;Total ram usage:        9 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 3
  5210 ;; This function calls:
  5211 ;;		_fputc
  5212 ;;		_fputs
  5213 ;;		_strlen
  5214 ;; This function is called by:
  5215 ;;		_dtoa
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219  0DB7                     _pad:	
  5220                           ;psect for function _pad
  5221                           
  5222                           
  5223                           ;incstack = 0
  5224                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5225                           ;pad@fp stored from wreg
  5226  0DB7  0020               	movlb	0	; select bank0
  5227  0DB8  00AB               	movwf	pad@fp
  5228  0DB9                     l1986:
  5229                           
  5230                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5231  0DB9  0021               	movlb	1	; select bank1
  5232  0DBA  1C4C               	btfss	_flags^(0+128),0
  5233  0DBB  2DBD               	goto	u1341
  5234  0DBC  2DBE               	goto	u1340
  5235  0DBD                     u1341:
  5236  0DBD  2DC7               	goto	l1990
  5237  0DBE                     u1340:
  5238  0DBE                     l1988:
  5239                           
  5240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5241  0DBE  0020               	movlb	0	; select bank0
  5242  0DBF  082B               	movf	pad@fp,w
  5243  0DC0  00FC               	movwf	??_pad
  5244  0DC1  087C               	movf	??_pad,w
  5245  0DC2  00F8               	movwf	fputs@fp
  5246  0DC3  0824               	movf	pad@buf,w
  5247  0DC4  318C  2416  318D   	fcall	_fputs
  5248  0DC7                     l1990:
  5249                           
  5250                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5251  0DC7  0020               	movlb	0	; select bank0
  5252  0DC8  1BA6               	btfsc	pad@p+1,7
  5253  0DC9  2DCB               	goto	u1351
  5254  0DCA  2DCC               	goto	u1350
  5255  0DCB                     u1351:
  5256  0DCB  2DD1               	goto	l1994
  5257  0DCC                     u1350:
  5258  0DCC                     l1992:
  5259  0DCC  0826               	movf	pad@p+1,w
  5260  0DCD  00AA               	movwf	pad@w+1
  5261  0DCE  0825               	movf	pad@p,w
  5262  0DCF  00A9               	movwf	pad@w
  5263  0DD0  2DD3               	goto	l918
  5264  0DD1                     l1994:
  5265  0DD1  01A9               	clrf	pad@w
  5266  0DD2  01AA               	clrf	pad@w+1
  5267  0DD3                     l918:
  5268                           
  5269                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5270  0DD3  01A7               	clrf	pad@i
  5271  0DD4  01A8               	clrf	pad@i+1
  5272                           
  5273                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5274  0DD5  2DE7               	goto	l2000
  5275  0DD6                     l1996:
  5276                           
  5277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5278  0DD6  3020               	movlw	32
  5279  0DD7  00F0               	movwf	fputc@c
  5280  0DD8  3000               	movlw	0
  5281  0DD9  00F1               	movwf	fputc@c+1
  5282  0DDA  0020               	movlb	0	; select bank0
  5283  0DDB  082B               	movf	pad@fp,w
  5284  0DDC  00FC               	movwf	??_pad
  5285  0DDD  087C               	movf	??_pad,w
  5286  0DDE  00F2               	movwf	fputc@fp
  5287  0DDF  318D  2565  318D   	fcall	_fputc
  5288  0DE2                     l1998:
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5291  0DE2  3001               	movlw	1
  5292  0DE3  0020               	movlb	0	; select bank0
  5293  0DE4  07A7               	addwf	pad@i,f
  5294  0DE5  3000               	movlw	0
  5295  0DE6  3DA8               	addwfc	pad@i+1,f
  5296  0DE7                     l2000:
  5297                           
  5298                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5299  0DE7  0828               	movf	pad@i+1,w
  5300  0DE8  3A80               	xorlw	128
  5301  0DE9  00FC               	movwf	??_pad
  5302  0DEA  082A               	movf	pad@w+1,w
  5303  0DEB  3A80               	xorlw	128
  5304  0DEC  027C               	subwf	??_pad,w
  5305  0DED  1D03               	skipz
  5306  0DEE  2DF1               	goto	u1365
  5307  0DEF  0829               	movf	pad@w,w
  5308  0DF0  0227               	subwf	pad@i,w
  5309  0DF1                     u1365:
  5310  0DF1  1C03               	skipc
  5311  0DF2  2DF4               	goto	u1361
  5312  0DF3  2DF5               	goto	u1360
  5313  0DF4                     u1361:
  5314  0DF4  2DD6               	goto	l1996
  5315  0DF5                     u1360:
  5316  0DF5                     l921:
  5317                           
  5318                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5319  0DF5  0021               	movlb	1	; select bank1
  5320  0DF6  184C               	btfsc	_flags^(0+128),0
  5321  0DF7  2DF9               	goto	u1371
  5322  0DF8  2DFA               	goto	u1370
  5323  0DF9                     u1371:
  5324  0DF9  2E03               	goto	l2004
  5325  0DFA                     u1370:
  5326  0DFA                     l2002:
  5327                           
  5328                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5329  0DFA  0020               	movlb	0	; select bank0
  5330  0DFB  082B               	movf	pad@fp,w
  5331  0DFC  00FC               	movwf	??_pad
  5332  0DFD  087C               	movf	??_pad,w
  5333  0DFE  00F8               	movwf	fputs@fp
  5334  0DFF  0824               	movf	pad@buf,w
  5335  0E00  318C  2416  318D   	fcall	_fputs
  5336  0E03                     l2004:
  5337                           
  5338                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5339  0E03  0020               	movlb	0	; select bank0
  5340  0E04  0824               	movf	pad@buf,w
  5341  0E05  318B  2331  318D   	fcall	_strlen
  5342  0E08  0020               	movlb	0	; select bank0
  5343  0E09  0829               	movf	pad@w,w
  5344  0E0A  0770               	addwf	?_strlen,w
  5345  0E0B  00A4               	movwf	?_pad
  5346  0E0C  082A               	movf	pad@w+1,w
  5347  0E0D  3D71               	addwfc	?_strlen+1,w
  5348  0E0E  00A5               	movwf	?_pad+1
  5349  0E0F                     l923:
  5350  0E0F  0008               	return
  5351  0E10                     __end_of_pad:
  5352                           
  5353                           	psect	text15
  5354  0B31                     __ptext15:	
  5355 ;; *************** function _strlen *****************
  5356 ;; Defined at:
  5357 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  s               1    wreg     PTR const unsigned char 
  5360 ;;		 -> dbuf(32), 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  s               1    4[COMMON] PTR const unsigned char 
  5363 ;;		 -> dbuf(32), 
  5364 ;;  a               1    3[COMMON] PTR const unsigned char 
  5365 ;;		 -> dbuf(32), 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2    0[COMMON] unsigned int 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5375 ;;      Params:         2       0       0       0       0       0
  5376 ;;      Locals:         2       0       0       0       0       0
  5377 ;;      Temps:          1       0       0       0       0       0
  5378 ;;      Totals:         5       0       0       0       0       0
  5379 ;;Total ram usage:        5 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_pad
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388  0B31                     _strlen:	
  5389                           ;psect for function _strlen
  5390                           
  5391                           
  5392                           ;incstack = 0
  5393                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5394                           ;strlen@s stored from wreg
  5395  0B31  00F4               	movwf	strlen@s
  5396  0B32                     l1884:
  5397  0B32  0874               	movf	strlen@s,w
  5398  0B33  00F2               	movwf	??_strlen
  5399  0B34  0872               	movf	??_strlen,w
  5400  0B35  00F3               	movwf	strlen@a
  5401  0B36  2B3B               	goto	l1888
  5402  0B37                     l1886:
  5403  0B37  3001               	movlw	1
  5404  0B38  00F2               	movwf	??_strlen
  5405  0B39  0872               	movf	??_strlen,w
  5406  0B3A  07F4               	addwf	strlen@s,f
  5407  0B3B                     l1888:
  5408  0B3B  0874               	movf	strlen@s,w
  5409  0B3C  0086               	movwf	6
  5410  0B3D  3001               	movlw	1	; select bank2/3
  5411  0B3E  0087               	movwf	7
  5412  0B3F  0801               	movf	1,w
  5413  0B40  1D03               	btfss	3,2
  5414  0B41  2B43               	goto	u1041
  5415  0B42  2B44               	goto	u1040
  5416  0B43                     u1041:
  5417  0B43  2B37               	goto	l1886
  5418  0B44                     u1040:
  5419  0B44                     l1890:
  5420  0B44  0873               	movf	strlen@a,w
  5421  0B45  0274               	subwf	strlen@s,w
  5422  0B46  00F0               	movwf	?_strlen
  5423  0B47  01F1               	clrf	?_strlen+1
  5424  0B48  1BF0               	btfsc	?_strlen,7
  5425  0B49  03F1               	decf	?_strlen+1,f
  5426  0B4A                     l1058:
  5427  0B4A  0008               	return
  5428  0B4B                     __end_of_strlen:
  5429                           
  5430                           	psect	text16
  5431  0C16                     __ptext16:	
  5432 ;; *************** function _fputs *****************
  5433 ;; Defined at:
  5434 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  s               1    wreg     PTR const unsigned char 
  5437 ;;		 -> dbuf(32), 
  5438 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  5439 ;;		 -> sprintf@f(10), 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5442 ;;		 -> dbuf(32), 
  5443 ;;  i               2    1[BANK0 ] int 
  5444 ;;  c               1    0[BANK0 ] unsigned char 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  2    8[COMMON] int 
  5447 ;; Registers used:
  5448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5454 ;;      Params:         1       0       0       0       0       0
  5455 ;;      Locals:         0       4       0       0       0       0
  5456 ;;      Temps:          3       0       0       0       0       0
  5457 ;;      Totals:         4       4       0       0       0       0
  5458 ;;Total ram usage:        8 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; Hardware stack levels required when called: 2
  5461 ;; This function calls:
  5462 ;;		_fputc
  5463 ;; This function is called by:
  5464 ;;		_pad
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468  0C16                     _fputs:	
  5469                           ;psect for function _fputs
  5470                           
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5474                           ;fputs@s stored from wreg
  5475  0C16  0020               	movlb	0	; select bank0
  5476  0C17  00A3               	movwf	fputs@s
  5477  0C18                     l1876:
  5478  0C18  01A1               	clrf	fputs@i
  5479  0C19  01A2               	clrf	fputs@i+1
  5480  0C1A  2C2E               	goto	l1882
  5481  0C1B                     l1878:
  5482  0C1B  0820               	movf	fputs@c,w
  5483  0C1C  00F9               	movwf	??_fputs
  5484  0C1D  01FA               	clrf	??_fputs+1
  5485  0C1E  0879               	movf	??_fputs,w
  5486  0C1F  00F0               	movwf	fputc@c
  5487  0C20  087A               	movf	??_fputs+1,w
  5488  0C21  00F1               	movwf	fputc@c+1
  5489  0C22  0878               	movf	fputs@fp,w
  5490  0C23  00FB               	movwf	??_fputs+2
  5491  0C24  087B               	movf	??_fputs+2,w
  5492  0C25  00F2               	movwf	fputc@fp
  5493  0C26  318D  2565  318C   	fcall	_fputc
  5494  0C29                     l1880:
  5495  0C29  3001               	movlw	1
  5496  0C2A  0020               	movlb	0	; select bank0
  5497  0C2B  07A1               	addwf	fputs@i,f
  5498  0C2C  3000               	movlw	0
  5499  0C2D  3DA2               	addwfc	fputs@i+1,f
  5500  0C2E                     l1882:
  5501  0C2E  0821               	movf	fputs@i,w
  5502  0C2F  0723               	addwf	fputs@s,w
  5503  0C30  00F9               	movwf	??_fputs
  5504  0C31  0879               	movf	??_fputs,w
  5505  0C32  0086               	movwf	6
  5506  0C33  3001               	movlw	1	; select bank2/3
  5507  0C34  0087               	movwf	7
  5508  0C35  0801               	movf	1,w
  5509  0C36  00FA               	movwf	??_fputs+1
  5510  0C37  087A               	movf	??_fputs+1,w
  5511  0C38  00A0               	movwf	fputs@c
  5512  0C39  0820               	movf	fputs@c,w
  5513  0C3A  1D03               	btfss	3,2
  5514  0C3B  2C3D               	goto	u1031
  5515  0C3C  2C3E               	goto	u1030
  5516  0C3D                     u1031:
  5517  0C3D  2C1B               	goto	l1878
  5518  0C3E                     u1030:
  5519  0C3E                     l1049:
  5520  0C3E  0008               	return
  5521  0C3F                     __end_of_fputs:
  5522                           
  5523                           	psect	text17
  5524  0D65                     __ptext17:	
  5525 ;; *************** function _fputc *****************
  5526 ;; Defined at:
  5527 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  c               2    0[COMMON] int 
  5530 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  5531 ;;		 -> sprintf@f(10), 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  2    0[COMMON] int 
  5536 ;; Registers used:
  5537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5543 ;;      Params:         3       0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0
  5545 ;;      Temps:          5       0       0       0       0       0
  5546 ;;      Totals:         8       0       0       0       0       0
  5547 ;;Total ram usage:        8 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; Hardware stack levels required when called: 1
  5550 ;; This function calls:
  5551 ;;		_putch
  5552 ;; This function is called by:
  5553 ;;		_pad
  5554 ;;		_vfpfcnvrt
  5555 ;;		_fputs
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559  0D65                     _fputc:	
  5560                           ;psect for function _fputc
  5561                           
  5562  0D65                     l1854:	
  5563                           ;incstack = 0
  5564                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5565                           
  5566  0D65  0872               	movf	fputc@fp,w
  5567  0D66  1903               	btfsc	3,2
  5568  0D67  2D69               	goto	u971
  5569  0D68  2D6A               	goto	u970
  5570  0D69                     u971:
  5571  0D69  2D6F               	goto	l1858
  5572  0D6A                     u970:
  5573  0D6A                     l1856:
  5574  0D6A  0872               	movf	fputc@fp,w
  5575  0D6B  1D03               	btfss	3,2
  5576  0D6C  2D6E               	goto	u981
  5577  0D6D  2D6F               	goto	u980
  5578  0D6E                     u981:
  5579  0D6E  2D74               	goto	l1860
  5580  0D6F                     u980:
  5581  0D6F                     l1858:
  5582  0D6F  0870               	movf	fputc@c,w
  5583  0D70  318A  2222  318D   	fcall	_putch
  5584  0D73  2DB6               	goto	l1041
  5585  0D74                     l1860:
  5586  0D74  0872               	movf	fputc@fp,w
  5587  0D75  3E08               	addlw	8
  5588  0D76  0086               	movwf	6
  5589  0D77  0187               	clrf	7
  5590  0D78  0016               	moviw fsr1++
  5591  0D79  0401               	iorwf	1,w
  5592  0D7A  1903               	btfsc	3,2
  5593  0D7B  2D7D               	goto	u991
  5594  0D7C  2D7E               	goto	u990
  5595  0D7D                     u991:
  5596  0D7D  2D9C               	goto	l1864
  5597  0D7E                     u990:
  5598  0D7E                     l1862:
  5599  0D7E  0872               	movf	fputc@fp,w
  5600  0D7F  3E08               	addlw	8
  5601  0D80  0086               	movwf	6
  5602  0D81  0187               	clrf	7
  5603  0D82  3F40               	moviw [0]fsr1
  5604  0D83  00F3               	movwf	??_fputc
  5605  0D84  3F41               	moviw [1]fsr1
  5606  0D85  00F4               	movwf	??_fputc+1
  5607  0D86  0872               	movf	fputc@fp,w
  5608  0D87  3E02               	addlw	2
  5609  0D88  0086               	movwf	6
  5610  0D89  0187               	clrf	7
  5611  0D8A  3F40               	moviw [0]fsr1
  5612  0D8B  00F5               	movwf	??_fputc+2
  5613  0D8C  3F41               	moviw [1]fsr1
  5614  0D8D  00F6               	movwf	??_fputc+3
  5615  0D8E  0876               	movf	??_fputc+3,w
  5616  0D8F  3A80               	xorlw	128
  5617  0D90  00F7               	movwf	??_fputc+4
  5618  0D91  0874               	movf	??_fputc+1,w
  5619  0D92  3A80               	xorlw	128
  5620  0D93  0277               	subwf	??_fputc+4,w
  5621  0D94  1D03               	skipz
  5622  0D95  2D98               	goto	u1005
  5623  0D96  0873               	movf	??_fputc,w
  5624  0D97  0275               	subwf	??_fputc+2,w
  5625  0D98                     u1005:
  5626  0D98  1803               	skipnc
  5627  0D99  2D9B               	goto	u1001
  5628  0D9A  2D9C               	goto	u1000
  5629  0D9B                     u1001:
  5630  0D9B  2DB6               	goto	l1041
  5631  0D9C                     u1000:
  5632  0D9C                     l1864:
  5633  0D9C  0870               	movf	fputc@c,w
  5634  0D9D  00F3               	movwf	??_fputc
  5635  0D9E  0872               	movf	fputc@fp,w
  5636  0D9F  0086               	movwf	6
  5637  0DA0  0187               	clrf	7
  5638  0DA1  0872               	movf	fputc@fp,w
  5639  0DA2  3E02               	addlw	2
  5640  0DA3  0084               	movwf	4
  5641  0DA4  0185               	clrf	5
  5642  0DA5  0800               	movf	0,w
  5643  0DA6  0701               	addwf	1,w
  5644  0DA7  00F4               	movwf	??_fputc+1
  5645  0DA8  0874               	movf	??_fputc+1,w
  5646  0DA9  0086               	movwf	6
  5647  0DAA  0187               	clrf	7
  5648  0DAB  0873               	movf	??_fputc,w
  5649  0DAC  0081               	movwf	1
  5650  0DAD                     l1866:
  5651  0DAD  0872               	movf	fputc@fp,w
  5652  0DAE  3E02               	addlw	2
  5653  0DAF  0086               	movwf	6
  5654  0DB0  0187               	clrf	7
  5655  0DB1  3001               	movlw	1
  5656  0DB2  0781               	addwf	1,f
  5657  0DB3  3141               	addfsr 1,1
  5658  0DB4  1803               	skipnc
  5659  0DB5  0A81               	incf	1,f
  5660  0DB6                     l1041:
  5661  0DB6  0008               	return
  5662  0DB7                     __end_of_fputc:
  5663                           
  5664                           	psect	text18
  5665  0A22                     __ptext18:	
  5666 ;; *************** function _putch *****************
  5667 ;; Defined at:
  5668 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  c               1    wreg     unsigned char 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  c               1    0[COMMON] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5682 ;;      Params:         0       0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0
  5685 ;;      Totals:         0       0       0       0       0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used: 1
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_fputc
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695  0A22                     _putch:	
  5696                           ;psect for function _putch
  5697                           
  5698  0A22                     l1052:	
  5699                           ;incstack = 0
  5700                           ; Regs used in _putch: [wreg]
  5701                           
  5702  0A22  0008               	return
  5703  0A23                     __end_of_putch:
  5704                           
  5705                           	psect	text19
  5706  0B17                     __ptext19:	
  5707 ;; *************** function _abs *****************
  5708 ;; Defined at:
  5709 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  a               2    3[COMMON] int 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  2    3[COMMON] int 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5723 ;;      Params:         2       0       0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0
  5725 ;;      Temps:          2       0       0       0       0       0
  5726 ;;      Totals:         4       0       0       0       0       0
  5727 ;;Total ram usage:        4 bytes
  5728 ;; Hardware stack levels used: 1
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_dtoa
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736  0B17                     _abs:	
  5737                           ;psect for function _abs
  5738                           
  5739  0B17                     l2008:	
  5740                           ;incstack = 0
  5741                           ; Regs used in _abs: [wreg+status,2+status,0]
  5742                           
  5743  0B17  0874               	movf	abs@a+1,w
  5744  0B18  3A80               	xorlw	128
  5745  0B19  00F5               	movwf	??_abs
  5746  0B1A  3080               	movlw	128
  5747  0B1B  0275               	subwf	??_abs,w
  5748  0B1C  1D03               	skipz
  5749  0B1D  2B20               	goto	u1385
  5750  0B1E  3001               	movlw	1
  5751  0B1F  0273               	subwf	abs@a,w
  5752  0B20                     u1385:
  5753  0B20  1803               	skipnc
  5754  0B21  2B23               	goto	u1381
  5755  0B22  2B24               	goto	u1380
  5756  0B23                     u1381:
  5757  0B23  2B30               	goto	l987
  5758  0B24                     u1380:
  5759  0B24                     l2010:
  5760  0B24  0973               	comf	abs@a,w
  5761  0B25  00F5               	movwf	??_abs
  5762  0B26  0974               	comf	abs@a+1,w
  5763  0B27  00F6               	movwf	??_abs+1
  5764  0B28  0AF5               	incf	??_abs,f
  5765  0B29  1903               	skipnz
  5766  0B2A  0AF6               	incf	??_abs+1,f
  5767  0B2B  0875               	movf	??_abs,w
  5768  0B2C  00F3               	movwf	?_abs
  5769  0B2D  0876               	movf	??_abs+1,w
  5770  0B2E  00F4               	movwf	?_abs+1
  5771  0B2F  2B30               	goto	l990
  5772  0B30                     l987:
  5773  0B30                     l990:
  5774  0B30  0008               	return
  5775  0B31                     __end_of_abs:
  5776                           
  5777                           	psect	text20
  5778  01EF                     __ptext20:	
  5779 ;; *************** function ___aomod *****************
  5780 ;; Defined at:
  5781 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  divisor         8    0[BANK0 ] long long 
  5784 ;;  dividend        8    8[BANK0 ] long long 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  sign            1    2[COMMON] unsigned char 
  5787 ;;  counter         1    1[COMMON] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  8    0[BANK0 ] long long 
  5790 ;; Registers used:
  5791 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5797 ;;      Params:         0      16       0       0       0       0
  5798 ;;      Locals:         2       0       0       0       0       0
  5799 ;;      Temps:          1       0       0       0       0       0
  5800 ;;      Totals:         3      16       0       0       0       0
  5801 ;;Total ram usage:       19 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_dtoa
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810  01EF                     ___aomod:	
  5811                           ;psect for function ___aomod
  5812                           
  5813  01EF                     l1956:	
  5814                           ;incstack = 0
  5815                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5816                           
  5817  01EF  01F2               	clrf	___aomod@sign
  5818  01F0                     l1958:
  5819  01F0  3028               	movlw	low ___aomod@dividend
  5820  01F1  0086               	movwf	6
  5821  01F2  3000               	movlw	high ___aomod@dividend
  5822  01F3  0087               	movwf	7
  5823  01F4  3F47               	moviw [7]fsr1
  5824  01F5  00F0               	movwf	??___aomod
  5825  01F6  1FF0               	btfss	??___aomod,7
  5826  01F7  29F9               	goto	u1241
  5827  01F8  29FA               	goto	u1240
  5828  01F9                     u1241:
  5829  01F9  2A1B               	goto	l1962
  5830  01FA                     u1240:
  5831  01FA                     l1960:
  5832  01FA  0020               	movlb	0	; select bank0
  5833  01FB  09A8               	comf	___aomod@dividend,f
  5834  01FC  09A9               	comf	___aomod@dividend+1,f
  5835  01FD  09AA               	comf	___aomod@dividend+2,f
  5836  01FE  09AB               	comf	___aomod@dividend+3,f
  5837  01FF  09AC               	comf	___aomod@dividend+4,f
  5838  0200  09AD               	comf	___aomod@dividend+5,f
  5839  0201  09AE               	comf	___aomod@dividend+6,f
  5840  0202  09AF               	comf	___aomod@dividend+7,f
  5841  0203  0AA8               	incf	___aomod@dividend,f
  5842  0204  1D03               	skipz
  5843  0205  2A19               	goto	u125lld
  5844  0206  0AA9               	incf	___aomod@dividend+1,f
  5845  0207  1D03               	skipz
  5846  0208  2A19               	goto	u125lld
  5847  0209  0AAA               	incf	___aomod@dividend+2,f
  5848  020A  1D03               	skipz
  5849  020B  2A19               	goto	u125lld
  5850  020C  0AAB               	incf	___aomod@dividend+3,f
  5851  020D  1D03               	skipz
  5852  020E  2A19               	goto	u125lld
  5853  020F  0AAC               	incf	___aomod@dividend+4,f
  5854  0210  1D03               	skipz
  5855  0211  2A19               	goto	u125lld
  5856  0212  0AAD               	incf	___aomod@dividend+5,f
  5857  0213  1D03               	skipz
  5858  0214  2A19               	goto	u125lld
  5859  0215  0AAE               	incf	___aomod@dividend+6,f
  5860  0216  1D03               	skipz
  5861  0217  2A19               	goto	u125lld
  5862  0218  0AAF               	incf	___aomod@dividend+7,f
  5863  0219                     u125lld:
  5864  0219  01F2               	clrf	___aomod@sign
  5865  021A  0AF2               	incf	___aomod@sign,f
  5866  021B                     l1962:
  5867  021B  3020               	movlw	low ___aomod@divisor
  5868  021C  0086               	movwf	6
  5869  021D  3000               	movlw	high ___aomod@divisor
  5870  021E  0087               	movwf	7
  5871  021F  3F47               	moviw [7]fsr1
  5872  0220  00F0               	movwf	??___aomod
  5873  0221  1FF0               	btfss	??___aomod,7
  5874  0222  2A24               	goto	u1261
  5875  0223  2A25               	goto	u1260
  5876  0224                     u1261:
  5877  0224  2A44               	goto	l1966
  5878  0225                     u1260:
  5879  0225                     l1964:
  5880  0225  0020               	movlb	0	; select bank0
  5881  0226  09A0               	comf	___aomod@divisor,f
  5882  0227  09A1               	comf	___aomod@divisor+1,f
  5883  0228  09A2               	comf	___aomod@divisor+2,f
  5884  0229  09A3               	comf	___aomod@divisor+3,f
  5885  022A  09A4               	comf	___aomod@divisor+4,f
  5886  022B  09A5               	comf	___aomod@divisor+5,f
  5887  022C  09A6               	comf	___aomod@divisor+6,f
  5888  022D  09A7               	comf	___aomod@divisor+7,f
  5889  022E  0AA0               	incf	___aomod@divisor,f
  5890  022F  1D03               	skipz
  5891  0230  2A44               	goto	u127lld
  5892  0231  0AA1               	incf	___aomod@divisor+1,f
  5893  0232  1D03               	skipz
  5894  0233  2A44               	goto	u127lld
  5895  0234  0AA2               	incf	___aomod@divisor+2,f
  5896  0235  1D03               	skipz
  5897  0236  2A44               	goto	u127lld
  5898  0237  0AA3               	incf	___aomod@divisor+3,f
  5899  0238  1D03               	skipz
  5900  0239  2A44               	goto	u127lld
  5901  023A  0AA4               	incf	___aomod@divisor+4,f
  5902  023B  1D03               	skipz
  5903  023C  2A44               	goto	u127lld
  5904  023D  0AA5               	incf	___aomod@divisor+5,f
  5905  023E  1D03               	skipz
  5906  023F  2A44               	goto	u127lld
  5907  0240  0AA6               	incf	___aomod@divisor+6,f
  5908  0241  1D03               	skipz
  5909  0242  2A44               	goto	u127lld
  5910  0243  0AA7               	incf	___aomod@divisor+7,f
  5911  0244                     u127lld:
  5912  0244                     l1966:
  5913  0244  0020               	movlb	0	; select bank0
  5914  0245  0820               	movf	___aomod@divisor,w
  5915  0246  0421               	iorwf	___aomod@divisor+1,w
  5916  0247  0422               	iorwf	___aomod@divisor+2,w
  5917  0248  0423               	iorwf	___aomod@divisor+3,w
  5918  0249  0424               	iorwf	___aomod@divisor+4,w
  5919  024A  0425               	iorwf	___aomod@divisor+5,w
  5920  024B  0426               	iorwf	___aomod@divisor+6,w
  5921  024C  0427               	iorwf	___aomod@divisor+7,w
  5922  024D  1903               	skipnz
  5923  024E  2A50               	goto	u1281
  5924  024F  2A51               	goto	u1280
  5925  0250                     u1281:
  5926  0250  2AA4               	goto	l1982
  5927  0251                     u1280:
  5928  0251                     l1968:
  5929  0251  01F1               	clrf	___aomod@counter
  5930  0252  0AF1               	incf	___aomod@counter,f
  5931  0253  2A60               	goto	l1974
  5932  0254                     l1970:
  5933  0254  35A0               	lslf	___aomod@divisor,f
  5934  0255  0DA1               	rlf	___aomod@divisor+1,f
  5935  0256  0DA2               	rlf	___aomod@divisor+2,f
  5936  0257  0DA3               	rlf	___aomod@divisor+3,f
  5937  0258  0DA4               	rlf	___aomod@divisor+4,f
  5938  0259  0DA5               	rlf	___aomod@divisor+5,f
  5939  025A  0DA6               	rlf	___aomod@divisor+6,f
  5940  025B  0DA7               	rlf	___aomod@divisor+7,f
  5941  025C                     l1972:
  5942  025C  3001               	movlw	1
  5943  025D  00F0               	movwf	??___aomod
  5944  025E  0870               	movf	??___aomod,w
  5945  025F  07F1               	addwf	___aomod@counter,f
  5946  0260                     l1974:
  5947  0260  1FA7               	btfss	___aomod@divisor+7,7
  5948  0261  2A63               	goto	u1291
  5949  0262  2A64               	goto	u1290
  5950  0263                     u1291:
  5951  0263  2A54               	goto	l1970
  5952  0264                     u1290:
  5953  0264                     l1976:
  5954  0264  0827               	movf	___aomod@divisor+7,w
  5955  0265  022F               	subwf	___aomod@dividend+7,w
  5956  0266  1D03               	skipz
  5957  0267  2A82               	goto	u1305
  5958  0268  0826               	movf	___aomod@divisor+6,w
  5959  0269  022E               	subwf	___aomod@dividend+6,w
  5960  026A  1D03               	skipz
  5961  026B  2A82               	goto	u1305
  5962  026C  0825               	movf	___aomod@divisor+5,w
  5963  026D  022D               	subwf	___aomod@dividend+5,w
  5964  026E  1D03               	skipz
  5965  026F  2A82               	goto	u1305
  5966  0270  0824               	movf	___aomod@divisor+4,w
  5967  0271  022C               	subwf	___aomod@dividend+4,w
  5968  0272  1D03               	skipz
  5969  0273  2A82               	goto	u1305
  5970  0274  0823               	movf	___aomod@divisor+3,w
  5971  0275  022B               	subwf	___aomod@dividend+3,w
  5972  0276  1D03               	skipz
  5973  0277  2A82               	goto	u1305
  5974  0278  0822               	movf	___aomod@divisor+2,w
  5975  0279  022A               	subwf	___aomod@dividend+2,w
  5976  027A  1D03               	skipz
  5977  027B  2A82               	goto	u1305
  5978  027C  0821               	movf	___aomod@divisor+1,w
  5979  027D  0229               	subwf	___aomod@dividend+1,w
  5980  027E  1D03               	skipz
  5981  027F  2A82               	goto	u1305
  5982  0280  0820               	movf	___aomod@divisor,w
  5983  0281  0228               	subwf	___aomod@dividend,w
  5984  0282                     u1305:
  5985  0282  1C03               	skipc
  5986  0283  2A85               	goto	u1301
  5987  0284  2A86               	goto	u1300
  5988  0285                     u1301:
  5989  0285  2A96               	goto	l1980
  5990  0286                     u1300:
  5991  0286                     l1978:
  5992  0286  0820               	movf	___aomod@divisor,w
  5993  0287  02A8               	subwf	___aomod@dividend,f
  5994  0288  0821               	movf	___aomod@divisor+1,w
  5995  0289  3BA9               	subwfb	___aomod@dividend+1,f
  5996  028A  0822               	movf	___aomod@divisor+2,w
  5997  028B  3BAA               	subwfb	___aomod@dividend+2,f
  5998  028C  0823               	movf	___aomod@divisor+3,w
  5999  028D  3BAB               	subwfb	___aomod@dividend+3,f
  6000  028E  0824               	movf	___aomod@divisor+4,w
  6001  028F  3BAC               	subwfb	___aomod@dividend+4,f
  6002  0290  0825               	movf	___aomod@divisor+5,w
  6003  0291  3BAD               	subwfb	___aomod@dividend+5,f
  6004  0292  0826               	movf	___aomod@divisor+6,w
  6005  0293  3BAE               	subwfb	___aomod@dividend+6,f
  6006  0294  0827               	movf	___aomod@divisor+7,w
  6007  0295  3BAF               	subwfb	___aomod@dividend+7,f
  6008  0296                     l1980:
  6009  0296  36A7               	lsrf	___aomod@divisor+7,f
  6010  0297  0CA6               	rrf	___aomod@divisor+6,f
  6011  0298  0CA5               	rrf	___aomod@divisor+5,f
  6012  0299  0CA4               	rrf	___aomod@divisor+4,f
  6013  029A  0CA3               	rrf	___aomod@divisor+3,f
  6014  029B  0CA2               	rrf	___aomod@divisor+2,f
  6015  029C  0CA1               	rrf	___aomod@divisor+1,f
  6016  029D  0CA0               	rrf	___aomod@divisor,f
  6017  029E  3001               	movlw	1
  6018  029F  02F1               	subwf	___aomod@counter,f
  6019  02A0  1D03               	btfss	3,2
  6020  02A1  2AA3               	goto	u1311
  6021  02A2  2AA4               	goto	u1310
  6022  02A3                     u1311:
  6023  02A3  2A64               	goto	l1976
  6024  02A4                     u1310:
  6025  02A4                     l1982:
  6026  02A4  0872               	movf	___aomod@sign,w
  6027  02A5  1903               	btfsc	3,2
  6028  02A6  2AA8               	goto	u1321
  6029  02A7  2AA9               	goto	u1320
  6030  02A8                     u1321:
  6031  02A8  2AC7               	goto	l537
  6032  02A9                     u1320:
  6033  02A9                     l1984:
  6034  02A9  09A8               	comf	___aomod@dividend,f
  6035  02AA  09A9               	comf	___aomod@dividend+1,f
  6036  02AB  09AA               	comf	___aomod@dividend+2,f
  6037  02AC  09AB               	comf	___aomod@dividend+3,f
  6038  02AD  09AC               	comf	___aomod@dividend+4,f
  6039  02AE  09AD               	comf	___aomod@dividend+5,f
  6040  02AF  09AE               	comf	___aomod@dividend+6,f
  6041  02B0  09AF               	comf	___aomod@dividend+7,f
  6042  02B1  0AA8               	incf	___aomod@dividend,f
  6043  02B2  1D03               	skipz
  6044  02B3  2AC7               	goto	u133lld
  6045  02B4  0AA9               	incf	___aomod@dividend+1,f
  6046  02B5  1D03               	skipz
  6047  02B6  2AC7               	goto	u133lld
  6048  02B7  0AAA               	incf	___aomod@dividend+2,f
  6049  02B8  1D03               	skipz
  6050  02B9  2AC7               	goto	u133lld
  6051  02BA  0AAB               	incf	___aomod@dividend+3,f
  6052  02BB  1D03               	skipz
  6053  02BC  2AC7               	goto	u133lld
  6054  02BD  0AAC               	incf	___aomod@dividend+4,f
  6055  02BE  1D03               	skipz
  6056  02BF  2AC7               	goto	u133lld
  6057  02C0  0AAD               	incf	___aomod@dividend+5,f
  6058  02C1  1D03               	skipz
  6059  02C2  2AC7               	goto	u133lld
  6060  02C3  0AAE               	incf	___aomod@dividend+6,f
  6061  02C4  1D03               	skipz
  6062  02C5  2AC7               	goto	u133lld
  6063  02C6  0AAF               	incf	___aomod@dividend+7,f
  6064  02C7                     u133lld:
  6065  02C7                     l537:
  6066  02C7  0020               	movlb	0	; select bank0
  6067  02C8  0828               	movf	___aomod@dividend,w
  6068  02C9  00A0               	movwf	?___aomod
  6069  02CA  0829               	movf	___aomod@dividend+1,w
  6070  02CB  00A1               	movwf	?___aomod+1
  6071  02CC  082A               	movf	___aomod@dividend+2,w
  6072  02CD  00A2               	movwf	?___aomod+2
  6073  02CE  082B               	movf	___aomod@dividend+3,w
  6074  02CF  00A3               	movwf	?___aomod+3
  6075  02D0  082C               	movf	___aomod@dividend+4,w
  6076  02D1  00A4               	movwf	?___aomod+4
  6077  02D2  082D               	movf	___aomod@dividend+5,w
  6078  02D3  00A5               	movwf	?___aomod+5
  6079  02D4  082E               	movf	___aomod@dividend+6,w
  6080  02D5  00A6               	movwf	?___aomod+6
  6081  02D6  082F               	movf	___aomod@dividend+7,w
  6082  02D7  00A7               	movwf	?___aomod+7
  6083  02D8                     l538:
  6084  02D8  0008               	return
  6085  02D9                     __end_of___aomod:
  6086                           
  6087                           	psect	text21
  6088  03C5                     __ptext21:	
  6089 ;; *************** function ___aodiv *****************
  6090 ;; Defined at:
  6091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  divisor         8    0[BANK0 ] long long 
  6094 ;;  dividend        8    8[BANK0 ] long long 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  quotient        8    3[COMMON] long long 
  6097 ;;  sign            1    2[COMMON] unsigned char 
  6098 ;;  counter         1    1[COMMON] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  8    0[BANK0 ] long long 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6108 ;;      Params:         0      16       0       0       0       0
  6109 ;;      Locals:        10       0       0       0       0       0
  6110 ;;      Temps:          1       0       0       0       0       0
  6111 ;;      Totals:        11      16       0       0       0       0
  6112 ;;Total ram usage:       27 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_dtoa
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121  03C5                     ___aodiv:	
  6122                           ;psect for function ___aodiv
  6123                           
  6124  03C5                     l1918:	
  6125                           ;incstack = 0
  6126                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6127                           
  6128  03C5  01F2               	clrf	___aodiv@sign
  6129  03C6                     l1920:
  6130  03C6  3020               	movlw	low ___aodiv@divisor
  6131  03C7  0086               	movwf	6
  6132  03C8  3000               	movlw	high ___aodiv@divisor
  6133  03C9  0087               	movwf	7
  6134  03CA  3F47               	moviw [7]fsr1
  6135  03CB  00F0               	movwf	??___aodiv
  6136  03CC  1FF0               	btfss	??___aodiv,7
  6137  03CD  2BCF               	goto	u1131
  6138  03CE  2BD0               	goto	u1130
  6139  03CF                     u1131:
  6140  03CF  2BF1               	goto	l1924
  6141  03D0                     u1130:
  6142  03D0                     l1922:
  6143  03D0  0020               	movlb	0	; select bank0
  6144  03D1  09A0               	comf	___aodiv@divisor,f
  6145  03D2  09A1               	comf	___aodiv@divisor+1,f
  6146  03D3  09A2               	comf	___aodiv@divisor+2,f
  6147  03D4  09A3               	comf	___aodiv@divisor+3,f
  6148  03D5  09A4               	comf	___aodiv@divisor+4,f
  6149  03D6  09A5               	comf	___aodiv@divisor+5,f
  6150  03D7  09A6               	comf	___aodiv@divisor+6,f
  6151  03D8  09A7               	comf	___aodiv@divisor+7,f
  6152  03D9  0AA0               	incf	___aodiv@divisor,f
  6153  03DA  1D03               	skipz
  6154  03DB  2BEF               	goto	u114lld
  6155  03DC  0AA1               	incf	___aodiv@divisor+1,f
  6156  03DD  1D03               	skipz
  6157  03DE  2BEF               	goto	u114lld
  6158  03DF  0AA2               	incf	___aodiv@divisor+2,f
  6159  03E0  1D03               	skipz
  6160  03E1  2BEF               	goto	u114lld
  6161  03E2  0AA3               	incf	___aodiv@divisor+3,f
  6162  03E3  1D03               	skipz
  6163  03E4  2BEF               	goto	u114lld
  6164  03E5  0AA4               	incf	___aodiv@divisor+4,f
  6165  03E6  1D03               	skipz
  6166  03E7  2BEF               	goto	u114lld
  6167  03E8  0AA5               	incf	___aodiv@divisor+5,f
  6168  03E9  1D03               	skipz
  6169  03EA  2BEF               	goto	u114lld
  6170  03EB  0AA6               	incf	___aodiv@divisor+6,f
  6171  03EC  1D03               	skipz
  6172  03ED  2BEF               	goto	u114lld
  6173  03EE  0AA7               	incf	___aodiv@divisor+7,f
  6174  03EF                     u114lld:
  6175  03EF  01F2               	clrf	___aodiv@sign
  6176  03F0  0AF2               	incf	___aodiv@sign,f
  6177  03F1                     l1924:
  6178  03F1  3028               	movlw	low ___aodiv@dividend
  6179  03F2  0086               	movwf	6
  6180  03F3  3000               	movlw	high ___aodiv@dividend
  6181  03F4  0087               	movwf	7
  6182  03F5  3F47               	moviw [7]fsr1
  6183  03F6  00F0               	movwf	??___aodiv
  6184  03F7  1FF0               	btfss	??___aodiv,7
  6185  03F8  2BFA               	goto	u1151
  6186  03F9  2BFB               	goto	u1150
  6187  03FA                     u1151:
  6188  03FA  2C1E               	goto	l1930
  6189  03FB                     u1150:
  6190  03FB                     l1926:
  6191  03FB  0020               	movlb	0	; select bank0
  6192  03FC  09A8               	comf	___aodiv@dividend,f
  6193  03FD  09A9               	comf	___aodiv@dividend+1,f
  6194  03FE  09AA               	comf	___aodiv@dividend+2,f
  6195  03FF  09AB               	comf	___aodiv@dividend+3,f
  6196  0400  09AC               	comf	___aodiv@dividend+4,f
  6197  0401  09AD               	comf	___aodiv@dividend+5,f
  6198  0402  09AE               	comf	___aodiv@dividend+6,f
  6199  0403  09AF               	comf	___aodiv@dividend+7,f
  6200  0404  0AA8               	incf	___aodiv@dividend,f
  6201  0405  1D03               	skipz
  6202  0406  2C1A               	goto	u116lld
  6203  0407  0AA9               	incf	___aodiv@dividend+1,f
  6204  0408  1D03               	skipz
  6205  0409  2C1A               	goto	u116lld
  6206  040A  0AAA               	incf	___aodiv@dividend+2,f
  6207  040B  1D03               	skipz
  6208  040C  2C1A               	goto	u116lld
  6209  040D  0AAB               	incf	___aodiv@dividend+3,f
  6210  040E  1D03               	skipz
  6211  040F  2C1A               	goto	u116lld
  6212  0410  0AAC               	incf	___aodiv@dividend+4,f
  6213  0411  1D03               	skipz
  6214  0412  2C1A               	goto	u116lld
  6215  0413  0AAD               	incf	___aodiv@dividend+5,f
  6216  0414  1D03               	skipz
  6217  0415  2C1A               	goto	u116lld
  6218  0416  0AAE               	incf	___aodiv@dividend+6,f
  6219  0417  1D03               	skipz
  6220  0418  2C1A               	goto	u116lld
  6221  0419  0AAF               	incf	___aodiv@dividend+7,f
  6222  041A                     u116lld:
  6223  041A                     l1928:
  6224  041A  3001               	movlw	1
  6225  041B  00F0               	movwf	??___aodiv
  6226  041C  0870               	movf	??___aodiv,w
  6227  041D  06F2               	xorwf	___aodiv@sign,f
  6228  041E                     l1930:
  6229  041E  3073               	movlw	low ___aodiv@quotient
  6230  041F  0086               	movwf	6
  6231  0420  3000               	movlw	high ___aodiv@quotient
  6232  0421  0087               	movwf	7
  6233  0422  3008               	movlw	8
  6234  0423  00F0               	movwf	??___aodiv
  6235  0424  3000               	movlw	0
  6236  0425                     u1170:
  6237  0425  001E               	movwi fsr1++
  6238  0426  0BF0               	decfsz	??___aodiv,f
  6239  0427  2C25               	goto	u1170
  6240  0428                     l1932:
  6241  0428  0020               	movlb	0	; select bank0
  6242  0429  0820               	movf	___aodiv@divisor,w
  6243  042A  0421               	iorwf	___aodiv@divisor+1,w
  6244  042B  0422               	iorwf	___aodiv@divisor+2,w
  6245  042C  0423               	iorwf	___aodiv@divisor+3,w
  6246  042D  0424               	iorwf	___aodiv@divisor+4,w
  6247  042E  0425               	iorwf	___aodiv@divisor+5,w
  6248  042F  0426               	iorwf	___aodiv@divisor+6,w
  6249  0430  0427               	iorwf	___aodiv@divisor+7,w
  6250  0431  1903               	skipnz
  6251  0432  2C34               	goto	u1181
  6252  0433  2C35               	goto	u1180
  6253  0434                     u1181:
  6254  0434  2C91               	goto	l1952
  6255  0435                     u1180:
  6256  0435                     l1934:
  6257  0435  01F1               	clrf	___aodiv@counter
  6258  0436  0AF1               	incf	___aodiv@counter,f
  6259  0437  2C44               	goto	l1940
  6260  0438                     l1936:
  6261  0438  35A0               	lslf	___aodiv@divisor,f
  6262  0439  0DA1               	rlf	___aodiv@divisor+1,f
  6263  043A  0DA2               	rlf	___aodiv@divisor+2,f
  6264  043B  0DA3               	rlf	___aodiv@divisor+3,f
  6265  043C  0DA4               	rlf	___aodiv@divisor+4,f
  6266  043D  0DA5               	rlf	___aodiv@divisor+5,f
  6267  043E  0DA6               	rlf	___aodiv@divisor+6,f
  6268  043F  0DA7               	rlf	___aodiv@divisor+7,f
  6269  0440                     l1938:
  6270  0440  3001               	movlw	1
  6271  0441  00F0               	movwf	??___aodiv
  6272  0442  0870               	movf	??___aodiv,w
  6273  0443  07F1               	addwf	___aodiv@counter,f
  6274  0444                     l1940:
  6275  0444  1FA7               	btfss	___aodiv@divisor+7,7
  6276  0445  2C47               	goto	u1191
  6277  0446  2C48               	goto	u1190
  6278  0447                     u1191:
  6279  0447  2C38               	goto	l1936
  6280  0448                     u1190:
  6281  0448                     l1942:
  6282  0448  35F3               	lslf	___aodiv@quotient,f
  6283  0449  0DF4               	rlf	___aodiv@quotient+1,f
  6284  044A  0DF5               	rlf	___aodiv@quotient+2,f
  6285  044B  0DF6               	rlf	___aodiv@quotient+3,f
  6286  044C  0DF7               	rlf	___aodiv@quotient+4,f
  6287  044D  0DF8               	rlf	___aodiv@quotient+5,f
  6288  044E  0DF9               	rlf	___aodiv@quotient+6,f
  6289  044F  0DFA               	rlf	___aodiv@quotient+7,f
  6290  0450                     l1944:
  6291  0450  0827               	movf	___aodiv@divisor+7,w
  6292  0451  022F               	subwf	___aodiv@dividend+7,w
  6293  0452  1D03               	skipz
  6294  0453  2C6E               	goto	u1205
  6295  0454  0826               	movf	___aodiv@divisor+6,w
  6296  0455  022E               	subwf	___aodiv@dividend+6,w
  6297  0456  1D03               	skipz
  6298  0457  2C6E               	goto	u1205
  6299  0458  0825               	movf	___aodiv@divisor+5,w
  6300  0459  022D               	subwf	___aodiv@dividend+5,w
  6301  045A  1D03               	skipz
  6302  045B  2C6E               	goto	u1205
  6303  045C  0824               	movf	___aodiv@divisor+4,w
  6304  045D  022C               	subwf	___aodiv@dividend+4,w
  6305  045E  1D03               	skipz
  6306  045F  2C6E               	goto	u1205
  6307  0460  0823               	movf	___aodiv@divisor+3,w
  6308  0461  022B               	subwf	___aodiv@dividend+3,w
  6309  0462  1D03               	skipz
  6310  0463  2C6E               	goto	u1205
  6311  0464  0822               	movf	___aodiv@divisor+2,w
  6312  0465  022A               	subwf	___aodiv@dividend+2,w
  6313  0466  1D03               	skipz
  6314  0467  2C6E               	goto	u1205
  6315  0468  0821               	movf	___aodiv@divisor+1,w
  6316  0469  0229               	subwf	___aodiv@dividend+1,w
  6317  046A  1D03               	skipz
  6318  046B  2C6E               	goto	u1205
  6319  046C  0820               	movf	___aodiv@divisor,w
  6320  046D  0228               	subwf	___aodiv@dividend,w
  6321  046E                     u1205:
  6322  046E  1C03               	skipc
  6323  046F  2C71               	goto	u1201
  6324  0470  2C72               	goto	u1200
  6325  0471                     u1201:
  6326  0471  2C83               	goto	l1950
  6327  0472                     u1200:
  6328  0472                     l1946:
  6329  0472  0820               	movf	___aodiv@divisor,w
  6330  0473  02A8               	subwf	___aodiv@dividend,f
  6331  0474  0821               	movf	___aodiv@divisor+1,w
  6332  0475  3BA9               	subwfb	___aodiv@dividend+1,f
  6333  0476  0822               	movf	___aodiv@divisor+2,w
  6334  0477  3BAA               	subwfb	___aodiv@dividend+2,f
  6335  0478  0823               	movf	___aodiv@divisor+3,w
  6336  0479  3BAB               	subwfb	___aodiv@dividend+3,f
  6337  047A  0824               	movf	___aodiv@divisor+4,w
  6338  047B  3BAC               	subwfb	___aodiv@dividend+4,f
  6339  047C  0825               	movf	___aodiv@divisor+5,w
  6340  047D  3BAD               	subwfb	___aodiv@dividend+5,f
  6341  047E  0826               	movf	___aodiv@divisor+6,w
  6342  047F  3BAE               	subwfb	___aodiv@dividend+6,f
  6343  0480  0827               	movf	___aodiv@divisor+7,w
  6344  0481  3BAF               	subwfb	___aodiv@dividend+7,f
  6345  0482                     l1948:
  6346  0482  1473               	bsf	___aodiv@quotient,0
  6347  0483                     l1950:
  6348  0483  36A7               	lsrf	___aodiv@divisor+7,f
  6349  0484  0CA6               	rrf	___aodiv@divisor+6,f
  6350  0485  0CA5               	rrf	___aodiv@divisor+5,f
  6351  0486  0CA4               	rrf	___aodiv@divisor+4,f
  6352  0487  0CA3               	rrf	___aodiv@divisor+3,f
  6353  0488  0CA2               	rrf	___aodiv@divisor+2,f
  6354  0489  0CA1               	rrf	___aodiv@divisor+1,f
  6355  048A  0CA0               	rrf	___aodiv@divisor,f
  6356  048B  3001               	movlw	1
  6357  048C  02F1               	subwf	___aodiv@counter,f
  6358  048D  1D03               	btfss	3,2
  6359  048E  2C90               	goto	u1211
  6360  048F  2C91               	goto	u1210
  6361  0490                     u1211:
  6362  0490  2C48               	goto	l1942
  6363  0491                     u1210:
  6364  0491                     l1952:
  6365  0491  0872               	movf	___aodiv@sign,w
  6366  0492  1903               	btfsc	3,2
  6367  0493  2C95               	goto	u1221
  6368  0494  2C96               	goto	u1220
  6369  0495                     u1221:
  6370  0495  2CB4               	goto	l524
  6371  0496                     u1220:
  6372  0496                     l1954:
  6373  0496  09F3               	comf	___aodiv@quotient,f
  6374  0497  09F4               	comf	___aodiv@quotient+1,f
  6375  0498  09F5               	comf	___aodiv@quotient+2,f
  6376  0499  09F6               	comf	___aodiv@quotient+3,f
  6377  049A  09F7               	comf	___aodiv@quotient+4,f
  6378  049B  09F8               	comf	___aodiv@quotient+5,f
  6379  049C  09F9               	comf	___aodiv@quotient+6,f
  6380  049D  09FA               	comf	___aodiv@quotient+7,f
  6381  049E  0AF3               	incf	___aodiv@quotient,f
  6382  049F  1D03               	skipz
  6383  04A0  2CB4               	goto	u123lld
  6384  04A1  0AF4               	incf	___aodiv@quotient+1,f
  6385  04A2  1D03               	skipz
  6386  04A3  2CB4               	goto	u123lld
  6387  04A4  0AF5               	incf	___aodiv@quotient+2,f
  6388  04A5  1D03               	skipz
  6389  04A6  2CB4               	goto	u123lld
  6390  04A7  0AF6               	incf	___aodiv@quotient+3,f
  6391  04A8  1D03               	skipz
  6392  04A9  2CB4               	goto	u123lld
  6393  04AA  0AF7               	incf	___aodiv@quotient+4,f
  6394  04AB  1D03               	skipz
  6395  04AC  2CB4               	goto	u123lld
  6396  04AD  0AF8               	incf	___aodiv@quotient+5,f
  6397  04AE  1D03               	skipz
  6398  04AF  2CB4               	goto	u123lld
  6399  04B0  0AF9               	incf	___aodiv@quotient+6,f
  6400  04B1  1D03               	skipz
  6401  04B2  2CB4               	goto	u123lld
  6402  04B3  0AFA               	incf	___aodiv@quotient+7,f
  6403  04B4                     u123lld:
  6404  04B4                     l524:
  6405  04B4  0873               	movf	___aodiv@quotient,w
  6406  04B5  0020               	movlb	0	; select bank0
  6407  04B6  00A0               	movwf	?___aodiv
  6408  04B7  0874               	movf	___aodiv@quotient+1,w
  6409  04B8  00A1               	movwf	?___aodiv+1
  6410  04B9  0875               	movf	___aodiv@quotient+2,w
  6411  04BA  00A2               	movwf	?___aodiv+2
  6412  04BB  0876               	movf	___aodiv@quotient+3,w
  6413  04BC  00A3               	movwf	?___aodiv+3
  6414  04BD  0877               	movf	___aodiv@quotient+4,w
  6415  04BE  00A4               	movwf	?___aodiv+4
  6416  04BF  0878               	movf	___aodiv@quotient+5,w
  6417  04C0  00A5               	movwf	?___aodiv+5
  6418  04C1  0879               	movf	___aodiv@quotient+6,w
  6419  04C2  00A6               	movwf	?___aodiv+6
  6420  04C3  087A               	movf	___aodiv@quotient+7,w
  6421  04C4  00A7               	movwf	?___aodiv+7
  6422  04C5                     l525:
  6423  04C5  0008               	return
  6424  04C6                     __end_of___aodiv:
  6425                           
  6426                           	psect	text22
  6427  0F6C                     __ptext22:	
  6428 ;; *************** function _atoi *****************
  6429 ;; Defined at:
  6430 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\atoi.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  s               2    6[COMMON] PTR const unsigned char 
  6433 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  6434 ;;		 -> STR_2(18), STR_1(18), 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  n               2    2[BANK0 ] int 
  6437 ;;  neg             2    0[BANK0 ] int 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  2    6[COMMON] int 
  6440 ;; Registers used:
  6441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6447 ;;      Params:         2       0       0       0       0       0
  6448 ;;      Locals:         0       4       0       0       0       0
  6449 ;;      Temps:          3       0       0       0       0       0
  6450 ;;      Totals:         5       4       0       0       0       0
  6451 ;;Total ram usage:        9 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; Hardware stack levels required when called: 1
  6454 ;; This function calls:
  6455 ;;		___wmul
  6456 ;;		_isdigit
  6457 ;;		_isspace
  6458 ;; This function is called by:
  6459 ;;		_vfpfcnvrt
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463  0F6C                     _atoi:	
  6464                           ;psect for function _atoi
  6465                           
  6466  0F6C                     l2090:	
  6467                           ;incstack = 0
  6468                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6469                           
  6470  0F6C  0020               	movlb	0	; select bank0
  6471  0F6D  01A2               	clrf	atoi@n
  6472  0F6E  01A3               	clrf	atoi@n+1
  6473  0F6F  01A0               	clrf	atoi@neg
  6474  0F70  01A1               	clrf	atoi@neg+1
  6475  0F71  2F76               	goto	l2096
  6476  0F72                     l2092:
  6477  0F72  3001               	movlw	1
  6478  0F73  07F6               	addwf	atoi@s,f
  6479  0F74  3000               	movlw	0
  6480  0F75  3DF7               	addwfc	atoi@s+1,f
  6481  0F76                     l2096:
  6482  0F76  0876               	movf	atoi@s,w
  6483  0F77  0084               	movwf	4
  6484  0F78  0877               	movf	atoi@s+1,w
  6485  0F79  0085               	movwf	5
  6486  0F7A  0012               	moviw fsr0++
  6487  0F7B  3A20               	xorlw	32
  6488  0F7C  1903               	btfsc	3,2
  6489  0F7D  2F7F               	goto	u1591
  6490  0F7E  2F80               	goto	u1590
  6491  0F7F                     u1591:
  6492  0F7F  2F72               	goto	l2092
  6493  0F80                     u1590:
  6494  0F80                     l2098:
  6495  0F80  0876               	movf	atoi@s,w
  6496  0F81  0084               	movwf	4
  6497  0F82  0877               	movf	atoi@s+1,w
  6498  0F83  0085               	movwf	5
  6499  0F84  0800               	movf	0,w	;code access
  6500  0F85  3EF7               	addlw	247
  6501  0F86  00F8               	movwf	??_atoi
  6502  0F87  30FF               	movlw	255
  6503  0F88  1803               	skipnc
  6504  0F89  3000               	movlw	0
  6505  0F8A  00F9               	movwf	??_atoi+1
  6506  0F8B  3000               	movlw	0
  6507  0F8C  0279               	subwf	??_atoi+1,w
  6508  0F8D  3005               	movlw	5
  6509  0F8E  1903               	skipnz
  6510  0F8F  0278               	subwf	??_atoi,w
  6511  0F90  1C03               	skipc
  6512  0F91  2F93               	goto	u1601
  6513  0F92  2F94               	goto	u1600
  6514  0F93                     u1601:
  6515  0F93  2F72               	goto	l2092
  6516  0F94                     u1600:
  6517  0F94  2F9F               	goto	l2102
  6518  0F95                     l2100:
  6519  0F95  3001               	movlw	1
  6520  0F96  0020               	movlb	0	; select bank0
  6521  0F97  00A0               	movwf	atoi@neg
  6522  0F98  3000               	movlw	0
  6523  0F99  00A1               	movwf	atoi@neg+1
  6524  0F9A                     l1004:
  6525  0F9A  3001               	movlw	1
  6526  0F9B  07F6               	addwf	atoi@s,f
  6527  0F9C  3000               	movlw	0
  6528  0F9D  3DF7               	addwfc	atoi@s+1,f
  6529  0F9E  2FD4               	goto	l2110
  6530  0F9F                     l2102:
  6531  0F9F  0876               	movf	atoi@s,w
  6532  0FA0  0084               	movwf	4
  6533  0FA1  0877               	movf	atoi@s+1,w
  6534  0FA2  0085               	movwf	5
  6535  0FA3  0800               	movf	0,w	;code access
  6536  0FA4  00F8               	movwf	??_atoi
  6537  0FA5  01F9               	clrf	??_atoi+1
  6538                           
  6539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6540                           ; Switch size 1, requested type "simple"
  6541                           ; Number of cases is 1, Range of values is 0 to 0
  6542                           ; switch strategies available:
  6543                           ; Name         Instructions Cycles
  6544                           ; simple_byte            4     3 (average)
  6545                           ; direct_byte            8     6 (fixed)
  6546                           ; jumptable            260     6 (fixed)
  6547                           ;	Chosen strategy is simple_byte
  6548  0FA6  0879               	movf	??_atoi+1,w
  6549  0FA7  3A00               	xorlw	0	; case 0
  6550  0FA8  1903               	skipnz
  6551  0FA9  2FAB               	goto	l2634
  6552  0FAA  2FD4               	goto	l2110
  6553  0FAB                     l2634:
  6554                           
  6555                           ; Switch size 1, requested type "simple"
  6556                           ; Number of cases is 2, Range of values is 43 to 45
  6557                           ; switch strategies available:
  6558                           ; Name         Instructions Cycles
  6559                           ; simple_byte            7     4 (average)
  6560                           ; direct_byte           15     9 (fixed)
  6561                           ; jumptable            263     9 (fixed)
  6562                           ;	Chosen strategy is simple_byte
  6563  0FAB  0878               	movf	??_atoi,w
  6564  0FAC  3A2B               	xorlw	43	; case 43
  6565  0FAD  1903               	skipnz
  6566  0FAE  2F9A               	goto	l1004
  6567  0FAF  3A06               	xorlw	6	; case 45
  6568  0FB0  1903               	skipnz
  6569  0FB1  2F95               	goto	l2100
  6570  0FB2  2FD4               	goto	l2110
  6571  0FB3                     l2104:
  6572  0FB3  0876               	movf	atoi@s,w
  6573  0FB4  0084               	movwf	4
  6574  0FB5  0877               	movf	atoi@s+1,w
  6575  0FB6  0085               	movwf	5
  6576  0FB7  0800               	movf	0,w	;code access
  6577  0FB8  00F8               	movwf	??_atoi
  6578  0FB9  0020               	movlb	0	; select bank0
  6579  0FBA  0823               	movf	atoi@n+1,w
  6580  0FBB  00F1               	movwf	___wmul@multiplier+1
  6581  0FBC  0822               	movf	atoi@n,w
  6582  0FBD  00F0               	movwf	___wmul@multiplier
  6583  0FBE  300A               	movlw	10
  6584  0FBF  00F2               	movwf	___wmul@multiplicand
  6585  0FC0  3000               	movlw	0
  6586  0FC1  00F3               	movwf	___wmul@multiplicand+1
  6587  0FC2  318B  2368  318F   	fcall	___wmul
  6588  0FC5  0871               	movf	?___wmul+1,w
  6589  0FC6  00FA               	movwf	??_atoi+2
  6590  0FC7  0878               	movf	??_atoi,w
  6591  0FC8  0270               	subwf	?___wmul,w
  6592  0FC9  00F9               	movwf	??_atoi+1
  6593  0FCA  1C03               	skipc
  6594  0FCB  03FA               	decf	??_atoi+2,f
  6595  0FCC  0879               	movf	??_atoi+1,w
  6596  0FCD  3E30               	addlw	48
  6597  0FCE  0020               	movlb	0	; select bank0
  6598  0FCF  00A2               	movwf	atoi@n
  6599  0FD0  3000               	movlw	0
  6600  0FD1  3D7A               	addwfc	??_atoi+2,w
  6601  0FD2  00A3               	movwf	atoi@n+1
  6602  0FD3  2F9A               	goto	l1004
  6603  0FD4                     l2110:
  6604  0FD4  0876               	movf	atoi@s,w
  6605  0FD5  0084               	movwf	4
  6606  0FD6  0877               	movf	atoi@s+1,w
  6607  0FD7  0085               	movwf	5
  6608  0FD8  0800               	movf	0,w	;code access
  6609  0FD9  3ED0               	addlw	208
  6610  0FDA  00F8               	movwf	??_atoi
  6611  0FDB  30FF               	movlw	255
  6612  0FDC  1803               	skipnc
  6613  0FDD  3000               	movlw	0
  6614  0FDE  00F9               	movwf	??_atoi+1
  6615  0FDF  3000               	movlw	0
  6616  0FE0  0279               	subwf	??_atoi+1,w
  6617  0FE1  300A               	movlw	10
  6618  0FE2  1903               	skipnz
  6619  0FE3  0278               	subwf	??_atoi,w
  6620  0FE4  1C03               	skipc
  6621  0FE5  2FE7               	goto	u1611
  6622  0FE6  2FE8               	goto	u1610
  6623  0FE7                     u1611:
  6624  0FE7  2FB3               	goto	l2104
  6625  0FE8                     u1610:
  6626  0FE8                     l2112:
  6627  0FE8  0020               	movlb	0	; select bank0
  6628  0FE9  0820               	movf	atoi@neg,w
  6629  0FEA  0421               	iorwf	atoi@neg+1,w
  6630  0FEB  1D03               	btfss	3,2
  6631  0FEC  2FEE               	goto	u1621
  6632  0FED  2FEF               	goto	u1620
  6633  0FEE                     u1621:
  6634  0FEE  2FFB               	goto	l2116
  6635  0FEF                     u1620:
  6636  0FEF                     l2114:
  6637  0FEF  0922               	comf	atoi@n,w
  6638  0FF0  00F8               	movwf	??_atoi
  6639  0FF1  0923               	comf	atoi@n+1,w
  6640  0FF2  00F9               	movwf	??_atoi+1
  6641  0FF3  0AF8               	incf	??_atoi,f
  6642  0FF4  1903               	skipnz
  6643  0FF5  0AF9               	incf	??_atoi+1,f
  6644  0FF6  0878               	movf	??_atoi,w
  6645  0FF7  00F6               	movwf	?_atoi
  6646  0FF8  0879               	movf	??_atoi+1,w
  6647  0FF9  00F7               	movwf	?_atoi+1
  6648  0FFA  2FFF               	goto	l1015
  6649  0FFB                     l2116:
  6650  0FFB  0823               	movf	atoi@n+1,w
  6651  0FFC  00F7               	movwf	?_atoi+1
  6652  0FFD  0822               	movf	atoi@n,w
  6653  0FFE  00F6               	movwf	?_atoi
  6654  0FFF                     l1015:
  6655  0FFF  0008               	return
  6656  1000                     __end_of_atoi:
  6657                           
  6658                           	psect	text23
  6659  0B87                     __ptext23:	
  6660 ;; *************** function _isspace *****************
  6661 ;; Defined at:
  6662 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isspace.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  c               2    0[COMMON] int 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  2    0[COMMON] int 
  6669 ;; Registers used:
  6670 ;;		wreg, status,2, status,0
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6676 ;;      Params:         2       0       0       0       0       0
  6677 ;;      Locals:         1       0       0       0       0       0
  6678 ;;      Temps:          2       0       0       0       0       0
  6679 ;;      Totals:         5       0       0       0       0       0
  6680 ;;Total ram usage:        5 bytes
  6681 ;; Hardware stack levels used: 1
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		_atoi
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689  0B87                     _isspace:	
  6690                           ;psect for function _isspace
  6691                           
  6692  0B87                     l2016:	
  6693                           ;incstack = 0
  6694                           ; Regs used in _isspace: [wreg+status,2+status,0]
  6695                           
  6696  0B87  01F4               	clrf	_isspace$1087
  6697  0B88  0AF4               	incf	_isspace$1087,f
  6698  0B89                     l2018:
  6699  0B89  3020               	movlw	32
  6700  0B8A  0670               	xorwf	isspace@c,w
  6701  0B8B  0471               	iorwf	isspace@c+1,w
  6702  0B8C  1903               	btfsc	3,2
  6703  0B8D  2B8F               	goto	u1411
  6704  0B8E  2B90               	goto	u1410
  6705  0B8F                     u1411:
  6706  0B8F  2BA0               	goto	l2024
  6707  0B90                     u1410:
  6708  0B90                     l2020:
  6709  0B90  0870               	movf	isspace@c,w
  6710  0B91  3EF7               	addlw	247
  6711  0B92  00F2               	movwf	??_isspace
  6712  0B93  30FF               	movlw	255
  6713  0B94  3D71               	addwfc	isspace@c+1,w
  6714  0B95  00F3               	movwf	??_isspace+1
  6715  0B96  3000               	movlw	0
  6716  0B97  0273               	subwf	??_isspace+1,w
  6717  0B98  3005               	movlw	5
  6718  0B99  1903               	skipnz
  6719  0B9A  0272               	subwf	??_isspace,w
  6720  0B9B  1C03               	skipc
  6721  0B9C  2B9E               	goto	u1421
  6722  0B9D  2B9F               	goto	u1420
  6723  0B9E                     u1421:
  6724  0B9E  2BA0               	goto	l2024
  6725  0B9F                     u1420:
  6726  0B9F                     l2022:
  6727  0B9F  01F4               	clrf	_isspace$1087
  6728  0BA0                     l2024:
  6729  0BA0  0874               	movf	_isspace$1087,w
  6730  0BA1  00F2               	movwf	??_isspace
  6731  0BA2  01F3               	clrf	??_isspace+1
  6732  0BA3  0872               	movf	??_isspace,w
  6733  0BA4  00F0               	movwf	?_isspace
  6734  0BA5  0873               	movf	??_isspace+1,w
  6735  0BA6  00F1               	movwf	?_isspace+1
  6736  0BA7                     l1026:
  6737  0BA7  0008               	return
  6738  0BA8                     __end_of_isspace:
  6739                           
  6740                           	psect	text24
  6741  0AFF                     __ptext24:	
  6742 ;; *************** function _isdigit *****************
  6743 ;; Defined at:
  6744 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isdigit.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  c               2    0[COMMON] int 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  2    0[COMMON] int 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6758 ;;      Params:         2       0       0       0       0       0
  6759 ;;      Locals:         0       0       0       0       0       0
  6760 ;;      Temps:          4       0       0       0       0       0
  6761 ;;      Totals:         6       0       0       0       0       0
  6762 ;;Total ram usage:        6 bytes
  6763 ;; Hardware stack levels used: 1
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_vfpfcnvrt
  6768 ;;		_atoi
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772  0AFF                     _isdigit:	
  6773                           ;psect for function _isdigit
  6774                           
  6775  0AFF                     l2012:	
  6776                           ;incstack = 0
  6777                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6778                           
  6779  0AFF  0870               	movf	isdigit@c,w
  6780  0B00  3ED0               	addlw	208
  6781  0B01  00F2               	movwf	??_isdigit
  6782  0B02  30FF               	movlw	255
  6783  0B03  3D71               	addwfc	isdigit@c+1,w
  6784  0B04  00F3               	movwf	??_isdigit+1
  6785  0B05  3000               	movlw	0
  6786  0B06  0273               	subwf	??_isdigit+1,w
  6787  0B07  300A               	movlw	10
  6788  0B08  1903               	skipnz
  6789  0B09  0272               	subwf	??_isdigit,w
  6790  0B0A  1C03               	skipc
  6791  0B0B  2B0D               	goto	u1391
  6792  0B0C  2B0F               	goto	u1390
  6793  0B0D                     u1391:
  6794  0B0D  3001               	movlw	1
  6795  0B0E  2B10               	goto	u1400
  6796  0B0F                     u1390:
  6797  0B0F  3000               	movlw	0
  6798  0B10                     u1400:
  6799  0B10  00F4               	movwf	??_isdigit+2
  6800  0B11  01F5               	clrf	??_isdigit+3
  6801  0B12  0874               	movf	??_isdigit+2,w
  6802  0B13  00F0               	movwf	?_isdigit
  6803  0B14  0875               	movf	??_isdigit+3,w
  6804  0B15  00F1               	movwf	?_isdigit+1
  6805  0B16                     l1018:
  6806  0B16  0008               	return
  6807  0B17                     __end_of_isdigit:
  6808                           
  6809                           	psect	text25
  6810  0BEE                     __ptext25:	
  6811 ;; *************** function _lcd_clear *****************
  6812 ;; Defined at:
  6813 ;;		line 119 in file "lcd_lib.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  col             1    7[BANK0 ] unsigned char 
  6818 ;;  row             1    6[BANK0 ] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6828 ;;      Params:         0       0       0       0       0       0
  6829 ;;      Locals:         0       2       0       0       0       0
  6830 ;;      Temps:          1       0       0       0       0       0
  6831 ;;      Totals:         1       2       0       0       0       0
  6832 ;;Total ram usage:        3 bytes
  6833 ;; Hardware stack levels used: 1
  6834 ;; Hardware stack levels required when called: 5
  6835 ;; This function calls:
  6836 ;;		_lcd_print
  6837 ;;		_lcd_set_cursor
  6838 ;; This function is called by:
  6839 ;;		_print_train
  6840 ;;		_print_remaing
  6841 ;;		_print_money
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845  0BEE                     _lcd_clear:	
  6846                           ;psect for function _lcd_clear
  6847                           
  6848  0BEE                     l2316:	
  6849                           ;incstack = 0
  6850                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6851                           
  6852                           
  6853                           ;lcd_lib.c: 120:     for(uint8_t row = 0; row < 2; row++){
  6854  0BEE  0020               	movlb	0	; select bank0
  6855  0BEF  01A6               	clrf	lcd_clear@row
  6856  0BF0                     l2322:
  6857                           
  6858                           ;lcd_lib.c: 121:         for(uint8_t col = 0; col < 16; col++){
  6859  0BF0  01A7               	clrf	lcd_clear@col
  6860  0BF1                     l2328:
  6861                           
  6862                           ;lcd_lib.c: 122:             lcd_set_cursor(col, row);
  6863  0BF1  0826               	movf	lcd_clear@row,w
  6864  0BF2  00FC               	movwf	??_lcd_clear
  6865  0BF3  087C               	movf	??_lcd_clear,w
  6866  0BF4  00F8               	movwf	lcd_set_cursor@row
  6867  0BF5  0827               	movf	lcd_clear@col,w
  6868  0BF6  318C  243F  318B   	fcall	_lcd_set_cursor
  6869  0BF9                     l2330:
  6870                           
  6871                           ;lcd_lib.c: 123:             lcd_print(" ");
  6872  0BF9  3040               	movlw	low (STR_7| (0+32768))
  6873  0BFA  00F8               	movwf	lcd_print@str
  6874  0BFB  3088               	movlw	high (STR_7| (0+32768))
  6875  0BFC  00F9               	movwf	lcd_print@str+1
  6876  0BFD  318B  234B  318B   	fcall	_lcd_print
  6877  0C00                     l2332:
  6878                           
  6879                           ;lcd_lib.c: 124:         }
  6880  0C00  3001               	movlw	1
  6881  0C01  00FC               	movwf	??_lcd_clear
  6882  0C02  087C               	movf	??_lcd_clear,w
  6883  0C03  0020               	movlb	0	; select bank0
  6884  0C04  07A7               	addwf	lcd_clear@col,f
  6885  0C05                     l2334:
  6886  0C05  3010               	movlw	16
  6887  0C06  0227               	subwf	lcd_clear@col,w
  6888  0C07  1C03               	skipc
  6889  0C08  2C0A               	goto	u1811
  6890  0C09  2C0B               	goto	u1810
  6891  0C0A                     u1811:
  6892  0C0A  2BF1               	goto	l2328
  6893  0C0B                     u1810:
  6894  0C0B                     l2336:
  6895                           
  6896                           ;lcd_lib.c: 125:     }
  6897  0C0B  3001               	movlw	1
  6898  0C0C  00FC               	movwf	??_lcd_clear
  6899  0C0D  087C               	movf	??_lcd_clear,w
  6900  0C0E  07A6               	addwf	lcd_clear@row,f
  6901  0C0F                     l2338:
  6902  0C0F  3002               	movlw	2
  6903  0C10  0226               	subwf	lcd_clear@row,w
  6904  0C11  1C03               	skipc
  6905  0C12  2C14               	goto	u1821
  6906  0C13  2C15               	goto	u1820
  6907  0C14                     u1821:
  6908  0C14  2BF0               	goto	l2322
  6909  0C15                     u1820:
  6910  0C15                     l207:
  6911  0C15  0008               	return
  6912  0C16                     __end_of_lcd_clear:
  6913                           
  6914                           	psect	text26
  6915  0C3F                     __ptext26:	
  6916 ;; *************** function _lcd_set_cursor *****************
  6917 ;; Defined at:
  6918 ;;		line 128 in file "lcd_lib.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  col             1    wreg     unsigned char 
  6921 ;;  row             1    8[COMMON] unsigned char 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;  col             1    4[BANK0 ] unsigned char 
  6924 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  6925 ;;  cmd             1    5[BANK0 ] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6935 ;;      Params:         1       0       0       0       0       0
  6936 ;;      Locals:         0       6       0       0       0       0
  6937 ;;      Temps:          1       0       0       0       0       0
  6938 ;;      Totals:         2       6       0       0       0       0
  6939 ;;Total ram usage:        8 bytes
  6940 ;; Hardware stack levels used: 1
  6941 ;; Hardware stack levels required when called: 4
  6942 ;; This function calls:
  6943 ;;		_command
  6944 ;; This function is called by:
  6945 ;;		_main
  6946 ;;		_print_train
  6947 ;;		_print_remaing
  6948 ;;		_print_money
  6949 ;;		_lcd_clear
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953  0C3F                     _lcd_set_cursor:	
  6954                           ;psect for function _lcd_set_cursor
  6955                           
  6956                           
  6957                           ;incstack = 0
  6958                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6959                           ;lcd_set_cursor@col stored from wreg
  6960  0C3F  0020               	movlb	0	; select bank0
  6961  0C40  00A4               	movwf	lcd_set_cursor@col
  6962  0C41                     l2244:
  6963                           
  6964                           ;lcd_lib.c: 129:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  6965  0C41  0021               	movlb	1	; select bank1
  6966  0C42  0865               	movf	(lcd_set_cursor@F2511+3)^(0+128),w
  6967  0C43  0020               	movlb	0	; select bank0
  6968  0C44  00A3               	movwf	lcd_set_cursor@row_offsets+3
  6969  0C45  0021               	movlb	1	; select bank1
  6970  0C46  0864               	movf	(lcd_set_cursor@F2511+2)^(0+128),w
  6971  0C47  0020               	movlb	0	; select bank0
  6972  0C48  00A2               	movwf	lcd_set_cursor@row_offsets+2
  6973  0C49  0021               	movlb	1	; select bank1
  6974  0C4A  0863               	movf	(lcd_set_cursor@F2511+1)^(0+128),w
  6975  0C4B  0020               	movlb	0	; select bank0
  6976  0C4C  00A1               	movwf	lcd_set_cursor@row_offsets+1
  6977  0C4D  0021               	movlb	1	; select bank1
  6978  0C4E  0862               	movf	lcd_set_cursor@F2511^(0+128),w
  6979  0C4F  0020               	movlb	0	; select bank0
  6980  0C50  00A0               	movwf	lcd_set_cursor@row_offsets
  6981                           
  6982                           ;lcd_lib.c: 130:     if(row > 2){
  6983  0C51  3003               	movlw	3
  6984  0C52  0278               	subwf	lcd_set_cursor@row,w
  6985  0C53  1C03               	skipc
  6986  0C54  2C56               	goto	u1751
  6987  0C55  2C57               	goto	u1750
  6988  0C56                     u1751:
  6989  0C56  2C59               	goto	l2248
  6990  0C57                     u1750:
  6991  0C57                     l2246:
  6992                           
  6993                           ;lcd_lib.c: 131:         row = 2 - 1;
  6994  0C57  01F8               	clrf	lcd_set_cursor@row
  6995  0C58  0AF8               	incf	lcd_set_cursor@row,f
  6996  0C59                     l2248:
  6997                           
  6998                           ;lcd_lib.c: 133:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
  6999  0C59  0878               	movf	lcd_set_cursor@row,w
  7000  0C5A  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  7001  0C5B  0086               	movwf	6
  7002  0C5C  0187               	clrf	7
  7003  0C5D  0801               	movf	1,w
  7004  0C5E  0724               	addwf	lcd_set_cursor@col,w
  7005  0C5F  3880               	iorlw	128
  7006  0C60  00F9               	movwf	??_lcd_set_cursor
  7007  0C61  0879               	movf	??_lcd_set_cursor,w
  7008  0C62  00A5               	movwf	lcd_set_cursor@cmd
  7009  0C63                     l2250:
  7010                           
  7011                           ;lcd_lib.c: 134:     command(cmd, 0);
  7012  0C63  01F2               	clrf	command@mode
  7013  0C64  0825               	movf	lcd_set_cursor@cmd,w
  7014  0C65  318C  249A  318C   	fcall	_command
  7015  0C68                     l213:
  7016  0C68  0008               	return
  7017  0C69                     __end_of_lcd_set_cursor:
  7018                           
  7019                           	psect	text27
  7020  0B4B                     __ptext27:	
  7021 ;; *************** function _lcd_print *****************
  7022 ;; Defined at:
  7023 ;;		line 137 in file "lcd_lib.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  str             2    8[COMMON] PTR unsigned char 
  7026 ;;		 -> STR_7(2), line(16), 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  cmd             1   11[COMMON] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7038 ;;      Params:         2       0       0       0       0       0
  7039 ;;      Locals:         1       0       0       0       0       0
  7040 ;;      Temps:          1       0       0       0       0       0
  7041 ;;      Totals:         4       0       0       0       0       0
  7042 ;;Total ram usage:        4 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; Hardware stack levels required when called: 4
  7045 ;; This function calls:
  7046 ;;		_command
  7047 ;; This function is called by:
  7048 ;;		_print_train
  7049 ;;		_print_remaing
  7050 ;;		_print_money
  7051 ;;		_lcd_clear
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055  0B4B                     _lcd_print:	
  7056                           ;psect for function _lcd_print
  7057                           
  7058  0B4B                     l2252:	
  7059                           ;incstack = 0
  7060                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7061                           
  7062                           
  7063                           ;lcd_lib.c: 138:     while (*str) {
  7064  0B4B  2B5E               	goto	l2260
  7065  0B4C                     l2254:
  7066                           
  7067                           ;lcd_lib.c: 139:         uint8_t cmd = *str++;
  7068  0B4C  0878               	movf	lcd_print@str,w
  7069  0B4D  0084               	movwf	4
  7070  0B4E  0879               	movf	lcd_print@str+1,w
  7071  0B4F  0085               	movwf	5
  7072  0B50  0800               	movf	0,w	;code access
  7073  0B51  00FA               	movwf	??_lcd_print
  7074  0B52  087A               	movf	??_lcd_print,w
  7075  0B53  00FB               	movwf	lcd_print@cmd
  7076  0B54                     l2256:
  7077  0B54  3001               	movlw	1
  7078  0B55  07F8               	addwf	lcd_print@str,f
  7079  0B56  3000               	movlw	0
  7080  0B57  3DF9               	addwfc	lcd_print@str+1,f
  7081  0B58                     l2258:
  7082                           
  7083                           ;lcd_lib.c: 140:         command(cmd, 0b00000001);
  7084  0B58  01F2               	clrf	command@mode
  7085  0B59  0AF2               	incf	command@mode,f
  7086  0B5A  087B               	movf	lcd_print@cmd,w
  7087  0B5B  318C  249A  318B   	fcall	_command
  7088  0B5E                     l2260:
  7089                           
  7090                           ;lcd_lib.c: 138:     while (*str) {
  7091  0B5E  0878               	movf	lcd_print@str,w
  7092  0B5F  0084               	movwf	4
  7093  0B60  0879               	movf	lcd_print@str+1,w
  7094  0B61  0085               	movwf	5
  7095  0B62  0012               	moviw fsr0++
  7096  0B63  1D03               	btfss	3,2
  7097  0B64  2B66               	goto	u1761
  7098  0B65  2B67               	goto	u1760
  7099  0B66                     u1761:
  7100  0B66  2B4C               	goto	l2254
  7101  0B67                     u1760:
  7102  0B67                     l219:
  7103  0B67  0008               	return
  7104  0B68                     __end_of_lcd_print:
  7105                           
  7106                           	psect	text28
  7107  0C9A                     __ptext28:	
  7108 ;; *************** function _command *****************
  7109 ;; Defined at:
  7110 ;;		line 144 in file "lcd_lib.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  val             1    wreg     unsigned char 
  7113 ;;  mode            1    2[COMMON] unsigned char 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  val             1    5[COMMON] unsigned char 
  7116 ;;  lownib          1    7[COMMON] unsigned char 
  7117 ;;  highnib         1    6[COMMON] unsigned char 
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  1    wreg      void 
  7120 ;; Registers used:
  7121 ;;		wreg, status,2, status,0, pclath, cstack
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7127 ;;      Params:         1       0       0       0       0       0
  7128 ;;      Locals:         3       0       0       0       0       0
  7129 ;;      Temps:          2       0       0       0       0       0
  7130 ;;      Totals:         6       0       0       0       0       0
  7131 ;;Total ram usage:        6 bytes
  7132 ;; Hardware stack levels used: 1
  7133 ;; Hardware stack levels required when called: 3
  7134 ;; This function calls:
  7135 ;;		_lcd_cmd
  7136 ;; This function is called by:
  7137 ;;		_lcd_set_cursor
  7138 ;;		_lcd_print
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142  0C9A                     _command:	
  7143                           ;psect for function _command
  7144                           
  7145                           
  7146                           ;incstack = 0
  7147                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  7148                           ;command@val stored from wreg
  7149  0C9A  00F5               	movwf	command@val
  7150  0C9B                     l2124:
  7151                           
  7152                           ;lcd_lib.c: 145:     uint8_t highnib = (val & 0xf0) | _backlightval | mode;
  7153  0C9B  0875               	movf	command@val,w
  7154  0C9C  39F0               	andlw	240
  7155  0C9D  0021               	movlb	1	; select bank1
  7156  0C9E  0451               	iorwf	__backlightval^(0+128),w
  7157  0C9F  0472               	iorwf	command@mode,w
  7158  0CA0  00F3               	movwf	??_command
  7159  0CA1  0873               	movf	??_command,w
  7160  0CA2  00F6               	movwf	command@highnib
  7161                           
  7162                           ;lcd_lib.c: 146:  uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
  7163  0CA3  0875               	movf	command@val,w
  7164  0CA4  00F3               	movwf	??_command
  7165  0CA5  3003               	movlw	3
  7166  0CA6                     u1635:
  7167  0CA6  35F3               	lslf	??_command,f
  7168  0CA7  3EFF               	addlw	-1
  7169  0CA8  1D03               	skipz
  7170  0CA9  2CA6               	goto	u1635
  7171  0CAA  3573               	lslf	??_command,w
  7172  0CAB  39F0               	andlw	240
  7173  0CAC  0451               	iorwf	__backlightval^(0+128),w
  7174  0CAD  0472               	iorwf	command@mode,w
  7175  0CAE  00F4               	movwf	??_command+1
  7176  0CAF  0874               	movf	??_command+1,w
  7177  0CB0  00F7               	movwf	command@lownib
  7178  0CB1                     l2126:
  7179                           
  7180                           ;lcd_lib.c: 148:  lcd_cmd(highnib);
  7181  0CB1  0876               	movf	command@highnib,w
  7182  0CB2  318A  2295  318C   	fcall	_lcd_cmd
  7183  0CB5                     l2128:
  7184                           
  7185                           ;lcd_lib.c: 149:     lcd_cmd(highnib | 0b00000100);
  7186  0CB5  0876               	movf	command@highnib,w
  7187  0CB6  3804               	iorlw	4
  7188  0CB7  318A  2295  318C   	fcall	_lcd_cmd
  7189  0CBA                     l2130:
  7190                           
  7191                           ;lcd_lib.c: 150:     lcd_cmd(highnib & ~0b00000100);
  7192  0CBA  0876               	movf	command@highnib,w
  7193  0CBB  39FB               	andlw	251
  7194  0CBC  318A  2295  318C   	fcall	_lcd_cmd
  7195  0CBF                     l2132:
  7196                           
  7197                           ;lcd_lib.c: 152:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7198  0CBF  3042               	movlw	66
  7199  0CC0                     u1937:
  7200  0CC0  0B89               	decfsz	9,f
  7201  0CC1  2CC0               	goto	u1937
  7202  0CC2  3200               	nop2
  7203  0CC3                     l2134:
  7204                           
  7205                           ;lcd_lib.c: 154:  lcd_cmd(lownib);
  7206  0CC3  0877               	movf	command@lownib,w
  7207  0CC4  318A  2295  318C   	fcall	_lcd_cmd
  7208  0CC7                     l2136:
  7209                           
  7210                           ;lcd_lib.c: 155:     lcd_cmd(lownib | 0b00000100);
  7211  0CC7  0877               	movf	command@lownib,w
  7212  0CC8  3804               	iorlw	4
  7213  0CC9  318A  2295  318C   	fcall	_lcd_cmd
  7214  0CCC                     l2138:
  7215                           
  7216                           ;lcd_lib.c: 156:     lcd_cmd(lownib & ~0b00000100);
  7217  0CCC  0877               	movf	command@lownib,w
  7218  0CCD  39FB               	andlw	251
  7219  0CCE  318A  2295  318C   	fcall	_lcd_cmd
  7220  0CD1                     l222:
  7221  0CD1  0008               	return
  7222  0CD2                     __end_of_command:
  7223                           
  7224                           	psect	text29
  7225  02D9                     __ptext29:	
  7226 ;; *************** function _lcd_init *****************
  7227 ;; Defined at:
  7228 ;;		line 27 in file "lcd_lib.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;		None
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      void 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0, pclath, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7242 ;;      Params:         0       0       0       0       0       0
  7243 ;;      Locals:         0       0       0       0       0       0
  7244 ;;      Temps:          2       0       0       0       0       0
  7245 ;;      Totals:         2       0       0       0       0       0
  7246 ;;Total ram usage:        2 bytes
  7247 ;; Hardware stack levels used: 1
  7248 ;; Hardware stack levels required when called: 3
  7249 ;; This function calls:
  7250 ;;		_lcd_cmd
  7251 ;; This function is called by:
  7252 ;;		_main
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256  02D9                     _lcd_init:	
  7257                           ;psect for function _lcd_init
  7258                           
  7259  02D9                     l2360:	
  7260                           ;incstack = 0
  7261                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7262                           
  7263                           
  7264                           ;lcd_lib.c: 28:     _delay((unsigned long)((400)*(8000000/4000.0)));
  7265  02D9  3005               	movlw	5
  7266  02DA  00F3               	movwf	??_lcd_init+1
  7267  02DB  300F               	movlw	15
  7268  02DC  00F2               	movwf	??_lcd_init
  7269  02DD  30F1               	movlw	241
  7270  02DE                     u1947:
  7271  02DE  0B89               	decfsz	9,f
  7272  02DF  2ADE               	goto	u1947
  7273  02E0  0BF2               	decfsz	??_lcd_init,f
  7274  02E1  2ADE               	goto	u1947
  7275  02E2  0BF3               	decfsz	??_lcd_init+1,f
  7276  02E3  2ADE               	goto	u1947
  7277  02E4  0000               	nop
  7278  02E5                     l2362:
  7279                           
  7280                           ;lcd_lib.c: 30:     lcd_cmd(0x30);
  7281  02E5  3030               	movlw	48
  7282  02E6  318A  2295  3182   	fcall	_lcd_cmd
  7283  02E9                     l2364:
  7284                           
  7285                           ;lcd_lib.c: 31:     lcd_cmd(0x34);
  7286  02E9  3034               	movlw	52
  7287  02EA  318A  2295  3182   	fcall	_lcd_cmd
  7288  02ED                     l2366:
  7289                           
  7290                           ;lcd_lib.c: 32:     lcd_cmd(0x30);
  7291  02ED  3030               	movlw	48
  7292  02EE  318A  2295  3182   	fcall	_lcd_cmd
  7293  02F1                     l2368:
  7294                           
  7295                           ;lcd_lib.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7296  02F1  300D               	movlw	13
  7297  02F2  00F2               	movwf	??_lcd_init
  7298  02F3  30FC               	movlw	252
  7299  02F4                     u1957:
  7300  02F4  0B89               	decfsz	9,f
  7301  02F5  2AF4               	goto	u1957
  7302  02F6  0BF2               	decfsz	??_lcd_init,f
  7303  02F7  2AF4               	goto	u1957
  7304                           
  7305                           ;lcd_lib.c: 35:     lcd_cmd(0x30);
  7306  02F8  3030               	movlw	48
  7307  02F9  318A  2295  3182   	fcall	_lcd_cmd
  7308                           
  7309                           ;lcd_lib.c: 36:     lcd_cmd(0x34);
  7310  02FC  3034               	movlw	52
  7311  02FD  318A  2295  3182   	fcall	_lcd_cmd
  7312                           
  7313                           ;lcd_lib.c: 37:     lcd_cmd(0x30);
  7314  0300  3030               	movlw	48
  7315  0301  318A  2295  3182   	fcall	_lcd_cmd
  7316  0304                     l2370:
  7317                           
  7318                           ;lcd_lib.c: 38:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7319  0304  300D               	movlw	13
  7320  0305  00F2               	movwf	??_lcd_init
  7321  0306  30FC               	movlw	252
  7322  0307                     u1967:
  7323  0307  0B89               	decfsz	9,f
  7324  0308  2B07               	goto	u1967
  7325  0309  0BF2               	decfsz	??_lcd_init,f
  7326  030A  2B07               	goto	u1967
  7327  030B                     l2372:
  7328                           
  7329                           ;lcd_lib.c: 40:     lcd_cmd(0x30);
  7330  030B  3030               	movlw	48
  7331  030C  318A  2295  3182   	fcall	_lcd_cmd
  7332  030F                     l2374:
  7333                           
  7334                           ;lcd_lib.c: 41:     lcd_cmd(0x34);
  7335  030F  3034               	movlw	52
  7336  0310  318A  2295  3182   	fcall	_lcd_cmd
  7337  0313                     l2376:
  7338                           
  7339                           ;lcd_lib.c: 42:     lcd_cmd(0x30);
  7340  0313  3030               	movlw	48
  7341  0314  318A  2295  3182   	fcall	_lcd_cmd
  7342                           
  7343                           ;lcd_lib.c: 43:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  7344  0317  30C8               	movlw	200
  7345  0318                     u1977:
  7346  0318  0B89               	decfsz	9,f
  7347  0319  2B18               	goto	u1977
  7348  031A                     l2378:
  7349                           
  7350                           ;lcd_lib.c: 45:     lcd_cmd(0x20);
  7351  031A  3020               	movlw	32
  7352  031B  318A  2295  3182   	fcall	_lcd_cmd
  7353  031E                     l2380:
  7354                           
  7355                           ;lcd_lib.c: 46:     lcd_cmd(0x24);
  7356  031E  3024               	movlw	36
  7357  031F  318A  2295  3182   	fcall	_lcd_cmd
  7358  0322                     l2382:
  7359                           
  7360                           ;lcd_lib.c: 47:     lcd_cmd(0x20);
  7361  0322  3020               	movlw	32
  7362  0323  318A  2295  3182   	fcall	_lcd_cmd
  7363  0326                     l2384:
  7364                           
  7365                           ;lcd_lib.c: 48:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7366  0326  3006               	movlw	6
  7367  0327                     u1987:
  7368  0327  0B89               	decfsz	9,f
  7369  0328  2B27               	goto	u1987
  7370  0329  3200               	nop2
  7371                           
  7372                           ;lcd_lib.c: 51:     lcd_cmd(0x20);
  7373  032A  3020               	movlw	32
  7374  032B  318A  2295  3182   	fcall	_lcd_cmd
  7375                           
  7376                           ;lcd_lib.c: 52:     lcd_cmd(0x24);
  7377  032E  3024               	movlw	36
  7378  032F  318A  2295  3182   	fcall	_lcd_cmd
  7379                           
  7380                           ;lcd_lib.c: 53:     lcd_cmd(0x20);
  7381  0332  3020               	movlw	32
  7382  0333  318A  2295  3182   	fcall	_lcd_cmd
  7383  0336                     l2386:
  7384                           
  7385                           ;lcd_lib.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7386  0336  3042               	movlw	66
  7387  0337                     u1997:
  7388  0337  0B89               	decfsz	9,f
  7389  0338  2B37               	goto	u1997
  7390  0339  3200               	nop2
  7391  033A                     l2388:
  7392                           
  7393                           ;lcd_lib.c: 57:     lcd_cmd(0x80);
  7394  033A  3080               	movlw	128
  7395  033B  318A  2295  3182   	fcall	_lcd_cmd
  7396  033E                     l2390:
  7397                           
  7398                           ;lcd_lib.c: 58:     lcd_cmd(0x84);
  7399  033E  3084               	movlw	132
  7400  033F  318A  2295  3182   	fcall	_lcd_cmd
  7401  0342                     l2392:
  7402                           
  7403                           ;lcd_lib.c: 59:     lcd_cmd(0x80);
  7404  0342  3080               	movlw	128
  7405  0343  318A  2295  3182   	fcall	_lcd_cmd
  7406  0346                     l2394:
  7407                           
  7408                           ;lcd_lib.c: 63:     lcd_cmd(0x00);
  7409  0346  3000               	movlw	0
  7410  0347  318A  2295  3182   	fcall	_lcd_cmd
  7411  034A                     l2396:
  7412                           
  7413                           ;lcd_lib.c: 64:     lcd_cmd(0x04);
  7414  034A  3004               	movlw	4
  7415  034B  318A  2295  3182   	fcall	_lcd_cmd
  7416  034E                     l2398:
  7417                           
  7418                           ;lcd_lib.c: 65:     lcd_cmd(0x00);
  7419  034E  3000               	movlw	0
  7420  034F  318A  2295  3182   	fcall	_lcd_cmd
  7421  0352                     l2400:
  7422                           
  7423                           ;lcd_lib.c: 67:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7424  0352  3042               	movlw	66
  7425  0353                     u2007:
  7426  0353  0B89               	decfsz	9,f
  7427  0354  2B53               	goto	u2007
  7428  0355  3200               	nop2
  7429                           
  7430                           ;lcd_lib.c: 69:     lcd_cmd(0xC0);
  7431  0356  30C0               	movlw	192
  7432  0357  318A  2295  3182   	fcall	_lcd_cmd
  7433                           
  7434                           ;lcd_lib.c: 70:     lcd_cmd(0xC4);
  7435  035A  30C4               	movlw	196
  7436  035B  318A  2295  3182   	fcall	_lcd_cmd
  7437                           
  7438                           ;lcd_lib.c: 71:     lcd_cmd(0xC0);
  7439  035E  30C0               	movlw	192
  7440  035F  318A  2295  3182   	fcall	_lcd_cmd
  7441                           
  7442                           ;lcd_lib.c: 75:     lcd_cmd(0x00);
  7443  0362  3000               	movlw	0
  7444  0363  318A  2295  3182   	fcall	_lcd_cmd
  7445                           
  7446                           ;lcd_lib.c: 76:     lcd_cmd(0x04);
  7447  0366  3004               	movlw	4
  7448  0367  318A  2295  3182   	fcall	_lcd_cmd
  7449                           
  7450                           ;lcd_lib.c: 77:     lcd_cmd(0x00);
  7451  036A  3000               	movlw	0
  7452  036B  318A  2295  3182   	fcall	_lcd_cmd
  7453  036E                     l2402:
  7454                           
  7455                           ;lcd_lib.c: 79:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7456  036E  3042               	movlw	66
  7457  036F                     u2017:
  7458  036F  0B89               	decfsz	9,f
  7459  0370  2B6F               	goto	u2017
  7460  0371  3200               	nop2
  7461  0372                     l2404:
  7462                           
  7463                           ;lcd_lib.c: 81:     lcd_cmd(0x10);
  7464  0372  3010               	movlw	16
  7465  0373  318A  2295  3182   	fcall	_lcd_cmd
  7466  0376                     l2406:
  7467                           
  7468                           ;lcd_lib.c: 82:     lcd_cmd(0x14);
  7469  0376  3014               	movlw	20
  7470  0377  318A  2295  3182   	fcall	_lcd_cmd
  7471  037A                     l2408:
  7472                           
  7473                           ;lcd_lib.c: 83:     lcd_cmd(0x10);
  7474  037A  3010               	movlw	16
  7475  037B  318A  2295  3182   	fcall	_lcd_cmd
  7476                           
  7477                           ;lcd_lib.c: 85:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7478  037E  300D               	movlw	13
  7479  037F  00F2               	movwf	??_lcd_init
  7480  0380  30FC               	movlw	252
  7481  0381                     u2027:
  7482  0381  0B89               	decfsz	9,f
  7483  0382  2B81               	goto	u2027
  7484  0383  0BF2               	decfsz	??_lcd_init,f
  7485  0384  2B81               	goto	u2027
  7486  0385                     l2410:
  7487                           
  7488                           ;lcd_lib.c: 88:     lcd_cmd(0x00);
  7489  0385  3000               	movlw	0
  7490  0386  318A  2295  3182   	fcall	_lcd_cmd
  7491  0389                     l2412:
  7492                           
  7493                           ;lcd_lib.c: 89:     lcd_cmd(0x04);
  7494  0389  3004               	movlw	4
  7495  038A  318A  2295  3182   	fcall	_lcd_cmd
  7496  038D                     l2414:
  7497                           
  7498                           ;lcd_lib.c: 90:     lcd_cmd(0x00);
  7499  038D  3000               	movlw	0
  7500  038E  318A  2295  3182   	fcall	_lcd_cmd
  7501  0391                     l2416:
  7502                           
  7503                           ;lcd_lib.c: 92:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7504  0391  3042               	movlw	66
  7505  0392                     u2037:
  7506  0392  0B89               	decfsz	9,f
  7507  0393  2B92               	goto	u2037
  7508  0394  3200               	nop2
  7509                           
  7510                           ;lcd_lib.c: 94:     lcd_cmd(0x60);
  7511  0395  3060               	movlw	96
  7512  0396  318A  2295  3182   	fcall	_lcd_cmd
  7513                           
  7514                           ;lcd_lib.c: 95:     lcd_cmd(0x64);
  7515  0399  3064               	movlw	100
  7516  039A  318A  2295  3182   	fcall	_lcd_cmd
  7517                           
  7518                           ;lcd_lib.c: 96:     lcd_cmd(0x60);
  7519  039D  3060               	movlw	96
  7520  039E  318A  2295  3182   	fcall	_lcd_cmd
  7521                           
  7522                           ;lcd_lib.c: 100:     lcd_cmd(0x00);
  7523  03A1  3000               	movlw	0
  7524  03A2  318A  2295  3182   	fcall	_lcd_cmd
  7525                           
  7526                           ;lcd_lib.c: 101:     lcd_cmd(0x04);
  7527  03A5  3004               	movlw	4
  7528  03A6  318A  2295  3182   	fcall	_lcd_cmd
  7529                           
  7530                           ;lcd_lib.c: 102:     lcd_cmd(0x00);
  7531  03A9  3000               	movlw	0
  7532  03AA  318A  2295  3182   	fcall	_lcd_cmd
  7533  03AD                     l2418:
  7534                           
  7535                           ;lcd_lib.c: 104:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7536  03AD  3042               	movlw	66
  7537  03AE                     u2047:
  7538  03AE  0B89               	decfsz	9,f
  7539  03AF  2BAE               	goto	u2047
  7540  03B0  3200               	nop2
  7541  03B1                     l2420:
  7542                           
  7543                           ;lcd_lib.c: 106:     lcd_cmd(0x20);
  7544  03B1  3020               	movlw	32
  7545  03B2  318A  2295  3182   	fcall	_lcd_cmd
  7546  03B5                     l2422:
  7547                           
  7548                           ;lcd_lib.c: 107:     lcd_cmd(0x24);
  7549  03B5  3024               	movlw	36
  7550  03B6  318A  2295  3182   	fcall	_lcd_cmd
  7551  03B9                     l2424:
  7552                           
  7553                           ;lcd_lib.c: 108:     lcd_cmd(0x20);
  7554  03B9  3020               	movlw	32
  7555  03BA  318A  2295  3182   	fcall	_lcd_cmd
  7556                           
  7557                           ;lcd_lib.c: 110:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7558  03BD  3008               	movlw	8
  7559  03BE  00F2               	movwf	??_lcd_init
  7560  03BF  30CA               	movlw	202
  7561  03C0                     u2057:
  7562  03C0  0B89               	decfsz	9,f
  7563  03C1  2BC0               	goto	u2057
  7564  03C2  0BF2               	decfsz	??_lcd_init,f
  7565  03C3  2BC0               	goto	u2057
  7566  03C4                     l197:
  7567  03C4  0008               	return
  7568  03C5                     __end_of_lcd_init:
  7569                           
  7570                           	psect	text30
  7571  0A77                     __ptext30:	
  7572 ;; *************** function _lcd_backlight *****************
  7573 ;; Defined at:
  7574 ;;		line 113 in file "lcd_lib.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;		None
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;		None
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      void 
  7581 ;; Registers used:
  7582 ;;		wreg, status,2, status,0, pclath, cstack
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7588 ;;      Params:         0       0       0       0       0       0
  7589 ;;      Locals:         0       0       0       0       0       0
  7590 ;;      Temps:          1       0       0       0       0       0
  7591 ;;      Totals:         1       0       0       0       0       0
  7592 ;;Total ram usage:        1 bytes
  7593 ;; Hardware stack levels used: 1
  7594 ;; Hardware stack levels required when called: 3
  7595 ;; This function calls:
  7596 ;;		_lcd_cmd
  7597 ;; This function is called by:
  7598 ;;		_main
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602  0A77                     _lcd_backlight:	
  7603                           ;psect for function _lcd_backlight
  7604                           
  7605  0A77                     l2426:	
  7606                           ;incstack = 0
  7607                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  7608                           
  7609                           
  7610                           ;lcd_lib.c: 114:     lcd_cmd(0x08);
  7611  0A77  3008               	movlw	8
  7612  0A78  318A  2295  318A   	fcall	_lcd_cmd
  7613  0A7B                     l2428:
  7614                           
  7615                           ;lcd_lib.c: 115:     _backlightval = 0x08;
  7616  0A7B  3008               	movlw	8
  7617  0A7C  00F2               	movwf	??_lcd_backlight
  7618  0A7D  0872               	movf	??_lcd_backlight,w
  7619  0A7E  0021               	movlb	1	; select bank1
  7620  0A7F  00D1               	movwf	__backlightval^(0+128)
  7621  0A80                     l2430:
  7622                           
  7623                           ;lcd_lib.c: 116:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7624  0A80  3006               	movlw	6
  7625  0A81                     u2067:
  7626  0A81  0B89               	decfsz	9,f
  7627  0A82  2A81               	goto	u2067
  7628  0A83  3200               	nop2
  7629  0A84                     l200:
  7630  0A84  0008               	return
  7631  0A85                     __end_of_lcd_backlight:
  7632                           
  7633                           	psect	text31
  7634  0A95                     __ptext31:	
  7635 ;; *************** function _lcd_cmd *****************
  7636 ;; Defined at:
  7637 ;;		line 19 in file "lcd_lib.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  cmd             1    wreg     unsigned char 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  cmd             1    1[COMMON] unsigned char 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      void 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0, pclath, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7651 ;;      Params:         0       0       0       0       0       0
  7652 ;;      Locals:         1       0       0       0       0       0
  7653 ;;      Temps:          0       0       0       0       0       0
  7654 ;;      Totals:         1       0       0       0       0       0
  7655 ;;Total ram usage:        1 bytes
  7656 ;; Hardware stack levels used: 1
  7657 ;; Hardware stack levels required when called: 2
  7658 ;; This function calls:
  7659 ;;		_i2c_start
  7660 ;;		_i2c_stop
  7661 ;;		_i2c_write
  7662 ;; This function is called by:
  7663 ;;		_lcd_init
  7664 ;;		_lcd_backlight
  7665 ;;		_command
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669  0A95                     _lcd_cmd:	
  7670                           ;psect for function _lcd_cmd
  7671                           
  7672                           
  7673                           ;incstack = 0
  7674                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  7675                           ;lcd_cmd@cmd stored from wreg
  7676  0A95  00F1               	movwf	lcd_cmd@cmd
  7677  0A96                     l2028:
  7678                           
  7679                           ;lcd_lib.c: 20:     i2c_start();
  7680  0A96  318A  223F  318A   	fcall	_i2c_start
  7681                           
  7682                           ;lcd_lib.c: 21:     i2c_write(0x3F << 1);
  7683  0A99  307E               	movlw	126
  7684  0A9A  318A  2285  318A   	fcall	_i2c_write
  7685                           
  7686                           ;lcd_lib.c: 22:     i2c_write(cmd);
  7687  0A9D  0871               	movf	lcd_cmd@cmd,w
  7688  0A9E  318A  2285  318A   	fcall	_i2c_write
  7689  0AA1                     l2030:
  7690                           
  7691                           ;lcd_lib.c: 23:     i2c_stop();
  7692  0AA1  318A  222E  318A   	fcall	_i2c_stop
  7693                           
  7694                           ;lcd_lib.c: 24:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7695  0AA4  3006               	movlw	6
  7696  0AA5                     u2077:
  7697  0AA5  0B89               	decfsz	9,f
  7698  0AA6  2AA5               	goto	u2077
  7699  0AA7  3200               	nop2
  7700  0AA8                     l194:
  7701  0AA8  0008               	return
  7702  0AA9                     __end_of_lcd_cmd:
  7703                           
  7704                           	psect	text32
  7705  0A85                     __ptext32:	
  7706 ;; *************** function _i2c_write *****************
  7707 ;; Defined at:
  7708 ;;		line 26 in file "i2c.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  data            1    wreg     unsigned char 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;  data            1    0[COMMON] unsigned char 
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg, status,2, status,0, pclath, cstack
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7722 ;;      Params:         0       0       0       0       0       0
  7723 ;;      Locals:         1       0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0
  7725 ;;      Totals:         1       0       0       0       0       0
  7726 ;;Total ram usage:        1 bytes
  7727 ;; Hardware stack levels used: 1
  7728 ;; Hardware stack levels required when called: 1
  7729 ;; This function calls:
  7730 ;;		_i2c_wait
  7731 ;; This function is called by:
  7732 ;;		_lcd_cmd
  7733 ;;		__read
  7734 ;;		_write_date
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738  0A85                     _i2c_write:	
  7739                           ;psect for function _i2c_write
  7740                           
  7741                           
  7742                           ;incstack = 0
  7743                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  7744                           ;i2c_write@data stored from wreg
  7745  0A85  00F0               	movwf	i2c_write@data
  7746  0A86                     l1900:
  7747                           
  7748                           ;i2c.c: 27:     SSP2BUF = data;
  7749  0A86  0870               	movf	i2c_write@data,w
  7750  0A87  0024               	movlb	4	; select bank4
  7751  0A88  0099               	movwf	25	;volatile
  7752  0A89                     l163:	
  7753                           ;i2c.c: 28:     while(SSP2STATbits.BF);
  7754                           
  7755  0A89  181C               	btfsc	28,0	;volatile
  7756  0A8A  2A8C               	goto	u1071
  7757  0A8B  2A8D               	goto	u1070
  7758  0A8C                     u1071:
  7759  0A8C  2A89               	goto	l163
  7760  0A8D                     u1070:
  7761  0A8D                     l166:
  7762  0A8D  1B1E               	btfsc	30,6	;volatile
  7763  0A8E  2A90               	goto	u1081
  7764  0A8F  2A91               	goto	u1080
  7765  0A90                     u1081:
  7766  0A90  2A8D               	goto	l166
  7767  0A91                     u1080:
  7768  0A91                     l1902:
  7769                           
  7770                           ;i2c.c: 30:     i2c_wait();
  7771  0A91  318A  2253  318A   	fcall	_i2c_wait
  7772  0A94                     l169:
  7773  0A94  0008               	return
  7774  0A95                     __end_of_i2c_write:
  7775                           
  7776                           	psect	text33
  7777  0A2E                     __ptext33:	
  7778 ;; *************** function _i2c_stop *****************
  7779 ;; Defined at:
  7780 ;;		line 15 in file "i2c.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		None
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7794 ;;      Params:         0       0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0
  7797 ;;      Totals:         0       0       0       0       0       0
  7798 ;;Total ram usage:        0 bytes
  7799 ;; Hardware stack levels used: 1
  7800 ;; This function calls:
  7801 ;;		Nothing
  7802 ;; This function is called by:
  7803 ;;		_lcd_cmd
  7804 ;;		__read
  7805 ;;		_write_date
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809  0A2E                     _i2c_stop:	
  7810                           ;psect for function _i2c_stop
  7811                           
  7812  0A2E                     l1898:	
  7813                           ;incstack = 0
  7814                           ; Regs used in _i2c_stop: []
  7815                           
  7816                           
  7817                           ;i2c.c: 16:     SSP2CON2bits.PEN = 1;
  7818  0A2E  0024               	movlb	4	; select bank4
  7819  0A2F  151E               	bsf	30,2	;volatile
  7820  0A30                     l151:	
  7821                           ;i2c.c: 17:     while(SSP2CON2bits.PEN);
  7822                           
  7823  0A30  191E               	btfsc	30,2	;volatile
  7824  0A31  2A33               	goto	u1061
  7825  0A32  2A34               	goto	u1060
  7826  0A33                     u1061:
  7827  0A33  2A30               	goto	l151
  7828  0A34                     u1060:
  7829  0A34                     l154:
  7830  0A34  0008               	return
  7831  0A35                     __end_of_i2c_stop:
  7832                           
  7833                           	psect	text34
  7834  0A3F                     __ptext34:	
  7835 ;; *************** function _i2c_start *****************
  7836 ;; Defined at:
  7837 ;;		line 9 in file "i2c.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;		None
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;		None
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0, pclath, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7851 ;;      Params:         0       0       0       0       0       0
  7852 ;;      Locals:         0       0       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0       0
  7854 ;;      Totals:         0       0       0       0       0       0
  7855 ;;Total ram usage:        0 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; Hardware stack levels required when called: 1
  7858 ;; This function calls:
  7859 ;;		_i2c_wait
  7860 ;; This function is called by:
  7861 ;;		_lcd_cmd
  7862 ;;		__read
  7863 ;;		_write_date
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867  0A3F                     _i2c_start:	
  7868                           ;psect for function _i2c_start
  7869                           
  7870  0A3F                     l1894:	
  7871                           ;incstack = 0
  7872                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7873                           
  7874                           
  7875                           ;i2c.c: 10:     i2c_wait();
  7876  0A3F  318A  2253  318A   	fcall	_i2c_wait
  7877  0A42                     l1896:
  7878                           
  7879                           ;i2c.c: 11:     SSP2CON2bits.SEN = 1;
  7880  0A42  0024               	movlb	4	; select bank4
  7881  0A43  141E               	bsf	30,0	;volatile
  7882  0A44                     l145:	
  7883                           ;i2c.c: 12:     while(SSP2CON2bits.SEN);
  7884                           
  7885  0A44  181E               	btfsc	30,0	;volatile
  7886  0A45  2A47               	goto	u1051
  7887  0A46  2A48               	goto	u1050
  7888  0A47                     u1051:
  7889  0A47  2A44               	goto	l145
  7890  0A48                     u1050:
  7891  0A48                     l148:
  7892  0A48  0008               	return
  7893  0A49                     __end_of_i2c_start:
  7894                           
  7895                           	psect	text35
  7896  0A53                     __ptext35:	
  7897 ;; *************** function _i2c_wait *****************
  7898 ;; Defined at:
  7899 ;;		line 5 in file "i2c.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;		None
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;		None
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  1    wreg      void 
  7906 ;; Registers used:
  7907 ;;		wreg, status,2
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7913 ;;      Params:         0       0       0       0       0       0
  7914 ;;      Locals:         0       0       0       0       0       0
  7915 ;;      Temps:          0       0       0       0       0       0
  7916 ;;      Totals:         0       0       0       0       0       0
  7917 ;;Total ram usage:        0 bytes
  7918 ;; Hardware stack levels used: 1
  7919 ;; This function calls:
  7920 ;;		Nothing
  7921 ;; This function is called by:
  7922 ;;		_i2c_start
  7923 ;;		_i2c_repeated_start
  7924 ;;		_i2c_write
  7925 ;;		_i2c_read
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929  0A53                     _i2c_wait:	
  7930                           ;psect for function _i2c_wait
  7931                           
  7932  0A53                     l1870:	
  7933                           ;incstack = 0
  7934                           ; Regs used in _i2c_wait: [wreg+status,2]
  7935                           
  7936  0A53                     l1872:	
  7937                           ;i2c.c: 6:     while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  7938                           
  7939  0A53  0024               	movlb	4	; select bank4
  7940  0A54  081E               	movf	30,w	;volatile
  7941  0A55  391F               	andlw	31
  7942  0A56  1D03               	btfss	3,2
  7943  0A57  2A59               	goto	u1011
  7944  0A58  2A5A               	goto	u1010
  7945  0A59                     u1011:
  7946  0A59  2A53               	goto	l1872
  7947  0A5A                     u1010:
  7948  0A5A                     l1874:
  7949  0A5A  191C               	btfsc	28,2	;volatile
  7950  0A5B  2A5D               	goto	u1021
  7951  0A5C  2A5E               	goto	u1020
  7952  0A5D                     u1021:
  7953  0A5D  2A53               	goto	l1872
  7954  0A5E                     u1020:
  7955  0A5E                     l142:
  7956  0A5E  0008               	return
  7957  0A5F                     __end_of_i2c_wait:
  7958                           
  7959                           	psect	text36
  7960  0072                     __ptext36:	
  7961 ;; *************** function _get_next *****************
  7962 ;; Defined at:
  7963 ;;		line 13 in file "train_lib.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  next            2    6[COMMON] PTR struct train
  7966 ;;		 -> main@next1(2), main@next(2), 
  7967 ;;  hour            1    8[COMMON] unsigned char 
  7968 ;;  min             1    9[COMMON] unsigned char 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  t_min           2   14[BANK0 ] unsigned short 
  7971 ;;  i               1   17[BANK0 ] unsigned char 
  7972 ;;  now_min         2   12[BANK0 ] unsigned short 
  7973 ;;  idx             1   16[BANK0 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7983 ;;      Params:         4       0       0       0       0       0
  7984 ;;      Locals:         0       6       0       0       0       0
  7985 ;;      Temps:          0      12       0       0       0       0
  7986 ;;      Totals:         4      18       0       0       0       0
  7987 ;;Total ram usage:       22 bytes
  7988 ;; Hardware stack levels used: 1
  7989 ;; Hardware stack levels required when called: 1
  7990 ;; This function calls:
  7991 ;;		___wmul
  7992 ;; This function is called by:
  7993 ;;		_main
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997  0072                     _get_next:	
  7998                           ;psect for function _get_next
  7999                           
  8000  0072                     l2442:	
  8001                           ;incstack = 0
  8002                           ; Regs used in _get_next: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8003                           
  8004                           
  8005                           ;train_lib.c: 14:     uint8_t idx = 0;
  8006  0072  0020               	movlb	0	; select bank0
  8007  0073  01B0               	clrf	get_next@idx
  8008  0074                     l2444:
  8009                           
  8010                           ;train_lib.c: 15:     uint16_t now_min = ((uint16_t)hour * 60) + min;
  8011  0074  0879               	movf	get_next@min,w
  8012  0075  00A0               	movwf	??_get_next
  8013  0076  01A1               	clrf	??_get_next+1
  8014  0077  0878               	movf	get_next@hour,w
  8015  0078  00A2               	movwf	??_get_next+2
  8016  0079  01A3               	clrf	??_get_next+3
  8017  007A  0822               	movf	??_get_next+2,w
  8018  007B  00F0               	movwf	___wmul@multiplier
  8019  007C  0823               	movf	??_get_next+3,w
  8020  007D  00F1               	movwf	___wmul@multiplier+1
  8021  007E  303C               	movlw	60
  8022  007F  00F2               	movwf	___wmul@multiplicand
  8023  0080  3000               	movlw	0
  8024  0081  00F3               	movwf	___wmul@multiplicand+1
  8025  0082  318B  2368  3180   	fcall	___wmul
  8026  0085  0020               	movlb	0	; select bank0
  8027  0086  0820               	movf	??_get_next,w
  8028  0087  0770               	addwf	?___wmul,w
  8029  0088  00AC               	movwf	get_next@now_min
  8030  0089  0821               	movf	??_get_next+1,w
  8031  008A  3D71               	addwfc	?___wmul+1,w
  8032  008B  00AD               	movwf	get_next@now_min+1
  8033  008C                     l2446:
  8034                           
  8035                           ;train_lib.c: 17:     for(uint8_t i = 0; i < (sizeof(trains)/sizeof(trains[0])); i++){
  8036  008C  01B1               	clrf	get_next@i
  8037  008D                     l2452:
  8038                           
  8039                           ;train_lib.c: 18:         uint16_t t_min = ((uint16_t)trains[i].hour * 60) + trains[i].m
      +                          in;
  8040  008D  0831               	movf	get_next@i,w
  8041  008E  00A0               	movwf	??_get_next
  8042  008F  01A1               	clrf	??_get_next+1
  8043  0090  35A0               	lslf	??_get_next,f
  8044  0091  0DA1               	rlf	??_get_next+1,f
  8045  0092  3007               	movlw	7
  8046  0093  00A2               	movwf	??_get_next+2
  8047  0094  3021               	movlw	33
  8048  0095  00A3               	movwf	??_get_next+3
  8049  0096  0820               	movf	??_get_next,w
  8050  0097  0722               	addwf	??_get_next+2,w
  8051  0098  0086               	movwf	6
  8052  0099  0821               	movf	??_get_next+1,w
  8053  009A  3D23               	addwfc	??_get_next+3,w
  8054  009B  0087               	movwf	7
  8055  009C  0801               	movf	1,w
  8056  009D  00A4               	movwf	??_get_next+4
  8057  009E  01A5               	clrf	??_get_next+5
  8058  009F  0831               	movf	get_next@i,w
  8059  00A0  00A6               	movwf	??_get_next+6
  8060  00A1  01A7               	clrf	??_get_next+7
  8061  00A2  35A6               	lslf	??_get_next+6,f
  8062  00A3  0DA7               	rlf	??_get_next+7,f
  8063  00A4  3006               	movlw	6
  8064  00A5  00A8               	movwf	??_get_next+8
  8065  00A6  3021               	movlw	33
  8066  00A7  00A9               	movwf	??_get_next+9
  8067  00A8  0826               	movf	??_get_next+6,w
  8068  00A9  0728               	addwf	??_get_next+8,w
  8069  00AA  0086               	movwf	6
  8070  00AB  0827               	movf	??_get_next+7,w
  8071  00AC  3D29               	addwfc	??_get_next+9,w
  8072  00AD  0087               	movwf	7
  8073  00AE  0801               	movf	1,w
  8074  00AF  00AA               	movwf	??_get_next+10
  8075  00B0  01AB               	clrf	??_get_next+11
  8076  00B1  082A               	movf	??_get_next+10,w
  8077  00B2  00F0               	movwf	___wmul@multiplier
  8078  00B3  082B               	movf	??_get_next+11,w
  8079  00B4  00F1               	movwf	___wmul@multiplier+1
  8080  00B5  303C               	movlw	60
  8081  00B6  00F2               	movwf	___wmul@multiplicand
  8082  00B7  3000               	movlw	0
  8083  00B8  00F3               	movwf	___wmul@multiplicand+1
  8084  00B9  318B  2368  3180   	fcall	___wmul
  8085  00BC  0020               	movlb	0	; select bank0
  8086  00BD  0824               	movf	??_get_next+4,w
  8087  00BE  0770               	addwf	?___wmul,w
  8088  00BF  00AE               	movwf	get_next@t_min
  8089  00C0  0825               	movf	??_get_next+5,w
  8090  00C1  3D71               	addwfc	?___wmul+1,w
  8091  00C2  00AF               	movwf	get_next@t_min+1
  8092  00C3                     l2454:
  8093                           
  8094                           ;train_lib.c: 20:         if(now_min < t_min){
  8095  00C3  082F               	movf	get_next@t_min+1,w
  8096  00C4  022D               	subwf	get_next@now_min+1,w
  8097  00C5  1D03               	skipz
  8098  00C6  28C9               	goto	u1835
  8099  00C7  082E               	movf	get_next@t_min,w
  8100  00C8  022C               	subwf	get_next@now_min,w
  8101  00C9                     u1835:
  8102  00C9  1803               	skipnc
  8103  00CA  28CC               	goto	u1831
  8104  00CB  28CD               	goto	u1830
  8105  00CC                     u1831:
  8106  00CC  28D2               	goto	l2458
  8107  00CD                     u1830:
  8108  00CD                     l2456:
  8109                           
  8110                           ;train_lib.c: 21:             idx = i;
  8111  00CD  0831               	movf	get_next@i,w
  8112  00CE  00A0               	movwf	??_get_next
  8113  00CF  0820               	movf	??_get_next,w
  8114  00D0  00B0               	movwf	get_next@idx
  8115                           
  8116                           ;train_lib.c: 22:             break;
  8117  00D1  28DC               	goto	l2462
  8118  00D2                     l2458:
  8119                           
  8120                           ;train_lib.c: 24:     }
  8121  00D2  3001               	movlw	1
  8122  00D3  00A0               	movwf	??_get_next
  8123  00D4  0820               	movf	??_get_next,w
  8124  00D5  07B1               	addwf	get_next@i,f
  8125  00D6                     l2460:
  8126  00D6  3035               	movlw	53
  8127  00D7  0231               	subwf	get_next@i,w
  8128  00D8  1C03               	skipc
  8129  00D9  28DB               	goto	u1841
  8130  00DA  28DC               	goto	u1840
  8131  00DB                     u1841:
  8132  00DB  288D               	goto	l2452
  8133  00DC                     u1840:
  8134  00DC                     l2462:
  8135                           
  8136                           ;train_lib.c: 26:     next->hour = trains[idx].hour;
  8137  00DC  0830               	movf	get_next@idx,w
  8138  00DD  00A0               	movwf	??_get_next
  8139  00DE  01A1               	clrf	??_get_next+1
  8140  00DF  35A0               	lslf	??_get_next,f
  8141  00E0  0DA1               	rlf	??_get_next+1,f
  8142  00E1  3006               	movlw	6
  8143  00E2  00A2               	movwf	??_get_next+2
  8144  00E3  3021               	movlw	33
  8145  00E4  00A3               	movwf	??_get_next+3
  8146  00E5  0820               	movf	??_get_next,w
  8147  00E6  0722               	addwf	??_get_next+2,w
  8148  00E7  0086               	movwf	6
  8149  00E8  0821               	movf	??_get_next+1,w
  8150  00E9  3D23               	addwfc	??_get_next+3,w
  8151  00EA  0087               	movwf	7
  8152  00EB  0801               	movf	1,w
  8153  00EC  00A4               	movwf	??_get_next+4
  8154  00ED  0876               	movf	get_next@next,w
  8155  00EE  0086               	movwf	6
  8156  00EF  0877               	movf	get_next@next+1,w
  8157  00F0  0087               	movwf	7
  8158  00F1  0824               	movf	??_get_next+4,w
  8159  00F2  0081               	movwf	1
  8160                           
  8161                           ;train_lib.c: 27:     next->min = trains[idx].min;
  8162  00F3  0830               	movf	get_next@idx,w
  8163  00F4  00A0               	movwf	??_get_next
  8164  00F5  01A1               	clrf	??_get_next+1
  8165  00F6  35A0               	lslf	??_get_next,f
  8166  00F7  0DA1               	rlf	??_get_next+1,f
  8167  00F8  3007               	movlw	7
  8168  00F9  00A2               	movwf	??_get_next+2
  8169  00FA  3021               	movlw	33
  8170  00FB  00A3               	movwf	??_get_next+3
  8171  00FC  0820               	movf	??_get_next,w
  8172  00FD  0722               	addwf	??_get_next+2,w
  8173  00FE  0086               	movwf	6
  8174  00FF  0821               	movf	??_get_next+1,w
  8175  0100  3D23               	addwfc	??_get_next+3,w
  8176  0101  0087               	movwf	7
  8177  0102  0801               	movf	1,w
  8178  0103  00A4               	movwf	??_get_next+4
  8179  0104  0876               	movf	get_next@next,w
  8180  0105  3E01               	addlw	1
  8181  0106  00A5               	movwf	??_get_next+5
  8182  0107  3000               	movlw	0
  8183  0108  3D77               	addwfc	get_next@next+1,w
  8184  0109  00A6               	movwf	??_get_next+6
  8185  010A  0825               	movf	??_get_next+5,w
  8186  010B  0086               	movwf	6
  8187  010C  0826               	movf	??_get_next+6,w
  8188  010D  0087               	movwf	7
  8189  010E  0824               	movf	??_get_next+4,w
  8190  010F  0081               	movwf	1
  8191  0110                     l230:
  8192  0110  0008               	return
  8193  0111                     __end_of_get_next:
  8194                           
  8195                           	psect	text37
  8196  0EEB                     __ptext37:	
  8197 ;; *************** function _calc_money *****************
  8198 ;; Defined at:
  8199 ;;		line 14 in file "money_lib.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  date            6    6[COMMON] struct Date
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;  min             2    6[BANK0 ] unsigned short 
  8204 ;;  hour            2    4[BANK0 ] unsigned short 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  2    6[COMMON] unsigned short 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0, pclath, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8214 ;;      Params:         6       0       0       0       0       0
  8215 ;;      Locals:         0       4       0       0       0       0
  8216 ;;      Temps:          0       4       0       0       0       0
  8217 ;;      Totals:         6       8       0       0       0       0
  8218 ;;Total ram usage:       14 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 1
  8221 ;; This function calls:
  8222 ;;		___wmul
  8223 ;; This function is called by:
  8224 ;;		_main
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228  0EEB                     _calc_money:	
  8229                           ;psect for function _calc_money
  8230                           
  8231  0EEB                     l2490:	
  8232                           ;incstack = 0
  8233                           ; Regs used in _calc_money: [wreg+status,2+status,0+pclath+cstack]
  8234                           
  8235                           
  8236                           ;money_lib.c: 15:     uint16_t hour = (uint16_t)date.hour;
  8237  0EEB  0879               	movf	calc_money@date+3,w
  8238  0EEC  0020               	movlb	0	; select bank0
  8239  0EED  00A0               	movwf	??_calc_money
  8240  0EEE  01A1               	clrf	??_calc_money+1
  8241  0EEF  0820               	movf	??_calc_money,w
  8242  0EF0  00A4               	movwf	calc_money@hour
  8243  0EF1  0821               	movf	??_calc_money+1,w
  8244  0EF2  00A5               	movwf	calc_money@hour+1
  8245                           
  8246                           ;money_lib.c: 16:     uint16_t min = (uint16_t)date.min;
  8247  0EF3  087A               	movf	calc_money@date+4,w
  8248  0EF4  00A0               	movwf	??_calc_money
  8249  0EF5  01A1               	clrf	??_calc_money+1
  8250  0EF6  0820               	movf	??_calc_money,w
  8251  0EF7  00A6               	movwf	calc_money@min
  8252  0EF8  0821               	movf	??_calc_money+1,w
  8253  0EF9  00A7               	movwf	calc_money@min+1
  8254  0EFA  3012               	movlw	18
  8255  0EFB  0279               	subwf	calc_money@date+3,w
  8256  0EFC  1C03               	skipc
  8257  0EFD  2EFF               	goto	u1851
  8258  0EFE  2F00               	goto	u1850
  8259  0EFF                     u1851:
  8260  0EFF  2F04               	goto	l2494
  8261  0F00                     u1850:
  8262  0F00                     l2492:
  8263                           
  8264                           ;money_lib.c: 18:         regular_flg = 1;
  8265  0F00  0021               	movlb	1	; select bank1
  8266  0F01  01D0               	clrf	_regular_flg^(0+128)
  8267  0F02  0AD0               	incf	_regular_flg^(0+128),f
  8268                           
  8269                           ;money_lib.c: 19:     }
  8270  0F03  2F13               	goto	l2502
  8271  0F04                     l2494:
  8272  0F04  3011               	movlw	17
  8273  0F05  0679               	xorwf	calc_money@date+3,w
  8274  0F06  1D03               	btfss	3,2
  8275  0F07  2F09               	goto	u1861
  8276  0F08  2F0A               	goto	u1860
  8277  0F09                     u1861:
  8278  0F09  2F11               	goto	l2500
  8279  0F0A                     u1860:
  8280  0F0A                     l2496:
  8281  0F0A  3014               	movlw	20
  8282  0F0B  027A               	subwf	calc_money@date+4,w
  8283  0F0C  1C03               	skipc
  8284  0F0D  2F0F               	goto	u1871
  8285  0F0E  2F10               	goto	u1870
  8286  0F0F                     u1871:
  8287  0F0F  2F11               	goto	l2500
  8288  0F10                     u1870:
  8289  0F10  2F00               	goto	l2492
  8290  0F11                     l2500:
  8291                           
  8292                           ;money_lib.c: 23:         regular_flg = 0;
  8293  0F11  0021               	movlb	1	; select bank1
  8294  0F12  01D0               	clrf	_regular_flg^(0+128)
  8295  0F13                     l2502:
  8296                           
  8297                           ;money_lib.c: 27:     if(regular_flg){
  8298  0F13  0850               	movf	_regular_flg^(0+128),w
  8299  0F14  1903               	btfsc	3,2
  8300  0F15  2F17               	goto	u1881
  8301  0F16  2F18               	goto	u1880
  8302  0F17                     u1881:
  8303  0F17  2F42               	goto	l2510
  8304  0F18                     u1880:
  8305  0F18                     l2504:
  8306  0F18  0020               	movlb	0	; select bank0
  8307  0F19  0825               	movf	calc_money@hour+1,w
  8308  0F1A  00F1               	movwf	___wmul@multiplier+1
  8309  0F1B  0824               	movf	calc_money@hour,w
  8310  0F1C  00F0               	movwf	___wmul@multiplier
  8311  0F1D  3054               	movlw	84
  8312  0F1E  00F2               	movwf	___wmul@multiplicand
  8313  0F1F  3006               	movlw	6
  8314  0F20  00F3               	movwf	___wmul@multiplicand+1
  8315  0F21  318B  2368  318E   	fcall	___wmul
  8316  0F24  0870               	movf	?___wmul,w
  8317  0F25  0020               	movlb	0	; select bank0
  8318  0F26  00A0               	movwf	??_calc_money
  8319  0F27  0871               	movf	?___wmul+1,w
  8320  0F28  00A1               	movwf	??_calc_money+1
  8321  0F29  0827               	movf	calc_money@min+1,w
  8322  0F2A  00F1               	movwf	___wmul@multiplier+1
  8323  0F2B  0826               	movf	calc_money@min,w
  8324  0F2C  00F0               	movwf	___wmul@multiplier
  8325  0F2D  301B               	movlw	27
  8326  0F2E  00F2               	movwf	___wmul@multiplicand
  8327  0F2F  3000               	movlw	0
  8328  0F30  00F3               	movwf	___wmul@multiplicand+1
  8329  0F31  318B  2368  318E   	fcall	___wmul
  8330  0F34  0870               	movf	?___wmul,w
  8331  0F35  0020               	movlb	0	; select bank0
  8332  0F36  0720               	addwf	??_calc_money,w
  8333  0F37  00A2               	movwf	??_calc_money+2
  8334  0F38  0871               	movf	?___wmul+1,w
  8335  0F39  3D21               	addwfc	??_calc_money+1,w
  8336  0F3A  00A3               	movwf	??_calc_money+3
  8337  0F3B  0822               	movf	??_calc_money+2,w
  8338  0F3C  3E50               	addlw	80
  8339  0F3D  00F6               	movwf	?_calc_money
  8340  0F3E  3092               	movlw	146
  8341  0F3F  3D23               	addwfc	??_calc_money+3,w
  8342  0F40  00F7               	movwf	?_calc_money+1
  8343  0F41  2F6B               	goto	l273
  8344  0F42                     l2510:
  8345                           
  8346                           ;money_lib.c: 30:         return ((hour - 8) * HOUR_4_MONEY) + (MIN_4_MONEY * min) - (MI
      +                          N_4_MONEY * 40);
  8347  0F42  0020               	movlb	0	; select bank0
  8348  0F43  0825               	movf	calc_money@hour+1,w
  8349  0F44  00F1               	movwf	___wmul@multiplier+1
  8350  0F45  0824               	movf	calc_money@hour,w
  8351  0F46  00F0               	movwf	___wmul@multiplier
  8352  0F47  3054               	movlw	84
  8353  0F48  00F2               	movwf	___wmul@multiplicand
  8354  0F49  3006               	movlw	6
  8355  0F4A  00F3               	movwf	___wmul@multiplicand+1
  8356  0F4B  318B  2368  318E   	fcall	___wmul
  8357  0F4E  0870               	movf	?___wmul,w
  8358  0F4F  0020               	movlb	0	; select bank0
  8359  0F50  00A0               	movwf	??_calc_money
  8360  0F51  0871               	movf	?___wmul+1,w
  8361  0F52  00A1               	movwf	??_calc_money+1
  8362  0F53  0827               	movf	calc_money@min+1,w
  8363  0F54  00F1               	movwf	___wmul@multiplier+1
  8364  0F55  0826               	movf	calc_money@min,w
  8365  0F56  00F0               	movwf	___wmul@multiplier
  8366  0F57  301B               	movlw	27
  8367  0F58  00F2               	movwf	___wmul@multiplicand
  8368  0F59  3000               	movlw	0
  8369  0F5A  00F3               	movwf	___wmul@multiplicand+1
  8370  0F5B  318B  2368  318E   	fcall	___wmul
  8371  0F5E  0870               	movf	?___wmul,w
  8372  0F5F  0020               	movlb	0	; select bank0
  8373  0F60  0720               	addwf	??_calc_money,w
  8374  0F61  00A2               	movwf	??_calc_money+2
  8375  0F62  0871               	movf	?___wmul+1,w
  8376  0F63  3D21               	addwfc	??_calc_money+1,w
  8377  0F64  00A3               	movwf	??_calc_money+3
  8378  0F65  0822               	movf	??_calc_money+2,w
  8379  0F66  3E28               	addlw	40
  8380  0F67  00F6               	movwf	?_calc_money
  8381  0F68  30C9               	movlw	201
  8382  0F69  3D23               	addwfc	??_calc_money+3,w
  8383  0F6A  00F7               	movwf	?_calc_money+1
  8384  0F6B                     l273:
  8385  0F6B  0008               	return
  8386  0F6C                     __end_of_calc_money:
  8387                           
  8388                           	psect	text38
  8389  0B68                     __ptext38:	
  8390 ;; *************** function ___wmul *****************
  8391 ;; Defined at:
  8392 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  multiplier      2    0[COMMON] unsigned int 
  8395 ;;  multiplicand    2    2[COMMON] unsigned int 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  product         2    4[COMMON] unsigned int 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  2    0[COMMON] unsigned int 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8407 ;;      Params:         4       0       0       0       0       0
  8408 ;;      Locals:         2       0       0       0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0
  8410 ;;      Totals:         6       0       0       0       0       0
  8411 ;;Total ram usage:        6 bytes
  8412 ;; Hardware stack levels used: 1
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_print_remaing
  8417 ;;		_get_next
  8418 ;;		_calc_money
  8419 ;;		_atoi
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423  0B68                     ___wmul:	
  8424                           ;psect for function ___wmul
  8425                           
  8426  0B68                     l1904:	
  8427                           ;incstack = 0
  8428                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8429                           
  8430  0B68  01F4               	clrf	___wmul@product
  8431  0B69  01F5               	clrf	___wmul@product+1
  8432  0B6A                     l1906:
  8433  0B6A  1C70               	btfss	___wmul@multiplier,0
  8434  0B6B  2B6D               	goto	u1091
  8435  0B6C  2B6E               	goto	u1090
  8436  0B6D                     u1091:
  8437  0B6D  2B72               	goto	l424
  8438  0B6E                     u1090:
  8439  0B6E                     l1908:
  8440  0B6E  0872               	movf	___wmul@multiplicand,w
  8441  0B6F  07F4               	addwf	___wmul@product,f
  8442  0B70  0873               	movf	___wmul@multiplicand+1,w
  8443  0B71  3DF5               	addwfc	___wmul@product+1,f
  8444  0B72                     l424:
  8445  0B72  3001               	movlw	1
  8446  0B73                     u1105:
  8447  0B73  35F2               	lslf	___wmul@multiplicand,f
  8448  0B74  0DF3               	rlf	___wmul@multiplicand+1,f
  8449  0B75  0B89               	decfsz	9,f
  8450  0B76  2B73               	goto	u1105
  8451  0B77                     l1910:
  8452  0B77  3001               	movlw	1
  8453  0B78                     u1115:
  8454  0B78  36F1               	lsrf	___wmul@multiplier+1,f
  8455  0B79  0CF0               	rrf	___wmul@multiplier,f
  8456  0B7A  0B89               	decfsz	9,f
  8457  0B7B  2B78               	goto	u1115
  8458  0B7C                     l1912:
  8459  0B7C  0870               	movf	___wmul@multiplier,w
  8460  0B7D  0471               	iorwf	___wmul@multiplier+1,w
  8461  0B7E  1D03               	btfss	3,2
  8462  0B7F  2B81               	goto	u1121
  8463  0B80  2B82               	goto	u1120
  8464  0B81                     u1121:
  8465  0B81  2B6A               	goto	l1906
  8466  0B82                     u1120:
  8467  0B82                     l1914:
  8468  0B82  0875               	movf	___wmul@product+1,w
  8469  0B83  00F1               	movwf	?___wmul+1
  8470  0B84  0874               	movf	___wmul@product,w
  8471  0B85  00F0               	movwf	?___wmul
  8472  0B86                     l426:
  8473  0B86  0008               	return
  8474  0B87                     __end_of___wmul:
  8475                           
  8476                           	psect	text39
  8477  0A35                     __ptext39:	
  8478 ;; *************** function _SYSTEM_Initialize *****************
  8479 ;; Defined at:
  8480 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg, status,2, status,0, pclath, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8494 ;;      Params:         0       0       0       0       0       0
  8495 ;;      Locals:         0       0       0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0
  8497 ;;      Totals:         0       0       0       0       0       0
  8498 ;;Total ram usage:        0 bytes
  8499 ;; Hardware stack levels used: 1
  8500 ;; Hardware stack levels required when called: 1
  8501 ;; This function calls:
  8502 ;;		_OSCILLATOR_Initialize
  8503 ;;		_PIN_MANAGER_Initialize
  8504 ;;		_WDT_Initialize
  8505 ;; This function is called by:
  8506 ;;		_main
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510  0A35                     _SYSTEM_Initialize:	
  8511                           ;psect for function _SYSTEM_Initialize
  8512                           
  8513  0A35                     l2358:	
  8514                           ;incstack = 0
  8515                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8516                           
  8517                           
  8518                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8519  0A35  318A  22D2  318A   	fcall	_PIN_MANAGER_Initialize
  8520                           
  8521                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8522  0A38  318A  2227  318A   	fcall	_OSCILLATOR_Initialize
  8523                           
  8524                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8525  0A3B  318A  2223  318A   	fcall	_WDT_Initialize
  8526  0A3E                     l17:
  8527  0A3E  0008               	return
  8528  0A3F                     __end_of_SYSTEM_Initialize:
  8529                           
  8530                           	psect	text40
  8531  0A23                     __ptext40:	
  8532 ;; *************** function _WDT_Initialize *****************
  8533 ;; Defined at:
  8534 ;;		line 68 in file "mcc_generated_files/mcc.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8548 ;;      Params:         0       0       0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0
  8550 ;;      Temps:          0       0       0       0       0       0
  8551 ;;      Totals:         0       0       0       0       0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used: 1
  8554 ;; This function calls:
  8555 ;;		Nothing
  8556 ;; This function is called by:
  8557 ;;		_SYSTEM_Initialize
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561  0A23                     _WDT_Initialize:	
  8562                           ;psect for function _WDT_Initialize
  8563                           
  8564  0A23                     l2314:	
  8565                           ;incstack = 0
  8566                           ; Regs used in _WDT_Initialize: [wreg]
  8567                           
  8568                           
  8569                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  8570  0A23  3016               	movlw	22
  8571  0A24  0021               	movlb	1	; select bank1
  8572  0A25  0097               	movwf	23	;volatile
  8573  0A26                     l23:
  8574  0A26  0008               	return
  8575  0A27                     __end_of_WDT_Initialize:
  8576                           
  8577                           	psect	text41
  8578  0AD2                     __ptext41:	
  8579 ;; *************** function _PIN_MANAGER_Initialize *****************
  8580 ;; Defined at:
  8581 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;		None
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8595 ;;      Params:         0       0       0       0       0       0
  8596 ;;      Locals:         0       0       0       0       0       0
  8597 ;;      Temps:          0       0       0       0       0       0
  8598 ;;      Totals:         0       0       0       0       0       0
  8599 ;;Total ram usage:        0 bytes
  8600 ;; Hardware stack levels used: 1
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		_SYSTEM_Initialize
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608  0AD2                     _PIN_MANAGER_Initialize:	
  8609                           ;psect for function _PIN_MANAGER_Initialize
  8610                           
  8611  0AD2                     l2296:	
  8612                           ;incstack = 0
  8613                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8614                           
  8615                           
  8616                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8617  0AD2  0022               	movlb	2	; select bank2
  8618  0AD3  018C               	clrf	12	;volatile
  8619                           
  8620                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8621  0AD4  018D               	clrf	13	;volatile
  8622  0AD5                     l2298:
  8623                           
  8624                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  8625  0AD5  30FF               	movlw	255
  8626  0AD6  0021               	movlb	1	; select bank1
  8627  0AD7  008C               	movwf	12	;volatile
  8628  0AD8                     l2300:
  8629                           
  8630                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  8631  0AD8  30FF               	movlw	255
  8632  0AD9  008D               	movwf	13	;volatile
  8633  0ADA                     l2302:
  8634                           
  8635                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  8636  0ADA  30FE               	movlw	254
  8637  0ADB  0023               	movlb	3	; select bank3
  8638  0ADC  008D               	movwf	13	;volatile
  8639  0ADD                     l2304:
  8640                           
  8641                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  8642  0ADD  301F               	movlw	31
  8643  0ADE  008C               	movwf	12	;volatile
  8644                           
  8645                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  8646  0ADF  0024               	movlb	4	; select bank4
  8647  0AE0  018D               	clrf	13	;volatile
  8648                           
  8649                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  8650  0AE1  018C               	clrf	12	;volatile
  8651  0AE2                     l2306:
  8652                           
  8653                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  8654  0AE2  0021               	movlb	1	; select bank1
  8655  0AE3  1795               	bsf	21,7	;volatile
  8656                           
  8657                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  8658  0AE4  0022               	movlb	2	; select bank2
  8659  0AE5  019D               	clrf	29	;volatile
  8660                           
  8661                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  8662  0AE6  019E               	clrf	30	;volatile
  8663  0AE7                     l48:
  8664  0AE7  0008               	return
  8665  0AE8                     __end_of_PIN_MANAGER_Initialize:
  8666                           
  8667                           	psect	text42
  8668  0A27                     __ptext42:	
  8669 ;; *************** function _OSCILLATOR_Initialize *****************
  8670 ;; Defined at:
  8671 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8685 ;;      Params:         0       0       0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0
  8688 ;;      Totals:         0       0       0       0       0       0
  8689 ;;Total ram usage:        0 bytes
  8690 ;; Hardware stack levels used: 1
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_SYSTEM_Initialize
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698  0A27                     _OSCILLATOR_Initialize:	
  8699                           ;psect for function _OSCILLATOR_Initialize
  8700                           
  8701  0A27                     l2308:	
  8702                           ;incstack = 0
  8703                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8704                           
  8705                           
  8706                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  8707  0A27  3070               	movlw	112
  8708  0A28  0021               	movlb	1	; select bank1
  8709  0A29  0099               	movwf	25	;volatile
  8710  0A2A                     l2310:
  8711                           
  8712                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  8713  0A2A  0198               	clrf	24	;volatile
  8714  0A2B                     l2312:
  8715                           
  8716                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  8717  0A2B  0022               	movlb	2	; select bank2
  8718  0A2C  0196               	clrf	22	;volatile
  8719  0A2D                     l20:
  8720  0A2D  0008               	return
  8721  0A2E                     __end_of_OSCILLATOR_Initialize:
  8722  007E                     btemp	set	126	;btemp
  8723  007E                     wtemp0	set	126
  8724  2106                     
  8725                           	psect	config
  8726                           
  8727                           ;Config register CONFIG1 @ 0x8007
  8728                           ;	Oscillator Selection
  8729                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8730                           ;	Watchdog Timer Enable
  8731                           ;	WDTE = OFF, WDT disabled
  8732                           ;	Power-up Timer Enable
  8733                           ;	PWRTE = OFF, PWRT disabled
  8734                           ;	MCLR Pin Function Select
  8735                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8736                           ;	Flash Program Memory Code Protection
  8737                           ;	CP = OFF, Program memory code protection is disabled
  8738                           ;	Data Memory Code Protection
  8739                           ;	CPD = OFF, Data memory code protection is disabled
  8740                           ;	Brown-out Reset Enable
  8741                           ;	BOREN = ON, Brown-out Reset enabled
  8742                           ;	Clock Out Enable
  8743                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8744                           ;	Internal/External Switchover
  8745                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8746                           ;	Fail-Safe Clock Monitor Enable
  8747                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8748  8007                     	org	32775
  8749  8007  3FE4               	dw	16356
  8750                           
  8751                           ;Config register CONFIG2 @ 0x8008
  8752                           ;	Flash Memory Self-Write Protection
  8753                           ;	WRT = OFF, Write protection off
  8754                           ;	PLL Enable
  8755                           ;	PLLEN = OFF, 4x PLL disabled
  8756                           ;	Stack Overflow/Underflow Reset Enable
  8757                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8758                           ;	Brown-out Reset Voltage Selection
  8759                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8760                           ;	Low-Voltage Programming Enable
  8761                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  8762  8008                     	org	32776
  8763  8008  1EFF               	dw	7935

Data Sizes:
    Strings     60
    Constant    6
    Data        110
    BSS         60
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     38      70
    BANK2            80      0      32
    BANK3            22      0       0
    BANK4             0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S946$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S946$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK1[6]), 

    get_next@next	PTR struct train size(2) Largest target is 2
		 -> main@next1(BANK1[2]), main@next(BANK1[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[2]), line(BANK1[16]), 


Critical Paths under _main in COMMON

    _read_date->__read
    __read->_bcd_2_decimal
    _bcd_2_decimal->___bmul
    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _lcd_clear->_lcd_print
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_next->___wmul
    _calc_money->___wmul

Critical Paths under _main in BANK0

    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_clear->_lcd_set_cursor

Critical Paths under _main in BANK1

    _main->_print_remaing
    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   50183
                                             78 BANK0      2     2      0
                                             28 BANK1     10    10      0
                  _SYSTEM_Initialize
                         _calc_money
                           _get_next
                      _lcd_backlight
                           _lcd_init
                     _lcd_set_cursor
                        _print_money
                      _print_remaing
                        _print_train
                          _read_date
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     489
                                             11 COMMON     2     2      0
                              __read
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     324
                                              8 COMMON     3     3      0
                      _bcd_2_decimal
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _print_train                                          8     4      4   14148
                                             12 BANK1      8     4      4
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_remaing                                       16     8      8   15744
                                             12 BANK1     16     8      8
                             ___wmul
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_money                                         12     4      8   14126
                                             12 BANK1     12     4      8
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    9454
                                             13 COMMON     1     1      0
                                             72 BANK0      6     0      6
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    8599
                                             64 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    8269
                                             46 BANK0     18    16      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    2229
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            3     3      0    2294
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       8     7      1    1140
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            4     2      2    1018
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (3) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_next                                            22    18      4    2208
                                              6 COMMON     4     0      4
                                              0 BANK0     18    18      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _calc_money                                          14     8      6    1741
                                              6 COMMON     6     0      6
                                              0 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1460
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_money
     ___wmul
   _get_next
     ___wmul
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_init
     _lcd_cmd
   _lcd_set_cursor
     _command
       _lcd_cmd
   _print_money
     _lcd_clear
       _lcd_print
         _command
       _lcd_set_cursor
     _lcd_print
     _lcd_set_cursor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
   _print_remaing
     ___wmul
     _lcd_clear
     _lcd_print
     _lcd_set_cursor
     _sprintf
   _print_train
     _lcd_clear
     _lcd_print
     _lcd_set_cursor
     _sprintf
   _read_date
     __read
       _bcd_2_decimal
         ___bmul
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
       _i2c_stop
       _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     26      46       8       87.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               16      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C4      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Jan 10 12:31:17 2022

                ___bmul@product 0072                              l20 0A2D                              l23 0A26  
                            l17 0A3E                              l48 0AE7             ___wmul@multiplicand 0072  
                  lcd_clear@col 0027                    lcd_clear@row 0026                             l200 0A84  
                           l121 0EEA                             l124 0D64                             l213 0C68  
                           l117 0E6A                             l230 0110                             l142 0A5E  
                           l222 0CD1                             l151 0A30                             l207 0C15  
                           l160 0A52                             l145 0A44                             l154 0A34  
                           l163 0A89                             l219 0B67                             l148 0A48  
                           l172 0AF0                             l245 0ABC                             l157 0A4E  
                           l166 0A8D                             l174 0AF4                             l254 0BC9  
                           l175 0AFE                             l424 0B72                             l273 0F6B  
                           l169 0A94                             l257 0D17                             l426 0B86  
                           l194 0AA8                             l450 0AD1                             l524 04B4  
                           l197 03C4                             l525 04C5                             l537 02C7  
                           l538 02D8                             l921 0DF5                             l923 0E0F  
                           l931 0535                             l932 054D                             l918 0DD3  
                           l926 050F                             l935 05BE                             l927 0518  
                           l960 0670                             l961 0673                             l963 06A5  
                           l956 065E                             l949 0635                             l990 0B30  
                           l958 066A                             l959 066D                             l983 0C99  
                           l887 0BED                             l976 07CA                             l987 0B30  
                           u970 0D6A                             u971 0D69                             u980 0D6F  
                           u981 0D6E                             u990 0D7E                             u991 0D7D  
                           _abs 0B17                             _pad 0DB7                             wreg 0009  
                 calc_money@min 0026             bcd_2_decimal@number 0077                     command@mode 0072  
                   get_next@idx 0030                     get_next@min 0079                  ?_bcd_2_decimal 0070  
               ?_lcd_set_cursor 0078                            l1004 0F9A                            l1015 0FFF  
                          l2000 0DE7                            l1041 0DB6                            l1018 0B16  
                          l1026 0BA7                            l2010 0B24                            l2002 0DFA  
                          ?_abs 0073                            l2012 0AFF                            l2020 0B90  
                          l2100 0F95                            l1052 0A22                            l2004 0E03  
                          l2030 0AA1                            l2022 0B9F                            l2110 0FD4  
                          l2102 0F9F                            l2024 0BA0                            l2016 0B87  
                          l2112 0FE8                            l2104 0FB3                            l2008 0B17  
                          l2040 0514                            l2032 04C8                            l1049 0C3E  
                          l2130 0CBA                            l2018 0B89                            l2114 0FEF  
                          l1058 0B4A                            l2050 0548                            l2042 0527  
                          l2034 04D8                            l2210 073F                            l2202 06F8  
                          l2300 0AD8                            l2028 0A96                            l2132 0CBF  
                          l2124 0C9B                            l2116 0FFB                            l2060 058D  
                          l2052 0552                            l2044 052D                            l2036 04EB  
                          l2220 078B                            l2212 0758                            l2204 0714  
                          l2140 0ABE                            l2310 0A2A                            l2302 0ADA  
                          l2134 0CC3                            l2126 0CB1                            l2070 05F4  
                          l2062 0591                            l2054 0555                            l2046 053D  
                          l2038 04F1                            l2222 0796                            l2206 0726  
                          l2150 0AD0                            l2142 0ABF                            l2312 0A2B  
                          l2304 0ADD                            l2400 0352                            l2136 0CC7  
                          l2128 0CB5                            l2080 0610                            l2064 05CC  
                          l2072 05F9                            l2056 055A                            l2048 0543  
                          l2216 0772                            l2208 0737                            l2160 0656  
                          l2232 07A7                            l2144 0AC3                            l2306 0AE2  
                          l2314 0A23                            l2410 0385                            l2402 036E  
                          l2138 0CCC                            l2250 0C63                            l2330 0BF9  
                          l2322 0BF0                            l2090 0F6C                            l2082 0615  
                          l2074 0600                            l2066 05D9                            l2058 0589  
                          l2234 07C0                            l2218 0783                            l2226 079C  
                          l2162 065A                            l2154 0638                            l2146 0AC7  
                          l2308 0A27                            l2500 0F11                            l2420 03B1  
                          l2412 0389                            l2404 0372                            l2260 0B5E  
                          l2252 0B4B                            l2244 0C41                            l2332 0C00  
                          l2316 0BEE                            l2092 0F72                            l2084 0619  
                          l2076 0605                            l2068 05E6                            l2228 07A4  
                          l2164 0660                            l2180 069F                            l2156 0649  
                          l2340 0BCC                            l2148 0AC9                            l2510 0F42  
                          l2502 0F13                            l2430 0A80                            l2422 03B5  
                          l2414 038D                            l2406 0376                            l2254 0B4C  
                          l2246 0C57                            l2334 0C05                            l2078 060A  
                          l2086 0622                            l2190 06D5                            l2182 06AA  
                          l2174 0676                            l2158 0651                            l2342 0BD4  
                          l2270 0AF5                            l2262 0A49                            l2504 0F18  
                          l2424 03B9                            l2416 0391                            l2408 037A  
                          l2360 02D9                            l2256 0B54                            l2248 0C59  
                          l2336 0C0B                            l2328 0BF1                            l2096 0F76  
                          l2192 06D9                            l2184 06AE                            l2344 0BD6  
                          l2520 0D46                            l2280 0AAA                            l2272 0AF9  
                          l2264 0A4C                            l2352 0BA9                            l2440 0D0C  
                          l2432 0CD3                            l2442 0072                            l2426 0A77  
                          l2418 03AD                            l2370 0304                            l2362 02E5  
                          l2258 0B58                            l2338 0C0F                            l2098 0F80  
                          l2194 06DA                            l2186 06C0                            l2178 067B  
                          l2290 0C87                            l2346 0BD8                            l2522 0D57  
                          l2514 0D18                            l2274 0AFA                            l2266 0AE9  
                          l2354 0BC5                            l2434 0CF2                            l2530 0119  
                          l2460 00D6                            l2452 008D                            l2444 0074  
                          l1900 0A86                            l2428 0A7B                            l2380 031E  
                          l2372 030B                            l2364 02E9                            l2188 06C8  
                          l2196 06E0                            l2292 0C91                            l2284 0C6B  
                          l2348 0BE5                            l2516 0D3A                            l2276 0AFD  
                          l2268 0AEF                            l2436 0CF6                            l2540 0123  
                          l2532 011C                            l2524 0111                            l2358 0A35  
                          l1910 0B77                            l2462 00DC                            l2454 00C3  
                          l2446 008C                            l1902 0A91                            l2390 033E  
                          l2382 0322                            l2374 030F                            l2366 02ED  
                          l2198 06F0                            l2286 0C6F                            l2518 0D3F  
                          l2470 0E3E                            l2438 0D01                            l2550 0139  
                          l2542 0126                            l2534 011E                            l2526 0114  
                          l2296 0AD2                            l1912 0B7C                            l1904 0B68  
                          l2456 00CD                            l2392 0342                            l2384 0326  
                          l2376 0313                            l2368 02F1                            l1920 03C6  
                          l2632 068E                            l2288 0C73                            l2480 0EBE  
                          l2472 0E5D                            l2464 0E10                            l2560 014C  
                          l2552 013F                            l2544 012B                            l2536 011F  
                          l2528 0117                            l2298 0AD5                            l1914 0B82  
                          l1906 0B6A                            l2490 0EEB                            l2458 00D2  
                          l2394 0346                            l2386 0336                            l2378 031A  
                          l2634 0FAB                            l1930 041E                            l1922 03D0  
                          l2482 0EC3                            l2474 0E6B                            l2466 0E32  
                          l2570 018D                            l2562 0155                            l2554 0145  
                          l2546 0131                            l2538 0120                            l1908 0B6E  
                          l2492 0F00                            l2396 034A                            l2388 033A  
                          l1940 0444                            l1932 0428                            l1924 03F1  
                          l1860 0D74                            l2484 0ECA                            l2476 0E6E  
                          l2468 0E37                            l2572 0193                            l2564 0168  
                          l2556 0146                            l2548 0137                            l2494 0F04  
                          l1870 0A53                            l2398 034E                            l1950 0483  
                          l1942 0448                            l1934 0435                            l1926 03FB  
                          l1918 03C5                            l1862 0D7E                            l1854 0D65  
                          l2486 0EDD                            l2478 0E87                            l2574 01AF  
                          l2566 017B                            l2558 0148                            l2496 0F0A  
                          l1872 0A53                            l1944 0450                            l1936 0438  
                          l1952 0491                            l1928 041A                            l1960 01FA  
                          l1864 0D9C                            l1856 0D6A                            l1880 0C29  
                          l2576 01B5                            l2568 0181                            l1874 0A5A  
                          l1954 0496                            l1946 0472                            l1938 0440  
                          l1970 0254                            l1962 021B                            l1866 0DAD  
                          l1858 0D6F                            l1882 0C2E                            l1890 0B44  
                          l1948 0482                            l1980 0296                            l1972 025C  
                          l1964 0225                            l1956 01EF                            l1876 0C18  
                          l1884 0B32                            l1894 0A3F                            l1974 0260  
                          l1982 02A4                            l1966 0244                            l1958 01F0  
                          l1878 0C1B                            l1886 0B37                            l1990 0DC7  
                          ?_pad 0024                            l1896 0A42                            l1984 02A9  
                          l1976 0264                            l1968 0251                            l1888 0B3B  
                          l1992 0DCC                            l1898 0A2E                            l1978 0286  
                          l1994 0DD1                            l1986 0DB9                            l1996 0DD6  
                          l1988 0DBE                            l1998 0DE2                            STR_1 0802  
                          STR_2 0802                            STR_3 0802                            STR_4 0830  
                          STR_5 0814                            STR_6 0824                            STR_7 0840  
                          u1000 0D9C                            u1001 0D9B                            u1010 0A5A  
                          u1011 0A59                            u1020 0A5E                            u1021 0A5D  
                          u1005 0D98                            u1030 0C3E                            u1031 0C3D  
                          u1120 0B82                            u1200 0472                            u1040 0B44  
                          u1121 0B81                            u1105 0B73                            u1201 0471  
                          u1041 0B43                            u1050 0A48                            u1210 0491  
                          u1130 03D0                            u1115 0B78                            u1051 0A47  
                          u1211 0490                            u1131 03CF                            u1060 0A34  
                          u1220 0496                            u1300 0286                            u1061 0A33  
                          u1221 0495                            u1205 046E                            u1301 0285  
                          u1070 0A8D                            u1150 03FB                            u1310 02A4  
                          u1071 0A8C                            u2007 0353                            u1151 03FA  
                          u1311 02A3                            u1080 0A91                            u1400 0B10  
                          u1320 02A9                            u1240 01FA                            u1081 0A90  
                          u2017 036F                            u1321 02A8                            u1305 0282  
                          u1241 01F9                            u1090 0B6E                            u1410 0B90  
                          u1170 0425                            u1091 0B6D                            u2027 0381  
                          u1411 0B8F                            u1420 0B9F                            u1180 0435  
                          u1260 0225                            u1340 0DBE                            u1500 0548  
                          u2037 0392                            u1421 0B9E                            u1181 0434  
                          u1261 0224                            u1341 0DBD                            u1501 0547  
                          _LATA 010C                            u1190 0448                            u1350 0DCC  
                          u1510 05CC                            u1430 04E3                            _LATB 010D  
                          u2047 03AE                            u1191 0447                            u1351 0DCB  
                          u1511 05CB                            u1431 04E1                            u1600 0F94  
                          u1280 0251                            u1360 0DF5                            u1520 05D9  
                          u1440 04E4                            u2057 03C0                            u1601 0F93  
                          u1281 0250                            u1361 0DF4                            u1521 05D8  
                          u1610 0FE8                            u1290 0264                            u1370 0DFA  
                          u1530 05E6                            u1450 04F1                            u2067 0A81  
                          u1611 0FE7                            u1291 0263                            u1371 0DF9  
                          u1531 05E5                            u1515 05C8                            u1451 04F0  
                          u1620 0FEF                            u1380 0B24                            u1540 05F4  
                          u1700 06D9                            u2077 0AA5                            u1621 0FEE  
                          u1381 0B23                            u1365 0DF1                            u1541 05F3  
                          u1701 06D8                            u1390 0B0F                            u1550 05F9  
                          u1470 0514                            u1710 0714                            u1391 0B0D  
                          u1551 05F8                            u1535 05E2                            u1471 0513  
                          u1711 0713                            u1560 0600                            u1480 0527  
                          u1720 0726                            u1800 0C91                            u1640 0AC3  
                          u1385 0B20                            u1561 05FF                            u1545 05F0  
                          u1481 0526                            u1721 0725                            u1801 0C90  
                          u1641 0AC2                            u1810 0C0B                            u1570 0605  
                          u1490 0543                            u1730 0737                            u1650 0AD0  
                          u1635 0CA6                            u1811 0C0A                            u1571 0604  
                          u1491 0542                            u1731 0736                            u1651 0ACF  
                          u1820 0C15                            u1580 0610                            u1740 0783  
                          u1660 0649                            u1900 0193                            u1821 0C14  
                          u1581 060F                            u1485 0523                            u1741 0782  
                          u1661 0648                            u1901 0192                            u1830 00CD  
                          u1750 0C57                            u1590 0F80                            u1670 06A5  
                          u1910 01B5                            u1831 00CC                            u1751 0C56  
                          u1591 0F7F                            u1671 06A4                            u1911 01B4  
                          u1840 00DC                            u1760 0B67                            u1680 06AA  
                          u1841 00DB                            u1761 0B66                            u1681 06A9  
                          u1850 0F00                            u1690 06C0                            u1770 0A52  
                          u1851 0EFF                            u1835 00C9                            u1691 06BF  
                          u1771 0A51                            u1860 0F0A                            u1780 0AF4  
                          u1861 0F09                            u1781 0AF3                            u1870 0F10  
                          u1871 0F0F                            u1927 0150                            u1880 0F18  
                          u1881 0F17                            u1937 0CC0                            u1890 0181  
                          u1947 02DE                            u1795 0AB4                            u1891 0180  
                          u1957 02F4                            u1967 0307                            u1977 0318  
                          u1987 0327                            u1997 0337                            _WPUA 020C  
                          _WPUB 020D                            abs@a 0073                            _dbuf 0120  
                          _atoi 0F6C                 ??_lcd_backlight 0072                            _main 0111  
                          _dtoa 04C6                            _line 00D2                            _prec 00CA  
                          _nout 00C6                            pad@i 0027                            pad@p 0025  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          pad@w 0029                            btemp 007E                            start 0002  
                calc_money@date 0076                  calc_money@hour 0024               ___bmul@multiplier 0073  
                  get_next@hour 0078                    get_next@next 0076                           ??_abs 0075  
                         ??_pad 007C   __end_of_OSCILLATOR_Initialize 0A2E                 __end_of___aodiv 04C6  
                         ?_atoi 0076                           ?_main 0070                           ?_dtoa 0030  
               __end_of___aomod 02D9                     i2c_read@ack 0071                    vfpfcnvrt@fmt 004E  
                         _TRISA 008C                           _TRISB 008D                    lcd_print@cmd 007B  
                  lcd_print@str 0078                 __end_of_lcd_cmd 0AA9                 __end_of_command 0CD2  
                         __read 0BA8                           _flags 00CC                  _WDT_Initialize 0A23  
                         _fputc 0D65                           _fputs 0C16                 __end_of_isdigit 0B17  
                         _money 00CE                           atoi@n 0022                           pad@fp 002B  
                         atoi@s 0076                           _width 00C8                           _putch 0A22  
                         dtoa@d 0030                           dtoa@i 004C                           dtoa@n 0044  
                         dtoa@p 003E                           dtoa@s 0042                           dtoa@w 0040  
               __end_of_isspace 0BA8                           status 0003                           wtemp0 007E  
               __end_of_sprintf 0BEE                 ??_print_remaing 00B4                 __initialization 07CB  
                  __end_of_atoi 1000                    __end_of_main 01EF                    __end_of_dtoa 0636  
                 command@lownib 0077                __end_of_i2c_read 0AFF                __end_of_i2c_wait 0A5F  
              __end_of_i2c_stop 0A35                   get_next@t_min 002E                          ??_atoi 0078  
                        ??_main 006E                          ??_dtoa 0038                 ??_bcd_2_decimal 0074  
        __end_of_WDT_Initialize 0A27                          ?__read 0070                          ?_fputc 0070  
                        ?_fputs 0078                          _ANSELA 018C                          ?_putch 0070  
                        _ANSELB 018D                          _BORCON 0116                print_money@money 00B2  
                  i2c_read@data 0072                          _OSCCON 0099                          u114lld 03EF  
                        u123lld 04B4                          u116lld 041A                          u133lld 02C7  
                        u125lld 0219                   vfpfcnvrt@done 005D                          u127lld 0244  
                        u146lld 050F                          _WDTCON 0097                    vfprintf@cfmt 0066  
              __end_of_lcd_init 03C5                __end_of_get_next 0111                          ___bmul 0ABD  
                     ??___aodiv 0070                       ??___aomod 0070                          ___wmul 0B68  
                        pad@buf 0024                          _trains 2106                       ??_lcd_cmd 0071  
                        dtoa@fp 003D                       ??_command 0073                          _strlen 0B31  
                  __pdataBIGRAM 2106                          fputc@c 0070                          fputs@c 0020  
                        fputs@i 0021                          fputs@s 0023                       ??_isdigit 0072  
            _i2c_repeated_start 0A49                       ??_isspace 0072                 ?_WDT_Initialize 0070  
                        putch@c 0070                __end_of_vfprintf 0C9A                       ??_sprintf 007D  
           ?_i2c_repeated_start 0070               _SYSTEM_Initialize 0A35                    ?_print_money 00AC  
       __end_of__initialization 07FD                    ?_print_train 00AC              ?_SYSTEM_Initialize 0070  
         print_remaing@next_min 00BA                print_train@next1 00AE             ___bmul@multiplicand 0070  
                command@highnib 0076                  __pcstackCOMMON 0070                    __pidataBANK1 0004  
           ??_SYSTEM_Initialize 0070                   __end_of__read 0BCA                   __end_of_fputc 0DB7  
                 __end_of_fputs 0C3F            ??_i2c_repeated_start 0070                   __end_of_putch 0A23  
             __end_of_i2c_start 0A49                ??_lcd_set_cursor 0079               __end_of_i2c_write 0A95  
                _OPTION_REGbits 0095                      _calc_money 0EEB                         ??__read 0078  
                       ??_fputc 0073       __end_of_SYSTEM_Initialize 0A3F                         ??_fputs 0079  
                    __read@data 007A                         ??_putch 0070                      __pbssBANK1 00C6  
                    __pbssBANK2 0120                       ?_i2c_read 0070                       ?_i2c_wait 0070  
                     ?_i2c_stop 0070               print_remaing@date 00AC               print_remaing@next 00B2  
                    __pmaintext 0111                         ?___bmul 0070                         ?___wmul 0070  
                       _APFCON0 011D                         _APFCON1 011E                         ?_strlen 0070  
                       _OSCTUNE 0098                         _SSP2ADD 021A                         _SSP2BUF 0219  
                     ?_lcd_init 0070                       ?_get_next 0076                      ??_i2c_read 0070  
                    ??_i2c_wait 0070                      ??_i2c_stop 0070            __end_of_HOUR_4_MONEY 083E  
         __end_of_lcd_backlight 0A85               __end_of_lcd_clear 0C16                         ___aodiv 03C5  
             __end_of_lcd_print 0B68                         ___aomod 01EF                       ?_vfprintf 0060  
                       __ptext1 0CD2                         __ptext2 0BA8                         __ptext3 0A49  
                       __ptext4 0AE8                         __ptext5 0AA9                         __ptext6 0ABD  
                       __ptext7 0E10                         __ptext8 0E6B                         __ptext9 0D18  
                       _lcd_cmd 0A95            __end_of_REGULAR_HOUR 0802                         _command 0C9A  
         _OSCILLATOR_Initialize 0A27                         _isdigit 0AFF               __end_of_read_date 0D18  
                   ?_calc_money 0076        ??_PIN_MANAGER_Initialize 0070                         _isspace 0B87  
                       atoi@neg 0020                         _sprintf 0BCA                         clrloop0 0A60  
                    ??_lcd_init 0072                      ??_get_next 0020            end_of_initialization 07FD  
                       fputc@fp 0072                         init_ram 0A6B                         fputs@fp 0078  
                       initloop 0A6C                   __read@address 0079           __end_of_print_remaing 0EEB  
             __end_of_vfpfcnvrt 07CB                      ??_vfprintf 0063                         strlen@a 0073  
                       strlen@s 0074                ??_WDT_Initialize 0070                   i2c_write@data 0070  
     lcd_set_cursor@row_offsets 0020                      lcd_cmd@cmd 0071           __end_of_bcd_2_decimal 0ABD  
                    command@val 0075                  __end_of___bmul 0AD2                   __pidataBIGRAM 0008  
                   vfpfcnvrt@ap 004F                     vfpfcnvrt@fp 005F                     vfpfcnvrt@ll 0055  
                __end_of___wmul 0B87          ?_OSCILLATOR_Initialize 0070                  __end_of_strlen 0B4B  
           start_initialization 07CB                     __end_of_abs 0B31                       _i2c_start 0A3F  
                   __end_of_pad 0E10                       _i2c_write 0A85                 print_money@date 00AC  
               get_next@now_min 002C                     vfprintf@fmt 0060                        ??___bmul 0071  
                      ??___wmul 0074                     __pdataBANK1 00E2                        ??_strlen 0072  
                  _HOUR_4_MONEY 083C             lcd_set_cursor@F2511 00E2                       ___latbits 0001  
               print_train@next 00AC                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
              ___aodiv@dividend 0028            print_remaing@now_min 00B8                      ?_i2c_start 0070  
                    ?_i2c_write 0070                    _REGULAR_HOUR 0800          _PIN_MANAGER_Initialize 0AD2  
                     _dtoa$1038 003B                        ?___aodiv 0020                        ?___aomod 0020  
              ___aodiv@quotient 0073                       _lcd_clear 0BEE                       _lcd_print 0B4B  
                      ?_lcd_cmd 0070                        ?_command 0072                        ?_isdigit 0070  
                  ??_calc_money 0020             __end_of_MIN_4_MONEY 0840                        ?_isspace 0070  
                      ?_sprintf 0068                       _read_date 0CD2                  ___wmul@product 0074  
                     clear_ram0 0A5F              __end_of_calc_money 0F6C                        _SSP2CON1 021D  
                      _SSP2CON2 021E                        _SSP2STAT 021C                      ?_lcd_clear 0070  
                     _vfpfcnvrt 0636                      ?_lcd_print 0078               ___wmul@multiplier 0070  
                     get_next@i 0031                       main@next1 00BC                     ??_i2c_start 0070  
                  _isspace$1087 0074                     ??_i2c_write 0070                      ?_read_date 0070  
                 ??_print_money 00B4                        _i2c_read 0AE8                   ??_print_train 00B0  
                      _i2c_wait 0A53                        _i2c_stop 0A2E                      vfprintf@ap 0062  
                    vfprintf@fp 0065         ??_OSCILLATOR_Initialize 0070                      ?_vfpfcnvrt 004E  
                   _MIN_4_MONEY 083E                 ___aodiv@divisor 0020                 ___aodiv@counter 0071  
                    sprintf@fmt 0068                        __ptext10 0BCA                        __ptext11 0C69  
                      __ptext20 01EF                        __ptext12 0636                        __ptext21 03C5  
                      __ptext13 04C6                        __ptext30 0A77                        __ptext22 0F6C  
                      __ptext14 0DB7                        __ptext31 0A95                        __ptext23 0B87  
                      __ptext15 0B31                        __ptext40 0A23                        __ptext32 0A85  
                      __ptext24 0AFF                        __ptext16 0C16                        __ptext41 0AD2  
                      __ptext33 0A2E                        __ptext25 0BEE                        __ptext17 0D65  
                      __ptext42 0A27                        __ptext34 0A3F                        __ptext26 0C3F  
                      __ptext18 0A22                        __ptext35 0A53                        __ptext27 0B4B  
                      __ptext19 0B17                        __ptext36 0072                        __ptext28 0C9A  
                      __ptext37 0EEB                        __ptext29 02D9                        __ptext38 0B68  
                      __ptext39 0A35                        _lcd_init 02D9                        _get_next 0072  
                  _SSP2CON1bits 021D                    _SSP2CON2bits 021E                   _lcd_backlight 0A77  
           __end_of_print_money 0D65             __end_of_print_train 0E6B                        _vfprintf 0C69  
                      main@date 00C0                     ??_lcd_clear 007C                        main@next 00BE  
                  _SSP2STATbits 021C                     ??_lcd_print 007A                ___aomod@dividend 0028  
                      isdigit@c 0070                   read_date@date 007C                     _regular_flg 00D0  
                   ??_read_date 007B                  _lcd_set_cursor 0C3F               lcd_set_cursor@cmd 0025  
             lcd_set_cursor@col 0024                       sprintf@ap 00A0               lcd_set_cursor@row 0078  
                      isspace@c 0070         ?_PIN_MANAGER_Initialize 0070                  ?_lcd_backlight 0070  
    __end_of_i2c_repeated_start 0A53                   _print_remaing 0E6B                 ___aomod@divisor 0020  
                   ??_vfpfcnvrt 0050                 ___aomod@counter 0071                   __pstringtext1 083C  
                 __pstringtext2 083E                   __pstringtext3 0800                   __pstringtext4 0814  
                 __pstringtext5 0824                   __pstringtext6 0830                   __pstringtext7 0840  
                 __pstringtext8 0000                        sprintf@f 00A2                        sprintf@s 00A1  
        __end_of_lcd_set_cursor 0C69                   _bcd_2_decimal 0AA9                    ___aodiv@sign 0072  
__end_of_PIN_MANAGER_Initialize 0AE8                     _print_money 0D18                     _print_train 0E10  
                  ___aomod@sign 0072                   __backlightval 00D1                  ?_print_remaing 00AC  
