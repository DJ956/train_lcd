

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 01 21:50:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x220,48
    69                           	dabs	1,0x1CA,38
    70                           	dabs	1,0x211A,0,_trains
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.32
    74                           ; Generated 02/02/2021 GMT
    75                           ; 
    76                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F1827 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011A                     	;# 
   166  011B                     	;# 
   167  011D                     	;# 
   168  011E                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0191                     	;# 
   172  0191                     	;# 
   173  0192                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0193                     	;# 
   177  0194                     	;# 
   178  0195                     	;# 
   179  0196                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019C                     	;# 
   187  019C                     	;# 
   188  019D                     	;# 
   189  019E                     	;# 
   190  019F                     	;# 
   191  020C                     	;# 
   192  020D                     	;# 
   193  0211                     	;# 
   194  0211                     	;# 
   195  0212                     	;# 
   196  0212                     	;# 
   197  0213                     	;# 
   198  0213                     	;# 
   199  0214                     	;# 
   200  0214                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  0219                     	;# 
   209  021A                     	;# 
   210  021B                     	;# 
   211  021C                     	;# 
   212  021D                     	;# 
   213  021E                     	;# 
   214  021F                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0294                     	;# 
   220  0295                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0298                     	;# 
   224  0298                     	;# 
   225  0299                     	;# 
   226  029A                     	;# 
   227  029B                     	;# 
   228  029C                     	;# 
   229  029C                     	;# 
   230  029D                     	;# 
   231  029E                     	;# 
   232  029E                     	;# 
   233  0311                     	;# 
   234  0311                     	;# 
   235  0312                     	;# 
   236  0313                     	;# 
   237  0318                     	;# 
   238  0318                     	;# 
   239  0319                     	;# 
   240  031A                     	;# 
   241  0394                     	;# 
   242  0395                     	;# 
   243  0396                     	;# 
   244  039A                     	;# 
   245  039C                     	;# 
   246  039D                     	;# 
   247  039E                     	;# 
   248  039F                     	;# 
   249  0415                     	;# 
   250  0416                     	;# 
   251  0417                     	;# 
   252  041C                     	;# 
   253  041D                     	;# 
   254  041E                     	;# 
   255  0FE4                     	;# 
   256  0FE5                     	;# 
   257  0FE6                     	;# 
   258  0FE7                     	;# 
   259  0FE8                     	;# 
   260  0FE9                     	;# 
   261  0FEA                     	;# 
   262  0FEB                     	;# 
   263  0FED                     	;# 
   264  0FEE                     	;# 
   265  0FEF                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  0111                     	;# 
   315  0112                     	;# 
   316  0113                     	;# 
   317  0114                     	;# 
   318  0115                     	;# 
   319  0116                     	;# 
   320  0117                     	;# 
   321  0118                     	;# 
   322  0119                     	;# 
   323  011A                     	;# 
   324  011B                     	;# 
   325  011D                     	;# 
   326  011E                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  0191                     	;# 
   330  0191                     	;# 
   331  0192                     	;# 
   332  0193                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0194                     	;# 
   336  0195                     	;# 
   337  0196                     	;# 
   338  0199                     	;# 
   339  019A                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019C                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020C                     	;# 
   350  020D                     	;# 
   351  0211                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0212                     	;# 
   355  0213                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0216                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0217                     	;# 
   366  0219                     	;# 
   367  021A                     	;# 
   368  021B                     	;# 
   369  021C                     	;# 
   370  021D                     	;# 
   371  021E                     	;# 
   372  021F                     	;# 
   373  0291                     	;# 
   374  0291                     	;# 
   375  0292                     	;# 
   376  0293                     	;# 
   377  0294                     	;# 
   378  0295                     	;# 
   379  0295                     	;# 
   380  0296                     	;# 
   381  0298                     	;# 
   382  0298                     	;# 
   383  0299                     	;# 
   384  029A                     	;# 
   385  029B                     	;# 
   386  029C                     	;# 
   387  029C                     	;# 
   388  029D                     	;# 
   389  029E                     	;# 
   390  029E                     	;# 
   391  0311                     	;# 
   392  0311                     	;# 
   393  0312                     	;# 
   394  0313                     	;# 
   395  0318                     	;# 
   396  0318                     	;# 
   397  0319                     	;# 
   398  031A                     	;# 
   399  0394                     	;# 
   400  0395                     	;# 
   401  0396                     	;# 
   402  039A                     	;# 
   403  039C                     	;# 
   404  039D                     	;# 
   405  039E                     	;# 
   406  039F                     	;# 
   407  0415                     	;# 
   408  0416                     	;# 
   409  0417                     	;# 
   410  041C                     	;# 
   411  041D                     	;# 
   412  041E                     	;# 
   413  0FE4                     	;# 
   414  0FE5                     	;# 
   415  0FE6                     	;# 
   416  0FE7                     	;# 
   417  0FE8                     	;# 
   418  0FE9                     	;# 
   419  0FEA                     	;# 
   420  0FEB                     	;# 
   421  0FED                     	;# 
   422  0FEE                     	;# 
   423  0FEF                     	;# 
   424  0000                     	;# 
   425  0001                     	;# 
   426  0002                     	;# 
   427  0003                     	;# 
   428  0004                     	;# 
   429  0005                     	;# 
   430  0006                     	;# 
   431  0007                     	;# 
   432  0008                     	;# 
   433  0009                     	;# 
   434  000A                     	;# 
   435  000B                     	;# 
   436  000C                     	;# 
   437  000D                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  008C                     	;# 
   454  008D                     	;# 
   455  0091                     	;# 
   456  0092                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0095                     	;# 
   460  0096                     	;# 
   461  0097                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009A                     	;# 
   465  009B                     	;# 
   466  009B                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009E                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  0111                     	;# 
   473  0112                     	;# 
   474  0113                     	;# 
   475  0114                     	;# 
   476  0115                     	;# 
   477  0116                     	;# 
   478  0117                     	;# 
   479  0118                     	;# 
   480  0119                     	;# 
   481  011A                     	;# 
   482  011B                     	;# 
   483  011D                     	;# 
   484  011E                     	;# 
   485  018C                     	;# 
   486  018D                     	;# 
   487  0191                     	;# 
   488  0191                     	;# 
   489  0192                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0194                     	;# 
   494  0195                     	;# 
   495  0196                     	;# 
   496  0199                     	;# 
   497  019A                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019C                     	;# 
   503  019C                     	;# 
   504  019D                     	;# 
   505  019E                     	;# 
   506  019F                     	;# 
   507  020C                     	;# 
   508  020D                     	;# 
   509  0211                     	;# 
   510  0211                     	;# 
   511  0212                     	;# 
   512  0212                     	;# 
   513  0213                     	;# 
   514  0213                     	;# 
   515  0214                     	;# 
   516  0214                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0216                     	;# 
   521  0216                     	;# 
   522  0217                     	;# 
   523  0217                     	;# 
   524  0219                     	;# 
   525  021A                     	;# 
   526  021B                     	;# 
   527  021C                     	;# 
   528  021D                     	;# 
   529  021E                     	;# 
   530  021F                     	;# 
   531  0291                     	;# 
   532  0291                     	;# 
   533  0292                     	;# 
   534  0293                     	;# 
   535  0294                     	;# 
   536  0295                     	;# 
   537  0295                     	;# 
   538  0296                     	;# 
   539  0298                     	;# 
   540  0298                     	;# 
   541  0299                     	;# 
   542  029A                     	;# 
   543  029B                     	;# 
   544  029C                     	;# 
   545  029C                     	;# 
   546  029D                     	;# 
   547  029E                     	;# 
   548  029E                     	;# 
   549  0311                     	;# 
   550  0311                     	;# 
   551  0312                     	;# 
   552  0313                     	;# 
   553  0318                     	;# 
   554  0318                     	;# 
   555  0319                     	;# 
   556  031A                     	;# 
   557  0394                     	;# 
   558  0395                     	;# 
   559  0396                     	;# 
   560  039A                     	;# 
   561  039C                     	;# 
   562  039D                     	;# 
   563  039E                     	;# 
   564  039F                     	;# 
   565  0415                     	;# 
   566  0416                     	;# 
   567  0417                     	;# 
   568  041C                     	;# 
   569  041D                     	;# 
   570  041E                     	;# 
   571  0FE4                     	;# 
   572  0FE5                     	;# 
   573  0FE6                     	;# 
   574  0FE7                     	;# 
   575  0FE8                     	;# 
   576  0FE9                     	;# 
   577  0FEA                     	;# 
   578  0FEB                     	;# 
   579  0FED                     	;# 
   580  0FEE                     	;# 
   581  0FEF                     	;# 
   582  0000                     	;# 
   583  0001                     	;# 
   584  0002                     	;# 
   585  0003                     	;# 
   586  0004                     	;# 
   587  0005                     	;# 
   588  0006                     	;# 
   589  0007                     	;# 
   590  0008                     	;# 
   591  0009                     	;# 
   592  000A                     	;# 
   593  000B                     	;# 
   594  000C                     	;# 
   595  000D                     	;# 
   596  0011                     	;# 
   597  0012                     	;# 
   598  0013                     	;# 
   599  0014                     	;# 
   600  0015                     	;# 
   601  0016                     	;# 
   602  0016                     	;# 
   603  0017                     	;# 
   604  0018                     	;# 
   605  0019                     	;# 
   606  001A                     	;# 
   607  001B                     	;# 
   608  001C                     	;# 
   609  001E                     	;# 
   610  001F                     	;# 
   611  008C                     	;# 
   612  008D                     	;# 
   613  0091                     	;# 
   614  0092                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009B                     	;# 
   625  009C                     	;# 
   626  009D                     	;# 
   627  009E                     	;# 
   628  010C                     	;# 
   629  010D                     	;# 
   630  0111                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0115                     	;# 
   635  0116                     	;# 
   636  0117                     	;# 
   637  0118                     	;# 
   638  0119                     	;# 
   639  011A                     	;# 
   640  011B                     	;# 
   641  011D                     	;# 
   642  011E                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  0191                     	;# 
   646  0191                     	;# 
   647  0192                     	;# 
   648  0193                     	;# 
   649  0193                     	;# 
   650  0193                     	;# 
   651  0194                     	;# 
   652  0195                     	;# 
   653  0196                     	;# 
   654  0199                     	;# 
   655  019A                     	;# 
   656  019B                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019C                     	;# 
   661  019C                     	;# 
   662  019D                     	;# 
   663  019E                     	;# 
   664  019F                     	;# 
   665  020C                     	;# 
   666  020D                     	;# 
   667  0211                     	;# 
   668  0211                     	;# 
   669  0212                     	;# 
   670  0212                     	;# 
   671  0213                     	;# 
   672  0213                     	;# 
   673  0214                     	;# 
   674  0214                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0216                     	;# 
   679  0216                     	;# 
   680  0217                     	;# 
   681  0217                     	;# 
   682  0219                     	;# 
   683  021A                     	;# 
   684  021B                     	;# 
   685  021C                     	;# 
   686  021D                     	;# 
   687  021E                     	;# 
   688  021F                     	;# 
   689  0291                     	;# 
   690  0291                     	;# 
   691  0292                     	;# 
   692  0293                     	;# 
   693  0294                     	;# 
   694  0295                     	;# 
   695  0295                     	;# 
   696  0296                     	;# 
   697  0298                     	;# 
   698  0298                     	;# 
   699  0299                     	;# 
   700  029A                     	;# 
   701  029B                     	;# 
   702  029C                     	;# 
   703  029C                     	;# 
   704  029D                     	;# 
   705  029E                     	;# 
   706  029E                     	;# 
   707  0311                     	;# 
   708  0311                     	;# 
   709  0312                     	;# 
   710  0313                     	;# 
   711  0318                     	;# 
   712  0318                     	;# 
   713  0319                     	;# 
   714  031A                     	;# 
   715  0394                     	;# 
   716  0395                     	;# 
   717  0396                     	;# 
   718  039A                     	;# 
   719  039C                     	;# 
   720  039D                     	;# 
   721  039E                     	;# 
   722  039F                     	;# 
   723  0415                     	;# 
   724  0416                     	;# 
   725  0417                     	;# 
   726  041C                     	;# 
   727  041D                     	;# 
   728  041E                     	;# 
   729  0FE4                     	;# 
   730  0FE5                     	;# 
   731  0FE6                     	;# 
   732  0FE7                     	;# 
   733  0FE8                     	;# 
   734  0FE9                     	;# 
   735  0FEA                     	;# 
   736  0FEB                     	;# 
   737  0FED                     	;# 
   738  0FEE                     	;# 
   739  0FEF                     	;# 
   740  0000                     	;# 
   741  0001                     	;# 
   742  0002                     	;# 
   743  0003                     	;# 
   744  0004                     	;# 
   745  0005                     	;# 
   746  0006                     	;# 
   747  0007                     	;# 
   748  0008                     	;# 
   749  0009                     	;# 
   750  000A                     	;# 
   751  000B                     	;# 
   752  000C                     	;# 
   753  000D                     	;# 
   754  0011                     	;# 
   755  0012                     	;# 
   756  0013                     	;# 
   757  0014                     	;# 
   758  0015                     	;# 
   759  0016                     	;# 
   760  0016                     	;# 
   761  0017                     	;# 
   762  0018                     	;# 
   763  0019                     	;# 
   764  001A                     	;# 
   765  001B                     	;# 
   766  001C                     	;# 
   767  001E                     	;# 
   768  001F                     	;# 
   769  008C                     	;# 
   770  008D                     	;# 
   771  0091                     	;# 
   772  0092                     	;# 
   773  0093                     	;# 
   774  0094                     	;# 
   775  0095                     	;# 
   776  0096                     	;# 
   777  0097                     	;# 
   778  0098                     	;# 
   779  0099                     	;# 
   780  009A                     	;# 
   781  009B                     	;# 
   782  009B                     	;# 
   783  009C                     	;# 
   784  009D                     	;# 
   785  009E                     	;# 
   786  010C                     	;# 
   787  010D                     	;# 
   788  0111                     	;# 
   789  0112                     	;# 
   790  0113                     	;# 
   791  0114                     	;# 
   792  0115                     	;# 
   793  0116                     	;# 
   794  0117                     	;# 
   795  0118                     	;# 
   796  0119                     	;# 
   797  011A                     	;# 
   798  011B                     	;# 
   799  011D                     	;# 
   800  011E                     	;# 
   801  018C                     	;# 
   802  018D                     	;# 
   803  0191                     	;# 
   804  0191                     	;# 
   805  0192                     	;# 
   806  0193                     	;# 
   807  0193                     	;# 
   808  0193                     	;# 
   809  0194                     	;# 
   810  0195                     	;# 
   811  0196                     	;# 
   812  0199                     	;# 
   813  019A                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019C                     	;# 
   819  019C                     	;# 
   820  019D                     	;# 
   821  019E                     	;# 
   822  019F                     	;# 
   823  020C                     	;# 
   824  020D                     	;# 
   825  0211                     	;# 
   826  0211                     	;# 
   827  0212                     	;# 
   828  0212                     	;# 
   829  0213                     	;# 
   830  0213                     	;# 
   831  0214                     	;# 
   832  0214                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0215                     	;# 
   836  0216                     	;# 
   837  0216                     	;# 
   838  0217                     	;# 
   839  0217                     	;# 
   840  0219                     	;# 
   841  021A                     	;# 
   842  021B                     	;# 
   843  021C                     	;# 
   844  021D                     	;# 
   845  021E                     	;# 
   846  021F                     	;# 
   847  0291                     	;# 
   848  0291                     	;# 
   849  0292                     	;# 
   850  0293                     	;# 
   851  0294                     	;# 
   852  0295                     	;# 
   853  0295                     	;# 
   854  0296                     	;# 
   855  0298                     	;# 
   856  0298                     	;# 
   857  0299                     	;# 
   858  029A                     	;# 
   859  029B                     	;# 
   860  029C                     	;# 
   861  029C                     	;# 
   862  029D                     	;# 
   863  029E                     	;# 
   864  029E                     	;# 
   865  0311                     	;# 
   866  0311                     	;# 
   867  0312                     	;# 
   868  0313                     	;# 
   869  0318                     	;# 
   870  0318                     	;# 
   871  0319                     	;# 
   872  031A                     	;# 
   873  0394                     	;# 
   874  0395                     	;# 
   875  0396                     	;# 
   876  039A                     	;# 
   877  039C                     	;# 
   878  039D                     	;# 
   879  039E                     	;# 
   880  039F                     	;# 
   881  0415                     	;# 
   882  0416                     	;# 
   883  0417                     	;# 
   884  041C                     	;# 
   885  041D                     	;# 
   886  041E                     	;# 
   887  0FE4                     	;# 
   888  0FE5                     	;# 
   889  0FE6                     	;# 
   890  0FE7                     	;# 
   891  0FE8                     	;# 
   892  0FE9                     	;# 
   893  0FEA                     	;# 
   894  0FEB                     	;# 
   895  0FED                     	;# 
   896  0FEE                     	;# 
   897  0FEF                     	;# 
   898  0000                     	;# 
   899  0001                     	;# 
   900  0002                     	;# 
   901  0003                     	;# 
   902  0004                     	;# 
   903  0005                     	;# 
   904  0006                     	;# 
   905  0007                     	;# 
   906  0008                     	;# 
   907  0009                     	;# 
   908  000A                     	;# 
   909  000B                     	;# 
   910  000C                     	;# 
   911  000D                     	;# 
   912  0011                     	;# 
   913  0012                     	;# 
   914  0013                     	;# 
   915  0014                     	;# 
   916  0015                     	;# 
   917  0016                     	;# 
   918  0016                     	;# 
   919  0017                     	;# 
   920  0018                     	;# 
   921  0019                     	;# 
   922  001A                     	;# 
   923  001B                     	;# 
   924  001C                     	;# 
   925  001E                     	;# 
   926  001F                     	;# 
   927  008C                     	;# 
   928  008D                     	;# 
   929  0091                     	;# 
   930  0092                     	;# 
   931  0093                     	;# 
   932  0094                     	;# 
   933  0095                     	;# 
   934  0096                     	;# 
   935  0097                     	;# 
   936  0098                     	;# 
   937  0099                     	;# 
   938  009A                     	;# 
   939  009B                     	;# 
   940  009B                     	;# 
   941  009C                     	;# 
   942  009D                     	;# 
   943  009E                     	;# 
   944  010C                     	;# 
   945  010D                     	;# 
   946  0111                     	;# 
   947  0112                     	;# 
   948  0113                     	;# 
   949  0114                     	;# 
   950  0115                     	;# 
   951  0116                     	;# 
   952  0117                     	;# 
   953  0118                     	;# 
   954  0119                     	;# 
   955  011A                     	;# 
   956  011B                     	;# 
   957  011D                     	;# 
   958  011E                     	;# 
   959  018C                     	;# 
   960  018D                     	;# 
   961  0191                     	;# 
   962  0191                     	;# 
   963  0192                     	;# 
   964  0193                     	;# 
   965  0193                     	;# 
   966  0193                     	;# 
   967  0194                     	;# 
   968  0195                     	;# 
   969  0196                     	;# 
   970  0199                     	;# 
   971  019A                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019B                     	;# 
   975  019B                     	;# 
   976  019C                     	;# 
   977  019C                     	;# 
   978  019D                     	;# 
   979  019E                     	;# 
   980  019F                     	;# 
   981  020C                     	;# 
   982  020D                     	;# 
   983  0211                     	;# 
   984  0211                     	;# 
   985  0212                     	;# 
   986  0212                     	;# 
   987  0213                     	;# 
   988  0213                     	;# 
   989  0214                     	;# 
   990  0214                     	;# 
   991  0215                     	;# 
   992  0215                     	;# 
   993  0215                     	;# 
   994  0216                     	;# 
   995  0216                     	;# 
   996  0217                     	;# 
   997  0217                     	;# 
   998  0219                     	;# 
   999  021A                     	;# 
  1000  021B                     	;# 
  1001  021C                     	;# 
  1002  021D                     	;# 
  1003  021E                     	;# 
  1004  021F                     	;# 
  1005  0291                     	;# 
  1006  0291                     	;# 
  1007  0292                     	;# 
  1008  0293                     	;# 
  1009  0294                     	;# 
  1010  0295                     	;# 
  1011  0295                     	;# 
  1012  0296                     	;# 
  1013  0298                     	;# 
  1014  0298                     	;# 
  1015  0299                     	;# 
  1016  029A                     	;# 
  1017  029B                     	;# 
  1018  029C                     	;# 
  1019  029C                     	;# 
  1020  029D                     	;# 
  1021  029E                     	;# 
  1022  029E                     	;# 
  1023  0311                     	;# 
  1024  0311                     	;# 
  1025  0312                     	;# 
  1026  0313                     	;# 
  1027  0318                     	;# 
  1028  0318                     	;# 
  1029  0319                     	;# 
  1030  031A                     	;# 
  1031  0394                     	;# 
  1032  0395                     	;# 
  1033  0396                     	;# 
  1034  039A                     	;# 
  1035  039C                     	;# 
  1036  039D                     	;# 
  1037  039E                     	;# 
  1038  039F                     	;# 
  1039  0415                     	;# 
  1040  0416                     	;# 
  1041  0417                     	;# 
  1042  041C                     	;# 
  1043  041D                     	;# 
  1044  041E                     	;# 
  1045  0FE4                     	;# 
  1046  0FE5                     	;# 
  1047  0FE6                     	;# 
  1048  0FE7                     	;# 
  1049  0FE8                     	;# 
  1050  0FE9                     	;# 
  1051  0FEA                     	;# 
  1052  0FEB                     	;# 
  1053  0FED                     	;# 
  1054  0FEE                     	;# 
  1055  0FEF                     	;# 
  1056  0000                     	;# 
  1057  0001                     	;# 
  1058  0002                     	;# 
  1059  0003                     	;# 
  1060  0004                     	;# 
  1061  0005                     	;# 
  1062  0006                     	;# 
  1063  0007                     	;# 
  1064  0008                     	;# 
  1065  0009                     	;# 
  1066  000A                     	;# 
  1067  000B                     	;# 
  1068  000C                     	;# 
  1069  000D                     	;# 
  1070  0011                     	;# 
  1071  0012                     	;# 
  1072  0013                     	;# 
  1073  0014                     	;# 
  1074  0015                     	;# 
  1075  0016                     	;# 
  1076  0016                     	;# 
  1077  0017                     	;# 
  1078  0018                     	;# 
  1079  0019                     	;# 
  1080  001A                     	;# 
  1081  001B                     	;# 
  1082  001C                     	;# 
  1083  001E                     	;# 
  1084  001F                     	;# 
  1085  008C                     	;# 
  1086  008D                     	;# 
  1087  0091                     	;# 
  1088  0092                     	;# 
  1089  0093                     	;# 
  1090  0094                     	;# 
  1091  0095                     	;# 
  1092  0096                     	;# 
  1093  0097                     	;# 
  1094  0098                     	;# 
  1095  0099                     	;# 
  1096  009A                     	;# 
  1097  009B                     	;# 
  1098  009B                     	;# 
  1099  009C                     	;# 
  1100  009D                     	;# 
  1101  009E                     	;# 
  1102  010C                     	;# 
  1103  010D                     	;# 
  1104  0111                     	;# 
  1105  0112                     	;# 
  1106  0113                     	;# 
  1107  0114                     	;# 
  1108  0115                     	;# 
  1109  0116                     	;# 
  1110  0117                     	;# 
  1111  0118                     	;# 
  1112  0119                     	;# 
  1113  011A                     	;# 
  1114  011B                     	;# 
  1115  011D                     	;# 
  1116  011E                     	;# 
  1117  018C                     	;# 
  1118  018D                     	;# 
  1119  0191                     	;# 
  1120  0191                     	;# 
  1121  0192                     	;# 
  1122  0193                     	;# 
  1123  0193                     	;# 
  1124  0193                     	;# 
  1125  0194                     	;# 
  1126  0195                     	;# 
  1127  0196                     	;# 
  1128  0199                     	;# 
  1129  019A                     	;# 
  1130  019B                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019B                     	;# 
  1134  019C                     	;# 
  1135  019C                     	;# 
  1136  019D                     	;# 
  1137  019E                     	;# 
  1138  019F                     	;# 
  1139  020C                     	;# 
  1140  020D                     	;# 
  1141  0211                     	;# 
  1142  0211                     	;# 
  1143  0212                     	;# 
  1144  0212                     	;# 
  1145  0213                     	;# 
  1146  0213                     	;# 
  1147  0214                     	;# 
  1148  0214                     	;# 
  1149  0215                     	;# 
  1150  0215                     	;# 
  1151  0215                     	;# 
  1152  0216                     	;# 
  1153  0216                     	;# 
  1154  0217                     	;# 
  1155  0217                     	;# 
  1156  0219                     	;# 
  1157  021A                     	;# 
  1158  021B                     	;# 
  1159  021C                     	;# 
  1160  021D                     	;# 
  1161  021E                     	;# 
  1162  021F                     	;# 
  1163  0291                     	;# 
  1164  0291                     	;# 
  1165  0292                     	;# 
  1166  0293                     	;# 
  1167  0294                     	;# 
  1168  0295                     	;# 
  1169  0295                     	;# 
  1170  0296                     	;# 
  1171  0298                     	;# 
  1172  0298                     	;# 
  1173  0299                     	;# 
  1174  029A                     	;# 
  1175  029B                     	;# 
  1176  029C                     	;# 
  1177  029C                     	;# 
  1178  029D                     	;# 
  1179  029E                     	;# 
  1180  029E                     	;# 
  1181  0311                     	;# 
  1182  0311                     	;# 
  1183  0312                     	;# 
  1184  0313                     	;# 
  1185  0318                     	;# 
  1186  0318                     	;# 
  1187  0319                     	;# 
  1188  031A                     	;# 
  1189  0394                     	;# 
  1190  0395                     	;# 
  1191  0396                     	;# 
  1192  039A                     	;# 
  1193  039C                     	;# 
  1194  039D                     	;# 
  1195  039E                     	;# 
  1196  039F                     	;# 
  1197  0415                     	;# 
  1198  0416                     	;# 
  1199  0417                     	;# 
  1200  041C                     	;# 
  1201  041D                     	;# 
  1202  041E                     	;# 
  1203  0FE4                     	;# 
  1204  0FE5                     	;# 
  1205  0FE6                     	;# 
  1206  0FE7                     	;# 
  1207  0FE8                     	;# 
  1208  0FE9                     	;# 
  1209  0FEA                     	;# 
  1210  0FEB                     	;# 
  1211  0FED                     	;# 
  1212  0FEE                     	;# 
  1213  0FEF                     	;# 
  1214  0000                     	;# 
  1215  0001                     	;# 
  1216  0002                     	;# 
  1217  0003                     	;# 
  1218  0004                     	;# 
  1219  0005                     	;# 
  1220  0006                     	;# 
  1221  0007                     	;# 
  1222  0008                     	;# 
  1223  0009                     	;# 
  1224  000A                     	;# 
  1225  000B                     	;# 
  1226  000C                     	;# 
  1227  000D                     	;# 
  1228  0011                     	;# 
  1229  0012                     	;# 
  1230  0013                     	;# 
  1231  0014                     	;# 
  1232  0015                     	;# 
  1233  0016                     	;# 
  1234  0016                     	;# 
  1235  0017                     	;# 
  1236  0018                     	;# 
  1237  0019                     	;# 
  1238  001A                     	;# 
  1239  001B                     	;# 
  1240  001C                     	;# 
  1241  001E                     	;# 
  1242  001F                     	;# 
  1243  008C                     	;# 
  1244  008D                     	;# 
  1245  0091                     	;# 
  1246  0092                     	;# 
  1247  0093                     	;# 
  1248  0094                     	;# 
  1249  0095                     	;# 
  1250  0096                     	;# 
  1251  0097                     	;# 
  1252  0098                     	;# 
  1253  0099                     	;# 
  1254  009A                     	;# 
  1255  009B                     	;# 
  1256  009B                     	;# 
  1257  009C                     	;# 
  1258  009D                     	;# 
  1259  009E                     	;# 
  1260  010C                     	;# 
  1261  010D                     	;# 
  1262  0111                     	;# 
  1263  0112                     	;# 
  1264  0113                     	;# 
  1265  0114                     	;# 
  1266  0115                     	;# 
  1267  0116                     	;# 
  1268  0117                     	;# 
  1269  0118                     	;# 
  1270  0119                     	;# 
  1271  011A                     	;# 
  1272  011B                     	;# 
  1273  011D                     	;# 
  1274  011E                     	;# 
  1275  018C                     	;# 
  1276  018D                     	;# 
  1277  0191                     	;# 
  1278  0191                     	;# 
  1279  0192                     	;# 
  1280  0193                     	;# 
  1281  0193                     	;# 
  1282  0193                     	;# 
  1283  0194                     	;# 
  1284  0195                     	;# 
  1285  0196                     	;# 
  1286  0199                     	;# 
  1287  019A                     	;# 
  1288  019B                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019B                     	;# 
  1292  019C                     	;# 
  1293  019C                     	;# 
  1294  019D                     	;# 
  1295  019E                     	;# 
  1296  019F                     	;# 
  1297  020C                     	;# 
  1298  020D                     	;# 
  1299  0211                     	;# 
  1300  0211                     	;# 
  1301  0212                     	;# 
  1302  0212                     	;# 
  1303  0213                     	;# 
  1304  0213                     	;# 
  1305  0214                     	;# 
  1306  0214                     	;# 
  1307  0215                     	;# 
  1308  0215                     	;# 
  1309  0215                     	;# 
  1310  0216                     	;# 
  1311  0216                     	;# 
  1312  0217                     	;# 
  1313  0217                     	;# 
  1314  0219                     	;# 
  1315  021A                     	;# 
  1316  021B                     	;# 
  1317  021C                     	;# 
  1318  021D                     	;# 
  1319  021E                     	;# 
  1320  021F                     	;# 
  1321  0291                     	;# 
  1322  0291                     	;# 
  1323  0292                     	;# 
  1324  0293                     	;# 
  1325  0294                     	;# 
  1326  0295                     	;# 
  1327  0295                     	;# 
  1328  0296                     	;# 
  1329  0298                     	;# 
  1330  0298                     	;# 
  1331  0299                     	;# 
  1332  029A                     	;# 
  1333  029B                     	;# 
  1334  029C                     	;# 
  1335  029C                     	;# 
  1336  029D                     	;# 
  1337  029E                     	;# 
  1338  029E                     	;# 
  1339  0311                     	;# 
  1340  0311                     	;# 
  1341  0312                     	;# 
  1342  0313                     	;# 
  1343  0318                     	;# 
  1344  0318                     	;# 
  1345  0319                     	;# 
  1346  031A                     	;# 
  1347  0394                     	;# 
  1348  0395                     	;# 
  1349  0396                     	;# 
  1350  039A                     	;# 
  1351  039C                     	;# 
  1352  039D                     	;# 
  1353  039E                     	;# 
  1354  039F                     	;# 
  1355  0415                     	;# 
  1356  0416                     	;# 
  1357  0417                     	;# 
  1358  041C                     	;# 
  1359  041D                     	;# 
  1360  041E                     	;# 
  1361  0FE4                     	;# 
  1362  0FE5                     	;# 
  1363  0FE6                     	;# 
  1364  0FE7                     	;# 
  1365  0FE8                     	;# 
  1366  0FE9                     	;# 
  1367  0FEA                     	;# 
  1368  0FEB                     	;# 
  1369  0FED                     	;# 
  1370  0FEE                     	;# 
  1371  0FEF                     	;# 
  1372  0000                     	;# 
  1373  0001                     	;# 
  1374  0002                     	;# 
  1375  0003                     	;# 
  1376  0004                     	;# 
  1377  0005                     	;# 
  1378  0006                     	;# 
  1379  0007                     	;# 
  1380  0008                     	;# 
  1381  0009                     	;# 
  1382  000A                     	;# 
  1383  000B                     	;# 
  1384  000C                     	;# 
  1385  000D                     	;# 
  1386  0011                     	;# 
  1387  0012                     	;# 
  1388  0013                     	;# 
  1389  0014                     	;# 
  1390  0015                     	;# 
  1391  0016                     	;# 
  1392  0016                     	;# 
  1393  0017                     	;# 
  1394  0018                     	;# 
  1395  0019                     	;# 
  1396  001A                     	;# 
  1397  001B                     	;# 
  1398  001C                     	;# 
  1399  001E                     	;# 
  1400  001F                     	;# 
  1401  008C                     	;# 
  1402  008D                     	;# 
  1403  0091                     	;# 
  1404  0092                     	;# 
  1405  0093                     	;# 
  1406  0094                     	;# 
  1407  0095                     	;# 
  1408  0096                     	;# 
  1409  0097                     	;# 
  1410  0098                     	;# 
  1411  0099                     	;# 
  1412  009A                     	;# 
  1413  009B                     	;# 
  1414  009B                     	;# 
  1415  009C                     	;# 
  1416  009D                     	;# 
  1417  009E                     	;# 
  1418  010C                     	;# 
  1419  010D                     	;# 
  1420  0111                     	;# 
  1421  0112                     	;# 
  1422  0113                     	;# 
  1423  0114                     	;# 
  1424  0115                     	;# 
  1425  0116                     	;# 
  1426  0117                     	;# 
  1427  0118                     	;# 
  1428  0119                     	;# 
  1429  011A                     	;# 
  1430  011B                     	;# 
  1431  011D                     	;# 
  1432  011E                     	;# 
  1433  018C                     	;# 
  1434  018D                     	;# 
  1435  0191                     	;# 
  1436  0191                     	;# 
  1437  0192                     	;# 
  1438  0193                     	;# 
  1439  0193                     	;# 
  1440  0193                     	;# 
  1441  0194                     	;# 
  1442  0195                     	;# 
  1443  0196                     	;# 
  1444  0199                     	;# 
  1445  019A                     	;# 
  1446  019B                     	;# 
  1447  019B                     	;# 
  1448  019B                     	;# 
  1449  019B                     	;# 
  1450  019C                     	;# 
  1451  019C                     	;# 
  1452  019D                     	;# 
  1453  019E                     	;# 
  1454  019F                     	;# 
  1455  020C                     	;# 
  1456  020D                     	;# 
  1457  0211                     	;# 
  1458  0211                     	;# 
  1459  0212                     	;# 
  1460  0212                     	;# 
  1461  0213                     	;# 
  1462  0213                     	;# 
  1463  0214                     	;# 
  1464  0214                     	;# 
  1465  0215                     	;# 
  1466  0215                     	;# 
  1467  0215                     	;# 
  1468  0216                     	;# 
  1469  0216                     	;# 
  1470  0217                     	;# 
  1471  0217                     	;# 
  1472  0219                     	;# 
  1473  021A                     	;# 
  1474  021B                     	;# 
  1475  021C                     	;# 
  1476  021D                     	;# 
  1477  021E                     	;# 
  1478  021F                     	;# 
  1479  0291                     	;# 
  1480  0291                     	;# 
  1481  0292                     	;# 
  1482  0293                     	;# 
  1483  0294                     	;# 
  1484  0295                     	;# 
  1485  0295                     	;# 
  1486  0296                     	;# 
  1487  0298                     	;# 
  1488  0298                     	;# 
  1489  0299                     	;# 
  1490  029A                     	;# 
  1491  029B                     	;# 
  1492  029C                     	;# 
  1493  029C                     	;# 
  1494  029D                     	;# 
  1495  029E                     	;# 
  1496  029E                     	;# 
  1497  0311                     	;# 
  1498  0311                     	;# 
  1499  0312                     	;# 
  1500  0313                     	;# 
  1501  0318                     	;# 
  1502  0318                     	;# 
  1503  0319                     	;# 
  1504  031A                     	;# 
  1505  0394                     	;# 
  1506  0395                     	;# 
  1507  0396                     	;# 
  1508  039A                     	;# 
  1509  039C                     	;# 
  1510  039D                     	;# 
  1511  039E                     	;# 
  1512  039F                     	;# 
  1513  0415                     	;# 
  1514  0416                     	;# 
  1515  0417                     	;# 
  1516  041C                     	;# 
  1517  041D                     	;# 
  1518  041E                     	;# 
  1519  0FE4                     	;# 
  1520  0FE5                     	;# 
  1521  0FE6                     	;# 
  1522  0FE7                     	;# 
  1523  0FE8                     	;# 
  1524  0FE9                     	;# 
  1525  0FEA                     	;# 
  1526  0FEB                     	;# 
  1527  0FED                     	;# 
  1528  0FEE                     	;# 
  1529  0FEF                     	;_trains
  1530                           
  1531                           	psect	idataBIGRAM
  1532  0DAA                     __pidataBIGRAM:
  1533                           
  1534                           ;initializer for _trains
  1535  0DAA  3406               	retlw	6
  1536  0DAB  340F               	retlw	15
  1537  0DAC  3406               	retlw	6
  1538  0DAD  3431               	retlw	49
  1539  0DAE  3407               	retlw	7
  1540  0DAF  3419               	retlw	25
  1541  0DB0  3407               	retlw	7
  1542  0DB1  3431               	retlw	49
  1543  0DB2  3408               	retlw	8
  1544  0DB3  340D               	retlw	13
  1545  0DB4  3408               	retlw	8
  1546  0DB5  3425               	retlw	37
  1547  0DB6  3409               	retlw	9
  1548  0DB7  3401               	retlw	1
  1549  0DB8  3409               	retlw	9
  1550  0DB9  3419               	retlw	25
  1551  0DBA  3409               	retlw	9
  1552  0DBB  3431               	retlw	49
  1553  0DBC  340A               	retlw	10
  1554  0DBD  340D               	retlw	13
  1555  0DBE  340A               	retlw	10
  1556  0DBF  3425               	retlw	37
  1557  0DC0  340B               	retlw	11
  1558  0DC1  3401               	retlw	1
  1559  0DC2  340B               	retlw	11
  1560  0DC3  3419               	retlw	25
  1561  0DC4  340B               	retlw	11
  1562  0DC5  3431               	retlw	49
  1563  0DC6  340C               	retlw	12
  1564  0DC7  340D               	retlw	13
  1565  0DC8  340C               	retlw	12
  1566  0DC9  3425               	retlw	37
  1567  0DCA  340D               	retlw	13
  1568  0DCB  3401               	retlw	1
  1569  0DCC  340D               	retlw	13
  1570  0DCD  3419               	retlw	25
  1571  0DCE  340D               	retlw	13
  1572  0DCF  3431               	retlw	49
  1573  0DD0  340E               	retlw	14
  1574  0DD1  340D               	retlw	13
  1575  0DD2  340E               	retlw	14
  1576  0DD3  3425               	retlw	37
  1577  0DD4  340F               	retlw	15
  1578  0DD5  3401               	retlw	1
  1579  0DD6  340F               	retlw	15
  1580  0DD7  3419               	retlw	25
  1581  0DD8  340F               	retlw	15
  1582  0DD9  3431               	retlw	49
  1583  0DDA  3410               	retlw	16
  1584  0DDB  340D               	retlw	13
  1585  0DDC  3410               	retlw	16
  1586  0DDD  3425               	retlw	37
  1587  0DDE  3411               	retlw	17
  1588  0DDF  3401               	retlw	1
  1589  0DE0  3411               	retlw	17
  1590  0DE1  3419               	retlw	25
  1591  0DE2  3411               	retlw	17
  1592  0DE3  3425               	retlw	37
  1593  0DE4  3411               	retlw	17
  1594  0DE5  3431               	retlw	49
  1595  0DE6  3412               	retlw	18
  1596  0DE7  3401               	retlw	1
  1597  0DE8  3412               	retlw	18
  1598  0DE9  3425               	retlw	37
  1599  0DEA  3412               	retlw	18
  1600  0DEB  3431               	retlw	49
  1601  0DEC  3413               	retlw	19
  1602  0DED  3401               	retlw	1
  1603  0DEE  3413               	retlw	19
  1604  0DEF  3419               	retlw	25
  1605  0DF0  3413               	retlw	19
  1606  0DF1  3425               	retlw	37
  1607  0DF2  3413               	retlw	19
  1608  0DF3  3431               	retlw	49
  1609  0DF4  3414               	retlw	20
  1610  0DF5  340D               	retlw	13
  1611  0DF6  3414               	retlw	20
  1612  0DF7  3425               	retlw	37
  1613  0DF8  3415               	retlw	21
  1614  0DF9  3401               	retlw	1
  1615  0DFA  3415               	retlw	21
  1616  0DFB  3418               	retlw	24
  1617  0DFC  3415               	retlw	21
  1618  0DFD  3430               	retlw	48
  1619  0DFE  3416               	retlw	22
  1620  0DFF  3412               	retlw	18
  1621                           
  1622                           	psect	idataBANK1
  1623  0A1B                     __pidataBANK1:
  1624                           
  1625                           ;initializer for lcd_set_cursor@F2502
  1626  0A1B  3400               	retlw	0
  1627  0A1C  3440               	retlw	64
  1628  0A1D  3414               	retlw	20
  1629  0A1E  3454               	retlw	84
  1630                           
  1631                           	psect	stringtext1
  1632  083C                     __pstringtext1:
  1633  083C                     _HOUR_4_MONEY:
  1634  083C  3454               	retlw	84
  1635  083D  3406               	retlw	6
  1636  083E                     __end_of_HOUR_4_MONEY:
  1637                           
  1638                           	psect	stringtext2
  1639  083E                     __pstringtext2:
  1640  083E                     _MIN_4_MONEY:
  1641  083E  341B               	retlw	27
  1642  083F  3400               	retlw	0
  1643  0840                     __end_of_MIN_4_MONEY:
  1644                           
  1645                           	psect	stringtext3
  1646  0800                     __pstringtext3:
  1647  0800                     _REGULAR_HOUR:
  1648  0800  3411               	retlw	17
  1649  0801  3400               	retlw	0
  1650  0802                     __end_of_REGULAR_HOUR:
  1651  0095                     _OPTION_REGbits	set	149
  1652  008D                     _TRISB	set	141
  1653  008C                     _TRISA	set	140
  1654  0097                     _WDTCON	set	151
  1655  0098                     _OSCTUNE	set	152
  1656  0099                     _OSCCON	set	153
  1657  011E                     _APFCON1	set	286
  1658  011D                     _APFCON0	set	285
  1659  010D                     _LATB	set	269
  1660  010C                     _LATA	set	268
  1661  0116                     _BORCON	set	278
  1662  018C                     _ANSELA	set	396
  1663  018D                     _ANSELB	set	397
  1664  021D                     _SSP2CON1bits	set	541
  1665  021C                     _SSP2STATbits	set	540
  1666  0219                     _SSP2BUF	set	537
  1667  021E                     _SSP2CON2bits	set	542
  1668  021C                     _SSP2STAT	set	540
  1669  021E                     _SSP2CON2	set	542
  1670  021D                     _SSP2CON1	set	541
  1671  021A                     _SSP2ADD	set	538
  1672  020C                     _WPUA	set	524
  1673  020D                     _WPUB	set	525
  1674  0802                     STR_1:
  1675  0802  344B               	retlw	75	;'K'
  1676  0803  3457               	retlw	87	;'W'
  1677  0804  3420               	retlw	32	;' '
  1678  0805  343E               	retlw	62	;'>'
  1679  0806  3420               	retlw	32	;' '
  1680  0807  344D               	retlw	77	;'M'
  1681  0808  3454               	retlw	84	;'T'
  1682  0809  3420               	retlw	32	;' '
  1683  080A  3425               	retlw	37	;'%'
  1684  080B  3430               	retlw	48	;'0'
  1685  080C  3432               	retlw	50	;'2'
  1686  080D  3464               	retlw	100	;'d'
  1687  080E  343A               	retlw	58	;':'
  1688  080F  3425               	retlw	37	;'%'
  1689  0810  3430               	retlw	48	;'0'
  1690  0811  3432               	retlw	50	;'2'
  1691  0812  3464               	retlw	100	;'d'
  1692  0813  3400               	retlw	0
  1693                           
  1694                           	psect	stringtext4
  1695  0814                     __pstringtext4:
  1696  0814                     STR_5:
  1697  0814  3454               	retlw	84	;'T'
  1698  0815  3469               	retlw	105	;'i'
  1699  0816  346D               	retlw	109	;'m'
  1700  0817  3465               	retlw	101	;'e'
  1701  0818  3420               	retlw	32	;' '
  1702  0819  343A               	retlw	58	;':'
  1703  081A  3425               	retlw	37	;'%'
  1704  081B  3430               	retlw	48	;'0'
  1705  081C  3432               	retlw	50	;'2'
  1706  081D  3464               	retlw	100	;'d'
  1707  081E  343A               	retlw	58	;':'
  1708  081F  3425               	retlw	37	;'%'
  1709  0820  3430               	retlw	48	;'0'
  1710  0821  3432               	retlw	50	;'2'
  1711  0822  3464               	retlw	100	;'d'
  1712  0823  3400               	retlw	0
  1713                           
  1714                           	psect	stringtext5
  1715  0824                     __pstringtext5:
  1716  0824                     STR_6:
  1717  0824  344D               	retlw	77	;'M'
  1718  0825  346F               	retlw	111	;'o'
  1719  0826  346E               	retlw	110	;'n'
  1720  0827  3465               	retlw	101	;'e'
  1721  0828  3479               	retlw	121	;'y'
  1722  0829  343A               	retlw	58	;':'
  1723  082A  3425               	retlw	37	;'%'
  1724  082B  3464               	retlw	100	;'d'
  1725  082C  3459               	retlw	89	;'Y'
  1726  082D  3445               	retlw	69	;'E'
  1727  082E  344E               	retlw	78	;'N'
  1728  082F  3400               	retlw	0
  1729                           
  1730                           	psect	stringtext6
  1731  0830                     __pstringtext6:
  1732  0830                     STR_4:
  1733  0830  3425               	retlw	37	;'%'
  1734  0831  3464               	retlw	100	;'d'
  1735  0832  3420               	retlw	32	;' '
  1736  0833  346D               	retlw	109	;'m'
  1737  0834  3469               	retlw	105	;'i'
  1738  0835  346E               	retlw	110	;'n'
  1739  0836  3420               	retlw	32	;' '
  1740  0837  346C               	retlw	108	;'l'
  1741  0838  3465               	retlw	101	;'e'
  1742  0839  3466               	retlw	102	;'f'
  1743  083A  3474               	retlw	116	;'t'
  1744  083B  3400               	retlw	0
  1745                           
  1746                           	psect	stringtext7
  1747  0840                     __pstringtext7:
  1748  0840                     STR_7:
  1749  0840  3420               	retlw	32	;' '
  1750  0841  3400               	retlw	0
  1751                           
  1752                           	psect	stringtext8
  1753  0000                     __pstringtext8:
  1754  0802                     
  1755                           	psect	cinit
  1756  07CA                     start_initialization:	
  1757                           ; #config settings
  1758                           
  1759  07CA                     __initialization:	;BIGRAM
  1760                           
  1761                           ; Initialize objects allocated to BIGRAM
  1762  07CA  30AA               	movlw	low __pidataBIGRAM
  1763  07CB  0084               	movwf	4
  1764  07CC  308D               	movlw	(high __pidataBIGRAM)| (0+128)
  1765  07CD  0085               	movwf	5
  1766  07CE  301A               	movlw	low (0+8474)
  1767  07CF  0086               	movwf	6
  1768  07D0  3021               	movlw	high (0+8474)
  1769  07D1  0087               	movwf	7
  1770  07D2  3000               	movlw	0
  1771  07D3  00FF               	movwf	btemp+1
  1772  07D4  3056               	movlw	86
  1773  07D5  318A  2263  3187   	fcall	init_ram
  1774                           
  1775                           ; Initialize objects allocated to BANK1
  1776  07D8  301B               	movlw	low __pidataBANK1
  1777  07D9  0084               	movwf	4
  1778  07DA  308A               	movlw	(high __pidataBANK1)| (0+128)
  1779  07DB  0085               	movwf	5
  1780  07DC  30E0               	movlw	low __pdataBANK1
  1781  07DD  0086               	movwf	6
  1782  07DE  3000               	movlw	high __pdataBANK1
  1783  07DF  0087               	movwf	7
  1784  07E0  3000               	movlw	0
  1785  07E1  00FF               	movwf	btemp+1
  1786  07E2  3004               	movlw	4
  1787  07E3  318A  2263  3187   	fcall	init_ram
  1788                           
  1789                           ; Clear objects allocated to BANK0
  1790  07E6  01EF               	clrf	__pbssBANK0& (0+127)
  1791                           
  1792                           ; Clear objects allocated to BANK1
  1793  07E7  30C5               	movlw	low __pbssBANK1
  1794  07E8  0084               	movwf	4
  1795  07E9  3000               	movlw	high __pbssBANK1
  1796  07EA  0085               	movwf	5
  1797  07EB  301B               	movlw	27
  1798  07EC  00FE               	movwf	btemp
  1799  07ED  3000               	movlw	0
  1800  07EE  00FF               	movwf	btemp+1
  1801  07EF  318A  2257  3187   	fcall	clear_ram0
  1802                           
  1803                           ; Clear objects allocated to BANK2
  1804  07F2  3020               	movlw	low __pbssBANK2
  1805  07F3  0084               	movwf	4
  1806  07F4  3001               	movlw	high __pbssBANK2
  1807  07F5  0085               	movwf	5
  1808  07F6  3020               	movlw	32
  1809  07F7  00FE               	movwf	btemp
  1810  07F8  3000               	movlw	0
  1811  07F9  00FF               	movwf	btemp+1
  1812  07FA  318A  2257  3187   	fcall	clear_ram0
  1813  07FD                     end_of_initialization:	
  1814                           ;End of C runtime variable initialization code
  1815                           
  1816  07FD                     __end_of__initialization:
  1817  07FD  0020               	movlb	0
  1818  07FE  3181  290F         	ljmp	_main	;jump to C main() function
  1819                           
  1820                           	psect	bssBANK0
  1821  006F                     __pbssBANK0:
  1822  006F                     __backlightval:
  1823  006F                     	ds	1
  1824                           
  1825                           	psect	bssBANK1
  1826  00C5                     __pbssBANK1:
  1827  00C5                     _nout:
  1828  00C5                     	ds	2
  1829  00C7                     _width:
  1830  00C7                     	ds	2
  1831  00C9                     _prec:
  1832  00C9                     	ds	2
  1833  00CB                     _flags:
  1834  00CB                     	ds	2
  1835  00CD                     _money:
  1836  00CD                     	ds	2
  1837  00CF                     _regular_flg:
  1838  00CF                     	ds	1
  1839  00D0                     _line:
  1840  00D0                     	ds	16
  1841                           
  1842                           	psect	dataBANK1
  1843  00E0                     __pdataBANK1:
  1844  00E0                     lcd_set_cursor@F2502:
  1845  00E0                     	ds	4
  1846                           
  1847                           	psect	bssBANK2
  1848  0120                     __pbssBANK2:
  1849  0120                     _dbuf:
  1850  0120                     	ds	32
  1851                           
  1852                           	psect	inittext
  1853  0A63                     init_ram:
  1854  0A63  00FE               	movwf	btemp
  1855  0A64                     initloop:
  1856  0A64  0012               	moviw fsr0++
  1857  0A65  001E               	movwi fsr1++
  1858  0A66  3001               	movlw	1
  1859  0A67  02FE               	subwf	btemp,f
  1860  0A68  3000               	movlw	0
  1861  0A69  3BFF               	subwfb	btemp+1,f
  1862  0A6A  087F               	movf	btemp+1,w
  1863  0A6B  047E               	iorwf	btemp,w
  1864  0A6C  1D03               	skipz
  1865  0A6D  2A64               	goto	initloop
  1866  0A6E  3400               	retlw	0
  1867                           
  1868                           	psect	clrtext
  1869  0A57                     clear_ram0:	
  1870                           ;	Called with FSR0 containing the base address, and
  1871                           ;	btemp/btemp+1 has the size to clear
  1872                           
  1873  0A57  0064               	clrwdt	;clear the watchdog before getting into this loop
  1874  0A58                     clrloop0:
  1875  0A58  0180               	clrf	0	;clear RAM location pointed to by FSR
  1876  0A59  3101               	addfsr 0,1
  1877  0A5A  3001               	movlw	1
  1878  0A5B  02FE               	subwf	btemp,f
  1879  0A5C  3000               	movlw	0
  1880  0A5D  3BFF               	subwfb	btemp+1,f
  1881  0A5E  087F               	movf	btemp+1,w
  1882  0A5F  047E               	iorwf	btemp,w
  1883  0A60  1D03               	skipz
  1884  0A61  2A58               	goto	clrloop0	;have we reached the end yet?
  1885  0A62  3400               	retlw	0	;all done for this memory range, return
  1886                           
  1887                           	psect	cstackBANK1
  1888  00A0                     __pcstackBANK1:
  1889  00A0                     ?_sprintf:
  1890  00A0                     sprintf@fmt:	
  1891                           ; 2 bytes @ 0x0
  1892                           
  1893                           
  1894                           ; 2 bytes @ 0x0
  1895  00A0                     	ds	6
  1896  00A6                     sprintf@ap:
  1897                           
  1898                           ; 1 bytes @ 0x6
  1899  00A6                     	ds	1
  1900  00A7                     sprintf@s:
  1901                           
  1902                           ; 1 bytes @ 0x7
  1903  00A7                     	ds	1
  1904  00A8                     sprintf@f:
  1905                           
  1906                           ; 5 bytes @ 0x8
  1907  00A8                     	ds	5
  1908  00AD                     ?_print_train:
  1909  00AD                     ?_print_remaing:	
  1910                           ; 1 bytes @ 0xD
  1911                           
  1912  00AD                     ?_print_money:	
  1913                           ; 1 bytes @ 0xD
  1914                           
  1915  00AD                     print_train@next:	
  1916                           ; 1 bytes @ 0xD
  1917                           
  1918  00AD                     print_remaing@date:	
  1919                           ; 2 bytes @ 0xD
  1920                           
  1921  00AD                     print_money@date:	
  1922                           ; 6 bytes @ 0xD
  1923                           
  1924                           
  1925                           ; 6 bytes @ 0xD
  1926  00AD                     	ds	2
  1927  00AF                     print_train@next1:
  1928                           
  1929                           ; 2 bytes @ 0xF
  1930  00AF                     	ds	4
  1931  00B3                     print_remaing@next:
  1932  00B3                     print_money@money:	
  1933                           ; 2 bytes @ 0x13
  1934                           
  1935                           
  1936                           ; 2 bytes @ 0x13
  1937  00B3                     	ds	2
  1938  00B5                     print_remaing@now_min:
  1939                           
  1940                           ; 2 bytes @ 0x15
  1941  00B5                     	ds	2
  1942  00B7                     print_remaing@next_min:
  1943                           
  1944                           ; 2 bytes @ 0x17
  1945  00B7                     	ds	2
  1946  00B9                     ??_main:
  1947                           
  1948                           ; 1 bytes @ 0x19
  1949  00B9                     	ds	2
  1950  00BB                     main@next1:
  1951                           
  1952                           ; 2 bytes @ 0x1B
  1953  00BB                     	ds	2
  1954  00BD                     main@next:
  1955                           
  1956                           ; 2 bytes @ 0x1D
  1957  00BD                     	ds	2
  1958  00BF                     main@date:
  1959                           
  1960                           ; 6 bytes @ 0x1F
  1961  00BF                     	ds	6
  1962                           
  1963                           	psect	cstackCOMMON
  1964  0070                     __pcstackCOMMON:
  1965  0070                     ?_PIN_MANAGER_Initialize:
  1966  0070                     ??_PIN_MANAGER_Initialize:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969  0070                     ?_OSCILLATOR_Initialize:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972  0070                     ??_OSCILLATOR_Initialize:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975  0070                     ?_WDT_Initialize:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978  0070                     ??_WDT_Initialize:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981  0070                     ?_lcd_init:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984  0070                     ?_lcd_backlight:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987  0070                     ?_read_date:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990  0070                     ?_lcd_clear:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993  0070                     ?_putch:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996  0070                     ??_putch:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999  0070                     ?_SYSTEM_Initialize:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002  0070                     ??_SYSTEM_Initialize:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005  0070                     ?_main:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0070                     ?_i2c_wait:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0070                     ??_i2c_wait:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0070                     ?_i2c_start:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0070                     ??_i2c_start:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0070                     ?_i2c_stop:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0070                     ??_i2c_stop:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0070                     ?_i2c_repeated_start:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0070                     ??_i2c_repeated_start:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0070                     ?_i2c_write:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0070                     ??_i2c_write:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0070                     ?_i2c_read:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0070                     ??_i2c_read:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0070                     ?_lcd_cmd:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047  0070                     ?_bcd_2_decimal:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050  0070                     ?__read:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0070                     ?___bmul:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056  0070                     ??___aodiv:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059  0070                     ??___aomod:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062  0070                     ?_fputc:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065  0070                     ?_strlen:	
  2066                           ; 2 bytes @ 0x0
  2067                           
  2068  0070                     ?_isdigit:	
  2069                           ; 2 bytes @ 0x0
  2070                           
  2071  0070                     ?_isspace:	
  2072                           ; 2 bytes @ 0x0
  2073                           
  2074  0070                     ?___wmul:	
  2075                           ; 2 bytes @ 0x0
  2076                           
  2077  0070                     i2c_write@data:	
  2078                           ; 2 bytes @ 0x0
  2079                           
  2080  0070                     ___bmul@multiplicand:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083  0070                     putch@c:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086  0070                     ___wmul@multiplier:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089  0070                     isdigit@c:	
  2090                           ; 2 bytes @ 0x0
  2091                           
  2092  0070                     isspace@c:	
  2093                           ; 2 bytes @ 0x0
  2094                           
  2095  0070                     fputc@c:	
  2096                           ; 2 bytes @ 0x0
  2097                           
  2098                           
  2099                           ; 2 bytes @ 0x0
  2100  0070                     	ds	1
  2101  0071                     ??_lcd_cmd:
  2102  0071                     ??___bmul:	
  2103                           ; 1 bytes @ 0x1
  2104                           
  2105  0071                     i2c_read@ack:	
  2106                           ; 1 bytes @ 0x1
  2107                           
  2108  0071                     lcd_cmd@cmd:	
  2109                           ; 1 bytes @ 0x1
  2110                           
  2111  0071                     ___aodiv@counter:	
  2112                           ; 1 bytes @ 0x1
  2113                           
  2114  0071                     ___aomod@counter:	
  2115                           ; 1 bytes @ 0x1
  2116                           
  2117                           
  2118                           ; 1 bytes @ 0x1
  2119  0071                     	ds	1
  2120  0072                     ??_lcd_init:
  2121  0072                     ??_lcd_backlight:	
  2122                           ; 1 bytes @ 0x2
  2123                           
  2124  0072                     ?_command:	
  2125                           ; 1 bytes @ 0x2
  2126                           
  2127  0072                     ??_strlen:	
  2128                           ; 1 bytes @ 0x2
  2129                           
  2130  0072                     ??_isdigit:	
  2131                           ; 1 bytes @ 0x2
  2132                           
  2133  0072                     ??_isspace:	
  2134                           ; 1 bytes @ 0x2
  2135                           
  2136  0072                     i2c_read@data:	
  2137                           ; 1 bytes @ 0x2
  2138                           
  2139  0072                     command@mode:	
  2140                           ; 1 bytes @ 0x2
  2141                           
  2142  0072                     ___bmul@product:	
  2143                           ; 1 bytes @ 0x2
  2144                           
  2145  0072                     ___aodiv@sign:	
  2146                           ; 1 bytes @ 0x2
  2147                           
  2148  0072                     ___aomod@sign:	
  2149                           ; 1 bytes @ 0x2
  2150                           
  2151  0072                     fputc@fp:	
  2152                           ; 1 bytes @ 0x2
  2153                           
  2154  0072                     ___wmul@multiplicand:	
  2155                           ; 1 bytes @ 0x2
  2156                           
  2157                           
  2158                           ; 2 bytes @ 0x2
  2159  0072                     	ds	1
  2160  0073                     ??_command:
  2161  0073                     ??_fputc:	
  2162                           ; 1 bytes @ 0x3
  2163                           
  2164  0073                     ?_abs:	
  2165                           ; 1 bytes @ 0x3
  2166                           
  2167  0073                     ___bmul@multiplier:	
  2168                           ; 2 bytes @ 0x3
  2169                           
  2170  0073                     strlen@a:	
  2171                           ; 1 bytes @ 0x3
  2172                           
  2173  0073                     abs@a:	
  2174                           ; 1 bytes @ 0x3
  2175                           
  2176  0073                     ___aodiv@quotient:	
  2177                           ; 2 bytes @ 0x3
  2178                           
  2179                           
  2180                           ; 8 bytes @ 0x3
  2181  0073                     	ds	1
  2182  0074                     ??_bcd_2_decimal:
  2183  0074                     ??___wmul:	
  2184                           ; 1 bytes @ 0x4
  2185                           
  2186  0074                     _isspace$1082:	
  2187                           ; 1 bytes @ 0x4
  2188                           
  2189  0074                     strlen@s:	
  2190                           ; 1 bytes @ 0x4
  2191                           
  2192  0074                     ___wmul@product:	
  2193                           ; 1 bytes @ 0x4
  2194                           
  2195                           
  2196                           ; 2 bytes @ 0x4
  2197  0074                     	ds	1
  2198  0075                     ??_abs:
  2199  0075                     command@val:	
  2200                           ; 1 bytes @ 0x5
  2201                           
  2202                           
  2203                           ; 1 bytes @ 0x5
  2204  0075                     	ds	1
  2205  0076                     ?_get_next:
  2206  0076                     ?_calc_money:	
  2207                           ; 1 bytes @ 0x6
  2208                           
  2209  0076                     ?_atoi:	
  2210                           ; 2 bytes @ 0x6
  2211                           
  2212  0076                     command@highnib:	
  2213                           ; 2 bytes @ 0x6
  2214                           
  2215  0076                     get_next@next:	
  2216                           ; 1 bytes @ 0x6
  2217                           
  2218  0076                     atoi@s:	
  2219                           ; 2 bytes @ 0x6
  2220                           
  2221  0076                     calc_money@date:	
  2222                           ; 2 bytes @ 0x6
  2223                           
  2224                           
  2225                           ; 6 bytes @ 0x6
  2226  0076                     	ds	1
  2227  0077                     command@lownib:
  2228  0077                     bcd_2_decimal@number:	
  2229                           ; 1 bytes @ 0x7
  2230                           
  2231                           
  2232                           ; 1 bytes @ 0x7
  2233  0077                     	ds	1
  2234  0078                     ?_lcd_set_cursor:
  2235  0078                     ?_lcd_print:	
  2236                           ; 1 bytes @ 0x8
  2237                           
  2238  0078                     ??_atoi:	
  2239                           ; 1 bytes @ 0x8
  2240                           
  2241  0078                     ??__read:	
  2242                           ; 1 bytes @ 0x8
  2243                           
  2244  0078                     ?_fputs:	
  2245                           ; 1 bytes @ 0x8
  2246                           
  2247  0078                     lcd_set_cursor@row:	
  2248                           ; 2 bytes @ 0x8
  2249                           
  2250  0078                     get_next@hour:	
  2251                           ; 1 bytes @ 0x8
  2252                           
  2253  0078                     fputs@fp:	
  2254                           ; 1 bytes @ 0x8
  2255                           
  2256  0078                     lcd_print@str:	
  2257                           ; 1 bytes @ 0x8
  2258                           
  2259                           
  2260                           ; 2 bytes @ 0x8
  2261  0078                     	ds	1
  2262  0079                     ??_lcd_set_cursor:
  2263  0079                     ??_fputs:	
  2264                           ; 1 bytes @ 0x9
  2265                           
  2266  0079                     get_next@min:	
  2267                           ; 1 bytes @ 0x9
  2268                           
  2269  0079                     __read@address:	
  2270                           ; 1 bytes @ 0x9
  2271                           
  2272                           
  2273                           ; 1 bytes @ 0x9
  2274  0079                     	ds	1
  2275  007A                     ??_lcd_print:
  2276  007A                     __read@data:	
  2277                           ; 1 bytes @ 0xA
  2278                           
  2279                           
  2280                           ; 1 bytes @ 0xA
  2281  007A                     	ds	1
  2282  007B                     ??_read_date:
  2283  007B                     lcd_print@cmd:	
  2284                           ; 1 bytes @ 0xB
  2285                           
  2286                           
  2287                           ; 1 bytes @ 0xB
  2288  007B                     	ds	1
  2289  007C                     ??_lcd_clear:
  2290  007C                     ??_pad:	
  2291                           ; 1 bytes @ 0xC
  2292                           
  2293  007C                     read_date@date:	
  2294                           ; 1 bytes @ 0xC
  2295                           
  2296                           
  2297                           ; 1 bytes @ 0xC
  2298  007C                     	ds	1
  2299  007D                     ??_sprintf:
  2300                           
  2301                           ; 1 bytes @ 0xD
  2302  007D                     	ds	1
  2303                           
  2304                           	psect	cstackBANK0
  2305  0020                     __pcstackBANK0:
  2306  0020                     ??_get_next:
  2307  0020                     ??_calc_money:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0020                     ?___aodiv:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0020                     ?___aomod:	
  2314                           ; 8 bytes @ 0x0
  2315                           
  2316  0020                     fputs@c:	
  2317                           ; 8 bytes @ 0x0
  2318                           
  2319  0020                     atoi@neg:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0020                     lcd_set_cursor@row_offsets:	
  2323                           ; 2 bytes @ 0x0
  2324                           
  2325  0020                     ___aodiv@divisor:	
  2326                           ; 4 bytes @ 0x0
  2327                           
  2328  0020                     ___aomod@divisor:	
  2329                           ; 8 bytes @ 0x0
  2330                           
  2331                           
  2332                           ; 8 bytes @ 0x0
  2333  0020                     	ds	1
  2334  0021                     fputs@i:
  2335                           
  2336                           ; 2 bytes @ 0x1
  2337  0021                     	ds	1
  2338  0022                     _atoi$1064:
  2339                           
  2340                           ; 2 bytes @ 0x2
  2341  0022                     	ds	1
  2342  0023                     fputs@s:
  2343                           
  2344                           ; 1 bytes @ 0x3
  2345  0023                     	ds	1
  2346  0024                     ?_pad:
  2347  0024                     lcd_set_cursor@col:	
  2348                           ; 2 bytes @ 0x4
  2349                           
  2350  0024                     pad@buf:	
  2351                           ; 1 bytes @ 0x4
  2352                           
  2353  0024                     calc_money@hour:	
  2354                           ; 1 bytes @ 0x4
  2355                           
  2356  0024                     _atoi$1066:	
  2357                           ; 2 bytes @ 0x4
  2358                           
  2359                           
  2360                           ; 2 bytes @ 0x4
  2361  0024                     	ds	1
  2362  0025                     lcd_set_cursor@cmd:
  2363  0025                     pad@p:	
  2364                           ; 1 bytes @ 0x5
  2365                           
  2366                           
  2367                           ; 2 bytes @ 0x5
  2368  0025                     	ds	1
  2369  0026                     lcd_clear@row:
  2370  0026                     _atoi$1065:	
  2371                           ; 1 bytes @ 0x6
  2372                           
  2373  0026                     calc_money@min:	
  2374                           ; 1 bytes @ 0x6
  2375                           
  2376                           
  2377                           ; 2 bytes @ 0x6
  2378  0026                     	ds	1
  2379  0027                     lcd_clear@col:
  2380  0027                     pad@i:	
  2381                           ; 1 bytes @ 0x7
  2382                           
  2383  0027                     atoi@n:	
  2384                           ; 2 bytes @ 0x7
  2385                           
  2386                           
  2387                           ; 2 bytes @ 0x7
  2388  0027                     	ds	1
  2389  0028                     ___aodiv@dividend:
  2390  0028                     ___aomod@dividend:	
  2391                           ; 8 bytes @ 0x8
  2392                           
  2393                           
  2394                           ; 8 bytes @ 0x8
  2395  0028                     	ds	1
  2396  0029                     pad@w:
  2397                           
  2398                           ; 2 bytes @ 0x9
  2399  0029                     	ds	2
  2400  002B                     pad@fp:
  2401                           
  2402                           ; 1 bytes @ 0xB
  2403  002B                     	ds	1
  2404  002C                     get_next@now_min:
  2405                           
  2406                           ; 2 bytes @ 0xC
  2407  002C                     	ds	2
  2408  002E                     get_next@t_min:
  2409                           
  2410                           ; 2 bytes @ 0xE
  2411  002E                     	ds	2
  2412  0030                     ?_dtoa:
  2413  0030                     get_next@idx:	
  2414                           ; 2 bytes @ 0x10
  2415                           
  2416  0030                     dtoa@d:	
  2417                           ; 1 bytes @ 0x10
  2418                           
  2419                           
  2420                           ; 8 bytes @ 0x10
  2421  0030                     	ds	1
  2422  0031                     get_next@i:
  2423                           
  2424                           ; 1 bytes @ 0x11
  2425  0031                     	ds	7
  2426  0038                     ??_dtoa:
  2427                           
  2428                           ; 1 bytes @ 0x18
  2429  0038                     	ds	3
  2430  003B                     _dtoa$1029:
  2431                           
  2432                           ; 2 bytes @ 0x1B
  2433  003B                     	ds	2
  2434  003D                     dtoa@fp:
  2435                           
  2436                           ; 1 bytes @ 0x1D
  2437  003D                     	ds	1
  2438  003E                     dtoa@p:
  2439                           
  2440                           ; 2 bytes @ 0x1E
  2441  003E                     	ds	2
  2442  0040                     dtoa@w:
  2443                           
  2444                           ; 2 bytes @ 0x20
  2445  0040                     	ds	2
  2446  0042                     dtoa@s:
  2447                           
  2448                           ; 2 bytes @ 0x22
  2449  0042                     	ds	2
  2450  0044                     dtoa@n:
  2451                           
  2452                           ; 8 bytes @ 0x24
  2453  0044                     	ds	8
  2454  004C                     dtoa@i:
  2455                           
  2456                           ; 2 bytes @ 0x2C
  2457  004C                     	ds	2
  2458  004E                     ?_vfpfcnvrt:
  2459  004E                     vfpfcnvrt@fmt:	
  2460                           ; 2 bytes @ 0x2E
  2461                           
  2462                           
  2463                           ; 1 bytes @ 0x2E
  2464  004E                     	ds	1
  2465  004F                     vfpfcnvrt@ap:
  2466                           
  2467                           ; 1 bytes @ 0x2F
  2468  004F                     	ds	1
  2469  0050                     ??_vfpfcnvrt:
  2470                           
  2471                           ; 1 bytes @ 0x30
  2472  0050                     	ds	6
  2473  0056                     vfpfcnvrt@ll:
  2474                           
  2475                           ; 8 bytes @ 0x36
  2476  0056                     	ds	8
  2477  005E                     vfpfcnvrt@done:
  2478                           
  2479                           ; 2 bytes @ 0x3E
  2480  005E                     	ds	2
  2481  0060                     _vfpfcnvrt$1044:
  2482                           
  2483                           ; 2 bytes @ 0x40
  2484  0060                     	ds	2
  2485  0062                     vfpfcnvrt@fp:
  2486                           
  2487                           ; 1 bytes @ 0x42
  2488  0062                     	ds	1
  2489  0063                     ?_vfprintf:
  2490  0063                     vfprintf@fmt:	
  2491                           ; 2 bytes @ 0x43
  2492                           
  2493                           
  2494                           ; 2 bytes @ 0x43
  2495  0063                     	ds	2
  2496  0065                     vfprintf@ap:
  2497                           
  2498                           ; 1 bytes @ 0x45
  2499  0065                     	ds	1
  2500  0066                     ??_vfprintf:
  2501                           
  2502                           ; 1 bytes @ 0x46
  2503  0066                     	ds	2
  2504  0068                     vfprintf@fp:
  2505                           
  2506                           ; 1 bytes @ 0x48
  2507  0068                     	ds	1
  2508  0069                     vfprintf@cfmt:
  2509                           
  2510                           ; 2 bytes @ 0x49
  2511  0069                     	ds	2
  2512  006B                     ??_print_train:
  2513  006B                     ??_print_remaing:	
  2514                           ; 1 bytes @ 0x4B
  2515                           
  2516  006B                     ??_print_money:	
  2517                           ; 1 bytes @ 0x4B
  2518                           
  2519                           
  2520                           ; 1 bytes @ 0x4B
  2521  006B                     	ds	4
  2522                           
  2523                           	psect	maintext
  2524  010F                     __pmaintext:	
  2525 ;;
  2526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2527 ;;
  2528 ;; *************** function _main *****************
  2529 ;; Defined at:
  2530 ;;		line 19 in file "main.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  date            6   31[BANK1 ] struct Date
  2535 ;;  next            2   29[BANK1 ] struct train
  2536 ;;  next1           2   27[BANK1 ] struct train
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : B1F/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2546 ;;      Params:         0       0       0       0       0       0
  2547 ;;      Locals:         0       0      10       0       0       0
  2548 ;;      Temps:          0       0       2       0       0       0
  2549 ;;      Totals:         0       0      12       0       0       0
  2550 ;;Total ram usage:       12 bytes
  2551 ;; Hardware stack levels required when called: 9
  2552 ;; This function calls:
  2553 ;;		_SYSTEM_Initialize
  2554 ;;		_calc_money
  2555 ;;		_get_next
  2556 ;;		_lcd_backlight
  2557 ;;		_lcd_init
  2558 ;;		_lcd_set_cursor
  2559 ;;		_print_money
  2560 ;;		_print_remaing
  2561 ;;		_print_train
  2562 ;;		_read_date
  2563 ;; This function is called by:
  2564 ;;		Startup code after reset
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _main
  2570  010F                     _main:
  2571  010F                     l2570:	
  2572                           ;incstack = 0
  2573                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2574                           
  2575                           
  2576                           ;main.c: 22:     SYSTEM_Initialize();
  2577  010F  318A  222D  3181   	fcall	_SYSTEM_Initialize
  2578  0112                     l2572:
  2579                           
  2580                           ;main.c: 24:     WPUB = 0x24;
  2581  0112  3024               	movlw	36
  2582  0113  0024               	movlb	4	; select bank4
  2583  0114  008D               	movwf	13	;volatile
  2584  0115                     l2574:
  2585                           
  2586                           ;main.c: 25:     OPTION_REGbits.nWPUEN = 0;
  2587  0115  0021               	movlb	1	; select bank1
  2588  0116  1395               	bcf	21,7	;volatile
  2589  0117                     l2576:
  2590                           
  2591                           ;main.c: 27:     SSP2ADD = 0x13;
  2592  0117  3013               	movlw	19
  2593  0118  0024               	movlb	4	; select bank4
  2594  0119  009A               	movwf	26	;volatile
  2595  011A                     l2578:
  2596                           
  2597                           ;main.c: 28:     SSP2CON1 = 0x28;
  2598  011A  3028               	movlw	40
  2599  011B  009D               	movwf	29	;volatile
  2600  011C                     l2580:
  2601                           
  2602                           ;main.c: 29:     SSP2CON2 = 0x0;
  2603  011C  019E               	clrf	30	;volatile
  2604  011D                     l2582:
  2605                           
  2606                           ;main.c: 30:     SSP2STAT = 0;
  2607  011D  019C               	clrf	28	;volatile
  2608  011E                     l2584:
  2609                           
  2610                           ;main.c: 32:     lcd_init();
  2611  011E  3182  22CA  3181   	fcall	_lcd_init
  2612  0121                     l2586:
  2613                           
  2614                           ;main.c: 33:     lcd_backlight();
  2615  0121  318A  226F  3181   	fcall	_lcd_backlight
  2616  0124                     l2588:
  2617                           
  2618                           ;main.c: 34:     lcd_set_cursor(0, 0);
  2619  0124  01F8               	clrf	lcd_set_cursor@row
  2620  0125  3000               	movlw	0
  2621  0126  318C  2439  3181   	fcall	_lcd_set_cursor
  2622  0129                     l2590:
  2623                           
  2624                           ;main.c: 36:     struct Date date;;main.c: 37:     date.year = 21;
  2625  0129  3015               	movlw	21
  2626  012A  0021               	movlb	1	; select bank1
  2627  012B  00B9               	movwf	??_main^(0+128)
  2628  012C  0839               	movf	??_main^(0+128),w
  2629  012D  00BF               	movwf	main@date^(0+128)
  2630  012E                     l2592:
  2631                           
  2632                           ;main.c: 38:     date.month = 3;
  2633  012E  3003               	movlw	3
  2634  012F  00B9               	movwf	??_main^(0+128)
  2635  0130  0839               	movf	??_main^(0+128),w
  2636  0131  00C0               	movwf	(main@date^(0+128)+1)
  2637  0132                     l2594:
  2638                           
  2639                           ;main.c: 39:     date.day = 1;
  2640  0132  01C1               	clrf	(main@date^(0+128)+2)
  2641  0133  0AC1               	incf	(main@date^(0+128)+2),f
  2642  0134                     l2596:
  2643                           
  2644                           ;main.c: 40:     date.hour = 21;
  2645  0134  3015               	movlw	21
  2646  0135  00B9               	movwf	??_main^(0+128)
  2647  0136  0839               	movf	??_main^(0+128),w
  2648  0137  00C2               	movwf	(main@date^(0+128)+3)
  2649  0138                     l2598:
  2650                           
  2651                           ;main.c: 41:     date.min = 46;
  2652  0138  302E               	movlw	46
  2653  0139  00B9               	movwf	??_main^(0+128)
  2654  013A  0839               	movf	??_main^(0+128),w
  2655  013B  00C3               	movwf	(main@date^(0+128)+4)
  2656  013C                     l2600:
  2657                           
  2658                           ;main.c: 42:     date.sec = 0;
  2659  013C  01C4               	clrf	(main@date^(0+128)+5)
  2660  013D                     l2602:
  2661                           
  2662                           ;main.c: 44:     money = 0;
  2663  013D  01CD               	clrf	_money^(0+128)
  2664  013E  01CE               	clrf	(_money+1)^(0+128)
  2665  013F                     l2604:
  2666                           
  2667                           ;main.c: 51:     {;main.c: 52:         read_date(&date);
  2668  013F  30BF               	movlw	(low (main@date| 0))& (0+255)
  2669  0140  318C  24CC  3181   	fcall	_read_date
  2670  0143                     l2606:
  2671                           
  2672                           ;main.c: 53:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2673  0143  301A               	movlw	26
  2674  0144  0021               	movlb	1	; select bank1
  2675  0145  00B9               	movwf	??_main^(0+128)
  2676  0146  30F8               	movlw	248
  2677  0147                     u2027:
  2678  0147  0B89               	decfsz	9,f
  2679  0148  2947               	goto	u2027
  2680  0149  0BB9               	decfsz	??_main^(0+128),f
  2681  014A  2947               	goto	u2027
  2682  014B  0000               	nop
  2683  014C                     l2608:
  2684                           
  2685                           ;main.c: 54:         get_next(&next, date.hour, date.min);
  2686  014C  30BD               	movlw	low main@next
  2687  014D  00F6               	movwf	get_next@next
  2688  014E  3000               	movlw	high main@next
  2689  014F  00F7               	movwf	get_next@next+1
  2690  0150  0021               	movlb	1	; select bank1
  2691  0151  0842               	movf	(main@date^(0+128)+3),w
  2692  0152  00B9               	movwf	??_main^(0+128)
  2693  0153  0839               	movf	??_main^(0+128),w
  2694  0154  00F8               	movwf	get_next@hour
  2695  0155  0843               	movf	(main@date^(0+128)+4),w
  2696  0156  00BA               	movwf	(??_main+1)^(0+128)
  2697  0157  083A               	movf	(??_main+1)^(0+128),w
  2698  0158  00F9               	movwf	get_next@min
  2699  0159  318F  2761  3181   	fcall	_get_next
  2700  015C                     l2610:
  2701                           
  2702                           ;main.c: 55:         get_next(&next1, next.hour, next.min);
  2703  015C  30BB               	movlw	low main@next1
  2704  015D  00F6               	movwf	get_next@next
  2705  015E  3000               	movlw	high main@next1
  2706  015F  00F7               	movwf	get_next@next+1
  2707  0160  0021               	movlb	1	; select bank1
  2708  0161  083D               	movf	main@next^(0+128),w
  2709  0162  00B9               	movwf	??_main^(0+128)
  2710  0163  0839               	movf	??_main^(0+128),w
  2711  0164  00F8               	movwf	get_next@hour
  2712  0165  083E               	movf	(main@next^(0+128)+1),w
  2713  0166  00BA               	movwf	(??_main+1)^(0+128)
  2714  0167  083A               	movf	(??_main+1)^(0+128),w
  2715  0168  00F9               	movwf	get_next@min
  2716  0169  318F  2761  3181   	fcall	_get_next
  2717  016C                     l2612:
  2718                           
  2719                           ;main.c: 57:         if(date.sec == 0){
  2720  016C  0021               	movlb	1	; select bank1
  2721  016D  0844               	movf	(main@date^(0+128)+5),w
  2722  016E  1D03               	btfss	3,2
  2723  016F  2971               	goto	u1991
  2724  0170  2972               	goto	u1990
  2725  0171                     u1991:
  2726  0171  297E               	goto	l2616
  2727  0172                     u1990:
  2728  0172                     l2614:
  2729                           
  2730                           ;main.c: 58:             print_train(next, next1);
  2731  0172  083E               	movf	(main@next+1)^(0+128),w
  2732  0173  00AE               	movwf	(print_train@next+1)^(0+128)
  2733  0174  083D               	movf	main@next^(0+128),w
  2734  0175  00AD               	movwf	print_train@next^(0+128)
  2735  0176  083C               	movf	(main@next1+1)^(0+128),w
  2736  0177  00B0               	movwf	(print_train@next1+1)^(0+128)
  2737  0178  083B               	movf	main@next1^(0+128),w
  2738  0179  00AF               	movwf	print_train@next1^(0+128)
  2739  017A  3180  2005  3181   	fcall	_print_train
  2740                           
  2741                           ;main.c: 59:             continue;
  2742  017D  293F               	goto	l2604
  2743  017E                     l2616:
  2744                           
  2745                           ;main.c: 62:         if(date.sec == 30){
  2746  017E  301E               	movlw	30
  2747  017F  0644               	xorwf	(main@date^(0+128)+5),w
  2748  0180  1D03               	btfss	3,2
  2749  0181  2983               	goto	u2001
  2750  0182  2984               	goto	u2000
  2751  0183                     u2001:
  2752  0183  29A0               	goto	l2620
  2753  0184                     u2000:
  2754  0184                     l2618:
  2755                           
  2756                           ;main.c: 63:             print_remaing(date, next);
  2757  0184  30BF               	movlw	low main@date
  2758  0185  0086               	movwf	6
  2759  0186  3000               	movlw	high main@date
  2760  0187  0087               	movwf	7
  2761  0188  30AD               	movlw	low print_remaing@date
  2762  0189  0084               	movwf	4
  2763  018A  3000               	movlw	high print_remaing@date
  2764  018B  0085               	movwf	5
  2765  018C  3F40               	moviw [0]fsr1
  2766  018D  3F80               	movwi [0]fsr0
  2767  018E  3F41               	moviw [1]fsr1
  2768  018F  3F81               	movwi [1]fsr0
  2769  0190  3F42               	moviw [2]fsr1
  2770  0191  3F82               	movwi [2]fsr0
  2771  0192  3F43               	moviw [3]fsr1
  2772  0193  3F83               	movwi [3]fsr0
  2773  0194  3F44               	moviw [4]fsr1
  2774  0195  3F84               	movwi [4]fsr0
  2775  0196  3F45               	moviw [5]fsr1
  2776  0197  3F85               	movwi [5]fsr0
  2777  0198  083E               	movf	(main@next+1)^(0+128),w
  2778  0199  00B4               	movwf	(print_remaing@next+1)^(0+128)
  2779  019A  083D               	movf	main@next^(0+128),w
  2780  019B  00B3               	movwf	print_remaing@next^(0+128)
  2781  019C  318E  26DA  3181   	fcall	_print_remaing
  2782                           
  2783                           ;main.c: 64:             continue;
  2784  019F  293F               	goto	l2604
  2785  01A0                     l2620:
  2786                           
  2787                           ;main.c: 67:         if(date.sec == 45){
  2788  01A0  302D               	movlw	45
  2789  01A1  0644               	xorwf	(main@date^(0+128)+5),w
  2790  01A2  1D03               	btfss	3,2
  2791  01A3  29A5               	goto	u2011
  2792  01A4  29A6               	goto	u2010
  2793  01A5                     u2011:
  2794  01A5  293F               	goto	l2604
  2795  01A6                     u2010:
  2796  01A6                     l2622:
  2797                           
  2798                           ;main.c: 68:             money = calc_money(date);
  2799  01A6  30BF               	movlw	low main@date
  2800  01A7  0086               	movwf	6
  2801  01A8  3000               	movlw	high main@date
  2802  01A9  0087               	movwf	7
  2803  01AA  3076               	movlw	low calc_money@date
  2804  01AB  0084               	movwf	4
  2805  01AC  3000               	movlw	high calc_money@date
  2806  01AD  0085               	movwf	5
  2807  01AE  3F40               	moviw [0]fsr1
  2808  01AF  3F80               	movwi [0]fsr0
  2809  01B0  3F41               	moviw [1]fsr1
  2810  01B1  3F81               	movwi [1]fsr0
  2811  01B2  3F42               	moviw [2]fsr1
  2812  01B3  3F82               	movwi [2]fsr0
  2813  01B4  3F43               	moviw [3]fsr1
  2814  01B5  3F83               	movwi [3]fsr0
  2815  01B6  3F44               	moviw [4]fsr1
  2816  01B7  3F84               	movwi [4]fsr0
  2817  01B8  3F45               	moviw [5]fsr1
  2818  01B9  3F85               	movwi [5]fsr0
  2819  01BA  318E  2659  3181   	fcall	_calc_money
  2820  01BD  0877               	movf	?_calc_money+1,w
  2821  01BE  0021               	movlb	1	; select bank1
  2822  01BF  00CE               	movwf	(_money+1)^(0+128)
  2823  01C0  0876               	movf	?_calc_money,w
  2824  01C1  00CD               	movwf	_money^(0+128)
  2825                           
  2826                           ;main.c: 69:             print_money(date, money);
  2827  01C2  30BF               	movlw	low main@date
  2828  01C3  0086               	movwf	6
  2829  01C4  3000               	movlw	high main@date
  2830  01C5  0087               	movwf	7
  2831  01C6  30AD               	movlw	low print_money@date
  2832  01C7  0084               	movwf	4
  2833  01C8  3000               	movlw	high print_money@date
  2834  01C9  0085               	movwf	5
  2835  01CA  3F40               	moviw [0]fsr1
  2836  01CB  3F80               	movwi [0]fsr0
  2837  01CC  3F41               	moviw [1]fsr1
  2838  01CD  3F81               	movwi [1]fsr0
  2839  01CE  3F42               	moviw [2]fsr1
  2840  01CF  3F82               	movwi [2]fsr0
  2841  01D0  3F43               	moviw [3]fsr1
  2842  01D1  3F83               	movwi [3]fsr0
  2843  01D2  3F44               	moviw [4]fsr1
  2844  01D3  3F84               	movwi [4]fsr0
  2845  01D4  3F45               	moviw [5]fsr1
  2846  01D5  3F85               	movwi [5]fsr0
  2847  01D6  084E               	movf	(_money+1)^(0+128),w
  2848  01D7  00B4               	movwf	(print_money@money+1)^(0+128)
  2849  01D8  084D               	movf	_money^(0+128),w
  2850  01D9  00B3               	movwf	print_money@money^(0+128)
  2851  01DA  318D  2512  3181   	fcall	_print_money
  2852                           
  2853                           ;main.c: 70:             continue;
  2854  01DD  293F               	goto	l2604
  2855  01DE  3180  2802         	ljmp	start
  2856  01E0                     __end_of_main:
  2857                           
  2858                           	psect	text1
  2859  0CCC                     __ptext1:	
  2860 ;; *************** function _read_date *****************
  2861 ;; Defined at:
  2862 ;;		line 77 in file "DS3231.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  date            1    wreg     PTR struct Date
  2865 ;;		 -> main@date(6), 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  date            1   12[COMMON] PTR struct Date
  2868 ;;		 -> main@date(6), 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2878 ;;      Params:         0       0       0       0       0       0
  2879 ;;      Locals:         1       0       0       0       0       0
  2880 ;;      Temps:          1       0       0       0       0       0
  2881 ;;      Totals:         2       0       0       0       0       0
  2882 ;;Total ram usage:        2 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 3
  2885 ;; This function calls:
  2886 ;;		__read
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _read_date
  2894  0CCC                     _read_date:
  2895                           
  2896                           ;incstack = 0
  2897                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2898                           ;read_date@date stored from wreg
  2899  0CCC  00FC               	movwf	read_date@date
  2900  0CCD                     l2478:
  2901                           
  2902                           ;DS3231.c: 78:     date->year = _read(6);
  2903  0CCD  3006               	movlw	6
  2904  0CCE  318B  23A0  318C   	fcall	__read
  2905  0CD1  00FB               	movwf	??_read_date
  2906  0CD2  087C               	movf	read_date@date,w
  2907  0CD3  0086               	movwf	6
  2908  0CD4  0187               	clrf	7
  2909  0CD5  087B               	movf	??_read_date,w
  2910  0CD6  0081               	movwf	1
  2911                           
  2912                           ;DS3231.c: 79:     date->month = _read(5);
  2913  0CD7  3005               	movlw	5
  2914  0CD8  318B  23A0  318C   	fcall	__read
  2915  0CDB  00FB               	movwf	??_read_date
  2916  0CDC  0A7C               	incf	read_date@date,w
  2917  0CDD  0086               	movwf	6
  2918  0CDE  0187               	clrf	7
  2919  0CDF  087B               	movf	??_read_date,w
  2920  0CE0  0081               	movwf	1
  2921                           
  2922                           ;DS3231.c: 80:     date->day = _read(4);
  2923  0CE1  3004               	movlw	4
  2924  0CE2  318B  23A0  318C   	fcall	__read
  2925  0CE5  00FB               	movwf	??_read_date
  2926  0CE6  087C               	movf	read_date@date,w
  2927  0CE7  3E02               	addlw	2
  2928  0CE8  0086               	movwf	6
  2929  0CE9  0187               	clrf	7
  2930  0CEA  087B               	movf	??_read_date,w
  2931  0CEB  0081               	movwf	1
  2932  0CEC                     l2480:
  2933                           
  2934                           ;DS3231.c: 81:     _read(3);
  2935  0CEC  3003               	movlw	3
  2936  0CED  318B  23A0  318C   	fcall	__read
  2937  0CF0                     l2482:
  2938                           
  2939                           ;DS3231.c: 82:     date->hour = _read(2);
  2940  0CF0  3002               	movlw	2
  2941  0CF1  318B  23A0  318C   	fcall	__read
  2942  0CF4  00FB               	movwf	??_read_date
  2943  0CF5  087C               	movf	read_date@date,w
  2944  0CF6  3E03               	addlw	3
  2945  0CF7  0086               	movwf	6
  2946  0CF8  0187               	clrf	7
  2947  0CF9  087B               	movf	??_read_date,w
  2948  0CFA  0081               	movwf	1
  2949  0CFB                     l2484:
  2950                           
  2951                           ;DS3231.c: 83:     date->min = _read(1);
  2952  0CFB  3001               	movlw	1
  2953  0CFC  318B  23A0  318C   	fcall	__read
  2954  0CFF  00FB               	movwf	??_read_date
  2955  0D00  087C               	movf	read_date@date,w
  2956  0D01  3E04               	addlw	4
  2957  0D02  0086               	movwf	6
  2958  0D03  0187               	clrf	7
  2959  0D04  087B               	movf	??_read_date,w
  2960  0D05  0081               	movwf	1
  2961  0D06                     l2486:
  2962                           
  2963                           ;DS3231.c: 84:     date->sec = _read(0);
  2964  0D06  3000               	movlw	0
  2965  0D07  318B  23A0  318C   	fcall	__read
  2966  0D0A  00FB               	movwf	??_read_date
  2967  0D0B  087C               	movf	read_date@date,w
  2968  0D0C  3E05               	addlw	5
  2969  0D0D  0086               	movwf	6
  2970  0D0E  0187               	clrf	7
  2971  0D0F  087B               	movf	??_read_date,w
  2972  0D10  0081               	movwf	1
  2973  0D11                     l257:
  2974  0D11  0008               	return
  2975  0D12                     __end_of_read_date:
  2976                           
  2977                           	psect	text2
  2978  0BA0                     __ptext2:	
  2979 ;; *************** function __read *****************
  2980 ;; Defined at:
  2981 ;;		line 58 in file "DS3231.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  address         1    wreg     unsigned char 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  address         1    9[COMMON] unsigned char 
  2986 ;;  data            1   10[COMMON] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      unsigned char 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2996 ;;      Params:         0       0       0       0       0       0
  2997 ;;      Locals:         2       0       0       0       0       0
  2998 ;;      Temps:          1       0       0       0       0       0
  2999 ;;      Totals:         3       0       0       0       0       0
  3000 ;;Total ram usage:        3 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 2
  3003 ;; This function calls:
  3004 ;;		_bcd_2_decimal
  3005 ;;		_i2c_read
  3006 ;;		_i2c_repeated_start
  3007 ;;		_i2c_start
  3008 ;;		_i2c_stop
  3009 ;;		_i2c_write
  3010 ;; This function is called by:
  3011 ;;		_read_date
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function __read
  3017  0BA0                     __read:
  3018                           
  3019                           ;incstack = 0
  3020                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  3021                           ;__read@address stored from wreg
  3022  0BA0  00F9               	movwf	__read@address
  3023  0BA1                     l2398:
  3024                           
  3025                           ;DS3231.c: 59:     uint8_t data;;DS3231.c: 60:     i2c_start();
  3026  0BA1  318A  2237  318B   	fcall	_i2c_start
  3027                           
  3028                           ;DS3231.c: 61:     i2c_write(0xD0);
  3029  0BA4  30D0               	movlw	208
  3030  0BA5  318A  227D  318B   	fcall	_i2c_write
  3031                           
  3032                           ;DS3231.c: 62:     i2c_write(address);
  3033  0BA8  0879               	movf	__read@address,w
  3034  0BA9  318A  227D  318B   	fcall	_i2c_write
  3035                           
  3036                           ;DS3231.c: 64:     i2c_repeated_start();
  3037  0BAC  318A  2241  318B   	fcall	_i2c_repeated_start
  3038                           
  3039                           ;DS3231.c: 66:     i2c_write(0xD0 | 0x01);
  3040  0BAF  30D1               	movlw	209
  3041  0BB0  318A  227D  318B   	fcall	_i2c_write
  3042                           
  3043                           ;DS3231.c: 67:     data = bcd_2_decimal(i2c_read(1));
  3044  0BB3  3001               	movlw	1
  3045  0BB4  318A  22E0  318B   	fcall	_i2c_read
  3046  0BB7  318A  22A1  318B   	fcall	_bcd_2_decimal
  3047  0BBA  00F8               	movwf	??__read
  3048  0BBB  0878               	movf	??__read,w
  3049  0BBC  00FA               	movwf	__read@data
  3050  0BBD                     l2400:
  3051                           
  3052                           ;DS3231.c: 68:     i2c_stop();
  3053  0BBD  318A  2226  318B   	fcall	_i2c_stop
  3054                           
  3055                           ;DS3231.c: 70:     return data;
  3056  0BC0  087A               	movf	__read@data,w
  3057  0BC1                     l254:
  3058  0BC1  0008               	return
  3059  0BC2                     __end_of__read:
  3060                           
  3061                           	psect	text3
  3062  0A41                     __ptext3:	
  3063 ;; *************** function _i2c_repeated_start *****************
  3064 ;; Defined at:
  3065 ;;		line 20 in file "i2c.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, pclath, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3079 ;;      Params:         0       0       0       0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0
  3082 ;;      Totals:         0       0       0       0       0       0
  3083 ;;Total ram usage:        0 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 1
  3086 ;; This function calls:
  3087 ;;		_i2c_wait
  3088 ;; This function is called by:
  3089 ;;		__read
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           
  3094                           ;psect for function _i2c_repeated_start
  3095  0A41                     _i2c_repeated_start:
  3096  0A41                     l2308:	
  3097                           ;incstack = 0
  3098                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  3099                           
  3100                           
  3101                           ;i2c.c: 21:     i2c_wait();
  3102  0A41  318A  224B  318A   	fcall	_i2c_wait
  3103  0A44                     l2310:
  3104                           
  3105                           ;i2c.c: 22:     SSP2CON2bits.RSEN = 1;
  3106  0A44  0024               	movlb	4	; select bank4
  3107  0A45  149E               	bsf	30,1	;volatile
  3108  0A46                     l157:	
  3109                           ;i2c.c: 23:     while(SSP2CON2bits.RSEN);
  3110                           
  3111  0A46  189E               	btfsc	30,1	;volatile
  3112  0A47  2A49               	goto	u1871
  3113  0A48  2A4A               	goto	u1870
  3114  0A49                     u1871:
  3115  0A49  2A46               	goto	l157
  3116  0A4A                     u1870:
  3117  0A4A                     l160:
  3118  0A4A  0008               	return
  3119  0A4B                     __end_of_i2c_repeated_start:
  3120                           
  3121                           	psect	text4
  3122  0AE0                     __ptext4:	
  3123 ;; *************** function _i2c_read *****************
  3124 ;; Defined at:
  3125 ;;		line 33 in file "i2c.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  ack             1    wreg     unsigned char 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  ack             1    1[COMMON] unsigned char 
  3130 ;;  data            1    2[COMMON] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      unsigned char 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3140 ;;      Params:         0       0       0       0       0       0
  3141 ;;      Locals:         2       0       0       0       0       0
  3142 ;;      Temps:          1       0       0       0       0       0
  3143 ;;      Totals:         3       0       0       0       0       0
  3144 ;;Total ram usage:        3 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 1
  3147 ;; This function calls:
  3148 ;;		_i2c_wait
  3149 ;; This function is called by:
  3150 ;;		__read
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function _i2c_read
  3156  0AE0                     _i2c_read:
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3160                           ;i2c_read@ack stored from wreg
  3161  0AE0  00F1               	movwf	i2c_read@ack
  3162  0AE1                     l2312:
  3163                           
  3164                           ;i2c.c: 34:     uint8_t data;;i2c.c: 36:     SSP2CON2bits.ACKDT = ack;
  3165  0AE1  0C71               	rrf	i2c_read@ack,w
  3166  0AE2  0024               	movlb	4	; select bank4
  3167  0AE3  1C03               	skipc
  3168  0AE4  129E               	bcf	30,5	;volatile
  3169  0AE5  1803               	skipnc
  3170  0AE6  169E               	bsf	30,5	;volatile
  3171  0AE7                     l2314:
  3172                           
  3173                           ;i2c.c: 37:     SSP2CON2bits.RCEN = 1;
  3174  0AE7  159E               	bsf	30,3	;volatile
  3175  0AE8                     l172:	
  3176                           ;i2c.c: 38:     while(!SSP2STATbits.BF);
  3177                           
  3178  0AE8  1C1C               	btfss	28,0	;volatile
  3179  0AE9  2AEB               	goto	u1881
  3180  0AEA  2AEC               	goto	u1880
  3181  0AEB                     u1881:
  3182  0AEB  2AE8               	goto	l172
  3183  0AEC                     u1880:
  3184  0AEC                     l174:
  3185                           
  3186                           ;i2c.c: 39:     SSP2CON2bits.ACKEN = 1;
  3187  0AEC  161E               	bsf	30,4	;volatile
  3188  0AED                     l2316:
  3189                           
  3190                           ;i2c.c: 40:     data = SSP2BUF;
  3191  0AED  0819               	movf	25,w	;volatile
  3192  0AEE  00F0               	movwf	??_i2c_read
  3193  0AEF  0870               	movf	??_i2c_read,w
  3194  0AF0  00F2               	movwf	i2c_read@data
  3195  0AF1                     l2318:
  3196                           
  3197                           ;i2c.c: 41:     SSP2CON1bits.SSPOV = 0;
  3198  0AF1  131D               	bcf	29,6	;volatile
  3199  0AF2                     l2320:
  3200                           
  3201                           ;i2c.c: 42:     i2c_wait();
  3202  0AF2  318A  224B  318A   	fcall	_i2c_wait
  3203  0AF5                     l2322:
  3204                           
  3205                           ;i2c.c: 44:     return data;
  3206  0AF5  0872               	movf	i2c_read@data,w
  3207  0AF6                     l175:
  3208  0AF6  0008               	return
  3209  0AF7                     __end_of_i2c_read:
  3210                           
  3211                           	psect	text5
  3212  0AA1                     __ptext5:	
  3213 ;; *************** function _bcd_2_decimal *****************
  3214 ;; Defined at:
  3215 ;;		line 18 in file "DS3231.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  number          1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  number          1    7[COMMON] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      unsigned char 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, pclath, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3229 ;;      Params:         0       0       0       0       0       0
  3230 ;;      Locals:         1       0       0       0       0       0
  3231 ;;      Temps:          3       0       0       0       0       0
  3232 ;;      Totals:         4       0       0       0       0       0
  3233 ;;Total ram usage:        4 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 1
  3236 ;; This function calls:
  3237 ;;		___bmul
  3238 ;; This function is called by:
  3239 ;;		__read
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _bcd_2_decimal
  3245  0AA1                     _bcd_2_decimal:
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  3249                           ;bcd_2_decimal@number stored from wreg
  3250  0AA1  00F7               	movwf	bcd_2_decimal@number
  3251  0AA2                     l2326:
  3252                           
  3253                           ;DS3231.c: 19:     return ((number >> 4) * 10 + (number & 0x0F));
  3254  0AA2  300F               	movlw	15
  3255  0AA3  0577               	andwf	bcd_2_decimal@number,w
  3256  0AA4  00F4               	movwf	??_bcd_2_decimal
  3257  0AA5  300A               	movlw	10
  3258  0AA6  00F5               	movwf	??_bcd_2_decimal+1
  3259  0AA7  0875               	movf	??_bcd_2_decimal+1,w
  3260  0AA8  00F0               	movwf	___bmul@multiplicand
  3261  0AA9  0877               	movf	bcd_2_decimal@number,w
  3262  0AAA  00F6               	movwf	??_bcd_2_decimal+2
  3263  0AAB  3004               	movlw	4
  3264  0AAC                     u1895:
  3265  0AAC  36F6               	lsrf	??_bcd_2_decimal+2,f
  3266  0AAD  0B89               	decfsz	9,f
  3267  0AAE  2AAC               	goto	u1895
  3268  0AAF  0876               	movf	??_bcd_2_decimal+2,w
  3269  0AB0  318A  22B5  318A   	fcall	___bmul
  3270  0AB3  0774               	addwf	??_bcd_2_decimal,w
  3271  0AB4                     l245:
  3272  0AB4  0008               	return
  3273  0AB5                     __end_of_bcd_2_decimal:
  3274                           
  3275                           	psect	text6
  3276  0AB5                     __ptext6:	
  3277 ;; *************** function ___bmul *****************
  3278 ;; Defined at:
  3279 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  multiplier      1    wreg     unsigned char 
  3282 ;;  multiplicand    1    0[COMMON] unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  multiplier      1    3[COMMON] unsigned char 
  3285 ;;  product         1    2[COMMON] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      unsigned char 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3295 ;;      Params:         1       0       0       0       0       0
  3296 ;;      Locals:         2       0       0       0       0       0
  3297 ;;      Temps:          1       0       0       0       0       0
  3298 ;;      Totals:         4       0       0       0       0       0
  3299 ;;Total ram usage:        4 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_bcd_2_decimal
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function ___bmul
  3310  0AB5                     ___bmul:
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3314                           ;___bmul@multiplier stored from wreg
  3315  0AB5  00F3               	movwf	___bmul@multiplier
  3316  0AB6                     l2184:
  3317  0AB6  01F2               	clrf	___bmul@product
  3318  0AB7                     l2186:
  3319  0AB7  1C73               	btfss	___bmul@multiplier,0
  3320  0AB8  2ABA               	goto	u1721
  3321  0AB9  2ABB               	goto	u1720
  3322  0ABA                     u1721:
  3323  0ABA  2ABF               	goto	l2190
  3324  0ABB                     u1720:
  3325  0ABB                     l2188:
  3326  0ABB  0870               	movf	___bmul@multiplicand,w
  3327  0ABC  00F1               	movwf	??___bmul
  3328  0ABD  0871               	movf	??___bmul,w
  3329  0ABE  07F2               	addwf	___bmul@product,f
  3330  0ABF                     l2190:
  3331  0ABF  1003               	clrc
  3332  0AC0  0DF0               	rlf	___bmul@multiplicand,f
  3333  0AC1                     l2192:
  3334  0AC1  1003               	clrc
  3335  0AC2  0CF3               	rrf	___bmul@multiplier,f
  3336  0AC3  0873               	movf	___bmul@multiplier,w
  3337  0AC4  1D03               	btfss	3,2
  3338  0AC5  2AC7               	goto	u1731
  3339  0AC6  2AC8               	goto	u1730
  3340  0AC7                     u1731:
  3341  0AC7  2AB7               	goto	l2186
  3342  0AC8                     u1730:
  3343  0AC8                     l2194:
  3344  0AC8  0872               	movf	___bmul@product,w
  3345  0AC9                     l450:
  3346  0AC9  0008               	return
  3347  0ACA                     __end_of___bmul:
  3348                           
  3349                           	psect	text7
  3350  0005                     __ptext7:	
  3351 ;; *************** function _print_train *****************
  3352 ;; Defined at:
  3353 ;;		line 77 in file "main.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  next            2   13[BANK1 ] struct train
  3356 ;;  next1           2   15[BANK1 ] struct train
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3368 ;;      Params:         0       0       4       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0
  3370 ;;      Temps:          0       4       0       0       0       0
  3371 ;;      Totals:         0       4       4       0       0       0
  3372 ;;Total ram usage:        8 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 8
  3375 ;; This function calls:
  3376 ;;		_lcd_clear
  3377 ;;		_lcd_print
  3378 ;;		_lcd_set_cursor
  3379 ;;		_sprintf
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function _print_train
  3387  0005                     _print_train:
  3388  0005                     l2510:	
  3389                           ;incstack = 0
  3390                           ; Regs used in _print_train: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3391                           
  3392                           
  3393                           ;main.c: 78:     lcd_clear();
  3394  0005  318B  23E8  3180   	fcall	_lcd_clear
  3395                           
  3396                           ;main.c: 80:     sprintf(line, "KW > MT %02d:%02d", next.hour, next.min);
  3397  0008  3002               	movlw	low (STR_1| (0+32768))
  3398  0009  0021               	movlb	1	; select bank1
  3399  000A  00A0               	movwf	sprintf@fmt^(0+128)
  3400  000B  3088               	movlw	high (STR_1| (0+32768))
  3401  000C  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  3402  000D  082D               	movf	print_train@next^(0+128),w
  3403  000E  0020               	movlb	0	; select bank0
  3404  000F  00EB               	movwf	??_print_train
  3405  0010  01EC               	clrf	??_print_train+1
  3406  0011  086B               	movf	??_print_train,w
  3407  0012  0021               	movlb	1	; select bank1
  3408  0013  00A2               	movwf	(?_sprintf^(0+128)+2)
  3409  0014  0020               	movlb	0	; select bank0
  3410  0015  086C               	movf	??_print_train+1,w
  3411  0016  0021               	movlb	1	; select bank1
  3412  0017  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  3413  0018  082E               	movf	(print_train@next^(0+128)+1),w
  3414  0019  0020               	movlb	0	; select bank0
  3415  001A  00ED               	movwf	??_print_train+2
  3416  001B  01EE               	clrf	??_print_train+3
  3417  001C  086D               	movf	??_print_train+2,w
  3418  001D  0021               	movlb	1	; select bank1
  3419  001E  00A4               	movwf	(?_sprintf^(0+128)+4)
  3420  001F  0020               	movlb	0	; select bank0
  3421  0020  086E               	movf	??_print_train+3,w
  3422  0021  0021               	movlb	1	; select bank1
  3423  0022  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  3424  0023  30D0               	movlw	(low (_line| 0))& (0+255)
  3425  0024  318B  23C2  3180   	fcall	_sprintf
  3426  0027                     l2512:
  3427                           
  3428                           ;main.c: 81:     lcd_set_cursor(0, 0);
  3429  0027  01F8               	clrf	lcd_set_cursor@row
  3430  0028  3000               	movlw	0
  3431  0029  318C  2439  3180   	fcall	_lcd_set_cursor
  3432  002C                     l2514:
  3433                           
  3434                           ;main.c: 82:     lcd_print(line);
  3435  002C  30D0               	movlw	low _line
  3436  002D  00F8               	movwf	lcd_print@str
  3437  002E  3000               	movlw	high _line
  3438  002F  00F9               	movwf	lcd_print@str+1
  3439  0030  318B  2343  3180   	fcall	_lcd_print
  3440  0033                     l2516:
  3441                           
  3442                           ;main.c: 84:     sprintf(line, "KW > MT %02d:%02d", next1.hour, next1.min);
  3443  0033  3002               	movlw	low (STR_1| (0+32768))
  3444  0034  0021               	movlb	1	; select bank1
  3445  0035  00A0               	movwf	sprintf@fmt^(0+128)
  3446  0036  3088               	movlw	high (STR_1| (0+32768))
  3447  0037  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  3448  0038  082F               	movf	print_train@next1^(0+128),w
  3449  0039  0020               	movlb	0	; select bank0
  3450  003A  00EB               	movwf	??_print_train
  3451  003B  01EC               	clrf	??_print_train+1
  3452  003C  086B               	movf	??_print_train,w
  3453  003D  0021               	movlb	1	; select bank1
  3454  003E  00A2               	movwf	(?_sprintf^(0+128)+2)
  3455  003F  0020               	movlb	0	; select bank0
  3456  0040  086C               	movf	??_print_train+1,w
  3457  0041  0021               	movlb	1	; select bank1
  3458  0042  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  3459  0043  0830               	movf	(print_train@next1^(0+128)+1),w
  3460  0044  0020               	movlb	0	; select bank0
  3461  0045  00ED               	movwf	??_print_train+2
  3462  0046  01EE               	clrf	??_print_train+3
  3463  0047  086D               	movf	??_print_train+2,w
  3464  0048  0021               	movlb	1	; select bank1
  3465  0049  00A4               	movwf	(?_sprintf^(0+128)+4)
  3466  004A  0020               	movlb	0	; select bank0
  3467  004B  086E               	movf	??_print_train+3,w
  3468  004C  0021               	movlb	1	; select bank1
  3469  004D  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  3470  004E  30D0               	movlw	(low (_line| 0))& (0+255)
  3471  004F  318B  23C2  3180   	fcall	_sprintf
  3472  0052                     l2518:
  3473                           
  3474                           ;main.c: 85:     lcd_set_cursor(0, 1);
  3475  0052  01F8               	clrf	lcd_set_cursor@row
  3476  0053  0AF8               	incf	lcd_set_cursor@row,f
  3477  0054  3000               	movlw	0
  3478  0055  318C  2439  3180   	fcall	_lcd_set_cursor
  3479                           
  3480                           ;main.c: 86:     lcd_print(line);
  3481  0058  30D0               	movlw	low _line
  3482  0059  00F8               	movwf	lcd_print@str
  3483  005A  3000               	movlw	high _line
  3484  005B  00F9               	movwf	lcd_print@str+1
  3485  005C  318B  2343  3180   	fcall	_lcd_print
  3486  005F                     l117:
  3487  005F  0008               	return
  3488  0060                     __end_of_print_train:
  3489                           
  3490                           	psect	text8
  3491  0EDA                     __ptext8:	
  3492 ;; *************** function _print_remaing *****************
  3493 ;; Defined at:
  3494 ;;		line 89 in file "main.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  date            6   13[BANK1 ] struct Date
  3497 ;;  next            2   19[BANK1 ] struct train
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  next_min        2   23[BANK1 ] unsigned short 
  3500 ;;  now_min         2   21[BANK1 ] unsigned short 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3510 ;;      Params:         0       0       8       0       0       0
  3511 ;;      Locals:         0       0       4       0       0       0
  3512 ;;      Temps:          0       4       0       0       0       0
  3513 ;;      Totals:         0       4      12       0       0       0
  3514 ;;Total ram usage:       16 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 8
  3517 ;; This function calls:
  3518 ;;		___wmul
  3519 ;;		_lcd_clear
  3520 ;;		_lcd_print
  3521 ;;		_lcd_set_cursor
  3522 ;;		_sprintf
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _print_remaing
  3530  0EDA                     _print_remaing:
  3531  0EDA                     l2520:	
  3532                           ;incstack = 0
  3533                           ; Regs used in _print_remaing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3534                           
  3535                           
  3536                           ;main.c: 90:     lcd_clear();
  3537  0EDA  318B  23E8  318E   	fcall	_lcd_clear
  3538  0EDD                     l2522:
  3539                           
  3540                           ;main.c: 92:     uint16_t now_min = ((uint16_t)date.hour * 60) + date.min;
  3541  0EDD  0021               	movlb	1	; select bank1
  3542  0EDE  0831               	movf	(print_remaing@date^(0+128)+4),w
  3543  0EDF  0020               	movlb	0	; select bank0
  3544  0EE0  00EB               	movwf	??_print_remaing
  3545  0EE1  01EC               	clrf	??_print_remaing+1
  3546  0EE2  0021               	movlb	1	; select bank1
  3547  0EE3  0830               	movf	(print_remaing@date^(0+128)+3),w
  3548  0EE4  0020               	movlb	0	; select bank0
  3549  0EE5  00ED               	movwf	??_print_remaing+2
  3550  0EE6  01EE               	clrf	??_print_remaing+3
  3551  0EE7  086D               	movf	??_print_remaing+2,w
  3552  0EE8  00F0               	movwf	___wmul@multiplier
  3553  0EE9  086E               	movf	??_print_remaing+3,w
  3554  0EEA  00F1               	movwf	___wmul@multiplier+1
  3555  0EEB  303C               	movlw	60
  3556  0EEC  00F2               	movwf	___wmul@multiplicand
  3557  0EED  3000               	movlw	0
  3558  0EEE  00F3               	movwf	___wmul@multiplicand+1
  3559  0EEF  318B  2360  318E   	fcall	___wmul
  3560  0EF2  0020               	movlb	0	; select bank0
  3561  0EF3  086B               	movf	??_print_remaing,w
  3562  0EF4  0770               	addwf	?___wmul,w
  3563  0EF5  0021               	movlb	1	; select bank1
  3564  0EF6  00B5               	movwf	print_remaing@now_min^(0+128)
  3565  0EF7  0020               	movlb	0	; select bank0
  3566  0EF8  086C               	movf	??_print_remaing+1,w
  3567  0EF9  3D71               	addwfc	?___wmul+1,w
  3568  0EFA  0021               	movlb	1	; select bank1
  3569  0EFB  00B6               	movwf	(print_remaing@now_min+1)^(0+128)
  3570  0EFC                     l2524:
  3571                           
  3572                           ;main.c: 93:     uint16_t next_min = ((uint16_t)next.hour * 60) + next.min;
  3573  0EFC  0834               	movf	(print_remaing@next^(0+128)+1),w
  3574  0EFD  0020               	movlb	0	; select bank0
  3575  0EFE  00EB               	movwf	??_print_remaing
  3576  0EFF  01EC               	clrf	??_print_remaing+1
  3577  0F00  0021               	movlb	1	; select bank1
  3578  0F01  0833               	movf	print_remaing@next^(0+128),w
  3579  0F02  0020               	movlb	0	; select bank0
  3580  0F03  00ED               	movwf	??_print_remaing+2
  3581  0F04  01EE               	clrf	??_print_remaing+3
  3582  0F05  086D               	movf	??_print_remaing+2,w
  3583  0F06  00F0               	movwf	___wmul@multiplier
  3584  0F07  086E               	movf	??_print_remaing+3,w
  3585  0F08  00F1               	movwf	___wmul@multiplier+1
  3586  0F09  303C               	movlw	60
  3587  0F0A  00F2               	movwf	___wmul@multiplicand
  3588  0F0B  3000               	movlw	0
  3589  0F0C  00F3               	movwf	___wmul@multiplicand+1
  3590  0F0D  318B  2360  318E   	fcall	___wmul
  3591  0F10  0020               	movlb	0	; select bank0
  3592  0F11  086B               	movf	??_print_remaing,w
  3593  0F12  0770               	addwf	?___wmul,w
  3594  0F13  0021               	movlb	1	; select bank1
  3595  0F14  00B7               	movwf	print_remaing@next_min^(0+128)
  3596  0F15  0020               	movlb	0	; select bank0
  3597  0F16  086C               	movf	??_print_remaing+1,w
  3598  0F17  3D71               	addwfc	?___wmul+1,w
  3599  0F18  0021               	movlb	1	; select bank1
  3600  0F19  00B8               	movwf	(print_remaing@next_min+1)^(0+128)
  3601                           
  3602                           ;main.c: 95:     sprintf(line, "KW > MT %02d:%02d", next.hour, next.min);
  3603  0F1A  3002               	movlw	low (STR_1| (0+32768))
  3604  0F1B  00A0               	movwf	sprintf@fmt^(0+128)
  3605  0F1C  3088               	movlw	high (STR_1| (0+32768))
  3606  0F1D  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  3607  0F1E  0833               	movf	print_remaing@next^(0+128),w
  3608  0F1F  0020               	movlb	0	; select bank0
  3609  0F20  00EB               	movwf	??_print_remaing
  3610  0F21  01EC               	clrf	??_print_remaing+1
  3611  0F22  086B               	movf	??_print_remaing,w
  3612  0F23  0021               	movlb	1	; select bank1
  3613  0F24  00A2               	movwf	(?_sprintf^(0+128)+2)
  3614  0F25  0020               	movlb	0	; select bank0
  3615  0F26  086C               	movf	??_print_remaing+1,w
  3616  0F27  0021               	movlb	1	; select bank1
  3617  0F28  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  3618  0F29  0834               	movf	(print_remaing@next^(0+128)+1),w
  3619  0F2A  0020               	movlb	0	; select bank0
  3620  0F2B  00ED               	movwf	??_print_remaing+2
  3621  0F2C  01EE               	clrf	??_print_remaing+3
  3622  0F2D  086D               	movf	??_print_remaing+2,w
  3623  0F2E  0021               	movlb	1	; select bank1
  3624  0F2F  00A4               	movwf	(?_sprintf^(0+128)+4)
  3625  0F30  0020               	movlb	0	; select bank0
  3626  0F31  086E               	movf	??_print_remaing+3,w
  3627  0F32  0021               	movlb	1	; select bank1
  3628  0F33  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  3629  0F34  30D0               	movlw	(low (_line| 0))& (0+255)
  3630  0F35  318B  23C2  318E   	fcall	_sprintf
  3631  0F38                     l2526:
  3632                           
  3633                           ;main.c: 96:     lcd_set_cursor(0, 0);
  3634  0F38  01F8               	clrf	lcd_set_cursor@row
  3635  0F39  3000               	movlw	0
  3636  0F3A  318C  2439  318E   	fcall	_lcd_set_cursor
  3637  0F3D                     l2528:
  3638                           
  3639                           ;main.c: 97:     lcd_print(line);
  3640  0F3D  30D0               	movlw	low _line
  3641  0F3E  00F8               	movwf	lcd_print@str
  3642  0F3F  3000               	movlw	high _line
  3643  0F40  00F9               	movwf	lcd_print@str+1
  3644  0F41  318B  2343  318E   	fcall	_lcd_print
  3645  0F44                     l2530:
  3646                           
  3647                           ;main.c: 99:     sprintf(line, "%d min left", (next_min - now_min));
  3648  0F44  3030               	movlw	low (STR_4| (0+32768))
  3649  0F45  0021               	movlb	1	; select bank1
  3650  0F46  00A0               	movwf	sprintf@fmt^(0+128)
  3651  0F47  3088               	movlw	high (STR_4| (0+32768))
  3652  0F48  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  3653  0F49  0835               	movf	print_remaing@now_min^(0+128),w
  3654  0F4A  0237               	subwf	print_remaing@next_min^(0+128),w
  3655  0F4B  00A2               	movwf	(?_sprintf^(0+128)+2)
  3656  0F4C  0836               	movf	(print_remaing@now_min+1)^(0+128),w
  3657  0F4D  3B38               	subwfb	(print_remaing@next_min+1)^(0+128),w
  3658  0F4E  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  3659  0F4F  30D0               	movlw	(low (_line| 0))& (0+255)
  3660  0F50  318B  23C2  318E   	fcall	_sprintf
  3661  0F53                     l2532:
  3662                           
  3663                           ;main.c: 100:     lcd_set_cursor(0, 1);
  3664  0F53  01F8               	clrf	lcd_set_cursor@row
  3665  0F54  0AF8               	incf	lcd_set_cursor@row,f
  3666  0F55  3000               	movlw	0
  3667  0F56  318C  2439  318E   	fcall	_lcd_set_cursor
  3668                           
  3669                           ;main.c: 101:     lcd_print(line);
  3670  0F59  30D0               	movlw	low _line
  3671  0F5A  00F8               	movwf	lcd_print@str
  3672  0F5B  3000               	movlw	high _line
  3673  0F5C  00F9               	movwf	lcd_print@str+1
  3674  0F5D  318B  2343  318E   	fcall	_lcd_print
  3675  0F60                     l121:
  3676  0F60  0008               	return
  3677  0F61                     __end_of_print_remaing:
  3678                           
  3679                           	psect	text9
  3680  0D12                     __ptext9:	
  3681 ;; *************** function _print_money *****************
  3682 ;; Defined at:
  3683 ;;		line 109 in file "main.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  date            6   13[BANK1 ] struct Date
  3686 ;;  money           2   19[BANK1 ] unsigned short 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3698 ;;      Params:         0       0       8       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0
  3700 ;;      Temps:          0       4       0       0       0       0
  3701 ;;      Totals:         0       4       8       0       0       0
  3702 ;;Total ram usage:       12 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; Hardware stack levels required when called: 8
  3705 ;; This function calls:
  3706 ;;		_lcd_clear
  3707 ;;		_lcd_print
  3708 ;;		_lcd_set_cursor
  3709 ;;		_sprintf
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           
  3716                           ;psect for function _print_money
  3717  0D12                     _print_money:
  3718  0D12                     l2560:	
  3719                           ;incstack = 0
  3720                           ; Regs used in _print_money: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3721                           
  3722                           
  3723                           ;main.c: 110:     lcd_clear();
  3724  0D12  318B  23E8  318D   	fcall	_lcd_clear
  3725                           
  3726                           ;main.c: 112:     sprintf(line, "Time :%02d:%02d", date.hour, date.min);
  3727  0D15  3014               	movlw	low (STR_5| (0+32768))
  3728  0D16  0021               	movlb	1	; select bank1
  3729  0D17  00A0               	movwf	sprintf@fmt^(0+128)
  3730  0D18  3088               	movlw	high (STR_5| (0+32768))
  3731  0D19  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  3732  0D1A  0830               	movf	(print_money@date^(0+128)+3),w
  3733  0D1B  0020               	movlb	0	; select bank0
  3734  0D1C  00EB               	movwf	??_print_money
  3735  0D1D  01EC               	clrf	??_print_money+1
  3736  0D1E  086B               	movf	??_print_money,w
  3737  0D1F  0021               	movlb	1	; select bank1
  3738  0D20  00A2               	movwf	(?_sprintf^(0+128)+2)
  3739  0D21  0020               	movlb	0	; select bank0
  3740  0D22  086C               	movf	??_print_money+1,w
  3741  0D23  0021               	movlb	1	; select bank1
  3742  0D24  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  3743  0D25  0831               	movf	(print_money@date^(0+128)+4),w
  3744  0D26  0020               	movlb	0	; select bank0
  3745  0D27  00ED               	movwf	??_print_money+2
  3746  0D28  01EE               	clrf	??_print_money+3
  3747  0D29  086D               	movf	??_print_money+2,w
  3748  0D2A  0021               	movlb	1	; select bank1
  3749  0D2B  00A4               	movwf	(?_sprintf^(0+128)+4)
  3750  0D2C  0020               	movlb	0	; select bank0
  3751  0D2D  086E               	movf	??_print_money+3,w
  3752  0D2E  0021               	movlb	1	; select bank1
  3753  0D2F  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  3754  0D30  30D0               	movlw	(low (_line| 0))& (0+255)
  3755  0D31  318B  23C2  318D   	fcall	_sprintf
  3756  0D34                     l2562:
  3757                           
  3758                           ;main.c: 113:     lcd_set_cursor(0, 0);
  3759  0D34  01F8               	clrf	lcd_set_cursor@row
  3760  0D35  3000               	movlw	0
  3761  0D36  318C  2439  318D   	fcall	_lcd_set_cursor
  3762  0D39                     l2564:
  3763                           
  3764                           ;main.c: 114:     lcd_print(line);
  3765  0D39  30D0               	movlw	low _line
  3766  0D3A  00F8               	movwf	lcd_print@str
  3767  0D3B  3000               	movlw	high _line
  3768  0D3C  00F9               	movwf	lcd_print@str+1
  3769  0D3D  318B  2343  318D   	fcall	_lcd_print
  3770  0D40                     l2566:
  3771                           
  3772                           ;main.c: 116:     sprintf(line, "Money:%dYEN", money);
  3773  0D40  3024               	movlw	low (STR_6| (0+32768))
  3774  0D41  0021               	movlb	1	; select bank1
  3775  0D42  00A0               	movwf	sprintf@fmt^(0+128)
  3776  0D43  3088               	movlw	high (STR_6| (0+32768))
  3777  0D44  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  3778  0D45  0834               	movf	(print_money@money+1)^(0+128),w
  3779  0D46  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  3780  0D47  0833               	movf	print_money@money^(0+128),w
  3781  0D48  00A2               	movwf	(?_sprintf^(0+128)+2)
  3782  0D49  30D0               	movlw	(low (_line| 0))& (0+255)
  3783  0D4A  318B  23C2  318D   	fcall	_sprintf
  3784  0D4D                     l2568:
  3785                           
  3786                           ;main.c: 117:     lcd_set_cursor(0, 1);
  3787  0D4D  01F8               	clrf	lcd_set_cursor@row
  3788  0D4E  0AF8               	incf	lcd_set_cursor@row,f
  3789  0D4F  3000               	movlw	0
  3790  0D50  318C  2439  318D   	fcall	_lcd_set_cursor
  3791                           
  3792                           ;main.c: 118:     lcd_print(line);
  3793  0D53  30D0               	movlw	low _line
  3794  0D54  00F8               	movwf	lcd_print@str
  3795  0D55  3000               	movlw	high _line
  3796  0D56  00F9               	movwf	lcd_print@str+1
  3797  0D57  318B  2343  318D   	fcall	_lcd_print
  3798  0D5A                     l124:
  3799  0D5A  0008               	return
  3800  0D5B                     __end_of_print_money:
  3801                           
  3802                           	psect	text10
  3803  0BC2                     __ptext10:	
  3804 ;; *************** function _sprintf *****************
  3805 ;; Defined at:
  3806 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  s               1    wreg     PTR unsigned char 
  3809 ;;		 -> line(16), 
  3810 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  3811 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  3812 ;;		 -> STR_2(18), STR_1(18), 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  s               1    7[BANK1 ] PTR unsigned char 
  3815 ;;		 -> line(16), 
  3816 ;;  f               5    8[BANK1 ] struct _IO_FILE
  3817 ;;  ret             2    0        int 
  3818 ;;  ap              1    6[BANK1 ] PTR void [1]
  3819 ;;		 -> ?_sprintf(2), 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  2    0[BANK1 ] int 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3829 ;;      Params:         0       0       6       0       0       0
  3830 ;;      Locals:         0       0       7       0       0       0
  3831 ;;      Temps:          1       0       0       0       0       0
  3832 ;;      Totals:         1       0      13       0       0       0
  3833 ;;Total ram usage:       14 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 7
  3836 ;; This function calls:
  3837 ;;		_vfprintf
  3838 ;; This function is called by:
  3839 ;;		_print_train
  3840 ;;		_print_remaing
  3841 ;;		_print_money
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           
  3846                           ;psect for function _sprintf
  3847  0BC2                     _sprintf:
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3851                           ;sprintf@s stored from wreg
  3852  0BC2  0021               	movlb	1	; select bank1
  3853  0BC3  00A7               	movwf	sprintf@s^(0+128)
  3854  0BC4                     l2386:
  3855  0BC4  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3856  0BC5  00FD               	movwf	??_sprintf
  3857  0BC6  087D               	movf	??_sprintf,w
  3858  0BC7  00A6               	movwf	sprintf@ap^(0+128)
  3859  0BC8  0827               	movf	sprintf@s^(0+128),w
  3860  0BC9  00FD               	movwf	??_sprintf
  3861  0BCA  087D               	movf	??_sprintf,w
  3862  0BCB  00A8               	movwf	sprintf@f^(0+128)
  3863  0BCC                     l2388:
  3864  0BCC  01A9               	clrf	(sprintf@f^(0+128)+1)
  3865  0BCD  01AA               	clrf	((sprintf@f+1)^(0+128)+1)
  3866  0BCE                     l2390:
  3867  0BCE  01AB               	clrf	(sprintf@f^(0+128)+3)
  3868  0BCF  01AC               	clrf	((sprintf@f+1)^(0+128)+3)
  3869  0BD0                     l2392:
  3870  0BD0  0821               	movf	(sprintf@fmt+1)^(0+128),w
  3871  0BD1  0020               	movlb	0	; select bank0
  3872  0BD2  00E4               	movwf	vfprintf@fmt+1
  3873  0BD3  0021               	movlb	1	; select bank1
  3874  0BD4  0820               	movf	sprintf@fmt^(0+128),w
  3875  0BD5  0020               	movlb	0	; select bank0
  3876  0BD6  00E3               	movwf	vfprintf@fmt
  3877  0BD7  30A6               	movlw	(low (sprintf@ap| 0))& (0+255)
  3878  0BD8  00FD               	movwf	??_sprintf
  3879  0BD9  087D               	movf	??_sprintf,w
  3880  0BDA  00E5               	movwf	vfprintf@ap
  3881  0BDB  30A8               	movlw	(low (sprintf@f| 0))& (0+255)
  3882  0BDC  318C  2463  318B   	fcall	_vfprintf
  3883  0BDF                     l2394:
  3884  0BDF  0021               	movlb	1	; select bank1
  3885  0BE0  0829               	movf	(sprintf@f^(0+128)+1),w
  3886  0BE1  0727               	addwf	sprintf@s^(0+128),w
  3887  0BE2  00FD               	movwf	??_sprintf
  3888  0BE3  087D               	movf	??_sprintf,w
  3889  0BE4  0086               	movwf	6
  3890  0BE5  0187               	clrf	7
  3891  0BE6  0181               	clrf	1
  3892  0BE7                     l887:
  3893  0BE7  0008               	return
  3894  0BE8                     __end_of_sprintf:
  3895                           
  3896                           	psect	text11
  3897  0C63                     __ptext11:	
  3898 ;; *************** function _vfprintf *****************
  3899 ;; Defined at:
  3900 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  fp              1    wreg     PTR struct _IO_FILE
  3903 ;;		 -> sprintf@f(5), 
  3904 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  3905 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  3906 ;;		 -> STR_2(18), STR_1(18), 
  3907 ;;  ap              1   69[BANK0 ] PTR PTR void 
  3908 ;;		 -> sprintf@ap(1), 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
  3911 ;;		 -> sprintf@f(5), 
  3912 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
  3913 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  3914 ;;		 -> STR_2(18), STR_1(18), 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2   67[BANK0 ] int 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3924 ;;      Params:         0       3       0       0       0       0
  3925 ;;      Locals:         0       3       0       0       0       0
  3926 ;;      Temps:          0       2       0       0       0       0
  3927 ;;      Totals:         0       8       0       0       0       0
  3928 ;;Total ram usage:        8 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 6
  3931 ;; This function calls:
  3932 ;;		_vfpfcnvrt
  3933 ;; This function is called by:
  3934 ;;		_sprintf
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _vfprintf
  3940  0C63                     _vfprintf:
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3944                           ;vfprintf@fp stored from wreg
  3945  0C63  0020               	movlb	0	; select bank0
  3946  0C64  00E8               	movwf	vfprintf@fp
  3947  0C65                     l2330:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3950  0C65  0864               	movf	vfprintf@fmt+1,w
  3951  0C66  00EA               	movwf	vfprintf@cfmt+1
  3952  0C67  0863               	movf	vfprintf@fmt,w
  3953  0C68  00E9               	movwf	vfprintf@cfmt
  3954  0C69                     l2332:
  3955                           
  3956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3957  0C69  0021               	movlb	1	; select bank1
  3958  0C6A  01C5               	clrf	_nout^(0+128)
  3959  0C6B  01C6               	clrf	(_nout+1)^(0+128)
  3960                           
  3961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3962  0C6C  2C81               	goto	l2336
  3963  0C6D                     l2334:
  3964                           
  3965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3966  0C6D  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3967  0C6E  00E6               	movwf	??_vfprintf
  3968  0C6F  0866               	movf	??_vfprintf,w
  3969  0C70  00CE               	movwf	vfpfcnvrt@fmt
  3970  0C71  0865               	movf	vfprintf@ap,w
  3971  0C72  00E7               	movwf	??_vfprintf+1
  3972  0C73  0867               	movf	??_vfprintf+1,w
  3973  0C74  00CF               	movwf	vfpfcnvrt@ap
  3974  0C75  0868               	movf	vfprintf@fp,w
  3975  0C76  3186  2627  318C   	fcall	_vfpfcnvrt
  3976  0C79  0020               	movlb	0	; select bank0
  3977  0C7A  084E               	movf	?_vfpfcnvrt,w
  3978  0C7B  0021               	movlb	1	; select bank1
  3979  0C7C  07C5               	addwf	_nout^(0+128),f
  3980  0C7D  0020               	movlb	0	; select bank0
  3981  0C7E  084F               	movf	?_vfpfcnvrt+1,w
  3982  0C7F  0021               	movlb	1	; select bank1
  3983  0C80  3DC6               	addwfc	(_nout+1)^(0+128),f
  3984  0C81                     l2336:
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3987  0C81  0020               	movlb	0	; select bank0
  3988  0C82  0869               	movf	vfprintf@cfmt,w
  3989  0C83  0084               	movwf	4
  3990  0C84  086A               	movf	vfprintf@cfmt+1,w
  3991  0C85  0085               	movwf	5
  3992  0C86  0012               	moviw fsr0++
  3993  0C87  1D03               	btfss	3,2
  3994  0C88  2C8A               	goto	u1901
  3995  0C89  2C8B               	goto	u1900
  3996  0C8A                     u1901:
  3997  0C8A  2C6D               	goto	l2334
  3998  0C8B                     u1900:
  3999  0C8B                     l2338:
  4000                           
  4001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4002  0C8B  0021               	movlb	1	; select bank1
  4003  0C8C  0846               	movf	(_nout+1)^(0+128),w
  4004  0C8D  0020               	movlb	0	; select bank0
  4005  0C8E  00E4               	movwf	?_vfprintf+1
  4006  0C8F  0021               	movlb	1	; select bank1
  4007  0C90  0845               	movf	_nout^(0+128),w
  4008  0C91  0020               	movlb	0	; select bank0
  4009  0C92  00E3               	movwf	?_vfprintf
  4010  0C93                     l985:
  4011  0C93  0008               	return
  4012  0C94                     __end_of_vfprintf:
  4013                           
  4014                           	psect	text12
  4015  0627                     __ptext12:	
  4016 ;; *************** function _vfpfcnvrt *****************
  4017 ;; Defined at:
  4018 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  fp              1    wreg     PTR struct _IO_FILE
  4021 ;;		 -> sprintf@f(5), 
  4022 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4023 ;;		 -> vfprintf@cfmt(2), 
  4024 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4025 ;;		 -> sprintf@ap(1), 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
  4028 ;;		 -> sprintf@f(5), 
  4029 ;;  ll              8   54[BANK0 ] long long 
  4030 ;;  llu             8    0        unsigned long long 
  4031 ;;  f               4    0        unsigned long long 
  4032 ;;  ct              3    0        unsigned char [3]
  4033 ;;  done            2   62[BANK0 ] int 
  4034 ;;  vp              2    0        PTR void 
  4035 ;;  i               2    0        int 
  4036 ;;  cp              2    0        PTR unsigned char 
  4037 ;;  c               1    0        unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  2   46[BANK0 ] int 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4047 ;;      Params:         0       2       0       0       0       0
  4048 ;;      Locals:         0      13       0       0       0       0
  4049 ;;      Temps:          0       6       0       0       0       0
  4050 ;;      Totals:         0      21       0       0       0       0
  4051 ;;Total ram usage:       21 bytes
  4052 ;; Hardware stack levels used: 1
  4053 ;; Hardware stack levels required when called: 5
  4054 ;; This function calls:
  4055 ;;		_atoi
  4056 ;;		_dtoa
  4057 ;;		_fputc
  4058 ;;		_isdigit
  4059 ;; This function is called by:
  4060 ;;		_vfprintf
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           
  4065                           ;psect for function _vfpfcnvrt
  4066  0627                     _vfpfcnvrt:
  4067                           
  4068                           ;incstack = 0
  4069                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4070                           ;vfpfcnvrt@fp stored from wreg
  4071  0627  0020               	movlb	0	; select bank0
  4072  0628  00E2               	movwf	vfpfcnvrt@fp
  4073  0629                     l2198:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4076  0629  084E               	movf	vfpfcnvrt@fmt,w
  4077  062A  0086               	movwf	6
  4078  062B  0187               	clrf	7
  4079  062C  3F40               	moviw [0]fsr1
  4080  062D  00D0               	movwf	??_vfpfcnvrt
  4081  062E  3F41               	moviw [1]fsr1
  4082  062F  00D1               	movwf	??_vfpfcnvrt+1
  4083  0630  0850               	movf	??_vfpfcnvrt,w
  4084  0631  0084               	movwf	4
  4085  0632  0851               	movf	??_vfpfcnvrt+1,w
  4086  0633  0085               	movwf	5
  4087  0634  0012               	moviw fsr0++
  4088  0635  3A25               	xorlw	37
  4089  0636  1D03               	btfss	3,2
  4090  0637  2E39               	goto	u1741
  4091  0638  2E3A               	goto	u1740
  4092  0639                     u1741:
  4093  0639  2FA6               	goto	l2278
  4094  063A                     u1740:
  4095  063A                     l2200:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4098  063A  084E               	movf	vfpfcnvrt@fmt,w
  4099  063B  0086               	movwf	6
  4100  063C  0187               	clrf	7
  4101  063D  3001               	movlw	1
  4102  063E  0781               	addwf	1,f
  4103  063F  3141               	addfsr 1,1
  4104  0640  1803               	skipnc
  4105  0641  0A81               	incf	1,f
  4106  0642                     l2202:
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4109  0642  0021               	movlb	1	; select bank1
  4110  0643  01C7               	clrf	_width^(0+128)
  4111  0644  01C8               	clrf	(_width+1)^(0+128)
  4112  0645  01CB               	clrf	_flags^(0+128)
  4113  0646  01CC               	clrf	(_flags+1)^(0+128)
  4114  0647                     l2204:
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4117  0647  30FF               	movlw	255
  4118  0648  00C9               	movwf	_prec^(0+128)
  4119  0649  30FF               	movlw	255
  4120  064A  00CA               	movwf	(_prec^(0+128)+1)
  4121  064B                     l2206:
  4122                           
  4123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4124  064B  0020               	movlb	0	; select bank0
  4125  064C  01DE               	clrf	vfpfcnvrt@done
  4126  064D  01DF               	clrf	vfpfcnvrt@done+1
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4129  064E  2E90               	goto	l2224
  4130  064F                     l956:	
  4131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  4132                           
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4135  064F  0021               	movlb	1	; select bank1
  4136  0650  144B               	bsf	_flags^(0+128),0
  4137  0651                     l2208:
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4140  0651  0020               	movlb	0	; select bank0
  4141  0652  084E               	movf	vfpfcnvrt@fmt,w
  4142  0653  0086               	movwf	6
  4143  0654  0187               	clrf	7
  4144  0655  3001               	movlw	1
  4145  0656  0781               	addwf	1,f
  4146  0657  3141               	addfsr 1,1
  4147  0658  1803               	skipnc
  4148  0659  0A81               	incf	1,f
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4151  065A  2E90               	goto	l2224
  4152  065B                     l958:	
  4153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  4154                           
  4155                           
  4156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4157  065B  0021               	movlb	1	; select bank1
  4158  065C  14CB               	bsf	_flags^(0+128),1
  4159  065D  2E51               	goto	l2208
  4160  065E                     l959:	
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  4162                           
  4163                           
  4164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4165  065E  0021               	movlb	1	; select bank1
  4166  065F  154B               	bsf	_flags^(0+128),2
  4167  0660  2E51               	goto	l2208
  4168  0661                     l960:	
  4169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  4170                           
  4171                           
  4172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4173  0661  0021               	movlb	1	; select bank1
  4174  0662  15CB               	bsf	_flags^(0+128),3
  4175  0663  2E51               	goto	l2208
  4176  0664                     l961:	
  4177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  4178                           
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4181  0664  0021               	movlb	1	; select bank1
  4182  0665  164B               	bsf	_flags^(0+128),4
  4183  0666  2E51               	goto	l2208
  4184  0667                     l2218:
  4185                           
  4186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4187  0667  3001               	movlw	1
  4188  0668  00DE               	movwf	vfpfcnvrt@done
  4189  0669  3000               	movlw	0
  4190  066A  00DF               	movwf	vfpfcnvrt@done+1
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4193  066B  2E90               	goto	l2224
  4194  066C                     l2222:
  4195  066C  084E               	movf	vfpfcnvrt@fmt,w
  4196  066D  0086               	movwf	6
  4197  066E  0187               	clrf	7
  4198  066F  3F40               	moviw [0]fsr1
  4199  0670  00D0               	movwf	??_vfpfcnvrt
  4200  0671  3F41               	moviw [1]fsr1
  4201  0672  00D1               	movwf	??_vfpfcnvrt+1
  4202  0673  0850               	movf	??_vfpfcnvrt,w
  4203  0674  0084               	movwf	4
  4204  0675  0851               	movf	??_vfpfcnvrt+1,w
  4205  0676  0085               	movwf	5
  4206  0677  0800               	movf	0,w	;code access
  4207  0678  00D2               	movwf	??_vfpfcnvrt+2
  4208  0679  01D3               	clrf	??_vfpfcnvrt+3
  4209                           
  4210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4211                           ; Switch size 1, requested type "simple"
  4212                           ; Number of cases is 1, Range of values is 0 to 0
  4213                           ; switch strategies available:
  4214                           ; Name         Instructions Cycles
  4215                           ; simple_byte            4     3 (average)
  4216                           ; direct_byte            8     6 (fixed)
  4217                           ; jumptable            260     6 (fixed)
  4218                           ;	Chosen strategy is simple_byte
  4219  067A  0853               	movf	??_vfpfcnvrt+3,w
  4220  067B  3A00               	xorlw	0	; case 0
  4221  067C  1903               	skipnz
  4222  067D  2E7F               	goto	l2688
  4223  067E  2E67               	goto	l2218
  4224  067F                     l2688:
  4225                           
  4226                           ; Switch size 1, requested type "simple"
  4227                           ; Number of cases is 5, Range of values is 32 to 48
  4228                           ; switch strategies available:
  4229                           ; Name         Instructions Cycles
  4230                           ; simple_byte           16     9 (average)
  4231                           ; direct_byte           43     9 (fixed)
  4232                           ; jumptable            263     9 (fixed)
  4233                           ;	Chosen strategy is simple_byte
  4234  067F  0852               	movf	??_vfpfcnvrt+2,w
  4235  0680  3A20               	xorlw	32	; case 32
  4236  0681  1903               	skipnz
  4237  0682  2E61               	goto	l960
  4238  0683  3A03               	xorlw	3	; case 35
  4239  0684  1903               	skipnz
  4240  0685  2E64               	goto	l961
  4241  0686  3A08               	xorlw	8	; case 43
  4242  0687  1903               	skipnz
  4243  0688  2E5E               	goto	l959
  4244  0689  3A06               	xorlw	6	; case 45
  4245  068A  1903               	skipnz
  4246  068B  2E4F               	goto	l956
  4247  068C  3A1D               	xorlw	29	; case 48
  4248  068D  1903               	skipnz
  4249  068E  2E5B               	goto	l958
  4250  068F  2E67               	goto	l2218
  4251  0690                     l2224:
  4252                           
  4253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4254  0690  085E               	movf	vfpfcnvrt@done,w
  4255  0691  045F               	iorwf	vfpfcnvrt@done+1,w
  4256  0692  1903               	btfsc	3,2
  4257  0693  2E95               	goto	u1751
  4258  0694  2E96               	goto	u1750
  4259  0695                     u1751:
  4260  0695  2E6C               	goto	l2222
  4261  0696                     u1750:
  4262  0696                     l963:
  4263                           
  4264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4265  0696  0021               	movlb	1	; select bank1
  4266  0697  1C4B               	btfss	_flags^(0+128),0
  4267  0698  2E9A               	goto	u1761
  4268  0699  2E9B               	goto	u1760
  4269  069A                     u1761:
  4270  069A  2E9F               	goto	l2228
  4271  069B                     u1760:
  4272  069B                     l2226:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4275  069B  30FD               	movlw	253
  4276  069C  05CB               	andwf	_flags^(0+128),f
  4277  069D  30FF               	movlw	255
  4278  069E  05CC               	andwf	(_flags+1)^(0+128),f
  4279  069F                     l2228:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4282  069F  0020               	movlb	0	; select bank0
  4283  06A0  084E               	movf	vfpfcnvrt@fmt,w
  4284  06A1  0086               	movwf	6
  4285  06A2  0187               	clrf	7
  4286  06A3  3F40               	moviw [0]fsr1
  4287  06A4  00D0               	movwf	??_vfpfcnvrt
  4288  06A5  3F41               	moviw [1]fsr1
  4289  06A6  00D1               	movwf	??_vfpfcnvrt+1
  4290  06A7  0850               	movf	??_vfpfcnvrt,w
  4291  06A8  0084               	movwf	4
  4292  06A9  0851               	movf	??_vfpfcnvrt+1,w
  4293  06AA  0085               	movwf	5
  4294  06AB  0012               	moviw fsr0++
  4295  06AC  3A2A               	xorlw	42
  4296  06AD  1D03               	btfss	3,2
  4297  06AE  2EB0               	goto	u1771
  4298  06AF  2EB1               	goto	u1770
  4299  06B0                     u1771:
  4300  06B0  2ED1               	goto	l2240
  4301  06B1                     u1770:
  4302  06B1                     l2230:
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4305  06B1  084E               	movf	vfpfcnvrt@fmt,w
  4306  06B2  0086               	movwf	6
  4307  06B3  0187               	clrf	7
  4308  06B4  3001               	movlw	1
  4309  06B5  0781               	addwf	1,f
  4310  06B6  3141               	addfsr 1,1
  4311  06B7  1803               	skipnc
  4312  06B8  0A81               	incf	1,f
  4313  06B9                     l2232:
  4314                           
  4315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4316  06B9  084F               	movf	vfpfcnvrt@ap,w
  4317  06BA  0086               	movwf	6
  4318  06BB  0187               	clrf	7
  4319  06BC  0801               	movf	1,w
  4320  06BD  0084               	movwf	4
  4321  06BE  0185               	clrf	5
  4322  06BF  3002               	movlw	2
  4323  06C0  0781               	addwf	1,f
  4324  06C1  3F00               	moviw [0]fsr0
  4325  06C2  0021               	movlb	1	; select bank1
  4326  06C3  00C7               	movwf	_width^(0+128)
  4327  06C4  3F01               	moviw [1]fsr0
  4328  06C5  00C8               	movwf	(_width+1)^(0+128)
  4329  06C6                     l2234:
  4330                           
  4331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4332  06C6  1FC8               	btfss	(_width+1)^(0+128),7
  4333  06C7  2EC9               	goto	u1781
  4334  06C8  2ECA               	goto	u1780
  4335  06C9                     u1781:
  4336  06C9  2F13               	goto	l2250
  4337  06CA                     u1780:
  4338  06CA                     l2236:
  4339                           
  4340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4341  06CA  144B               	bsf	_flags^(0+128),0
  4342  06CB                     l2238:
  4343                           
  4344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4345  06CB  09C7               	comf	_width^(0+128),f
  4346  06CC  09C8               	comf	(_width+1)^(0+128),f
  4347  06CD  0AC7               	incf	_width^(0+128),f
  4348  06CE  1903               	skipnz
  4349  06CF  0AC8               	incf	(_width+1)^(0+128),f
  4350  06D0  2F13               	goto	l2250
  4351  06D1                     l2240:
  4352                           
  4353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4354  06D1  084E               	movf	vfpfcnvrt@fmt,w
  4355  06D2  0086               	movwf	6
  4356  06D3  0187               	clrf	7
  4357  06D4  3F40               	moviw [0]fsr1
  4358  06D5  00F6               	movwf	atoi@s
  4359  06D6  3F41               	moviw [1]fsr1
  4360  06D7  00F7               	movwf	atoi@s+1
  4361  06D8  3180  2060  3186   	fcall	_atoi
  4362  06DB  0877               	movf	?_atoi+1,w
  4363  06DC  0021               	movlb	1	; select bank1
  4364  06DD  00C8               	movwf	(_width+1)^(0+128)
  4365  06DE  0876               	movf	?_atoi,w
  4366  06DF  00C7               	movwf	_width^(0+128)
  4367                           
  4368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4369  06E0  2EE9               	goto	l2244
  4370  06E1                     l2242:
  4371                           
  4372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  4373  06E1  084E               	movf	vfpfcnvrt@fmt,w
  4374  06E2  0086               	movwf	6
  4375  06E3  0187               	clrf	7
  4376  06E4  3001               	movlw	1
  4377  06E5  0781               	addwf	1,f
  4378  06E6  3141               	addfsr 1,1
  4379  06E7  1803               	skipnc
  4380  06E8  0A81               	incf	1,f
  4381  06E9                     l2244:
  4382  06E9  0020               	movlb	0	; select bank0
  4383  06EA  084E               	movf	vfpfcnvrt@fmt,w
  4384  06EB  0086               	movwf	6
  4385  06EC  0187               	clrf	7
  4386  06ED  3F40               	moviw [0]fsr1
  4387  06EE  00D0               	movwf	??_vfpfcnvrt
  4388  06EF  3F41               	moviw [1]fsr1
  4389  06F0  00D1               	movwf	??_vfpfcnvrt+1
  4390  06F1  0850               	movf	??_vfpfcnvrt,w
  4391  06F2  0084               	movwf	4
  4392  06F3  0851               	movf	??_vfpfcnvrt+1,w
  4393  06F4  0085               	movwf	5
  4394  06F5  0800               	movf	0,w	;code access
  4395  06F6  3ED0               	addlw	208
  4396  06F7  00D2               	movwf	??_vfpfcnvrt+2
  4397  06F8  30FF               	movlw	255
  4398  06F9  1803               	skipnc
  4399  06FA  3000               	movlw	0
  4400  06FB  00D3               	movwf	??_vfpfcnvrt+3
  4401  06FC  3000               	movlw	0
  4402  06FD  0253               	subwf	??_vfpfcnvrt+3,w
  4403  06FE  300A               	movlw	10
  4404  06FF  1903               	skipnz
  4405  0700  0252               	subwf	??_vfpfcnvrt+2,w
  4406  0701  1C03               	skipc
  4407  0702  2F04               	goto	u1791
  4408  0703  2F06               	goto	u1790
  4409  0704                     u1791:
  4410  0704  3001               	movlw	1
  4411  0705  2F07               	goto	u1800
  4412  0706                     u1790:
  4413  0706  3000               	movlw	0
  4414  0707                     u1800:
  4415  0707  00D4               	movwf	??_vfpfcnvrt+4
  4416  0708  01D5               	clrf	??_vfpfcnvrt+5
  4417  0709  0854               	movf	??_vfpfcnvrt+4,w
  4418  070A  00E0               	movwf	_vfpfcnvrt$1044
  4419  070B  0855               	movf	??_vfpfcnvrt+5,w
  4420  070C  00E1               	movwf	_vfpfcnvrt$1044+1
  4421  070D                     l2248:
  4422  070D  0860               	movf	_vfpfcnvrt$1044,w
  4423  070E  0461               	iorwf	_vfpfcnvrt$1044+1,w
  4424  070F  1D03               	btfss	3,2
  4425  0710  2F12               	goto	u1811
  4426  0711  2F13               	goto	u1810
  4427  0712                     u1811:
  4428  0712  2EE1               	goto	l2242
  4429  0713                     u1810:
  4430  0713                     l2250:
  4431                           
  4432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4433  0713  0020               	movlb	0	; select bank0
  4434  0714  084E               	movf	vfpfcnvrt@fmt,w
  4435  0715  0086               	movwf	6
  4436  0716  0187               	clrf	7
  4437  0717  3F40               	moviw [0]fsr1
  4438  0718  00D0               	movwf	??_vfpfcnvrt
  4439  0719  3F41               	moviw [1]fsr1
  4440  071A  00D1               	movwf	??_vfpfcnvrt+1
  4441  071B  0850               	movf	??_vfpfcnvrt,w
  4442  071C  0084               	movwf	4
  4443  071D  0851               	movf	??_vfpfcnvrt+1,w
  4444  071E  0085               	movwf	5
  4445  071F  0012               	moviw fsr0++
  4446  0720  3A64               	xorlw	100
  4447  0721  1903               	btfsc	3,2
  4448  0722  2F24               	goto	u1821
  4449  0723  2F25               	goto	u1820
  4450  0724                     u1821:
  4451  0724  2F36               	goto	l2254
  4452  0725                     u1820:
  4453  0725                     l2252:
  4454  0725  084E               	movf	vfpfcnvrt@fmt,w
  4455  0726  0086               	movwf	6
  4456  0727  0187               	clrf	7
  4457  0728  3F40               	moviw [0]fsr1
  4458  0729  00D0               	movwf	??_vfpfcnvrt
  4459  072A  3F41               	moviw [1]fsr1
  4460  072B  00D1               	movwf	??_vfpfcnvrt+1
  4461  072C  0850               	movf	??_vfpfcnvrt,w
  4462  072D  0084               	movwf	4
  4463  072E  0851               	movf	??_vfpfcnvrt+1,w
  4464  072F  0085               	movwf	5
  4465  0730  0012               	moviw fsr0++
  4466  0731  3A69               	xorlw	105
  4467  0732  1D03               	btfss	3,2
  4468  0733  2F35               	goto	u1831
  4469  0734  2F36               	goto	u1830
  4470  0735                     u1831:
  4471  0735  2F71               	goto	l2262
  4472  0736                     u1830:
  4473  0736                     l2254:
  4474                           
  4475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4476  0736  084E               	movf	vfpfcnvrt@fmt,w
  4477  0737  0086               	movwf	6
  4478  0738  0187               	clrf	7
  4479  0739  3001               	movlw	1
  4480  073A  0781               	addwf	1,f
  4481  073B  3141               	addfsr 1,1
  4482  073C  1803               	skipnc
  4483  073D  0A81               	incf	1,f
  4484  073E                     l2256:
  4485                           
  4486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4487  073E  084F               	movf	vfpfcnvrt@ap,w
  4488  073F  0086               	movwf	6
  4489  0740  0187               	clrf	7
  4490  0741  0801               	movf	1,w
  4491  0742  0084               	movwf	4
  4492  0743  0185               	clrf	5
  4493  0744  3002               	movlw	2
  4494  0745  0781               	addwf	1,f
  4495  0746  3F00               	moviw [0]fsr0
  4496  0747  00D0               	movwf	??_vfpfcnvrt
  4497  0748  3F01               	moviw [1]fsr0
  4498  0749  00D1               	movwf	??_vfpfcnvrt+1
  4499  074A  0850               	movf	??_vfpfcnvrt,w
  4500  074B  00D6               	movwf	vfpfcnvrt@ll
  4501  074C  0851               	movf	??_vfpfcnvrt+1,w
  4502  074D  00D7               	movwf	vfpfcnvrt@ll+1
  4503  074E  0D89               	rlf	9,f
  4504  074F  3B89               	subwfb	9,f
  4505  0750  0989               	comf	9,f
  4506  0751  00D8               	movwf	vfpfcnvrt@ll+2
  4507  0752  00D9               	movwf	vfpfcnvrt@ll+3
  4508  0753  00DA               	movwf	vfpfcnvrt@ll+4
  4509  0754  00DB               	movwf	vfpfcnvrt@ll+5
  4510  0755  00DC               	movwf	vfpfcnvrt@ll+6
  4511  0756  00DD               	movwf	vfpfcnvrt@ll+7
  4512  0757                     l2258:
  4513                           
  4514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4515  0757  0856               	movf	vfpfcnvrt@ll,w
  4516  0758  00B0               	movwf	dtoa@d
  4517  0759  0857               	movf	vfpfcnvrt@ll+1,w
  4518  075A  00B1               	movwf	dtoa@d+1
  4519  075B  0858               	movf	vfpfcnvrt@ll+2,w
  4520  075C  00B2               	movwf	dtoa@d+2
  4521  075D  0859               	movf	vfpfcnvrt@ll+3,w
  4522  075E  00B3               	movwf	dtoa@d+3
  4523  075F  085A               	movf	vfpfcnvrt@ll+4,w
  4524  0760  00B4               	movwf	dtoa@d+4
  4525  0761  085B               	movf	vfpfcnvrt@ll+5,w
  4526  0762  00B5               	movwf	dtoa@d+5
  4527  0763  085C               	movf	vfpfcnvrt@ll+6,w
  4528  0764  00B6               	movwf	dtoa@d+6
  4529  0765  085D               	movf	vfpfcnvrt@ll+7,w
  4530  0766  00B7               	movwf	dtoa@d+7
  4531  0767  0862               	movf	vfpfcnvrt@fp,w
  4532  0768  3184  24B7  3186   	fcall	_dtoa
  4533  076B  0020               	movlb	0	; select bank0
  4534  076C  0831               	movf	?_dtoa+1,w
  4535  076D  00CF               	movwf	?_vfpfcnvrt+1
  4536  076E  0830               	movf	?_dtoa,w
  4537  076F  00CE               	movwf	?_vfpfcnvrt
  4538  0770  2FC9               	goto	l978
  4539  0771                     l2262:
  4540                           
  4541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4542  0771  084E               	movf	vfpfcnvrt@fmt,w
  4543  0772  0086               	movwf	6
  4544  0773  0187               	clrf	7
  4545  0774  3F40               	moviw [0]fsr1
  4546  0775  00D0               	movwf	??_vfpfcnvrt
  4547  0776  3F41               	moviw [1]fsr1
  4548  0777  00D1               	movwf	??_vfpfcnvrt+1
  4549  0778  0850               	movf	??_vfpfcnvrt,w
  4550  0779  0084               	movwf	4
  4551  077A  0851               	movf	??_vfpfcnvrt+1,w
  4552  077B  0085               	movwf	5
  4553  077C  0012               	moviw fsr0++
  4554  077D  3A25               	xorlw	37
  4555  077E  1D03               	btfss	3,2
  4556  077F  2F81               	goto	u1841
  4557  0780  2F82               	goto	u1840
  4558  0781                     u1841:
  4559  0781  2F9B               	goto	l2272
  4560  0782                     u1840:
  4561  0782                     l2264:
  4562                           
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4564  0782  084E               	movf	vfpfcnvrt@fmt,w
  4565  0783  0086               	movwf	6
  4566  0784  0187               	clrf	7
  4567  0785  3001               	movlw	1
  4568  0786  0781               	addwf	1,f
  4569  0787  3141               	addfsr 1,1
  4570  0788  1803               	skipnc
  4571  0789  0A81               	incf	1,f
  4572  078A                     l2266:
  4573                           
  4574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4575  078A  3025               	movlw	37
  4576  078B  00F0               	movwf	fputc@c
  4577  078C  3000               	movlw	0
  4578  078D  00F1               	movwf	fputc@c+1
  4579  078E  0862               	movf	vfpfcnvrt@fp,w
  4580  078F  00D0               	movwf	??_vfpfcnvrt
  4581  0790  0850               	movf	??_vfpfcnvrt,w
  4582  0791  00F2               	movwf	fputc@fp
  4583  0792  318D  255B  3186   	fcall	_fputc
  4584  0795                     l2268:
  4585                           
  4586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4587  0795  3001               	movlw	1
  4588  0796  0020               	movlb	0	; select bank0
  4589  0797  00CE               	movwf	?_vfpfcnvrt
  4590  0798  3000               	movlw	0
  4591  0799  00CF               	movwf	?_vfpfcnvrt+1
  4592  079A  2FC9               	goto	l978
  4593  079B                     l2272:
  4594                           
  4595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4596  079B  084E               	movf	vfpfcnvrt@fmt,w
  4597  079C  0086               	movwf	6
  4598  079D  0187               	clrf	7
  4599  079E  3001               	movlw	1
  4600  079F  0781               	addwf	1,f
  4601  07A0  3141               	addfsr 1,1
  4602  07A1  1803               	skipnc
  4603  07A2  0A81               	incf	1,f
  4604  07A3                     l2274:
  4605                           
  4606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4607  07A3  01CE               	clrf	?_vfpfcnvrt
  4608  07A4  01CF               	clrf	?_vfpfcnvrt+1
  4609  07A5  2FC9               	goto	l978
  4610  07A6                     l2278:
  4611                           
  4612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4613  07A6  084E               	movf	vfpfcnvrt@fmt,w
  4614  07A7  0086               	movwf	6
  4615  07A8  0187               	clrf	7
  4616  07A9  3F40               	moviw [0]fsr1
  4617  07AA  00D0               	movwf	??_vfpfcnvrt
  4618  07AB  3F41               	moviw [1]fsr1
  4619  07AC  00D1               	movwf	??_vfpfcnvrt+1
  4620  07AD  0850               	movf	??_vfpfcnvrt,w
  4621  07AE  0084               	movwf	4
  4622  07AF  0851               	movf	??_vfpfcnvrt+1,w
  4623  07B0  0085               	movwf	5
  4624  07B1  0800               	movf	0,w	;code access
  4625  07B2  00D2               	movwf	??_vfpfcnvrt+2
  4626  07B3  01D3               	clrf	??_vfpfcnvrt+3
  4627  07B4  0852               	movf	??_vfpfcnvrt+2,w
  4628  07B5  00F0               	movwf	fputc@c
  4629  07B6  0853               	movf	??_vfpfcnvrt+3,w
  4630  07B7  00F1               	movwf	fputc@c+1
  4631  07B8  0862               	movf	vfpfcnvrt@fp,w
  4632  07B9  00D4               	movwf	??_vfpfcnvrt+4
  4633  07BA  0854               	movf	??_vfpfcnvrt+4,w
  4634  07BB  00F2               	movwf	fputc@fp
  4635  07BC  318D  255B  3186   	fcall	_fputc
  4636  07BF                     l2280:
  4637                           
  4638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4639  07BF  0020               	movlb	0	; select bank0
  4640  07C0  084E               	movf	vfpfcnvrt@fmt,w
  4641  07C1  0086               	movwf	6
  4642  07C2  0187               	clrf	7
  4643  07C3  3001               	movlw	1
  4644  07C4  0781               	addwf	1,f
  4645  07C5  3141               	addfsr 1,1
  4646  07C6  1803               	skipnc
  4647  07C7  0A81               	incf	1,f
  4648  07C8  2F95               	goto	l2268
  4649  07C9                     l978:
  4650  07C9  0008               	return
  4651  07CA                     __end_of_vfpfcnvrt:
  4652                           
  4653                           	psect	text13
  4654  04B7                     __ptext13:	
  4655 ;; *************** function _dtoa *****************
  4656 ;; Defined at:
  4657 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  fp              1    wreg     PTR struct _IO_FILE
  4660 ;;		 -> sprintf@f(5), 
  4661 ;;  d               8   16[BANK0 ] long long 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  4664 ;;		 -> sprintf@f(5), 
  4665 ;;  n               8   36[BANK0 ] long long 
  4666 ;;  i               2   44[BANK0 ] int 
  4667 ;;  s               2   34[BANK0 ] int 
  4668 ;;  w               2   32[BANK0 ] int 
  4669 ;;  p               2   30[BANK0 ] int 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  2   16[BANK0 ] int 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4679 ;;      Params:         0       8       0       0       0       0
  4680 ;;      Locals:         0      19       0       0       0       0
  4681 ;;      Temps:          0       3       0       0       0       0
  4682 ;;      Totals:         0      30       0       0       0       0
  4683 ;;Total ram usage:       30 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 4
  4686 ;; This function calls:
  4687 ;;		___aodiv
  4688 ;;		___aomod
  4689 ;;		_abs
  4690 ;;		_pad
  4691 ;; This function is called by:
  4692 ;;		_vfpfcnvrt
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           
  4697                           ;psect for function _dtoa
  4698  04B7                     _dtoa:
  4699                           
  4700                           ;incstack = 0
  4701                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4702                           ;dtoa@fp stored from wreg
  4703  04B7  0020               	movlb	0	; select bank0
  4704  04B8  00BD               	movwf	dtoa@fp
  4705  04B9                     l2064:
  4706                           
  4707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4708  04B9  0830               	movf	dtoa@d,w
  4709  04BA  00C4               	movwf	dtoa@n
  4710  04BB  0831               	movf	dtoa@d+1,w
  4711  04BC  00C5               	movwf	dtoa@n+1
  4712  04BD  0832               	movf	dtoa@d+2,w
  4713  04BE  00C6               	movwf	dtoa@n+2
  4714  04BF  0833               	movf	dtoa@d+3,w
  4715  04C0  00C7               	movwf	dtoa@n+3
  4716  04C1  0834               	movf	dtoa@d+4,w
  4717  04C2  00C8               	movwf	dtoa@n+4
  4718  04C3  0835               	movf	dtoa@d+5,w
  4719  04C4  00C9               	movwf	dtoa@n+5
  4720  04C5  0836               	movf	dtoa@d+6,w
  4721  04C6  00CA               	movwf	dtoa@n+6
  4722  04C7  0837               	movf	dtoa@d+7,w
  4723  04C8  00CB               	movwf	dtoa@n+7
  4724  04C9                     l2066:
  4725                           
  4726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4727  04C9  3044               	movlw	low dtoa@n
  4728  04CA  0086               	movwf	6
  4729  04CB  3000               	movlw	high dtoa@n
  4730  04CC  0087               	movwf	7
  4731  04CD  3F47               	moviw [7]fsr1
  4732  04CE  00B8               	movwf	??_dtoa
  4733  04CF  1BB8               	btfsc	??_dtoa,7
  4734  04D0  2CD2               	goto	u1481
  4735  04D1  2CD4               	goto	u1480
  4736  04D2                     u1481:
  4737  04D2  3001               	movlw	1
  4738  04D3  2CD5               	goto	u1490
  4739  04D4                     u1480:
  4740  04D4  3000               	movlw	0
  4741  04D5                     u1490:
  4742  04D5  0020               	movlb	0	; select bank0
  4743  04D6  00B9               	movwf	??_dtoa+1
  4744  04D7  01BA               	clrf	??_dtoa+2
  4745  04D8  0839               	movf	??_dtoa+1,w
  4746  04D9  00C2               	movwf	dtoa@s
  4747  04DA  083A               	movf	??_dtoa+2,w
  4748  04DB  00C3               	movwf	dtoa@s+1
  4749  04DC                     l2068:
  4750                           
  4751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4752  04DC  0842               	movf	dtoa@s,w
  4753  04DD  0443               	iorwf	dtoa@s+1,w
  4754  04DE  1903               	btfsc	3,2
  4755  04DF  2CE1               	goto	u1501
  4756  04E0  2CE2               	goto	u1500
  4757  04E1                     u1501:
  4758  04E1  2D00               	goto	l926
  4759  04E2                     u1500:
  4760  04E2                     l2070:
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4763  04E2  09C4               	comf	dtoa@n,f
  4764  04E3  09C5               	comf	dtoa@n+1,f
  4765  04E4  09C6               	comf	dtoa@n+2,f
  4766  04E5  09C7               	comf	dtoa@n+3,f
  4767  04E6  09C8               	comf	dtoa@n+4,f
  4768  04E7  09C9               	comf	dtoa@n+5,f
  4769  04E8  09CA               	comf	dtoa@n+6,f
  4770  04E9  09CB               	comf	dtoa@n+7,f
  4771  04EA  0AC4               	incf	dtoa@n,f
  4772  04EB  1D03               	skipz
  4773  04EC  2D00               	goto	u151lld
  4774  04ED  0AC5               	incf	dtoa@n+1,f
  4775  04EE  1D03               	skipz
  4776  04EF  2D00               	goto	u151lld
  4777  04F0  0AC6               	incf	dtoa@n+2,f
  4778  04F1  1D03               	skipz
  4779  04F2  2D00               	goto	u151lld
  4780  04F3  0AC7               	incf	dtoa@n+3,f
  4781  04F4  1D03               	skipz
  4782  04F5  2D00               	goto	u151lld
  4783  04F6  0AC8               	incf	dtoa@n+4,f
  4784  04F7  1D03               	skipz
  4785  04F8  2D00               	goto	u151lld
  4786  04F9  0AC9               	incf	dtoa@n+5,f
  4787  04FA  1D03               	skipz
  4788  04FB  2D00               	goto	u151lld
  4789  04FC  0ACA               	incf	dtoa@n+6,f
  4790  04FD  1D03               	skipz
  4791  04FE  2D00               	goto	u151lld
  4792  04FF  0ACB               	incf	dtoa@n+7,f
  4793  0500                     u151lld:
  4794  0500                     l926:	
  4795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  4796                           
  4797                           
  4798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4799  0500  0021               	movlb	1	; select bank1
  4800  0501  1BCA               	btfsc	(_prec+1)^(0+128),7
  4801  0502  2D04               	goto	u1521
  4802  0503  2D05               	goto	u1520
  4803  0504                     u1521:
  4804  0504  2D09               	goto	l927
  4805  0505                     u1520:
  4806  0505                     l2072:
  4807                           
  4808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4809  0505  30FD               	movlw	253
  4810  0506  05CB               	andwf	_flags^(0+128),f
  4811  0507  30FF               	movlw	255
  4812  0508  05CC               	andwf	(_flags+1)^(0+128),f
  4813  0509                     l927:	
  4814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  4815                           
  4816                           
  4817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4818  0509  084A               	movf	(_prec+1)^(0+128),w
  4819  050A  3A80               	xorlw	128
  4820  050B  0020               	movlb	0	; select bank0
  4821  050C  00B8               	movwf	??_dtoa
  4822  050D  3080               	movlw	128
  4823  050E  0238               	subwf	??_dtoa,w
  4824  050F  1D03               	skipz
  4825  0510  2D14               	goto	u1535
  4826  0511  3001               	movlw	1
  4827  0512  0021               	movlb	1	; select bank1
  4828  0513  0249               	subwf	_prec^(0+128),w
  4829  0514                     u1535:
  4830  0514  1803               	skipnc
  4831  0515  2D17               	goto	u1531
  4832  0516  2D18               	goto	u1530
  4833  0517                     u1531:
  4834  0517  2D1E               	goto	l2076
  4835  0518                     u1530:
  4836  0518                     l2074:
  4837  0518  3001               	movlw	1
  4838  0519  0020               	movlb	0	; select bank0
  4839  051A  00BE               	movwf	dtoa@p
  4840  051B  3000               	movlw	0
  4841  051C  00BF               	movwf	dtoa@p+1
  4842  051D  2D26               	goto	l931
  4843  051E                     l2076:
  4844  051E  0021               	movlb	1	; select bank1
  4845  051F  084A               	movf	(_prec+1)^(0+128),w
  4846  0520  0020               	movlb	0	; select bank0
  4847  0521  00BF               	movwf	dtoa@p+1
  4848  0522  0021               	movlb	1	; select bank1
  4849  0523  0849               	movf	_prec^(0+128),w
  4850  0524  0020               	movlb	0	; select bank0
  4851  0525  00BE               	movwf	dtoa@p
  4852  0526                     l931:
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4855  0526  0021               	movlb	1	; select bank1
  4856  0527  0848               	movf	(_width+1)^(0+128),w
  4857  0528  0020               	movlb	0	; select bank0
  4858  0529  00C1               	movwf	dtoa@w+1
  4859  052A  0021               	movlb	1	; select bank1
  4860  052B  0847               	movf	_width^(0+128),w
  4861  052C  0020               	movlb	0	; select bank0
  4862  052D  00C0               	movwf	dtoa@w
  4863  052E                     l2078:
  4864                           
  4865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4866  052E  0842               	movf	dtoa@s,w
  4867  052F  0443               	iorwf	dtoa@s+1,w
  4868  0530  1D03               	btfss	3,2
  4869  0531  2D33               	goto	u1541
  4870  0532  2D34               	goto	u1540
  4871  0533                     u1541:
  4872  0533  2D39               	goto	l2082
  4873  0534                     u1540:
  4874  0534                     l2080:
  4875  0534  0021               	movlb	1	; select bank1
  4876  0535  1D4B               	btfss	_flags^(0+128),2
  4877  0536  2D38               	goto	u1551
  4878  0537  2D39               	goto	u1550
  4879  0538                     u1551:
  4880  0538  2D3E               	goto	l932
  4881  0539                     u1550:
  4882  0539                     l2082:
  4883                           
  4884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4885  0539  30FF               	movlw	255
  4886  053A  0020               	movlb	0	; select bank0
  4887  053B  07C0               	addwf	dtoa@w,f
  4888  053C  30FF               	movlw	255
  4889  053D  3DC1               	addwfc	dtoa@w+1,f
  4890  053E                     l932:	
  4891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  4892                           
  4893                           
  4894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4895  053E  301F               	movlw	31
  4896  053F  0020               	movlb	0	; select bank0
  4897  0540  00CC               	movwf	dtoa@i
  4898  0541  3000               	movlw	0
  4899  0542  00CD               	movwf	dtoa@i+1
  4900  0543                     l2084:
  4901                           
  4902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4903  0543  0022               	movlb	2	; select bank2
  4904  0544  01BF               	clrf	(_dbuf^(0+256)+31)
  4905                           
  4906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4907  0545  2DAF               	goto	l935
  4908  0546                     l2086:
  4909                           
  4910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4911  0546  30FF               	movlw	255
  4912  0547  0020               	movlb	0	; select bank0
  4913  0548  07CC               	addwf	dtoa@i,f
  4914  0549  30FF               	movlw	255
  4915  054A  3DCD               	addwfc	dtoa@i+1,f
  4916  054B                     l2088:
  4917                           
  4918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4919  054B  300A               	movlw	10
  4920  054C  00A0               	movwf	___aomod@divisor
  4921  054D  01A1               	clrf	___aomod@divisor+1
  4922  054E  01A2               	clrf	___aomod@divisor+2
  4923  054F  01A3               	clrf	___aomod@divisor+3
  4924  0550  01A4               	clrf	___aomod@divisor+4
  4925  0551  01A5               	clrf	___aomod@divisor+5
  4926  0552  01A6               	clrf	___aomod@divisor+6
  4927  0553  01A7               	clrf	___aomod@divisor+7
  4928  0554  0844               	movf	dtoa@n,w
  4929  0555  00A8               	movwf	___aomod@dividend
  4930  0556  0845               	movf	dtoa@n+1,w
  4931  0557  00A9               	movwf	___aomod@dividend+1
  4932  0558  0846               	movf	dtoa@n+2,w
  4933  0559  00AA               	movwf	___aomod@dividend+2
  4934  055A  0847               	movf	dtoa@n+3,w
  4935  055B  00AB               	movwf	___aomod@dividend+3
  4936  055C  0848               	movf	dtoa@n+4,w
  4937  055D  00AC               	movwf	___aomod@dividend+4
  4938  055E  0849               	movf	dtoa@n+5,w
  4939  055F  00AD               	movwf	___aomod@dividend+5
  4940  0560  084A               	movf	dtoa@n+6,w
  4941  0561  00AE               	movwf	___aomod@dividend+6
  4942  0562  084B               	movf	dtoa@n+7,w
  4943  0563  00AF               	movwf	___aomod@dividend+7
  4944  0564  3181  21E0  3184   	fcall	___aomod
  4945  0567  0020               	movlb	0	; select bank0
  4946  0568  0821               	movf	?___aomod+1,w
  4947  0569  00F4               	movwf	abs@a+1
  4948  056A  0820               	movf	?___aomod,w
  4949  056B  00F3               	movwf	abs@a
  4950  056C  318B  230F  3184   	fcall	_abs
  4951  056F  0873               	movf	?_abs,w
  4952  0570  3E30               	addlw	48
  4953  0571  0020               	movlb	0	; select bank0
  4954  0572  00B8               	movwf	??_dtoa
  4955  0573  084C               	movf	dtoa@i,w
  4956  0574  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4957  0575  0086               	movwf	6
  4958  0576  3001               	movlw	1	; select bank2/3
  4959  0577  0087               	movwf	7
  4960  0578  0838               	movf	??_dtoa,w
  4961  0579  0081               	movwf	1
  4962  057A                     l2090:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4965  057A  30FF               	movlw	255
  4966  057B  07BE               	addwf	dtoa@p,f
  4967  057C  30FF               	movlw	255
  4968  057D  3DBF               	addwfc	dtoa@p+1,f
  4969  057E                     l2092:
  4970                           
  4971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4972  057E  30FF               	movlw	255
  4973  057F  07C0               	addwf	dtoa@w,f
  4974  0580  30FF               	movlw	255
  4975  0581  3DC1               	addwfc	dtoa@w+1,f
  4976  0582                     l2094:
  4977                           
  4978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4979  0582  300A               	movlw	10
  4980  0583  00A0               	movwf	___aodiv@divisor
  4981  0584  01A1               	clrf	___aodiv@divisor+1
  4982  0585  01A2               	clrf	___aodiv@divisor+2
  4983  0586  01A3               	clrf	___aodiv@divisor+3
  4984  0587  01A4               	clrf	___aodiv@divisor+4
  4985  0588  01A5               	clrf	___aodiv@divisor+5
  4986  0589  01A6               	clrf	___aodiv@divisor+6
  4987  058A  01A7               	clrf	___aodiv@divisor+7
  4988  058B  0844               	movf	dtoa@n,w
  4989  058C  00A8               	movwf	___aodiv@dividend
  4990  058D  0845               	movf	dtoa@n+1,w
  4991  058E  00A9               	movwf	___aodiv@dividend+1
  4992  058F  0846               	movf	dtoa@n+2,w
  4993  0590  00AA               	movwf	___aodiv@dividend+2
  4994  0591  0847               	movf	dtoa@n+3,w
  4995  0592  00AB               	movwf	___aodiv@dividend+3
  4996  0593  0848               	movf	dtoa@n+4,w
  4997  0594  00AC               	movwf	___aodiv@dividend+4
  4998  0595  0849               	movf	dtoa@n+5,w
  4999  0596  00AD               	movwf	___aodiv@dividend+5
  5000  0597  084A               	movf	dtoa@n+6,w
  5001  0598  00AE               	movwf	___aodiv@dividend+6
  5002  0599  084B               	movf	dtoa@n+7,w
  5003  059A  00AF               	movwf	___aodiv@dividend+7
  5004  059B  3183  23B6  3184   	fcall	___aodiv
  5005  059E  0020               	movlb	0	; select bank0
  5006  059F  0820               	movf	?___aodiv,w
  5007  05A0  00C4               	movwf	dtoa@n
  5008  05A1  0821               	movf	?___aodiv+1,w
  5009  05A2  00C5               	movwf	dtoa@n+1
  5010  05A3  0822               	movf	?___aodiv+2,w
  5011  05A4  00C6               	movwf	dtoa@n+2
  5012  05A5  0823               	movf	?___aodiv+3,w
  5013  05A6  00C7               	movwf	dtoa@n+3
  5014  05A7  0824               	movf	?___aodiv+4,w
  5015  05A8  00C8               	movwf	dtoa@n+4
  5016  05A9  0825               	movf	?___aodiv+5,w
  5017  05AA  00C9               	movwf	dtoa@n+5
  5018  05AB  0826               	movf	?___aodiv+6,w
  5019  05AC  00CA               	movwf	dtoa@n+6
  5020  05AD  0827               	movf	?___aodiv+7,w
  5021  05AE  00CB               	movwf	dtoa@n+7
  5022  05AF                     l935:	
  5023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  5024                           
  5025                           
  5026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5027  05AF  0020               	movlb	0	; select bank0
  5028  05B0  084D               	movf	dtoa@i+1,w
  5029  05B1  3A80               	xorlw	128
  5030  05B2  00B8               	movwf	??_dtoa
  5031  05B3  3080               	movlw	128
  5032  05B4  0238               	subwf	??_dtoa,w
  5033  05B5  1D03               	skipz
  5034  05B6  2DB9               	goto	u1565
  5035  05B7  3001               	movlw	1
  5036  05B8  024C               	subwf	dtoa@i,w
  5037  05B9                     u1565:
  5038  05B9  1C03               	skipc
  5039  05BA  2DBC               	goto	u1561
  5040  05BB  2DBD               	goto	u1560
  5041  05BC                     u1561:
  5042  05BC  2DEA               	goto	l2104
  5043  05BD                     u1560:
  5044  05BD                     l2096:
  5045  05BD  0020               	movlb	0	; select bank0
  5046  05BE  0844               	movf	dtoa@n,w
  5047  05BF  0445               	iorwf	dtoa@n+1,w
  5048  05C0  0446               	iorwf	dtoa@n+2,w
  5049  05C1  0447               	iorwf	dtoa@n+3,w
  5050  05C2  0448               	iorwf	dtoa@n+4,w
  5051  05C3  0449               	iorwf	dtoa@n+5,w
  5052  05C4  044A               	iorwf	dtoa@n+6,w
  5053  05C5  044B               	iorwf	dtoa@n+7,w
  5054  05C6  1D03               	skipz
  5055  05C7  2DC9               	goto	u1571
  5056  05C8  2DCA               	goto	u1570
  5057  05C9                     u1571:
  5058  05C9  2D46               	goto	l2086
  5059  05CA                     u1570:
  5060  05CA                     l2098:
  5061  05CA  083F               	movf	dtoa@p+1,w
  5062  05CB  3A80               	xorlw	128
  5063  05CC  00B8               	movwf	??_dtoa
  5064  05CD  3080               	movlw	128
  5065  05CE  0238               	subwf	??_dtoa,w
  5066  05CF  1D03               	skipz
  5067  05D0  2DD3               	goto	u1585
  5068  05D1  3001               	movlw	1
  5069  05D2  023E               	subwf	dtoa@p,w
  5070  05D3                     u1585:
  5071  05D3  1803               	skipnc
  5072  05D4  2DD6               	goto	u1581
  5073  05D5  2DD7               	goto	u1580
  5074  05D6                     u1581:
  5075  05D6  2D46               	goto	l2086
  5076  05D7                     u1580:
  5077  05D7                     l2100:
  5078  05D7  0020               	movlb	0	; select bank0
  5079  05D8  0841               	movf	dtoa@w+1,w
  5080  05D9  3A80               	xorlw	128
  5081  05DA  00B8               	movwf	??_dtoa
  5082  05DB  3080               	movlw	128
  5083  05DC  0238               	subwf	??_dtoa,w
  5084  05DD  1D03               	skipz
  5085  05DE  2DE1               	goto	u1595
  5086  05DF  3001               	movlw	1
  5087  05E0  0240               	subwf	dtoa@w,w
  5088  05E1                     u1595:
  5089  05E1  1C03               	skipc
  5090  05E2  2DE4               	goto	u1591
  5091  05E3  2DE5               	goto	u1590
  5092  05E4                     u1591:
  5093  05E4  2DEA               	goto	l2104
  5094  05E5                     u1590:
  5095  05E5                     l2102:
  5096  05E5  0021               	movlb	1	; select bank1
  5097  05E6  18CB               	btfsc	_flags^(0+128),1
  5098  05E7  2DE9               	goto	u1601
  5099  05E8  2DEA               	goto	u1600
  5100  05E9                     u1601:
  5101  05E9  2D46               	goto	l2086
  5102  05EA                     u1600:
  5103  05EA                     l2104:
  5104                           
  5105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5106  05EA  0020               	movlb	0	; select bank0
  5107  05EB  0842               	movf	dtoa@s,w
  5108  05EC  0443               	iorwf	dtoa@s+1,w
  5109  05ED  1D03               	btfss	3,2
  5110  05EE  2DF0               	goto	u1611
  5111  05EF  2DF1               	goto	u1610
  5112  05F0                     u1611:
  5113  05F0  2DF6               	goto	l2108
  5114  05F1                     u1610:
  5115  05F1                     l2106:
  5116  05F1  0021               	movlb	1	; select bank1
  5117  05F2  1D4B               	btfss	_flags^(0+128),2
  5118  05F3  2DF5               	goto	u1621
  5119  05F4  2DF6               	goto	u1620
  5120  05F5                     u1621:
  5121  05F5  2E13               	goto	l2118
  5122  05F6                     u1620:
  5123  05F6                     l2108:
  5124                           
  5125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5126  05F6  30FF               	movlw	255
  5127  05F7  0020               	movlb	0	; select bank0
  5128  05F8  07CC               	addwf	dtoa@i,f
  5129  05F9  30FF               	movlw	255
  5130  05FA  3DCD               	addwfc	dtoa@i+1,f
  5131  05FB                     l2110:
  5132                           
  5133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5134  05FB  0842               	movf	dtoa@s,w
  5135  05FC  0443               	iorwf	dtoa@s+1,w
  5136  05FD  1D03               	btfss	3,2
  5137  05FE  2E00               	goto	u1631
  5138  05FF  2E01               	goto	u1630
  5139  0600                     u1631:
  5140  0600  2E06               	goto	l2114
  5141  0601                     u1630:
  5142  0601                     l2112:
  5143  0601  302B               	movlw	43
  5144  0602  00BB               	movwf	_dtoa$1029
  5145  0603  3000               	movlw	0
  5146  0604  00BC               	movwf	_dtoa$1029+1
  5147  0605  2E0A               	goto	l2116
  5148  0606                     l2114:
  5149  0606  302D               	movlw	45
  5150  0607  00BB               	movwf	_dtoa$1029
  5151  0608  3000               	movlw	0
  5152  0609  00BC               	movwf	_dtoa$1029+1
  5153  060A                     l2116:
  5154  060A  083B               	movf	_dtoa$1029,w
  5155  060B  00B8               	movwf	??_dtoa
  5156  060C  084C               	movf	dtoa@i,w
  5157  060D  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5158  060E  0086               	movwf	6
  5159  060F  3001               	movlw	1	; select bank2/3
  5160  0610  0087               	movwf	7
  5161  0611  0838               	movf	??_dtoa,w
  5162  0612  0081               	movwf	1
  5163  0613                     l2118:
  5164                           
  5165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5166  0613  0020               	movlb	0	; select bank0
  5167  0614  084C               	movf	dtoa@i,w
  5168  0615  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5169  0616  00B8               	movwf	??_dtoa
  5170  0617  0838               	movf	??_dtoa,w
  5171  0618  00A4               	movwf	pad@buf
  5172  0619  0841               	movf	dtoa@w+1,w
  5173  061A  00A6               	movwf	pad@p+1
  5174  061B  0840               	movf	dtoa@w,w
  5175  061C  00A5               	movwf	pad@p
  5176  061D  083D               	movf	dtoa@fp,w
  5177  061E  318E  2600  3184   	fcall	_pad
  5178  0621  0020               	movlb	0	; select bank0
  5179  0622  0825               	movf	?_pad+1,w
  5180  0623  00B1               	movwf	?_dtoa+1
  5181  0624  0824               	movf	?_pad,w
  5182  0625  00B0               	movwf	?_dtoa
  5183  0626                     l949:
  5184  0626  0008               	return
  5185  0627                     __end_of_dtoa:
  5186                           
  5187                           	psect	text14
  5188  0E00                     __ptext14:	
  5189 ;; *************** function _pad *****************
  5190 ;; Defined at:
  5191 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  fp              1    wreg     PTR struct _IO_FILE
  5194 ;;		 -> sprintf@f(5), 
  5195 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5196 ;;		 -> dbuf(32), 
  5197 ;;  p               2    5[BANK0 ] int 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5200 ;;		 -> sprintf@f(5), 
  5201 ;;  w               2    9[BANK0 ] int 
  5202 ;;  i               2    7[BANK0 ] int 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  2    4[BANK0 ] int 
  5205 ;; Registers used:
  5206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5212 ;;      Params:         0       3       0       0       0       0
  5213 ;;      Locals:         0       5       0       0       0       0
  5214 ;;      Temps:          1       0       0       0       0       0
  5215 ;;      Totals:         1       8       0       0       0       0
  5216 ;;Total ram usage:        9 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 3
  5219 ;; This function calls:
  5220 ;;		_fputc
  5221 ;;		_fputs
  5222 ;;		_strlen
  5223 ;; This function is called by:
  5224 ;;		_dtoa
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function _pad
  5230  0E00                     _pad:
  5231                           
  5232                           ;incstack = 0
  5233                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5234                           ;pad@fp stored from wreg
  5235  0E00  0020               	movlb	0	; select bank0
  5236  0E01  00AB               	movwf	pad@fp
  5237  0E02                     l2018:
  5238                           
  5239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5240  0E02  0021               	movlb	1	; select bank1
  5241  0E03  1C4B               	btfss	_flags^(0+128),0
  5242  0E04  2E06               	goto	u1391
  5243  0E05  2E07               	goto	u1390
  5244  0E06                     u1391:
  5245  0E06  2E10               	goto	l2022
  5246  0E07                     u1390:
  5247  0E07                     l2020:
  5248                           
  5249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5250  0E07  0020               	movlb	0	; select bank0
  5251  0E08  082B               	movf	pad@fp,w
  5252  0E09  00FC               	movwf	??_pad
  5253  0E0A  087C               	movf	??_pad,w
  5254  0E0B  00F8               	movwf	fputs@fp
  5255  0E0C  0824               	movf	pad@buf,w
  5256  0E0D  318C  2410  318E   	fcall	_fputs
  5257  0E10                     l2022:
  5258                           
  5259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5260  0E10  0020               	movlb	0	; select bank0
  5261  0E11  1BA6               	btfsc	pad@p+1,7
  5262  0E12  2E14               	goto	u1401
  5263  0E13  2E15               	goto	u1400
  5264  0E14                     u1401:
  5265  0E14  2E1A               	goto	l2026
  5266  0E15                     u1400:
  5267  0E15                     l2024:
  5268  0E15  0826               	movf	pad@p+1,w
  5269  0E16  00AA               	movwf	pad@w+1
  5270  0E17  0825               	movf	pad@p,w
  5271  0E18  00A9               	movwf	pad@w
  5272  0E19  2E1C               	goto	l918
  5273  0E1A                     l2026:
  5274  0E1A  01A9               	clrf	pad@w
  5275  0E1B  01AA               	clrf	pad@w+1
  5276  0E1C                     l918:
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5279  0E1C  01A7               	clrf	pad@i
  5280  0E1D  01A8               	clrf	pad@i+1
  5281                           
  5282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5283  0E1E  2E30               	goto	l2032
  5284  0E1F                     l2028:
  5285                           
  5286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5287  0E1F  3020               	movlw	32
  5288  0E20  00F0               	movwf	fputc@c
  5289  0E21  3000               	movlw	0
  5290  0E22  00F1               	movwf	fputc@c+1
  5291  0E23  0020               	movlb	0	; select bank0
  5292  0E24  082B               	movf	pad@fp,w
  5293  0E25  00FC               	movwf	??_pad
  5294  0E26  087C               	movf	??_pad,w
  5295  0E27  00F2               	movwf	fputc@fp
  5296  0E28  318D  255B  318E   	fcall	_fputc
  5297  0E2B                     l2030:
  5298                           
  5299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5300  0E2B  3001               	movlw	1
  5301  0E2C  0020               	movlb	0	; select bank0
  5302  0E2D  07A7               	addwf	pad@i,f
  5303  0E2E  3000               	movlw	0
  5304  0E2F  3DA8               	addwfc	pad@i+1,f
  5305  0E30                     l2032:
  5306                           
  5307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5308  0E30  0828               	movf	pad@i+1,w
  5309  0E31  3A80               	xorlw	128
  5310  0E32  00FC               	movwf	??_pad
  5311  0E33  082A               	movf	pad@w+1,w
  5312  0E34  3A80               	xorlw	128
  5313  0E35  027C               	subwf	??_pad,w
  5314  0E36  1D03               	skipz
  5315  0E37  2E3A               	goto	u1415
  5316  0E38  0829               	movf	pad@w,w
  5317  0E39  0227               	subwf	pad@i,w
  5318  0E3A                     u1415:
  5319  0E3A  1C03               	skipc
  5320  0E3B  2E3D               	goto	u1411
  5321  0E3C  2E3E               	goto	u1410
  5322  0E3D                     u1411:
  5323  0E3D  2E1F               	goto	l2028
  5324  0E3E                     u1410:
  5325  0E3E                     l921:
  5326                           
  5327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5328  0E3E  0021               	movlb	1	; select bank1
  5329  0E3F  184B               	btfsc	_flags^(0+128),0
  5330  0E40  2E42               	goto	u1421
  5331  0E41  2E43               	goto	u1420
  5332  0E42                     u1421:
  5333  0E42  2E4C               	goto	l2036
  5334  0E43                     u1420:
  5335  0E43                     l2034:
  5336                           
  5337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5338  0E43  0020               	movlb	0	; select bank0
  5339  0E44  082B               	movf	pad@fp,w
  5340  0E45  00FC               	movwf	??_pad
  5341  0E46  087C               	movf	??_pad,w
  5342  0E47  00F8               	movwf	fputs@fp
  5343  0E48  0824               	movf	pad@buf,w
  5344  0E49  318C  2410  318E   	fcall	_fputs
  5345  0E4C                     l2036:
  5346                           
  5347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5348  0E4C  0020               	movlb	0	; select bank0
  5349  0E4D  0824               	movf	pad@buf,w
  5350  0E4E  318B  2329  318E   	fcall	_strlen
  5351  0E51  0020               	movlb	0	; select bank0
  5352  0E52  0829               	movf	pad@w,w
  5353  0E53  0770               	addwf	?_strlen,w
  5354  0E54  00A4               	movwf	?_pad
  5355  0E55  082A               	movf	pad@w+1,w
  5356  0E56  3D71               	addwfc	?_strlen+1,w
  5357  0E57  00A5               	movwf	?_pad+1
  5358  0E58                     l923:
  5359  0E58  0008               	return
  5360  0E59                     __end_of_pad:
  5361                           
  5362                           	psect	text15
  5363  0B29                     __ptext15:	
  5364 ;; *************** function _strlen *****************
  5365 ;; Defined at:
  5366 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  s               1    wreg     PTR const unsigned char 
  5369 ;;		 -> dbuf(32), 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  s               1    4[COMMON] PTR const unsigned char 
  5372 ;;		 -> dbuf(32), 
  5373 ;;  a               1    3[COMMON] PTR const unsigned char 
  5374 ;;		 -> dbuf(32), 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  2    0[COMMON] unsigned int 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5384 ;;      Params:         2       0       0       0       0       0
  5385 ;;      Locals:         2       0       0       0       0       0
  5386 ;;      Temps:          1       0       0       0       0       0
  5387 ;;      Totals:         5       0       0       0       0       0
  5388 ;;Total ram usage:        5 bytes
  5389 ;; Hardware stack levels used: 1
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_pad
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function _strlen
  5399  0B29                     _strlen:
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5403                           ;strlen@s stored from wreg
  5404  0B29  00F4               	movwf	strlen@s
  5405  0B2A                     l1916:
  5406  0B2A  0874               	movf	strlen@s,w
  5407  0B2B  00F2               	movwf	??_strlen
  5408  0B2C  0872               	movf	??_strlen,w
  5409  0B2D  00F3               	movwf	strlen@a
  5410  0B2E  2B33               	goto	l1920
  5411  0B2F                     l1918:
  5412  0B2F  3001               	movlw	1
  5413  0B30  00F2               	movwf	??_strlen
  5414  0B31  0872               	movf	??_strlen,w
  5415  0B32  07F4               	addwf	strlen@s,f
  5416  0B33                     l1920:
  5417  0B33  0874               	movf	strlen@s,w
  5418  0B34  0086               	movwf	6
  5419  0B35  3001               	movlw	1	; select bank2/3
  5420  0B36  0087               	movwf	7
  5421  0B37  0801               	movf	1,w
  5422  0B38  1D03               	btfss	3,2
  5423  0B39  2B3B               	goto	u1091
  5424  0B3A  2B3C               	goto	u1090
  5425  0B3B                     u1091:
  5426  0B3B  2B2F               	goto	l1918
  5427  0B3C                     u1090:
  5428  0B3C                     l1922:
  5429  0B3C  0873               	movf	strlen@a,w
  5430  0B3D  0274               	subwf	strlen@s,w
  5431  0B3E  00F0               	movwf	?_strlen
  5432  0B3F  01F1               	clrf	?_strlen+1
  5433  0B40  1BF0               	btfsc	?_strlen,7
  5434  0B41  03F1               	decf	?_strlen+1,f
  5435  0B42                     l1066:
  5436  0B42  0008               	return
  5437  0B43                     __end_of_strlen:
  5438                           
  5439                           	psect	text16
  5440  0C10                     __ptext16:	
  5441 ;; *************** function _fputs *****************
  5442 ;; Defined at:
  5443 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  s               1    wreg     PTR const unsigned char 
  5446 ;;		 -> dbuf(32), 
  5447 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  5448 ;;		 -> sprintf@f(5), 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5451 ;;		 -> dbuf(32), 
  5452 ;;  i               2    1[BANK0 ] int 
  5453 ;;  c               1    0[BANK0 ] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  2    8[COMMON] int 
  5456 ;; Registers used:
  5457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5463 ;;      Params:         1       0       0       0       0       0
  5464 ;;      Locals:         0       4       0       0       0       0
  5465 ;;      Temps:          3       0       0       0       0       0
  5466 ;;      Totals:         4       4       0       0       0       0
  5467 ;;Total ram usage:        8 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; Hardware stack levels required when called: 2
  5470 ;; This function calls:
  5471 ;;		_fputc
  5472 ;; This function is called by:
  5473 ;;		_pad
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function _fputs
  5479  0C10                     _fputs:
  5480                           
  5481                           ;incstack = 0
  5482                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5483                           ;fputs@s stored from wreg
  5484  0C10  0020               	movlb	0	; select bank0
  5485  0C11  00A3               	movwf	fputs@s
  5486  0C12                     l1908:
  5487  0C12  01A1               	clrf	fputs@i
  5488  0C13  01A2               	clrf	fputs@i+1
  5489  0C14  2C28               	goto	l1914
  5490  0C15                     l1910:
  5491  0C15  0820               	movf	fputs@c,w
  5492  0C16  00F9               	movwf	??_fputs
  5493  0C17  01FA               	clrf	??_fputs+1
  5494  0C18  0879               	movf	??_fputs,w
  5495  0C19  00F0               	movwf	fputc@c
  5496  0C1A  087A               	movf	??_fputs+1,w
  5497  0C1B  00F1               	movwf	fputc@c+1
  5498  0C1C  0878               	movf	fputs@fp,w
  5499  0C1D  00FB               	movwf	??_fputs+2
  5500  0C1E  087B               	movf	??_fputs+2,w
  5501  0C1F  00F2               	movwf	fputc@fp
  5502  0C20  318D  255B  318C   	fcall	_fputc
  5503  0C23                     l1912:
  5504  0C23  3001               	movlw	1
  5505  0C24  0020               	movlb	0	; select bank0
  5506  0C25  07A1               	addwf	fputs@i,f
  5507  0C26  3000               	movlw	0
  5508  0C27  3DA2               	addwfc	fputs@i+1,f
  5509  0C28                     l1914:
  5510  0C28  0821               	movf	fputs@i,w
  5511  0C29  0723               	addwf	fputs@s,w
  5512  0C2A  00F9               	movwf	??_fputs
  5513  0C2B  0879               	movf	??_fputs,w
  5514  0C2C  0086               	movwf	6
  5515  0C2D  3001               	movlw	1	; select bank2/3
  5516  0C2E  0087               	movwf	7
  5517  0C2F  0801               	movf	1,w
  5518  0C30  00FA               	movwf	??_fputs+1
  5519  0C31  087A               	movf	??_fputs+1,w
  5520  0C32  00A0               	movwf	fputs@c
  5521  0C33  0820               	movf	fputs@c,w
  5522  0C34  1D03               	btfss	3,2
  5523  0C35  2C37               	goto	u1081
  5524  0C36  2C38               	goto	u1080
  5525  0C37                     u1081:
  5526  0C37  2C15               	goto	l1910
  5527  0C38                     u1080:
  5528  0C38                     l1057:
  5529  0C38  0008               	return
  5530  0C39                     __end_of_fputs:
  5531                           
  5532                           	psect	text17
  5533  0D5B                     __ptext17:	
  5534 ;; *************** function _fputc *****************
  5535 ;; Defined at:
  5536 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  c               2    0[COMMON] int 
  5539 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  5540 ;;		 -> sprintf@f(5), 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  2    0[COMMON] int 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5552 ;;      Params:         3       0       0       0       0       0
  5553 ;;      Locals:         0       0       0       0       0       0
  5554 ;;      Temps:          5       0       0       0       0       0
  5555 ;;      Totals:         8       0       0       0       0       0
  5556 ;;Total ram usage:        8 bytes
  5557 ;; Hardware stack levels used: 1
  5558 ;; Hardware stack levels required when called: 1
  5559 ;; This function calls:
  5560 ;;		_putch
  5561 ;; This function is called by:
  5562 ;;		_pad
  5563 ;;		_vfpfcnvrt
  5564 ;;		_fputs
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           
  5569                           ;psect for function _fputc
  5570  0D5B                     _fputc:
  5571  0D5B                     l1886:	
  5572                           ;incstack = 0
  5573                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5574                           
  5575  0D5B  0872               	movf	fputc@fp,w
  5576  0D5C  1903               	btfsc	3,2
  5577  0D5D  2D5F               	goto	u1021
  5578  0D5E  2D60               	goto	u1020
  5579  0D5F                     u1021:
  5580  0D5F  2D65               	goto	l1890
  5581  0D60                     u1020:
  5582  0D60                     l1888:
  5583  0D60  0872               	movf	fputc@fp,w
  5584  0D61  1D03               	btfss	3,2
  5585  0D62  2D64               	goto	u1031
  5586  0D63  2D65               	goto	u1030
  5587  0D64                     u1031:
  5588  0D64  2D6A               	goto	l1892
  5589  0D65                     u1030:
  5590  0D65                     l1890:
  5591  0D65  0870               	movf	fputc@c,w
  5592  0D66  3180  2004  318D   	fcall	_putch
  5593  0D69  2DA9               	goto	l1049
  5594  0D6A                     l1892:
  5595  0D6A  0872               	movf	fputc@fp,w
  5596  0D6B  3E03               	addlw	3
  5597  0D6C  0086               	movwf	6
  5598  0D6D  0187               	clrf	7
  5599  0D6E  0016               	moviw fsr1++
  5600  0D6F  0401               	iorwf	1,w
  5601  0D70  1903               	btfsc	3,2
  5602  0D71  2D73               	goto	u1041
  5603  0D72  2D74               	goto	u1040
  5604  0D73                     u1041:
  5605  0D73  2D91               	goto	l1896
  5606  0D74                     u1040:
  5607  0D74                     l1894:
  5608  0D74  0872               	movf	fputc@fp,w
  5609  0D75  3E03               	addlw	3
  5610  0D76  0086               	movwf	6
  5611  0D77  0187               	clrf	7
  5612  0D78  3F40               	moviw [0]fsr1
  5613  0D79  00F3               	movwf	??_fputc
  5614  0D7A  3F41               	moviw [1]fsr1
  5615  0D7B  00F4               	movwf	??_fputc+1
  5616  0D7C  0A72               	incf	fputc@fp,w
  5617  0D7D  0086               	movwf	6
  5618  0D7E  0187               	clrf	7
  5619  0D7F  3F40               	moviw [0]fsr1
  5620  0D80  00F5               	movwf	??_fputc+2
  5621  0D81  3F41               	moviw [1]fsr1
  5622  0D82  00F6               	movwf	??_fputc+3
  5623  0D83  0876               	movf	??_fputc+3,w
  5624  0D84  3A80               	xorlw	128
  5625  0D85  00F7               	movwf	??_fputc+4
  5626  0D86  0874               	movf	??_fputc+1,w
  5627  0D87  3A80               	xorlw	128
  5628  0D88  0277               	subwf	??_fputc+4,w
  5629  0D89  1D03               	skipz
  5630  0D8A  2D8D               	goto	u1055
  5631  0D8B  0873               	movf	??_fputc,w
  5632  0D8C  0275               	subwf	??_fputc+2,w
  5633  0D8D                     u1055:
  5634  0D8D  1803               	skipnc
  5635  0D8E  2D90               	goto	u1051
  5636  0D8F  2D91               	goto	u1050
  5637  0D90                     u1051:
  5638  0D90  2DA9               	goto	l1049
  5639  0D91                     u1050:
  5640  0D91                     l1896:
  5641  0D91  0870               	movf	fputc@c,w
  5642  0D92  00F3               	movwf	??_fputc
  5643  0D93  0872               	movf	fputc@fp,w
  5644  0D94  0086               	movwf	6
  5645  0D95  0187               	clrf	7
  5646  0D96  0A72               	incf	fputc@fp,w
  5647  0D97  0084               	movwf	4
  5648  0D98  0185               	clrf	5
  5649  0D99  0800               	movf	0,w
  5650  0D9A  0701               	addwf	1,w
  5651  0D9B  00F4               	movwf	??_fputc+1
  5652  0D9C  0874               	movf	??_fputc+1,w
  5653  0D9D  0086               	movwf	6
  5654  0D9E  0187               	clrf	7
  5655  0D9F  0873               	movf	??_fputc,w
  5656  0DA0  0081               	movwf	1
  5657  0DA1                     l1898:
  5658  0DA1  0A72               	incf	fputc@fp,w
  5659  0DA2  0086               	movwf	6
  5660  0DA3  0187               	clrf	7
  5661  0DA4  3001               	movlw	1
  5662  0DA5  0781               	addwf	1,f
  5663  0DA6  3141               	addfsr 1,1
  5664  0DA7  1803               	skipnc
  5665  0DA8  0A81               	incf	1,f
  5666  0DA9                     l1049:
  5667  0DA9  0008               	return
  5668  0DAA                     __end_of_fputc:
  5669                           
  5670                           	psect	text18
  5671  0004                     __ptext18:	
  5672 ;; *************** function _putch *****************
  5673 ;; Defined at:
  5674 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  c               1    wreg     unsigned char 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  c               1    0[COMMON] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5688 ;;      Params:         0       0       0       0       0       0
  5689 ;;      Locals:         0       0       0       0       0       0
  5690 ;;      Temps:          0       0       0       0       0       0
  5691 ;;      Totals:         0       0       0       0       0       0
  5692 ;;Total ram usage:        0 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_fputc
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           
  5702                           ;psect for function _putch
  5703  0004                     _putch:
  5704  0004                     l1060:	
  5705                           ;incstack = 0
  5706                           ; Regs used in _putch: [wreg]
  5707                           
  5708  0004  0008               	return
  5709  0005                     __end_of_putch:
  5710                           
  5711                           	psect	text19
  5712  0B0F                     __ptext19:	
  5713 ;; *************** function _abs *****************
  5714 ;; Defined at:
  5715 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  a               2    3[COMMON] int 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;		None
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  2    3[COMMON] int 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5729 ;;      Params:         2       0       0       0       0       0
  5730 ;;      Locals:         0       0       0       0       0       0
  5731 ;;      Temps:          2       0       0       0       0       0
  5732 ;;      Totals:         4       0       0       0       0       0
  5733 ;;Total ram usage:        4 bytes
  5734 ;; Hardware stack levels used: 1
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_dtoa
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           
  5743                           ;psect for function _abs
  5744  0B0F                     _abs:
  5745  0B0F                     l2040:	
  5746                           ;incstack = 0
  5747                           ; Regs used in _abs: [wreg+status,2+status,0]
  5748                           
  5749  0B0F  0874               	movf	abs@a+1,w
  5750  0B10  3A80               	xorlw	128
  5751  0B11  00F5               	movwf	??_abs
  5752  0B12  3080               	movlw	128
  5753  0B13  0275               	subwf	??_abs,w
  5754  0B14  1D03               	skipz
  5755  0B15  2B18               	goto	u1435
  5756  0B16  3001               	movlw	1
  5757  0B17  0273               	subwf	abs@a,w
  5758  0B18                     u1435:
  5759  0B18  1803               	skipnc
  5760  0B19  2B1B               	goto	u1431
  5761  0B1A  2B1C               	goto	u1430
  5762  0B1B                     u1431:
  5763  0B1B  2B28               	goto	l989
  5764  0B1C                     u1430:
  5765  0B1C                     l2042:
  5766  0B1C  0973               	comf	abs@a,w
  5767  0B1D  00F5               	movwf	??_abs
  5768  0B1E  0974               	comf	abs@a+1,w
  5769  0B1F  00F6               	movwf	??_abs+1
  5770  0B20  0AF5               	incf	??_abs,f
  5771  0B21  1903               	skipnz
  5772  0B22  0AF6               	incf	??_abs+1,f
  5773  0B23  0875               	movf	??_abs,w
  5774  0B24  00F3               	movwf	?_abs
  5775  0B25  0876               	movf	??_abs+1,w
  5776  0B26  00F4               	movwf	?_abs+1
  5777  0B27  2B28               	goto	l992
  5778  0B28                     l989:
  5779  0B28                     l992:
  5780  0B28  0008               	return
  5781  0B29                     __end_of_abs:
  5782                           
  5783                           	psect	text20
  5784  01E0                     __ptext20:	
  5785 ;; *************** function ___aomod *****************
  5786 ;; Defined at:
  5787 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  divisor         8    0[BANK0 ] long long 
  5790 ;;  dividend        8    8[BANK0 ] long long 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  sign            1    2[COMMON] unsigned char 
  5793 ;;  counter         1    1[COMMON] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  8    0[BANK0 ] long long 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5803 ;;      Params:         0      16       0       0       0       0
  5804 ;;      Locals:         2       0       0       0       0       0
  5805 ;;      Temps:          1       0       0       0       0       0
  5806 ;;      Totals:         3      16       0       0       0       0
  5807 ;;Total ram usage:       19 bytes
  5808 ;; Hardware stack levels used: 1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_dtoa
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function ___aomod
  5818  01E0                     ___aomod:
  5819  01E0                     l1988:	
  5820                           ;incstack = 0
  5821                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5822                           
  5823  01E0  01F2               	clrf	___aomod@sign
  5824  01E1                     l1990:
  5825  01E1  3028               	movlw	low ___aomod@dividend
  5826  01E2  0086               	movwf	6
  5827  01E3  3000               	movlw	high ___aomod@dividend
  5828  01E4  0087               	movwf	7
  5829  01E5  3F47               	moviw [7]fsr1
  5830  01E6  00F0               	movwf	??___aomod
  5831  01E7  1FF0               	btfss	??___aomod,7
  5832  01E8  29EA               	goto	u1291
  5833  01E9  29EB               	goto	u1290
  5834  01EA                     u1291:
  5835  01EA  2A0C               	goto	l1994
  5836  01EB                     u1290:
  5837  01EB                     l1992:
  5838  01EB  0020               	movlb	0	; select bank0
  5839  01EC  09A8               	comf	___aomod@dividend,f
  5840  01ED  09A9               	comf	___aomod@dividend+1,f
  5841  01EE  09AA               	comf	___aomod@dividend+2,f
  5842  01EF  09AB               	comf	___aomod@dividend+3,f
  5843  01F0  09AC               	comf	___aomod@dividend+4,f
  5844  01F1  09AD               	comf	___aomod@dividend+5,f
  5845  01F2  09AE               	comf	___aomod@dividend+6,f
  5846  01F3  09AF               	comf	___aomod@dividend+7,f
  5847  01F4  0AA8               	incf	___aomod@dividend,f
  5848  01F5  1D03               	skipz
  5849  01F6  2A0A               	goto	u130lld
  5850  01F7  0AA9               	incf	___aomod@dividend+1,f
  5851  01F8  1D03               	skipz
  5852  01F9  2A0A               	goto	u130lld
  5853  01FA  0AAA               	incf	___aomod@dividend+2,f
  5854  01FB  1D03               	skipz
  5855  01FC  2A0A               	goto	u130lld
  5856  01FD  0AAB               	incf	___aomod@dividend+3,f
  5857  01FE  1D03               	skipz
  5858  01FF  2A0A               	goto	u130lld
  5859  0200  0AAC               	incf	___aomod@dividend+4,f
  5860  0201  1D03               	skipz
  5861  0202  2A0A               	goto	u130lld
  5862  0203  0AAD               	incf	___aomod@dividend+5,f
  5863  0204  1D03               	skipz
  5864  0205  2A0A               	goto	u130lld
  5865  0206  0AAE               	incf	___aomod@dividend+6,f
  5866  0207  1D03               	skipz
  5867  0208  2A0A               	goto	u130lld
  5868  0209  0AAF               	incf	___aomod@dividend+7,f
  5869  020A                     u130lld:
  5870  020A  01F2               	clrf	___aomod@sign
  5871  020B  0AF2               	incf	___aomod@sign,f
  5872  020C                     l1994:
  5873  020C  3020               	movlw	low ___aomod@divisor
  5874  020D  0086               	movwf	6
  5875  020E  3000               	movlw	high ___aomod@divisor
  5876  020F  0087               	movwf	7
  5877  0210  3F47               	moviw [7]fsr1
  5878  0211  00F0               	movwf	??___aomod
  5879  0212  1FF0               	btfss	??___aomod,7
  5880  0213  2A15               	goto	u1311
  5881  0214  2A16               	goto	u1310
  5882  0215                     u1311:
  5883  0215  2A35               	goto	l1998
  5884  0216                     u1310:
  5885  0216                     l1996:
  5886  0216  0020               	movlb	0	; select bank0
  5887  0217  09A0               	comf	___aomod@divisor,f
  5888  0218  09A1               	comf	___aomod@divisor+1,f
  5889  0219  09A2               	comf	___aomod@divisor+2,f
  5890  021A  09A3               	comf	___aomod@divisor+3,f
  5891  021B  09A4               	comf	___aomod@divisor+4,f
  5892  021C  09A5               	comf	___aomod@divisor+5,f
  5893  021D  09A6               	comf	___aomod@divisor+6,f
  5894  021E  09A7               	comf	___aomod@divisor+7,f
  5895  021F  0AA0               	incf	___aomod@divisor,f
  5896  0220  1D03               	skipz
  5897  0221  2A35               	goto	u132lld
  5898  0222  0AA1               	incf	___aomod@divisor+1,f
  5899  0223  1D03               	skipz
  5900  0224  2A35               	goto	u132lld
  5901  0225  0AA2               	incf	___aomod@divisor+2,f
  5902  0226  1D03               	skipz
  5903  0227  2A35               	goto	u132lld
  5904  0228  0AA3               	incf	___aomod@divisor+3,f
  5905  0229  1D03               	skipz
  5906  022A  2A35               	goto	u132lld
  5907  022B  0AA4               	incf	___aomod@divisor+4,f
  5908  022C  1D03               	skipz
  5909  022D  2A35               	goto	u132lld
  5910  022E  0AA5               	incf	___aomod@divisor+5,f
  5911  022F  1D03               	skipz
  5912  0230  2A35               	goto	u132lld
  5913  0231  0AA6               	incf	___aomod@divisor+6,f
  5914  0232  1D03               	skipz
  5915  0233  2A35               	goto	u132lld
  5916  0234  0AA7               	incf	___aomod@divisor+7,f
  5917  0235                     u132lld:
  5918  0235                     l1998:
  5919  0235  0020               	movlb	0	; select bank0
  5920  0236  0820               	movf	___aomod@divisor,w
  5921  0237  0421               	iorwf	___aomod@divisor+1,w
  5922  0238  0422               	iorwf	___aomod@divisor+2,w
  5923  0239  0423               	iorwf	___aomod@divisor+3,w
  5924  023A  0424               	iorwf	___aomod@divisor+4,w
  5925  023B  0425               	iorwf	___aomod@divisor+5,w
  5926  023C  0426               	iorwf	___aomod@divisor+6,w
  5927  023D  0427               	iorwf	___aomod@divisor+7,w
  5928  023E  1903               	skipnz
  5929  023F  2A41               	goto	u1331
  5930  0240  2A42               	goto	u1330
  5931  0241                     u1331:
  5932  0241  2A95               	goto	l2014
  5933  0242                     u1330:
  5934  0242                     l2000:
  5935  0242  01F1               	clrf	___aomod@counter
  5936  0243  0AF1               	incf	___aomod@counter,f
  5937  0244  2A51               	goto	l2006
  5938  0245                     l2002:
  5939  0245  35A0               	lslf	___aomod@divisor,f
  5940  0246  0DA1               	rlf	___aomod@divisor+1,f
  5941  0247  0DA2               	rlf	___aomod@divisor+2,f
  5942  0248  0DA3               	rlf	___aomod@divisor+3,f
  5943  0249  0DA4               	rlf	___aomod@divisor+4,f
  5944  024A  0DA5               	rlf	___aomod@divisor+5,f
  5945  024B  0DA6               	rlf	___aomod@divisor+6,f
  5946  024C  0DA7               	rlf	___aomod@divisor+7,f
  5947  024D                     l2004:
  5948  024D  3001               	movlw	1
  5949  024E  00F0               	movwf	??___aomod
  5950  024F  0870               	movf	??___aomod,w
  5951  0250  07F1               	addwf	___aomod@counter,f
  5952  0251                     l2006:
  5953  0251  1FA7               	btfss	___aomod@divisor+7,7
  5954  0252  2A54               	goto	u1341
  5955  0253  2A55               	goto	u1340
  5956  0254                     u1341:
  5957  0254  2A45               	goto	l2002
  5958  0255                     u1340:
  5959  0255                     l2008:
  5960  0255  0827               	movf	___aomod@divisor+7,w
  5961  0256  022F               	subwf	___aomod@dividend+7,w
  5962  0257  1D03               	skipz
  5963  0258  2A73               	goto	u1355
  5964  0259  0826               	movf	___aomod@divisor+6,w
  5965  025A  022E               	subwf	___aomod@dividend+6,w
  5966  025B  1D03               	skipz
  5967  025C  2A73               	goto	u1355
  5968  025D  0825               	movf	___aomod@divisor+5,w
  5969  025E  022D               	subwf	___aomod@dividend+5,w
  5970  025F  1D03               	skipz
  5971  0260  2A73               	goto	u1355
  5972  0261  0824               	movf	___aomod@divisor+4,w
  5973  0262  022C               	subwf	___aomod@dividend+4,w
  5974  0263  1D03               	skipz
  5975  0264  2A73               	goto	u1355
  5976  0265  0823               	movf	___aomod@divisor+3,w
  5977  0266  022B               	subwf	___aomod@dividend+3,w
  5978  0267  1D03               	skipz
  5979  0268  2A73               	goto	u1355
  5980  0269  0822               	movf	___aomod@divisor+2,w
  5981  026A  022A               	subwf	___aomod@dividend+2,w
  5982  026B  1D03               	skipz
  5983  026C  2A73               	goto	u1355
  5984  026D  0821               	movf	___aomod@divisor+1,w
  5985  026E  0229               	subwf	___aomod@dividend+1,w
  5986  026F  1D03               	skipz
  5987  0270  2A73               	goto	u1355
  5988  0271  0820               	movf	___aomod@divisor,w
  5989  0272  0228               	subwf	___aomod@dividend,w
  5990  0273                     u1355:
  5991  0273  1C03               	skipc
  5992  0274  2A76               	goto	u1351
  5993  0275  2A77               	goto	u1350
  5994  0276                     u1351:
  5995  0276  2A87               	goto	l2012
  5996  0277                     u1350:
  5997  0277                     l2010:
  5998  0277  0820               	movf	___aomod@divisor,w
  5999  0278  02A8               	subwf	___aomod@dividend,f
  6000  0279  0821               	movf	___aomod@divisor+1,w
  6001  027A  3BA9               	subwfb	___aomod@dividend+1,f
  6002  027B  0822               	movf	___aomod@divisor+2,w
  6003  027C  3BAA               	subwfb	___aomod@dividend+2,f
  6004  027D  0823               	movf	___aomod@divisor+3,w
  6005  027E  3BAB               	subwfb	___aomod@dividend+3,f
  6006  027F  0824               	movf	___aomod@divisor+4,w
  6007  0280  3BAC               	subwfb	___aomod@dividend+4,f
  6008  0281  0825               	movf	___aomod@divisor+5,w
  6009  0282  3BAD               	subwfb	___aomod@dividend+5,f
  6010  0283  0826               	movf	___aomod@divisor+6,w
  6011  0284  3BAE               	subwfb	___aomod@dividend+6,f
  6012  0285  0827               	movf	___aomod@divisor+7,w
  6013  0286  3BAF               	subwfb	___aomod@dividend+7,f
  6014  0287                     l2012:
  6015  0287  36A7               	lsrf	___aomod@divisor+7,f
  6016  0288  0CA6               	rrf	___aomod@divisor+6,f
  6017  0289  0CA5               	rrf	___aomod@divisor+5,f
  6018  028A  0CA4               	rrf	___aomod@divisor+4,f
  6019  028B  0CA3               	rrf	___aomod@divisor+3,f
  6020  028C  0CA2               	rrf	___aomod@divisor+2,f
  6021  028D  0CA1               	rrf	___aomod@divisor+1,f
  6022  028E  0CA0               	rrf	___aomod@divisor,f
  6023  028F  3001               	movlw	1
  6024  0290  02F1               	subwf	___aomod@counter,f
  6025  0291  1D03               	btfss	3,2
  6026  0292  2A94               	goto	u1361
  6027  0293  2A95               	goto	u1360
  6028  0294                     u1361:
  6029  0294  2A55               	goto	l2008
  6030  0295                     u1360:
  6031  0295                     l2014:
  6032  0295  0872               	movf	___aomod@sign,w
  6033  0296  1903               	btfsc	3,2
  6034  0297  2A99               	goto	u1371
  6035  0298  2A9A               	goto	u1370
  6036  0299                     u1371:
  6037  0299  2AB8               	goto	l537
  6038  029A                     u1370:
  6039  029A                     l2016:
  6040  029A  09A8               	comf	___aomod@dividend,f
  6041  029B  09A9               	comf	___aomod@dividend+1,f
  6042  029C  09AA               	comf	___aomod@dividend+2,f
  6043  029D  09AB               	comf	___aomod@dividend+3,f
  6044  029E  09AC               	comf	___aomod@dividend+4,f
  6045  029F  09AD               	comf	___aomod@dividend+5,f
  6046  02A0  09AE               	comf	___aomod@dividend+6,f
  6047  02A1  09AF               	comf	___aomod@dividend+7,f
  6048  02A2  0AA8               	incf	___aomod@dividend,f
  6049  02A3  1D03               	skipz
  6050  02A4  2AB8               	goto	u138lld
  6051  02A5  0AA9               	incf	___aomod@dividend+1,f
  6052  02A6  1D03               	skipz
  6053  02A7  2AB8               	goto	u138lld
  6054  02A8  0AAA               	incf	___aomod@dividend+2,f
  6055  02A9  1D03               	skipz
  6056  02AA  2AB8               	goto	u138lld
  6057  02AB  0AAB               	incf	___aomod@dividend+3,f
  6058  02AC  1D03               	skipz
  6059  02AD  2AB8               	goto	u138lld
  6060  02AE  0AAC               	incf	___aomod@dividend+4,f
  6061  02AF  1D03               	skipz
  6062  02B0  2AB8               	goto	u138lld
  6063  02B1  0AAD               	incf	___aomod@dividend+5,f
  6064  02B2  1D03               	skipz
  6065  02B3  2AB8               	goto	u138lld
  6066  02B4  0AAE               	incf	___aomod@dividend+6,f
  6067  02B5  1D03               	skipz
  6068  02B6  2AB8               	goto	u138lld
  6069  02B7  0AAF               	incf	___aomod@dividend+7,f
  6070  02B8                     u138lld:
  6071  02B8                     l537:
  6072  02B8  0020               	movlb	0	; select bank0
  6073  02B9  0828               	movf	___aomod@dividend,w
  6074  02BA  00A0               	movwf	?___aomod
  6075  02BB  0829               	movf	___aomod@dividend+1,w
  6076  02BC  00A1               	movwf	?___aomod+1
  6077  02BD  082A               	movf	___aomod@dividend+2,w
  6078  02BE  00A2               	movwf	?___aomod+2
  6079  02BF  082B               	movf	___aomod@dividend+3,w
  6080  02C0  00A3               	movwf	?___aomod+3
  6081  02C1  082C               	movf	___aomod@dividend+4,w
  6082  02C2  00A4               	movwf	?___aomod+4
  6083  02C3  082D               	movf	___aomod@dividend+5,w
  6084  02C4  00A5               	movwf	?___aomod+5
  6085  02C5  082E               	movf	___aomod@dividend+6,w
  6086  02C6  00A6               	movwf	?___aomod+6
  6087  02C7  082F               	movf	___aomod@dividend+7,w
  6088  02C8  00A7               	movwf	?___aomod+7
  6089  02C9                     l538:
  6090  02C9  0008               	return
  6091  02CA                     __end_of___aomod:
  6092                           
  6093                           	psect	text21
  6094  03B6                     __ptext21:	
  6095 ;; *************** function ___aodiv *****************
  6096 ;; Defined at:
  6097 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  divisor         8    0[BANK0 ] long long 
  6100 ;;  dividend        8    8[BANK0 ] long long 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  quotient        8    3[COMMON] long long 
  6103 ;;  sign            1    2[COMMON] unsigned char 
  6104 ;;  counter         1    1[COMMON] unsigned char 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  8    0[BANK0 ] long long 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6114 ;;      Params:         0      16       0       0       0       0
  6115 ;;      Locals:        10       0       0       0       0       0
  6116 ;;      Temps:          1       0       0       0       0       0
  6117 ;;      Totals:        11      16       0       0       0       0
  6118 ;;Total ram usage:       27 bytes
  6119 ;; Hardware stack levels used: 1
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_dtoa
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function ___aodiv
  6129  03B6                     ___aodiv:
  6130  03B6                     l1950:	
  6131                           ;incstack = 0
  6132                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6133                           
  6134  03B6  01F2               	clrf	___aodiv@sign
  6135  03B7                     l1952:
  6136  03B7  3020               	movlw	low ___aodiv@divisor
  6137  03B8  0086               	movwf	6
  6138  03B9  3000               	movlw	high ___aodiv@divisor
  6139  03BA  0087               	movwf	7
  6140  03BB  3F47               	moviw [7]fsr1
  6141  03BC  00F0               	movwf	??___aodiv
  6142  03BD  1FF0               	btfss	??___aodiv,7
  6143  03BE  2BC0               	goto	u1181
  6144  03BF  2BC1               	goto	u1180
  6145  03C0                     u1181:
  6146  03C0  2BE2               	goto	l1956
  6147  03C1                     u1180:
  6148  03C1                     l1954:
  6149  03C1  0020               	movlb	0	; select bank0
  6150  03C2  09A0               	comf	___aodiv@divisor,f
  6151  03C3  09A1               	comf	___aodiv@divisor+1,f
  6152  03C4  09A2               	comf	___aodiv@divisor+2,f
  6153  03C5  09A3               	comf	___aodiv@divisor+3,f
  6154  03C6  09A4               	comf	___aodiv@divisor+4,f
  6155  03C7  09A5               	comf	___aodiv@divisor+5,f
  6156  03C8  09A6               	comf	___aodiv@divisor+6,f
  6157  03C9  09A7               	comf	___aodiv@divisor+7,f
  6158  03CA  0AA0               	incf	___aodiv@divisor,f
  6159  03CB  1D03               	skipz
  6160  03CC  2BE0               	goto	u119lld
  6161  03CD  0AA1               	incf	___aodiv@divisor+1,f
  6162  03CE  1D03               	skipz
  6163  03CF  2BE0               	goto	u119lld
  6164  03D0  0AA2               	incf	___aodiv@divisor+2,f
  6165  03D1  1D03               	skipz
  6166  03D2  2BE0               	goto	u119lld
  6167  03D3  0AA3               	incf	___aodiv@divisor+3,f
  6168  03D4  1D03               	skipz
  6169  03D5  2BE0               	goto	u119lld
  6170  03D6  0AA4               	incf	___aodiv@divisor+4,f
  6171  03D7  1D03               	skipz
  6172  03D8  2BE0               	goto	u119lld
  6173  03D9  0AA5               	incf	___aodiv@divisor+5,f
  6174  03DA  1D03               	skipz
  6175  03DB  2BE0               	goto	u119lld
  6176  03DC  0AA6               	incf	___aodiv@divisor+6,f
  6177  03DD  1D03               	skipz
  6178  03DE  2BE0               	goto	u119lld
  6179  03DF  0AA7               	incf	___aodiv@divisor+7,f
  6180  03E0                     u119lld:
  6181  03E0  01F2               	clrf	___aodiv@sign
  6182  03E1  0AF2               	incf	___aodiv@sign,f
  6183  03E2                     l1956:
  6184  03E2  3028               	movlw	low ___aodiv@dividend
  6185  03E3  0086               	movwf	6
  6186  03E4  3000               	movlw	high ___aodiv@dividend
  6187  03E5  0087               	movwf	7
  6188  03E6  3F47               	moviw [7]fsr1
  6189  03E7  00F0               	movwf	??___aodiv
  6190  03E8  1FF0               	btfss	??___aodiv,7
  6191  03E9  2BEB               	goto	u1201
  6192  03EA  2BEC               	goto	u1200
  6193  03EB                     u1201:
  6194  03EB  2C0F               	goto	l1962
  6195  03EC                     u1200:
  6196  03EC                     l1958:
  6197  03EC  0020               	movlb	0	; select bank0
  6198  03ED  09A8               	comf	___aodiv@dividend,f
  6199  03EE  09A9               	comf	___aodiv@dividend+1,f
  6200  03EF  09AA               	comf	___aodiv@dividend+2,f
  6201  03F0  09AB               	comf	___aodiv@dividend+3,f
  6202  03F1  09AC               	comf	___aodiv@dividend+4,f
  6203  03F2  09AD               	comf	___aodiv@dividend+5,f
  6204  03F3  09AE               	comf	___aodiv@dividend+6,f
  6205  03F4  09AF               	comf	___aodiv@dividend+7,f
  6206  03F5  0AA8               	incf	___aodiv@dividend,f
  6207  03F6  1D03               	skipz
  6208  03F7  2C0B               	goto	u121lld
  6209  03F8  0AA9               	incf	___aodiv@dividend+1,f
  6210  03F9  1D03               	skipz
  6211  03FA  2C0B               	goto	u121lld
  6212  03FB  0AAA               	incf	___aodiv@dividend+2,f
  6213  03FC  1D03               	skipz
  6214  03FD  2C0B               	goto	u121lld
  6215  03FE  0AAB               	incf	___aodiv@dividend+3,f
  6216  03FF  1D03               	skipz
  6217  0400  2C0B               	goto	u121lld
  6218  0401  0AAC               	incf	___aodiv@dividend+4,f
  6219  0402  1D03               	skipz
  6220  0403  2C0B               	goto	u121lld
  6221  0404  0AAD               	incf	___aodiv@dividend+5,f
  6222  0405  1D03               	skipz
  6223  0406  2C0B               	goto	u121lld
  6224  0407  0AAE               	incf	___aodiv@dividend+6,f
  6225  0408  1D03               	skipz
  6226  0409  2C0B               	goto	u121lld
  6227  040A  0AAF               	incf	___aodiv@dividend+7,f
  6228  040B                     u121lld:
  6229  040B                     l1960:
  6230  040B  3001               	movlw	1
  6231  040C  00F0               	movwf	??___aodiv
  6232  040D  0870               	movf	??___aodiv,w
  6233  040E  06F2               	xorwf	___aodiv@sign,f
  6234  040F                     l1962:
  6235  040F  3073               	movlw	low ___aodiv@quotient
  6236  0410  0086               	movwf	6
  6237  0411  3000               	movlw	high ___aodiv@quotient
  6238  0412  0087               	movwf	7
  6239  0413  3008               	movlw	8
  6240  0414  00F0               	movwf	??___aodiv
  6241  0415  3000               	movlw	0
  6242  0416                     u1220:
  6243  0416  001E               	movwi fsr1++
  6244  0417  0BF0               	decfsz	??___aodiv,f
  6245  0418  2C16               	goto	u1220
  6246  0419                     l1964:
  6247  0419  0020               	movlb	0	; select bank0
  6248  041A  0820               	movf	___aodiv@divisor,w
  6249  041B  0421               	iorwf	___aodiv@divisor+1,w
  6250  041C  0422               	iorwf	___aodiv@divisor+2,w
  6251  041D  0423               	iorwf	___aodiv@divisor+3,w
  6252  041E  0424               	iorwf	___aodiv@divisor+4,w
  6253  041F  0425               	iorwf	___aodiv@divisor+5,w
  6254  0420  0426               	iorwf	___aodiv@divisor+6,w
  6255  0421  0427               	iorwf	___aodiv@divisor+7,w
  6256  0422  1903               	skipnz
  6257  0423  2C25               	goto	u1231
  6258  0424  2C26               	goto	u1230
  6259  0425                     u1231:
  6260  0425  2C82               	goto	l1984
  6261  0426                     u1230:
  6262  0426                     l1966:
  6263  0426  01F1               	clrf	___aodiv@counter
  6264  0427  0AF1               	incf	___aodiv@counter,f
  6265  0428  2C35               	goto	l1972
  6266  0429                     l1968:
  6267  0429  35A0               	lslf	___aodiv@divisor,f
  6268  042A  0DA1               	rlf	___aodiv@divisor+1,f
  6269  042B  0DA2               	rlf	___aodiv@divisor+2,f
  6270  042C  0DA3               	rlf	___aodiv@divisor+3,f
  6271  042D  0DA4               	rlf	___aodiv@divisor+4,f
  6272  042E  0DA5               	rlf	___aodiv@divisor+5,f
  6273  042F  0DA6               	rlf	___aodiv@divisor+6,f
  6274  0430  0DA7               	rlf	___aodiv@divisor+7,f
  6275  0431                     l1970:
  6276  0431  3001               	movlw	1
  6277  0432  00F0               	movwf	??___aodiv
  6278  0433  0870               	movf	??___aodiv,w
  6279  0434  07F1               	addwf	___aodiv@counter,f
  6280  0435                     l1972:
  6281  0435  1FA7               	btfss	___aodiv@divisor+7,7
  6282  0436  2C38               	goto	u1241
  6283  0437  2C39               	goto	u1240
  6284  0438                     u1241:
  6285  0438  2C29               	goto	l1968
  6286  0439                     u1240:
  6287  0439                     l1974:
  6288  0439  35F3               	lslf	___aodiv@quotient,f
  6289  043A  0DF4               	rlf	___aodiv@quotient+1,f
  6290  043B  0DF5               	rlf	___aodiv@quotient+2,f
  6291  043C  0DF6               	rlf	___aodiv@quotient+3,f
  6292  043D  0DF7               	rlf	___aodiv@quotient+4,f
  6293  043E  0DF8               	rlf	___aodiv@quotient+5,f
  6294  043F  0DF9               	rlf	___aodiv@quotient+6,f
  6295  0440  0DFA               	rlf	___aodiv@quotient+7,f
  6296  0441                     l1976:
  6297  0441  0827               	movf	___aodiv@divisor+7,w
  6298  0442  022F               	subwf	___aodiv@dividend+7,w
  6299  0443  1D03               	skipz
  6300  0444  2C5F               	goto	u1255
  6301  0445  0826               	movf	___aodiv@divisor+6,w
  6302  0446  022E               	subwf	___aodiv@dividend+6,w
  6303  0447  1D03               	skipz
  6304  0448  2C5F               	goto	u1255
  6305  0449  0825               	movf	___aodiv@divisor+5,w
  6306  044A  022D               	subwf	___aodiv@dividend+5,w
  6307  044B  1D03               	skipz
  6308  044C  2C5F               	goto	u1255
  6309  044D  0824               	movf	___aodiv@divisor+4,w
  6310  044E  022C               	subwf	___aodiv@dividend+4,w
  6311  044F  1D03               	skipz
  6312  0450  2C5F               	goto	u1255
  6313  0451  0823               	movf	___aodiv@divisor+3,w
  6314  0452  022B               	subwf	___aodiv@dividend+3,w
  6315  0453  1D03               	skipz
  6316  0454  2C5F               	goto	u1255
  6317  0455  0822               	movf	___aodiv@divisor+2,w
  6318  0456  022A               	subwf	___aodiv@dividend+2,w
  6319  0457  1D03               	skipz
  6320  0458  2C5F               	goto	u1255
  6321  0459  0821               	movf	___aodiv@divisor+1,w
  6322  045A  0229               	subwf	___aodiv@dividend+1,w
  6323  045B  1D03               	skipz
  6324  045C  2C5F               	goto	u1255
  6325  045D  0820               	movf	___aodiv@divisor,w
  6326  045E  0228               	subwf	___aodiv@dividend,w
  6327  045F                     u1255:
  6328  045F  1C03               	skipc
  6329  0460  2C62               	goto	u1251
  6330  0461  2C63               	goto	u1250
  6331  0462                     u1251:
  6332  0462  2C74               	goto	l1982
  6333  0463                     u1250:
  6334  0463                     l1978:
  6335  0463  0820               	movf	___aodiv@divisor,w
  6336  0464  02A8               	subwf	___aodiv@dividend,f
  6337  0465  0821               	movf	___aodiv@divisor+1,w
  6338  0466  3BA9               	subwfb	___aodiv@dividend+1,f
  6339  0467  0822               	movf	___aodiv@divisor+2,w
  6340  0468  3BAA               	subwfb	___aodiv@dividend+2,f
  6341  0469  0823               	movf	___aodiv@divisor+3,w
  6342  046A  3BAB               	subwfb	___aodiv@dividend+3,f
  6343  046B  0824               	movf	___aodiv@divisor+4,w
  6344  046C  3BAC               	subwfb	___aodiv@dividend+4,f
  6345  046D  0825               	movf	___aodiv@divisor+5,w
  6346  046E  3BAD               	subwfb	___aodiv@dividend+5,f
  6347  046F  0826               	movf	___aodiv@divisor+6,w
  6348  0470  3BAE               	subwfb	___aodiv@dividend+6,f
  6349  0471  0827               	movf	___aodiv@divisor+7,w
  6350  0472  3BAF               	subwfb	___aodiv@dividend+7,f
  6351  0473                     l1980:
  6352  0473  1473               	bsf	___aodiv@quotient,0
  6353  0474                     l1982:
  6354  0474  36A7               	lsrf	___aodiv@divisor+7,f
  6355  0475  0CA6               	rrf	___aodiv@divisor+6,f
  6356  0476  0CA5               	rrf	___aodiv@divisor+5,f
  6357  0477  0CA4               	rrf	___aodiv@divisor+4,f
  6358  0478  0CA3               	rrf	___aodiv@divisor+3,f
  6359  0479  0CA2               	rrf	___aodiv@divisor+2,f
  6360  047A  0CA1               	rrf	___aodiv@divisor+1,f
  6361  047B  0CA0               	rrf	___aodiv@divisor,f
  6362  047C  3001               	movlw	1
  6363  047D  02F1               	subwf	___aodiv@counter,f
  6364  047E  1D03               	btfss	3,2
  6365  047F  2C81               	goto	u1261
  6366  0480  2C82               	goto	u1260
  6367  0481                     u1261:
  6368  0481  2C39               	goto	l1974
  6369  0482                     u1260:
  6370  0482                     l1984:
  6371  0482  0872               	movf	___aodiv@sign,w
  6372  0483  1903               	btfsc	3,2
  6373  0484  2C86               	goto	u1271
  6374  0485  2C87               	goto	u1270
  6375  0486                     u1271:
  6376  0486  2CA5               	goto	l524
  6377  0487                     u1270:
  6378  0487                     l1986:
  6379  0487  09F3               	comf	___aodiv@quotient,f
  6380  0488  09F4               	comf	___aodiv@quotient+1,f
  6381  0489  09F5               	comf	___aodiv@quotient+2,f
  6382  048A  09F6               	comf	___aodiv@quotient+3,f
  6383  048B  09F7               	comf	___aodiv@quotient+4,f
  6384  048C  09F8               	comf	___aodiv@quotient+5,f
  6385  048D  09F9               	comf	___aodiv@quotient+6,f
  6386  048E  09FA               	comf	___aodiv@quotient+7,f
  6387  048F  0AF3               	incf	___aodiv@quotient,f
  6388  0490  1D03               	skipz
  6389  0491  2CA5               	goto	u128lld
  6390  0492  0AF4               	incf	___aodiv@quotient+1,f
  6391  0493  1D03               	skipz
  6392  0494  2CA5               	goto	u128lld
  6393  0495  0AF5               	incf	___aodiv@quotient+2,f
  6394  0496  1D03               	skipz
  6395  0497  2CA5               	goto	u128lld
  6396  0498  0AF6               	incf	___aodiv@quotient+3,f
  6397  0499  1D03               	skipz
  6398  049A  2CA5               	goto	u128lld
  6399  049B  0AF7               	incf	___aodiv@quotient+4,f
  6400  049C  1D03               	skipz
  6401  049D  2CA5               	goto	u128lld
  6402  049E  0AF8               	incf	___aodiv@quotient+5,f
  6403  049F  1D03               	skipz
  6404  04A0  2CA5               	goto	u128lld
  6405  04A1  0AF9               	incf	___aodiv@quotient+6,f
  6406  04A2  1D03               	skipz
  6407  04A3  2CA5               	goto	u128lld
  6408  04A4  0AFA               	incf	___aodiv@quotient+7,f
  6409  04A5                     u128lld:
  6410  04A5                     l524:
  6411  04A5  0873               	movf	___aodiv@quotient,w
  6412  04A6  0020               	movlb	0	; select bank0
  6413  04A7  00A0               	movwf	?___aodiv
  6414  04A8  0874               	movf	___aodiv@quotient+1,w
  6415  04A9  00A1               	movwf	?___aodiv+1
  6416  04AA  0875               	movf	___aodiv@quotient+2,w
  6417  04AB  00A2               	movwf	?___aodiv+2
  6418  04AC  0876               	movf	___aodiv@quotient+3,w
  6419  04AD  00A3               	movwf	?___aodiv+3
  6420  04AE  0877               	movf	___aodiv@quotient+4,w
  6421  04AF  00A4               	movwf	?___aodiv+4
  6422  04B0  0878               	movf	___aodiv@quotient+5,w
  6423  04B1  00A5               	movwf	?___aodiv+5
  6424  04B2  0879               	movf	___aodiv@quotient+6,w
  6425  04B3  00A6               	movwf	?___aodiv+6
  6426  04B4  087A               	movf	___aodiv@quotient+7,w
  6427  04B5  00A7               	movwf	?___aodiv+7
  6428  04B6                     l525:
  6429  04B6  0008               	return
  6430  04B7                     __end_of___aodiv:
  6431                           
  6432                           	psect	text22
  6433  0060                     __ptext22:	
  6434 ;; *************** function _atoi *****************
  6435 ;; Defined at:
  6436 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  s               2    6[COMMON] PTR const unsigned char 
  6439 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  6440 ;;		 -> STR_2(18), STR_1(18), 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  n               2    7[BANK0 ] int 
  6443 ;;  neg             2    0[BANK0 ] int 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2    6[COMMON] int 
  6446 ;; Registers used:
  6447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6453 ;;      Params:         2       0       0       0       0       0
  6454 ;;      Locals:         0       9       0       0       0       0
  6455 ;;      Temps:          4       0       0       0       0       0
  6456 ;;      Totals:         6       9       0       0       0       0
  6457 ;;Total ram usage:       15 bytes
  6458 ;; Hardware stack levels used: 1
  6459 ;; Hardware stack levels required when called: 1
  6460 ;; This function calls:
  6461 ;;		___wmul
  6462 ;;		_isdigit
  6463 ;;		_isspace
  6464 ;; This function is called by:
  6465 ;;		_vfpfcnvrt
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           
  6470                           ;psect for function _atoi
  6471  0060                     _atoi:
  6472  0060                     l2122:	
  6473                           ;incstack = 0
  6474                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6475                           
  6476  0060  0020               	movlb	0	; select bank0
  6477  0061  01A7               	clrf	atoi@n
  6478  0062  01A8               	clrf	atoi@n+1
  6479  0063  01A0               	clrf	atoi@neg
  6480  0064  01A1               	clrf	atoi@neg+1
  6481  0065  286A               	goto	l2126
  6482  0066                     l2124:
  6483  0066  3001               	movlw	1
  6484  0067  07F6               	addwf	atoi@s,f
  6485  0068  3000               	movlw	0
  6486  0069  3DF7               	addwfc	atoi@s+1,f
  6487  006A                     l2126:
  6488  006A  01A6               	clrf	_atoi$1065
  6489  006B  0AA6               	incf	_atoi$1065,f
  6490  006C                     l2128:
  6491  006C  0876               	movf	atoi@s,w
  6492  006D  0084               	movwf	4
  6493  006E  0877               	movf	atoi@s+1,w
  6494  006F  0085               	movwf	5
  6495  0070  0012               	moviw fsr0++
  6496  0071  3A20               	xorlw	32
  6497  0072  1903               	btfsc	3,2
  6498  0073  2875               	goto	u1641
  6499  0074  2876               	goto	u1640
  6500  0075                     u1641:
  6501  0075  288B               	goto	l2134
  6502  0076                     u1640:
  6503  0076                     l2130:
  6504  0076  0876               	movf	atoi@s,w
  6505  0077  0084               	movwf	4
  6506  0078  0877               	movf	atoi@s+1,w
  6507  0079  0085               	movwf	5
  6508  007A  0800               	movf	0,w	;code access
  6509  007B  3EF7               	addlw	247
  6510  007C  00F8               	movwf	??_atoi
  6511  007D  30FF               	movlw	255
  6512  007E  1803               	skipnc
  6513  007F  3000               	movlw	0
  6514  0080  00F9               	movwf	??_atoi+1
  6515  0081  3000               	movlw	0
  6516  0082  0279               	subwf	??_atoi+1,w
  6517  0083  3005               	movlw	5
  6518  0084  1903               	skipnz
  6519  0085  0278               	subwf	??_atoi,w
  6520  0086  1C03               	skipc
  6521  0087  2889               	goto	u1651
  6522  0088  288A               	goto	u1650
  6523  0089                     u1651:
  6524  0089  288B               	goto	l2134
  6525  008A                     u1650:
  6526  008A                     l2132:
  6527  008A  01A6               	clrf	_atoi$1065
  6528  008B                     l2134:
  6529  008B  0826               	movf	_atoi$1065,w
  6530  008C  00F8               	movwf	??_atoi
  6531  008D  01F9               	clrf	??_atoi+1
  6532  008E  0878               	movf	??_atoi,w
  6533  008F  00A2               	movwf	_atoi$1064
  6534  0090  0879               	movf	??_atoi+1,w
  6535  0091  00A3               	movwf	_atoi$1064+1
  6536  0092                     l2138:
  6537  0092  0822               	movf	_atoi$1064,w
  6538  0093  0423               	iorwf	_atoi$1064+1,w
  6539  0094  1D03               	btfss	3,2
  6540  0095  2897               	goto	u1661
  6541  0096  2898               	goto	u1660
  6542  0097                     u1661:
  6543  0097  2866               	goto	l2124
  6544  0098                     u1660:
  6545  0098  28A2               	goto	l2142
  6546  0099                     l2140:
  6547  0099  3001               	movlw	1
  6548  009A  00A0               	movwf	atoi@neg
  6549  009B  3000               	movlw	0
  6550  009C  00A1               	movwf	atoi@neg+1
  6551  009D                     l1010:
  6552  009D  3001               	movlw	1
  6553  009E  07F6               	addwf	atoi@s,f
  6554  009F  3000               	movlw	0
  6555  00A0  3DF7               	addwfc	atoi@s+1,f
  6556  00A1  28D6               	goto	l2148
  6557  00A2                     l2142:
  6558  00A2  0876               	movf	atoi@s,w
  6559  00A3  0084               	movwf	4
  6560  00A4  0877               	movf	atoi@s+1,w
  6561  00A5  0085               	movwf	5
  6562  00A6  0800               	movf	0,w	;code access
  6563  00A7  00F8               	movwf	??_atoi
  6564  00A8  01F9               	clrf	??_atoi+1
  6565                           
  6566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6567                           ; Switch size 1, requested type "simple"
  6568                           ; Number of cases is 1, Range of values is 0 to 0
  6569                           ; switch strategies available:
  6570                           ; Name         Instructions Cycles
  6571                           ; simple_byte            4     3 (average)
  6572                           ; direct_byte            8     6 (fixed)
  6573                           ; jumptable            260     6 (fixed)
  6574                           ;	Chosen strategy is simple_byte
  6575  00A9  0879               	movf	??_atoi+1,w
  6576  00AA  3A00               	xorlw	0	; case 0
  6577  00AB  1903               	skipnz
  6578  00AC  28AE               	goto	l2690
  6579  00AD  28D6               	goto	l2148
  6580  00AE                     l2690:
  6581                           
  6582                           ; Switch size 1, requested type "simple"
  6583                           ; Number of cases is 2, Range of values is 43 to 45
  6584                           ; switch strategies available:
  6585                           ; Name         Instructions Cycles
  6586                           ; simple_byte            7     4 (average)
  6587                           ; direct_byte           15     9 (fixed)
  6588                           ; jumptable            263     9 (fixed)
  6589                           ;	Chosen strategy is simple_byte
  6590  00AE  0878               	movf	??_atoi,w
  6591  00AF  3A2B               	xorlw	43	; case 43
  6592  00B0  1903               	skipnz
  6593  00B1  289D               	goto	l1010
  6594  00B2  3A06               	xorlw	6	; case 45
  6595  00B3  1903               	skipnz
  6596  00B4  2899               	goto	l2140
  6597  00B5  28D6               	goto	l2148
  6598  00B6                     l2144:
  6599  00B6  0876               	movf	atoi@s,w
  6600  00B7  0084               	movwf	4
  6601  00B8  0877               	movf	atoi@s+1,w
  6602  00B9  0085               	movwf	5
  6603  00BA  0800               	movf	0,w	;code access
  6604  00BB  00F8               	movwf	??_atoi
  6605  00BC  0828               	movf	atoi@n+1,w
  6606  00BD  00F1               	movwf	___wmul@multiplier+1
  6607  00BE  0827               	movf	atoi@n,w
  6608  00BF  00F0               	movwf	___wmul@multiplier
  6609  00C0  300A               	movlw	10
  6610  00C1  00F2               	movwf	___wmul@multiplicand
  6611  00C2  3000               	movlw	0
  6612  00C3  00F3               	movwf	___wmul@multiplicand+1
  6613  00C4  318B  2360  3180   	fcall	___wmul
  6614  00C7  0871               	movf	?___wmul+1,w
  6615  00C8  00FA               	movwf	??_atoi+2
  6616  00C9  0878               	movf	??_atoi,w
  6617  00CA  0270               	subwf	?___wmul,w
  6618  00CB  00F9               	movwf	??_atoi+1
  6619  00CC  1C03               	skipc
  6620  00CD  03FA               	decf	??_atoi+2,f
  6621  00CE  0879               	movf	??_atoi+1,w
  6622  00CF  3E30               	addlw	48
  6623  00D0  0020               	movlb	0	; select bank0
  6624  00D1  00A7               	movwf	atoi@n
  6625  00D2  3000               	movlw	0
  6626  00D3  3D7A               	addwfc	??_atoi+2,w
  6627  00D4  00A8               	movwf	atoi@n+1
  6628  00D5  289D               	goto	l1010
  6629  00D6                     l2148:
  6630  00D6  0876               	movf	atoi@s,w
  6631  00D7  0084               	movwf	4
  6632  00D8  0877               	movf	atoi@s+1,w
  6633  00D9  0085               	movwf	5
  6634  00DA  0800               	movf	0,w	;code access
  6635  00DB  3ED0               	addlw	208
  6636  00DC  00F8               	movwf	??_atoi
  6637  00DD  30FF               	movlw	255
  6638  00DE  1803               	skipnc
  6639  00DF  3000               	movlw	0
  6640  00E0  00F9               	movwf	??_atoi+1
  6641  00E1  3000               	movlw	0
  6642  00E2  0279               	subwf	??_atoi+1,w
  6643  00E3  300A               	movlw	10
  6644  00E4  1903               	skipnz
  6645  00E5  0278               	subwf	??_atoi,w
  6646  00E6  1C03               	skipc
  6647  00E7  28E9               	goto	u1671
  6648  00E8  28EB               	goto	u1670
  6649  00E9                     u1671:
  6650  00E9  3001               	movlw	1
  6651  00EA  28EC               	goto	u1680
  6652  00EB                     u1670:
  6653  00EB  3000               	movlw	0
  6654  00EC                     u1680:
  6655  00EC  00FA               	movwf	??_atoi+2
  6656  00ED  01FB               	clrf	??_atoi+3
  6657  00EE  087A               	movf	??_atoi+2,w
  6658  00EF  00A4               	movwf	_atoi$1066
  6659  00F0  087B               	movf	??_atoi+3,w
  6660  00F1  00A5               	movwf	_atoi$1066+1
  6661  00F2                     l2152:
  6662  00F2  0824               	movf	_atoi$1066,w
  6663  00F3  0425               	iorwf	_atoi$1066+1,w
  6664  00F4  1D03               	btfss	3,2
  6665  00F5  28F7               	goto	u1691
  6666  00F6  28F8               	goto	u1690
  6667  00F7                     u1691:
  6668  00F7  28B6               	goto	l2144
  6669  00F8                     u1690:
  6670  00F8                     l2154:
  6671  00F8  0820               	movf	atoi@neg,w
  6672  00F9  0421               	iorwf	atoi@neg+1,w
  6673  00FA  1D03               	btfss	3,2
  6674  00FB  28FD               	goto	u1701
  6675  00FC  28FE               	goto	u1700
  6676  00FD                     u1701:
  6677  00FD  290A               	goto	l2158
  6678  00FE                     u1700:
  6679  00FE                     l2156:
  6680  00FE  0927               	comf	atoi@n,w
  6681  00FF  00F8               	movwf	??_atoi
  6682  0100  0928               	comf	atoi@n+1,w
  6683  0101  00F9               	movwf	??_atoi+1
  6684  0102  0AF8               	incf	??_atoi,f
  6685  0103  1903               	skipnz
  6686  0104  0AF9               	incf	??_atoi+1,f
  6687  0105  0878               	movf	??_atoi,w
  6688  0106  00F6               	movwf	?_atoi
  6689  0107  0879               	movf	??_atoi+1,w
  6690  0108  00F7               	movwf	?_atoi+1
  6691  0109  290E               	goto	l1023
  6692  010A                     l2158:
  6693  010A  0828               	movf	atoi@n+1,w
  6694  010B  00F7               	movwf	?_atoi+1
  6695  010C  0827               	movf	atoi@n,w
  6696  010D  00F6               	movwf	?_atoi
  6697  010E                     l1023:
  6698  010E  0008               	return
  6699  010F                     __end_of_atoi:
  6700                           
  6701                           	psect	text23
  6702  0B7F                     __ptext23:	
  6703 ;; *************** function _isspace *****************
  6704 ;; Defined at:
  6705 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  c               2    0[COMMON] int 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  2    0[COMMON] int 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6719 ;;      Params:         2       0       0       0       0       0
  6720 ;;      Locals:         1       0       0       0       0       0
  6721 ;;      Temps:          2       0       0       0       0       0
  6722 ;;      Totals:         5       0       0       0       0       0
  6723 ;;Total ram usage:        5 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; This function calls:
  6726 ;;		Nothing
  6727 ;; This function is called by:
  6728 ;;		_atoi
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           
  6733                           ;psect for function _isspace
  6734  0B7F                     _isspace:
  6735  0B7F                     l2048:	
  6736                           ;incstack = 0
  6737                           ; Regs used in _isspace: [wreg+status,2+status,0]
  6738                           
  6739  0B7F  01F4               	clrf	_isspace$1082
  6740  0B80  0AF4               	incf	_isspace$1082,f
  6741  0B81                     l2050:
  6742  0B81  3020               	movlw	32
  6743  0B82  0670               	xorwf	isspace@c,w
  6744  0B83  0471               	iorwf	isspace@c+1,w
  6745  0B84  1903               	btfsc	3,2
  6746  0B85  2B87               	goto	u1461
  6747  0B86  2B88               	goto	u1460
  6748  0B87                     u1461:
  6749  0B87  2B98               	goto	l2056
  6750  0B88                     u1460:
  6751  0B88                     l2052:
  6752  0B88  0870               	movf	isspace@c,w
  6753  0B89  3EF7               	addlw	247
  6754  0B8A  00F2               	movwf	??_isspace
  6755  0B8B  30FF               	movlw	255
  6756  0B8C  3D71               	addwfc	isspace@c+1,w
  6757  0B8D  00F3               	movwf	??_isspace+1
  6758  0B8E  3000               	movlw	0
  6759  0B8F  0273               	subwf	??_isspace+1,w
  6760  0B90  3005               	movlw	5
  6761  0B91  1903               	skipnz
  6762  0B92  0272               	subwf	??_isspace,w
  6763  0B93  1C03               	skipc
  6764  0B94  2B96               	goto	u1471
  6765  0B95  2B97               	goto	u1470
  6766  0B96                     u1471:
  6767  0B96  2B98               	goto	l2056
  6768  0B97                     u1470:
  6769  0B97                     l2054:
  6770  0B97  01F4               	clrf	_isspace$1082
  6771  0B98                     l2056:
  6772  0B98  0874               	movf	_isspace$1082,w
  6773  0B99  00F2               	movwf	??_isspace
  6774  0B9A  01F3               	clrf	??_isspace+1
  6775  0B9B  0872               	movf	??_isspace,w
  6776  0B9C  00F0               	movwf	?_isspace
  6777  0B9D  0873               	movf	??_isspace+1,w
  6778  0B9E  00F1               	movwf	?_isspace+1
  6779  0B9F                     l1034:
  6780  0B9F  0008               	return
  6781  0BA0                     __end_of_isspace:
  6782                           
  6783                           	psect	text24
  6784  0AF7                     __ptext24:	
  6785 ;; *************** function _isdigit *****************
  6786 ;; Defined at:
  6787 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  c               2    0[COMMON] int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  2    0[COMMON] int 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6801 ;;      Params:         2       0       0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0
  6803 ;;      Temps:          4       0       0       0       0       0
  6804 ;;      Totals:         6       0       0       0       0       0
  6805 ;;Total ram usage:        6 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_vfpfcnvrt
  6811 ;;		_atoi
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           
  6816                           ;psect for function _isdigit
  6817  0AF7                     _isdigit:
  6818  0AF7                     l2044:	
  6819                           ;incstack = 0
  6820                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6821                           
  6822  0AF7  0870               	movf	isdigit@c,w
  6823  0AF8  3ED0               	addlw	208
  6824  0AF9  00F2               	movwf	??_isdigit
  6825  0AFA  30FF               	movlw	255
  6826  0AFB  3D71               	addwfc	isdigit@c+1,w
  6827  0AFC  00F3               	movwf	??_isdigit+1
  6828  0AFD  3000               	movlw	0
  6829  0AFE  0273               	subwf	??_isdigit+1,w
  6830  0AFF  300A               	movlw	10
  6831  0B00  1903               	skipnz
  6832  0B01  0272               	subwf	??_isdigit,w
  6833  0B02  1C03               	skipc
  6834  0B03  2B05               	goto	u1441
  6835  0B04  2B07               	goto	u1440
  6836  0B05                     u1441:
  6837  0B05  3001               	movlw	1
  6838  0B06  2B08               	goto	u1450
  6839  0B07                     u1440:
  6840  0B07  3000               	movlw	0
  6841  0B08                     u1450:
  6842  0B08  00F4               	movwf	??_isdigit+2
  6843  0B09  01F5               	clrf	??_isdigit+3
  6844  0B0A  0874               	movf	??_isdigit+2,w
  6845  0B0B  00F0               	movwf	?_isdigit
  6846  0B0C  0875               	movf	??_isdigit+3,w
  6847  0B0D  00F1               	movwf	?_isdigit+1
  6848  0B0E                     l1026:
  6849  0B0E  0008               	return
  6850  0B0F                     __end_of_isdigit:
  6851                           
  6852                           	psect	text25
  6853  0BE8                     __ptext25:	
  6854 ;; *************** function _lcd_clear *****************
  6855 ;; Defined at:
  6856 ;;		line 119 in file "lcd_lib.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;		None
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  col             1    7[BANK0 ] unsigned char 
  6861 ;;  row             1    6[BANK0 ] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6871 ;;      Params:         0       0       0       0       0       0
  6872 ;;      Locals:         0       2       0       0       0       0
  6873 ;;      Temps:          1       0       0       0       0       0
  6874 ;;      Totals:         1       2       0       0       0       0
  6875 ;;Total ram usage:        3 bytes
  6876 ;; Hardware stack levels used: 1
  6877 ;; Hardware stack levels required when called: 5
  6878 ;; This function calls:
  6879 ;;		_lcd_print
  6880 ;;		_lcd_set_cursor
  6881 ;; This function is called by:
  6882 ;;		_print_train
  6883 ;;		_print_remaing
  6884 ;;		_print_money
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           
  6889                           ;psect for function _lcd_clear
  6890  0BE8                     _lcd_clear:
  6891  0BE8                     l2362:	
  6892                           ;incstack = 0
  6893                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6894                           
  6895                           
  6896                           ;lcd_lib.c: 120:     for(uint8_t row = 0; row < 2; row++){
  6897  0BE8  0020               	movlb	0	; select bank0
  6898  0BE9  01A6               	clrf	lcd_clear@row
  6899  0BEA                     l2368:
  6900                           
  6901                           ;lcd_lib.c: 121:         for(uint8_t col = 0; col < 16; col++){
  6902  0BEA  01A7               	clrf	lcd_clear@col
  6903  0BEB                     l2374:
  6904                           
  6905                           ;lcd_lib.c: 122:             lcd_set_cursor(col, row);
  6906  0BEB  0826               	movf	lcd_clear@row,w
  6907  0BEC  00FC               	movwf	??_lcd_clear
  6908  0BED  087C               	movf	??_lcd_clear,w
  6909  0BEE  00F8               	movwf	lcd_set_cursor@row
  6910  0BEF  0827               	movf	lcd_clear@col,w
  6911  0BF0  318C  2439  318B   	fcall	_lcd_set_cursor
  6912  0BF3                     l2376:
  6913                           
  6914                           ;lcd_lib.c: 123:             lcd_print(" ");
  6915  0BF3  3040               	movlw	low (STR_7| (0+32768))
  6916  0BF4  00F8               	movwf	lcd_print@str
  6917  0BF5  3088               	movlw	high (STR_7| (0+32768))
  6918  0BF6  00F9               	movwf	lcd_print@str+1
  6919  0BF7  318B  2343  318B   	fcall	_lcd_print
  6920  0BFA                     l2378:
  6921                           
  6922                           ;lcd_lib.c: 124:         }
  6923  0BFA  3001               	movlw	1
  6924  0BFB  00FC               	movwf	??_lcd_clear
  6925  0BFC  087C               	movf	??_lcd_clear,w
  6926  0BFD  0020               	movlb	0	; select bank0
  6927  0BFE  07A7               	addwf	lcd_clear@col,f
  6928  0BFF                     l2380:
  6929  0BFF  3010               	movlw	16
  6930  0C00  0227               	subwf	lcd_clear@col,w
  6931  0C01  1C03               	skipc
  6932  0C02  2C04               	goto	u1911
  6933  0C03  2C05               	goto	u1910
  6934  0C04                     u1911:
  6935  0C04  2BEB               	goto	l2374
  6936  0C05                     u1910:
  6937  0C05                     l2382:
  6938                           
  6939                           ;lcd_lib.c: 125:     }
  6940  0C05  3001               	movlw	1
  6941  0C06  00FC               	movwf	??_lcd_clear
  6942  0C07  087C               	movf	??_lcd_clear,w
  6943  0C08  07A6               	addwf	lcd_clear@row,f
  6944  0C09                     l2384:
  6945  0C09  3002               	movlw	2
  6946  0C0A  0226               	subwf	lcd_clear@row,w
  6947  0C0B  1C03               	skipc
  6948  0C0C  2C0E               	goto	u1921
  6949  0C0D  2C0F               	goto	u1920
  6950  0C0E                     u1921:
  6951  0C0E  2BEA               	goto	l2368
  6952  0C0F                     u1920:
  6953  0C0F                     l207:
  6954  0C0F  0008               	return
  6955  0C10                     __end_of_lcd_clear:
  6956                           
  6957                           	psect	text26
  6958  0C39                     __ptext26:	
  6959 ;; *************** function _lcd_set_cursor *****************
  6960 ;; Defined at:
  6961 ;;		line 128 in file "lcd_lib.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  col             1    wreg     unsigned char 
  6964 ;;  row             1    8[COMMON] unsigned char 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  col             1    4[BANK0 ] unsigned char 
  6967 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  6968 ;;  cmd             1    5[BANK0 ] unsigned char 
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  1    wreg      void 
  6971 ;; Registers used:
  6972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6978 ;;      Params:         1       0       0       0       0       0
  6979 ;;      Locals:         0       6       0       0       0       0
  6980 ;;      Temps:          1       0       0       0       0       0
  6981 ;;      Totals:         2       6       0       0       0       0
  6982 ;;Total ram usage:        8 bytes
  6983 ;; Hardware stack levels used: 1
  6984 ;; Hardware stack levels required when called: 4
  6985 ;; This function calls:
  6986 ;;		_command
  6987 ;; This function is called by:
  6988 ;;		_main
  6989 ;;		_print_train
  6990 ;;		_print_remaing
  6991 ;;		_print_money
  6992 ;;		_lcd_clear
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           
  6997                           ;psect for function _lcd_set_cursor
  6998  0C39                     _lcd_set_cursor:
  6999                           
  7000                           ;incstack = 0
  7001                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7002                           ;lcd_set_cursor@col stored from wreg
  7003  0C39  0020               	movlb	0	; select bank0
  7004  0C3A  00A4               	movwf	lcd_set_cursor@col
  7005  0C3B                     l2290:
  7006                           
  7007                           ;lcd_lib.c: 129:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  7008  0C3B  0021               	movlb	1	; select bank1
  7009  0C3C  0863               	movf	(lcd_set_cursor@F2502+3)^(0+128),w
  7010  0C3D  0020               	movlb	0	; select bank0
  7011  0C3E  00A3               	movwf	lcd_set_cursor@row_offsets+3
  7012  0C3F  0021               	movlb	1	; select bank1
  7013  0C40  0862               	movf	(lcd_set_cursor@F2502+2)^(0+128),w
  7014  0C41  0020               	movlb	0	; select bank0
  7015  0C42  00A2               	movwf	lcd_set_cursor@row_offsets+2
  7016  0C43  0021               	movlb	1	; select bank1
  7017  0C44  0861               	movf	(lcd_set_cursor@F2502+1)^(0+128),w
  7018  0C45  0020               	movlb	0	; select bank0
  7019  0C46  00A1               	movwf	lcd_set_cursor@row_offsets+1
  7020  0C47  0021               	movlb	1	; select bank1
  7021  0C48  0860               	movf	lcd_set_cursor@F2502^(0+128),w
  7022  0C49  0020               	movlb	0	; select bank0
  7023  0C4A  00A0               	movwf	lcd_set_cursor@row_offsets
  7024                           
  7025                           ;lcd_lib.c: 130:     if(row > 2){
  7026  0C4B  3003               	movlw	3
  7027  0C4C  0278               	subwf	lcd_set_cursor@row,w
  7028  0C4D  1C03               	skipc
  7029  0C4E  2C50               	goto	u1851
  7030  0C4F  2C51               	goto	u1850
  7031  0C50                     u1851:
  7032  0C50  2C53               	goto	l2294
  7033  0C51                     u1850:
  7034  0C51                     l2292:
  7035                           
  7036                           ;lcd_lib.c: 131:         row = 2 - 1;
  7037  0C51  01F8               	clrf	lcd_set_cursor@row
  7038  0C52  0AF8               	incf	lcd_set_cursor@row,f
  7039  0C53                     l2294:
  7040                           
  7041                           ;lcd_lib.c: 133:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
  7042  0C53  0878               	movf	lcd_set_cursor@row,w
  7043  0C54  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  7044  0C55  0086               	movwf	6
  7045  0C56  0187               	clrf	7
  7046  0C57  0801               	movf	1,w
  7047  0C58  0724               	addwf	lcd_set_cursor@col,w
  7048  0C59  3880               	iorlw	128
  7049  0C5A  00F9               	movwf	??_lcd_set_cursor
  7050  0C5B  0879               	movf	??_lcd_set_cursor,w
  7051  0C5C  00A5               	movwf	lcd_set_cursor@cmd
  7052  0C5D                     l2296:
  7053                           
  7054                           ;lcd_lib.c: 134:     command(cmd, 0);
  7055  0C5D  01F2               	clrf	command@mode
  7056  0C5E  0825               	movf	lcd_set_cursor@cmd,w
  7057  0C5F  318C  2494  318C   	fcall	_command
  7058  0C62                     l213:
  7059  0C62  0008               	return
  7060  0C63                     __end_of_lcd_set_cursor:
  7061                           
  7062                           	psect	text27
  7063  0B43                     __ptext27:	
  7064 ;; *************** function _lcd_print *****************
  7065 ;; Defined at:
  7066 ;;		line 137 in file "lcd_lib.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  str             2    8[COMMON] PTR unsigned char 
  7069 ;;		 -> STR_7(2), line(16), 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  cmd             1   11[COMMON] unsigned char 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7081 ;;      Params:         2       0       0       0       0       0
  7082 ;;      Locals:         1       0       0       0       0       0
  7083 ;;      Temps:          1       0       0       0       0       0
  7084 ;;      Totals:         4       0       0       0       0       0
  7085 ;;Total ram usage:        4 bytes
  7086 ;; Hardware stack levels used: 1
  7087 ;; Hardware stack levels required when called: 4
  7088 ;; This function calls:
  7089 ;;		_command
  7090 ;; This function is called by:
  7091 ;;		_print_train
  7092 ;;		_print_remaing
  7093 ;;		_print_money
  7094 ;;		_lcd_clear
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           
  7099                           ;psect for function _lcd_print
  7100  0B43                     _lcd_print:
  7101  0B43                     l2298:	
  7102                           ;incstack = 0
  7103                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7104                           
  7105                           
  7106                           ;lcd_lib.c: 138:     while (*str) {
  7107  0B43  2B56               	goto	l2306
  7108  0B44                     l2300:
  7109                           
  7110                           ;lcd_lib.c: 139:         uint8_t cmd = *str++;
  7111  0B44  0878               	movf	lcd_print@str,w
  7112  0B45  0084               	movwf	4
  7113  0B46  0879               	movf	lcd_print@str+1,w
  7114  0B47  0085               	movwf	5
  7115  0B48  0800               	movf	0,w	;code access
  7116  0B49  00FA               	movwf	??_lcd_print
  7117  0B4A  087A               	movf	??_lcd_print,w
  7118  0B4B  00FB               	movwf	lcd_print@cmd
  7119  0B4C                     l2302:
  7120  0B4C  3001               	movlw	1
  7121  0B4D  07F8               	addwf	lcd_print@str,f
  7122  0B4E  3000               	movlw	0
  7123  0B4F  3DF9               	addwfc	lcd_print@str+1,f
  7124  0B50                     l2304:
  7125                           
  7126                           ;lcd_lib.c: 140:         command(cmd, 0b00000001);
  7127  0B50  01F2               	clrf	command@mode
  7128  0B51  0AF2               	incf	command@mode,f
  7129  0B52  087B               	movf	lcd_print@cmd,w
  7130  0B53  318C  2494  318B   	fcall	_command
  7131  0B56                     l2306:
  7132                           
  7133                           ;lcd_lib.c: 138:     while (*str) {
  7134  0B56  0878               	movf	lcd_print@str,w
  7135  0B57  0084               	movwf	4
  7136  0B58  0879               	movf	lcd_print@str+1,w
  7137  0B59  0085               	movwf	5
  7138  0B5A  0012               	moviw fsr0++
  7139  0B5B  1D03               	btfss	3,2
  7140  0B5C  2B5E               	goto	u1861
  7141  0B5D  2B5F               	goto	u1860
  7142  0B5E                     u1861:
  7143  0B5E  2B44               	goto	l2300
  7144  0B5F                     u1860:
  7145  0B5F                     l219:
  7146  0B5F  0008               	return
  7147  0B60                     __end_of_lcd_print:
  7148                           
  7149                           	psect	text28
  7150  0C94                     __ptext28:	
  7151 ;; *************** function _command *****************
  7152 ;; Defined at:
  7153 ;;		line 144 in file "lcd_lib.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  val             1    wreg     unsigned char 
  7156 ;;  mode            1    2[COMMON] unsigned char 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  val             1    5[COMMON] unsigned char 
  7159 ;;  lownib          1    7[COMMON] unsigned char 
  7160 ;;  highnib         1    6[COMMON] unsigned char 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0, pclath, cstack
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7170 ;;      Params:         1       0       0       0       0       0
  7171 ;;      Locals:         3       0       0       0       0       0
  7172 ;;      Temps:          2       0       0       0       0       0
  7173 ;;      Totals:         6       0       0       0       0       0
  7174 ;;Total ram usage:        6 bytes
  7175 ;; Hardware stack levels used: 1
  7176 ;; Hardware stack levels required when called: 3
  7177 ;; This function calls:
  7178 ;;		_lcd_cmd
  7179 ;; This function is called by:
  7180 ;;		_lcd_set_cursor
  7181 ;;		_lcd_print
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           
  7186                           ;psect for function _command
  7187  0C94                     _command:
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  7191                           ;command@val stored from wreg
  7192  0C94  00F5               	movwf	command@val
  7193  0C95                     l2168:
  7194                           
  7195                           ;lcd_lib.c: 145:     uint8_t highnib = (val & 0xf0) | _backlightval | mode;
  7196  0C95  0875               	movf	command@val,w
  7197  0C96  39F0               	andlw	240
  7198  0C97  0020               	movlb	0	; select bank0
  7199  0C98  046F               	iorwf	__backlightval,w
  7200  0C99  0472               	iorwf	command@mode,w
  7201  0C9A  00F3               	movwf	??_command
  7202  0C9B  0873               	movf	??_command,w
  7203  0C9C  00F6               	movwf	command@highnib
  7204                           
  7205                           ;lcd_lib.c: 146:  uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
  7206  0C9D  0875               	movf	command@val,w
  7207  0C9E  00F3               	movwf	??_command
  7208  0C9F  3003               	movlw	3
  7209  0CA0                     u1715:
  7210  0CA0  35F3               	lslf	??_command,f
  7211  0CA1  3EFF               	addlw	-1
  7212  0CA2  1D03               	skipz
  7213  0CA3  2CA0               	goto	u1715
  7214  0CA4  3573               	lslf	??_command,w
  7215  0CA5  39F0               	andlw	240
  7216  0CA6  046F               	iorwf	__backlightval,w
  7217  0CA7  0472               	iorwf	command@mode,w
  7218  0CA8  00F4               	movwf	??_command+1
  7219  0CA9  0874               	movf	??_command+1,w
  7220  0CAA  00F7               	movwf	command@lownib
  7221  0CAB                     l2170:
  7222                           
  7223                           ;lcd_lib.c: 148:  lcd_cmd(highnib);
  7224  0CAB  0876               	movf	command@highnib,w
  7225  0CAC  318A  228D  318C   	fcall	_lcd_cmd
  7226  0CAF                     l2172:
  7227                           
  7228                           ;lcd_lib.c: 149:     lcd_cmd(highnib | 0b00000100);
  7229  0CAF  0876               	movf	command@highnib,w
  7230  0CB0  3804               	iorlw	4
  7231  0CB1  318A  228D  318C   	fcall	_lcd_cmd
  7232  0CB4                     l2174:
  7233                           
  7234                           ;lcd_lib.c: 150:     lcd_cmd(highnib & ~0b00000100);
  7235  0CB4  0876               	movf	command@highnib,w
  7236  0CB5  39FB               	andlw	251
  7237  0CB6  318A  228D  318C   	fcall	_lcd_cmd
  7238  0CB9                     l2176:
  7239                           
  7240                           ;lcd_lib.c: 152:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7241  0CB9  3042               	movlw	66
  7242  0CBA                     u2037:
  7243  0CBA  0B89               	decfsz	9,f
  7244  0CBB  2CBA               	goto	u2037
  7245  0CBC  3200               	nop2
  7246  0CBD                     l2178:
  7247                           
  7248                           ;lcd_lib.c: 154:  lcd_cmd(lownib);
  7249  0CBD  0877               	movf	command@lownib,w
  7250  0CBE  318A  228D  318C   	fcall	_lcd_cmd
  7251  0CC1                     l2180:
  7252                           
  7253                           ;lcd_lib.c: 155:     lcd_cmd(lownib | 0b00000100);
  7254  0CC1  0877               	movf	command@lownib,w
  7255  0CC2  3804               	iorlw	4
  7256  0CC3  318A  228D  318C   	fcall	_lcd_cmd
  7257  0CC6                     l2182:
  7258                           
  7259                           ;lcd_lib.c: 156:     lcd_cmd(lownib & ~0b00000100);
  7260  0CC6  0877               	movf	command@lownib,w
  7261  0CC7  39FB               	andlw	251
  7262  0CC8  318A  228D  318C   	fcall	_lcd_cmd
  7263  0CCB                     l222:
  7264  0CCB  0008               	return
  7265  0CCC                     __end_of_command:
  7266                           
  7267                           	psect	text29
  7268  02CA                     __ptext29:	
  7269 ;; *************** function _lcd_init *****************
  7270 ;; Defined at:
  7271 ;;		line 27 in file "lcd_lib.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0, pclath, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7285 ;;      Params:         0       0       0       0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0
  7287 ;;      Temps:          2       0       0       0       0       0
  7288 ;;      Totals:         2       0       0       0       0       0
  7289 ;;Total ram usage:        2 bytes
  7290 ;; Hardware stack levels used: 1
  7291 ;; Hardware stack levels required when called: 3
  7292 ;; This function calls:
  7293 ;;		_lcd_cmd
  7294 ;; This function is called by:
  7295 ;;		_main
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _lcd_init
  7301  02CA                     _lcd_init:
  7302  02CA                     l2406:	
  7303                           ;incstack = 0
  7304                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7305                           
  7306                           
  7307                           ;lcd_lib.c: 28:     _delay((unsigned long)((400)*(8000000/4000.0)));
  7308  02CA  3005               	movlw	5
  7309  02CB  00F3               	movwf	??_lcd_init+1
  7310  02CC  300F               	movlw	15
  7311  02CD  00F2               	movwf	??_lcd_init
  7312  02CE  30F1               	movlw	241
  7313  02CF                     u2047:
  7314  02CF  0B89               	decfsz	9,f
  7315  02D0  2ACF               	goto	u2047
  7316  02D1  0BF2               	decfsz	??_lcd_init,f
  7317  02D2  2ACF               	goto	u2047
  7318  02D3  0BF3               	decfsz	??_lcd_init+1,f
  7319  02D4  2ACF               	goto	u2047
  7320  02D5  0000               	nop
  7321  02D6                     l2408:
  7322                           
  7323                           ;lcd_lib.c: 30:     lcd_cmd(0x30);
  7324  02D6  3030               	movlw	48
  7325  02D7  318A  228D  3182   	fcall	_lcd_cmd
  7326  02DA                     l2410:
  7327                           
  7328                           ;lcd_lib.c: 31:     lcd_cmd(0x34);
  7329  02DA  3034               	movlw	52
  7330  02DB  318A  228D  3182   	fcall	_lcd_cmd
  7331  02DE                     l2412:
  7332                           
  7333                           ;lcd_lib.c: 32:     lcd_cmd(0x30);
  7334  02DE  3030               	movlw	48
  7335  02DF  318A  228D  3182   	fcall	_lcd_cmd
  7336  02E2                     l2414:
  7337                           
  7338                           ;lcd_lib.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7339  02E2  300D               	movlw	13
  7340  02E3  00F2               	movwf	??_lcd_init
  7341  02E4  30FC               	movlw	252
  7342  02E5                     u2057:
  7343  02E5  0B89               	decfsz	9,f
  7344  02E6  2AE5               	goto	u2057
  7345  02E7  0BF2               	decfsz	??_lcd_init,f
  7346  02E8  2AE5               	goto	u2057
  7347                           
  7348                           ;lcd_lib.c: 35:     lcd_cmd(0x30);
  7349  02E9  3030               	movlw	48
  7350  02EA  318A  228D  3182   	fcall	_lcd_cmd
  7351                           
  7352                           ;lcd_lib.c: 36:     lcd_cmd(0x34);
  7353  02ED  3034               	movlw	52
  7354  02EE  318A  228D  3182   	fcall	_lcd_cmd
  7355                           
  7356                           ;lcd_lib.c: 37:     lcd_cmd(0x30);
  7357  02F1  3030               	movlw	48
  7358  02F2  318A  228D  3182   	fcall	_lcd_cmd
  7359  02F5                     l2416:
  7360                           
  7361                           ;lcd_lib.c: 38:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7362  02F5  300D               	movlw	13
  7363  02F6  00F2               	movwf	??_lcd_init
  7364  02F7  30FC               	movlw	252
  7365  02F8                     u2067:
  7366  02F8  0B89               	decfsz	9,f
  7367  02F9  2AF8               	goto	u2067
  7368  02FA  0BF2               	decfsz	??_lcd_init,f
  7369  02FB  2AF8               	goto	u2067
  7370  02FC                     l2418:
  7371                           
  7372                           ;lcd_lib.c: 40:     lcd_cmd(0x30);
  7373  02FC  3030               	movlw	48
  7374  02FD  318A  228D  3182   	fcall	_lcd_cmd
  7375  0300                     l2420:
  7376                           
  7377                           ;lcd_lib.c: 41:     lcd_cmd(0x34);
  7378  0300  3034               	movlw	52
  7379  0301  318A  228D  3182   	fcall	_lcd_cmd
  7380  0304                     l2422:
  7381                           
  7382                           ;lcd_lib.c: 42:     lcd_cmd(0x30);
  7383  0304  3030               	movlw	48
  7384  0305  318A  228D  3182   	fcall	_lcd_cmd
  7385                           
  7386                           ;lcd_lib.c: 43:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  7387  0308  30C8               	movlw	200
  7388  0309                     u2077:
  7389  0309  0B89               	decfsz	9,f
  7390  030A  2B09               	goto	u2077
  7391  030B                     l2424:
  7392                           
  7393                           ;lcd_lib.c: 45:     lcd_cmd(0x20);
  7394  030B  3020               	movlw	32
  7395  030C  318A  228D  3182   	fcall	_lcd_cmd
  7396  030F                     l2426:
  7397                           
  7398                           ;lcd_lib.c: 46:     lcd_cmd(0x24);
  7399  030F  3024               	movlw	36
  7400  0310  318A  228D  3182   	fcall	_lcd_cmd
  7401  0313                     l2428:
  7402                           
  7403                           ;lcd_lib.c: 47:     lcd_cmd(0x20);
  7404  0313  3020               	movlw	32
  7405  0314  318A  228D  3182   	fcall	_lcd_cmd
  7406  0317                     l2430:
  7407                           
  7408                           ;lcd_lib.c: 48:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7409  0317  3006               	movlw	6
  7410  0318                     u2087:
  7411  0318  0B89               	decfsz	9,f
  7412  0319  2B18               	goto	u2087
  7413  031A  3200               	nop2
  7414                           
  7415                           ;lcd_lib.c: 51:     lcd_cmd(0x20);
  7416  031B  3020               	movlw	32
  7417  031C  318A  228D  3182   	fcall	_lcd_cmd
  7418                           
  7419                           ;lcd_lib.c: 52:     lcd_cmd(0x24);
  7420  031F  3024               	movlw	36
  7421  0320  318A  228D  3182   	fcall	_lcd_cmd
  7422                           
  7423                           ;lcd_lib.c: 53:     lcd_cmd(0x20);
  7424  0323  3020               	movlw	32
  7425  0324  318A  228D  3182   	fcall	_lcd_cmd
  7426  0327                     l2432:
  7427                           
  7428                           ;lcd_lib.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7429  0327  3042               	movlw	66
  7430  0328                     u2097:
  7431  0328  0B89               	decfsz	9,f
  7432  0329  2B28               	goto	u2097
  7433  032A  3200               	nop2
  7434  032B                     l2434:
  7435                           
  7436                           ;lcd_lib.c: 57:     lcd_cmd(0x80);
  7437  032B  3080               	movlw	128
  7438  032C  318A  228D  3182   	fcall	_lcd_cmd
  7439  032F                     l2436:
  7440                           
  7441                           ;lcd_lib.c: 58:     lcd_cmd(0x84);
  7442  032F  3084               	movlw	132
  7443  0330  318A  228D  3182   	fcall	_lcd_cmd
  7444  0333                     l2438:
  7445                           
  7446                           ;lcd_lib.c: 59:     lcd_cmd(0x80);
  7447  0333  3080               	movlw	128
  7448  0334  318A  228D  3182   	fcall	_lcd_cmd
  7449  0337                     l2440:
  7450                           
  7451                           ;lcd_lib.c: 63:     lcd_cmd(0x00);
  7452  0337  3000               	movlw	0
  7453  0338  318A  228D  3182   	fcall	_lcd_cmd
  7454  033B                     l2442:
  7455                           
  7456                           ;lcd_lib.c: 64:     lcd_cmd(0x04);
  7457  033B  3004               	movlw	4
  7458  033C  318A  228D  3182   	fcall	_lcd_cmd
  7459  033F                     l2444:
  7460                           
  7461                           ;lcd_lib.c: 65:     lcd_cmd(0x00);
  7462  033F  3000               	movlw	0
  7463  0340  318A  228D  3182   	fcall	_lcd_cmd
  7464  0343                     l2446:
  7465                           
  7466                           ;lcd_lib.c: 67:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7467  0343  3042               	movlw	66
  7468  0344                     u2107:
  7469  0344  0B89               	decfsz	9,f
  7470  0345  2B44               	goto	u2107
  7471  0346  3200               	nop2
  7472                           
  7473                           ;lcd_lib.c: 69:     lcd_cmd(0xC0);
  7474  0347  30C0               	movlw	192
  7475  0348  318A  228D  3182   	fcall	_lcd_cmd
  7476                           
  7477                           ;lcd_lib.c: 70:     lcd_cmd(0xC4);
  7478  034B  30C4               	movlw	196
  7479  034C  318A  228D  3182   	fcall	_lcd_cmd
  7480                           
  7481                           ;lcd_lib.c: 71:     lcd_cmd(0xC0);
  7482  034F  30C0               	movlw	192
  7483  0350  318A  228D  3182   	fcall	_lcd_cmd
  7484                           
  7485                           ;lcd_lib.c: 75:     lcd_cmd(0x00);
  7486  0353  3000               	movlw	0
  7487  0354  318A  228D  3182   	fcall	_lcd_cmd
  7488                           
  7489                           ;lcd_lib.c: 76:     lcd_cmd(0x04);
  7490  0357  3004               	movlw	4
  7491  0358  318A  228D  3182   	fcall	_lcd_cmd
  7492                           
  7493                           ;lcd_lib.c: 77:     lcd_cmd(0x00);
  7494  035B  3000               	movlw	0
  7495  035C  318A  228D  3182   	fcall	_lcd_cmd
  7496  035F                     l2448:
  7497                           
  7498                           ;lcd_lib.c: 79:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7499  035F  3042               	movlw	66
  7500  0360                     u2117:
  7501  0360  0B89               	decfsz	9,f
  7502  0361  2B60               	goto	u2117
  7503  0362  3200               	nop2
  7504  0363                     l2450:
  7505                           
  7506                           ;lcd_lib.c: 81:     lcd_cmd(0x10);
  7507  0363  3010               	movlw	16
  7508  0364  318A  228D  3182   	fcall	_lcd_cmd
  7509  0367                     l2452:
  7510                           
  7511                           ;lcd_lib.c: 82:     lcd_cmd(0x14);
  7512  0367  3014               	movlw	20
  7513  0368  318A  228D  3182   	fcall	_lcd_cmd
  7514  036B                     l2454:
  7515                           
  7516                           ;lcd_lib.c: 83:     lcd_cmd(0x10);
  7517  036B  3010               	movlw	16
  7518  036C  318A  228D  3182   	fcall	_lcd_cmd
  7519                           
  7520                           ;lcd_lib.c: 85:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7521  036F  300D               	movlw	13
  7522  0370  00F2               	movwf	??_lcd_init
  7523  0371  30FC               	movlw	252
  7524  0372                     u2127:
  7525  0372  0B89               	decfsz	9,f
  7526  0373  2B72               	goto	u2127
  7527  0374  0BF2               	decfsz	??_lcd_init,f
  7528  0375  2B72               	goto	u2127
  7529  0376                     l2456:
  7530                           
  7531                           ;lcd_lib.c: 88:     lcd_cmd(0x00);
  7532  0376  3000               	movlw	0
  7533  0377  318A  228D  3182   	fcall	_lcd_cmd
  7534  037A                     l2458:
  7535                           
  7536                           ;lcd_lib.c: 89:     lcd_cmd(0x04);
  7537  037A  3004               	movlw	4
  7538  037B  318A  228D  3182   	fcall	_lcd_cmd
  7539  037E                     l2460:
  7540                           
  7541                           ;lcd_lib.c: 90:     lcd_cmd(0x00);
  7542  037E  3000               	movlw	0
  7543  037F  318A  228D  3182   	fcall	_lcd_cmd
  7544  0382                     l2462:
  7545                           
  7546                           ;lcd_lib.c: 92:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7547  0382  3042               	movlw	66
  7548  0383                     u2137:
  7549  0383  0B89               	decfsz	9,f
  7550  0384  2B83               	goto	u2137
  7551  0385  3200               	nop2
  7552                           
  7553                           ;lcd_lib.c: 94:     lcd_cmd(0x60);
  7554  0386  3060               	movlw	96
  7555  0387  318A  228D  3182   	fcall	_lcd_cmd
  7556                           
  7557                           ;lcd_lib.c: 95:     lcd_cmd(0x64);
  7558  038A  3064               	movlw	100
  7559  038B  318A  228D  3182   	fcall	_lcd_cmd
  7560                           
  7561                           ;lcd_lib.c: 96:     lcd_cmd(0x60);
  7562  038E  3060               	movlw	96
  7563  038F  318A  228D  3182   	fcall	_lcd_cmd
  7564                           
  7565                           ;lcd_lib.c: 100:     lcd_cmd(0x00);
  7566  0392  3000               	movlw	0
  7567  0393  318A  228D  3182   	fcall	_lcd_cmd
  7568                           
  7569                           ;lcd_lib.c: 101:     lcd_cmd(0x04);
  7570  0396  3004               	movlw	4
  7571  0397  318A  228D  3182   	fcall	_lcd_cmd
  7572                           
  7573                           ;lcd_lib.c: 102:     lcd_cmd(0x00);
  7574  039A  3000               	movlw	0
  7575  039B  318A  228D  3182   	fcall	_lcd_cmd
  7576  039E                     l2464:
  7577                           
  7578                           ;lcd_lib.c: 104:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7579  039E  3042               	movlw	66
  7580  039F                     u2147:
  7581  039F  0B89               	decfsz	9,f
  7582  03A0  2B9F               	goto	u2147
  7583  03A1  3200               	nop2
  7584  03A2                     l2466:
  7585                           
  7586                           ;lcd_lib.c: 106:     lcd_cmd(0x20);
  7587  03A2  3020               	movlw	32
  7588  03A3  318A  228D  3182   	fcall	_lcd_cmd
  7589  03A6                     l2468:
  7590                           
  7591                           ;lcd_lib.c: 107:     lcd_cmd(0x24);
  7592  03A6  3024               	movlw	36
  7593  03A7  318A  228D  3182   	fcall	_lcd_cmd
  7594  03AA                     l2470:
  7595                           
  7596                           ;lcd_lib.c: 108:     lcd_cmd(0x20);
  7597  03AA  3020               	movlw	32
  7598  03AB  318A  228D  3182   	fcall	_lcd_cmd
  7599                           
  7600                           ;lcd_lib.c: 110:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7601  03AE  3008               	movlw	8
  7602  03AF  00F2               	movwf	??_lcd_init
  7603  03B0  30CA               	movlw	202
  7604  03B1                     u2157:
  7605  03B1  0B89               	decfsz	9,f
  7606  03B2  2BB1               	goto	u2157
  7607  03B3  0BF2               	decfsz	??_lcd_init,f
  7608  03B4  2BB1               	goto	u2157
  7609  03B5                     l197:
  7610  03B5  0008               	return
  7611  03B6                     __end_of_lcd_init:
  7612                           
  7613                           	psect	text30
  7614  0A6F                     __ptext30:	
  7615 ;; *************** function _lcd_backlight *****************
  7616 ;; Defined at:
  7617 ;;		line 113 in file "lcd_lib.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;		None
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  1    wreg      void 
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0, pclath, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7631 ;;      Params:         0       0       0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0
  7633 ;;      Temps:          1       0       0       0       0       0
  7634 ;;      Totals:         1       0       0       0       0       0
  7635 ;;Total ram usage:        1 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; Hardware stack levels required when called: 3
  7638 ;; This function calls:
  7639 ;;		_lcd_cmd
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           
  7646                           ;psect for function _lcd_backlight
  7647  0A6F                     _lcd_backlight:
  7648  0A6F                     l2472:	
  7649                           ;incstack = 0
  7650                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  7651                           
  7652                           
  7653                           ;lcd_lib.c: 114:     lcd_cmd(0x08);
  7654  0A6F  3008               	movlw	8
  7655  0A70  318A  228D  318A   	fcall	_lcd_cmd
  7656  0A73                     l2474:
  7657                           
  7658                           ;lcd_lib.c: 115:     _backlightval = 0x08;
  7659  0A73  3008               	movlw	8
  7660  0A74  00F2               	movwf	??_lcd_backlight
  7661  0A75  0872               	movf	??_lcd_backlight,w
  7662  0A76  0020               	movlb	0	; select bank0
  7663  0A77  00EF               	movwf	__backlightval
  7664  0A78                     l2476:
  7665                           
  7666                           ;lcd_lib.c: 116:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7667  0A78  3006               	movlw	6
  7668  0A79                     u2167:
  7669  0A79  0B89               	decfsz	9,f
  7670  0A7A  2A79               	goto	u2167
  7671  0A7B  3200               	nop2
  7672  0A7C                     l200:
  7673  0A7C  0008               	return
  7674  0A7D                     __end_of_lcd_backlight:
  7675                           
  7676                           	psect	text31
  7677  0A8D                     __ptext31:	
  7678 ;; *************** function _lcd_cmd *****************
  7679 ;; Defined at:
  7680 ;;		line 19 in file "lcd_lib.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  cmd             1    wreg     unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  cmd             1    1[COMMON] unsigned char 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  1    wreg      void 
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0, pclath, cstack
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7694 ;;      Params:         0       0       0       0       0       0
  7695 ;;      Locals:         1       0       0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0
  7697 ;;      Totals:         1       0       0       0       0       0
  7698 ;;Total ram usage:        1 bytes
  7699 ;; Hardware stack levels used: 1
  7700 ;; Hardware stack levels required when called: 2
  7701 ;; This function calls:
  7702 ;;		_i2c_start
  7703 ;;		_i2c_stop
  7704 ;;		_i2c_write
  7705 ;; This function is called by:
  7706 ;;		_lcd_init
  7707 ;;		_lcd_backlight
  7708 ;;		_command
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           
  7713                           ;psect for function _lcd_cmd
  7714  0A8D                     _lcd_cmd:
  7715                           
  7716                           ;incstack = 0
  7717                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  7718                           ;lcd_cmd@cmd stored from wreg
  7719  0A8D  00F1               	movwf	lcd_cmd@cmd
  7720  0A8E                     l2060:
  7721                           
  7722                           ;lcd_lib.c: 20:     i2c_start();
  7723  0A8E  318A  2237  318A   	fcall	_i2c_start
  7724                           
  7725                           ;lcd_lib.c: 21:     i2c_write(0x3F << 1);
  7726  0A91  307E               	movlw	126
  7727  0A92  318A  227D  318A   	fcall	_i2c_write
  7728                           
  7729                           ;lcd_lib.c: 22:     i2c_write(cmd);
  7730  0A95  0871               	movf	lcd_cmd@cmd,w
  7731  0A96  318A  227D  318A   	fcall	_i2c_write
  7732  0A99                     l2062:
  7733                           
  7734                           ;lcd_lib.c: 23:     i2c_stop();
  7735  0A99  318A  2226  318A   	fcall	_i2c_stop
  7736                           
  7737                           ;lcd_lib.c: 24:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7738  0A9C  3006               	movlw	6
  7739  0A9D                     u2177:
  7740  0A9D  0B89               	decfsz	9,f
  7741  0A9E  2A9D               	goto	u2177
  7742  0A9F  3200               	nop2
  7743  0AA0                     l194:
  7744  0AA0  0008               	return
  7745  0AA1                     __end_of_lcd_cmd:
  7746                           
  7747                           	psect	text32
  7748  0A7D                     __ptext32:	
  7749 ;; *************** function _i2c_write *****************
  7750 ;; Defined at:
  7751 ;;		line 26 in file "i2c.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  data            1    wreg     unsigned char 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  data            1    0[COMMON] unsigned char 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0, pclath, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7765 ;;      Params:         0       0       0       0       0       0
  7766 ;;      Locals:         1       0       0       0       0       0
  7767 ;;      Temps:          0       0       0       0       0       0
  7768 ;;      Totals:         1       0       0       0       0       0
  7769 ;;Total ram usage:        1 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; Hardware stack levels required when called: 1
  7772 ;; This function calls:
  7773 ;;		_i2c_wait
  7774 ;; This function is called by:
  7775 ;;		_lcd_cmd
  7776 ;;		__read
  7777 ;;		_write_date
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           
  7782                           ;psect for function _i2c_write
  7783  0A7D                     _i2c_write:
  7784                           
  7785                           ;incstack = 0
  7786                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  7787                           ;i2c_write@data stored from wreg
  7788  0A7D  00F0               	movwf	i2c_write@data
  7789  0A7E                     l1932:
  7790                           
  7791                           ;i2c.c: 27:     SSP2BUF = data;
  7792  0A7E  0870               	movf	i2c_write@data,w
  7793  0A7F  0024               	movlb	4	; select bank4
  7794  0A80  0099               	movwf	25	;volatile
  7795  0A81                     l163:	
  7796                           ;i2c.c: 28:     while(SSP2STATbits.BF);
  7797                           
  7798  0A81  181C               	btfsc	28,0	;volatile
  7799  0A82  2A84               	goto	u1121
  7800  0A83  2A85               	goto	u1120
  7801  0A84                     u1121:
  7802  0A84  2A81               	goto	l163
  7803  0A85                     u1120:
  7804  0A85                     l166:
  7805  0A85  1B1E               	btfsc	30,6	;volatile
  7806  0A86  2A88               	goto	u1131
  7807  0A87  2A89               	goto	u1130
  7808  0A88                     u1131:
  7809  0A88  2A85               	goto	l166
  7810  0A89                     u1130:
  7811  0A89                     l1934:
  7812                           
  7813                           ;i2c.c: 30:     i2c_wait();
  7814  0A89  318A  224B  318A   	fcall	_i2c_wait
  7815  0A8C                     l169:
  7816  0A8C  0008               	return
  7817  0A8D                     __end_of_i2c_write:
  7818                           
  7819                           	psect	text33
  7820  0A26                     __ptext33:	
  7821 ;; *************** function _i2c_stop *****************
  7822 ;; Defined at:
  7823 ;;		line 15 in file "i2c.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;		None
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;		None
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		None
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7837 ;;      Params:         0       0       0       0       0       0
  7838 ;;      Locals:         0       0       0       0       0       0
  7839 ;;      Temps:          0       0       0       0       0       0
  7840 ;;      Totals:         0       0       0       0       0       0
  7841 ;;Total ram usage:        0 bytes
  7842 ;; Hardware stack levels used: 1
  7843 ;; This function calls:
  7844 ;;		Nothing
  7845 ;; This function is called by:
  7846 ;;		_lcd_cmd
  7847 ;;		__read
  7848 ;;		_write_date
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           
  7853                           ;psect for function _i2c_stop
  7854  0A26                     _i2c_stop:
  7855  0A26                     l1930:	
  7856                           ;incstack = 0
  7857                           ; Regs used in _i2c_stop: []
  7858                           
  7859                           
  7860                           ;i2c.c: 16:     SSP2CON2bits.PEN = 1;
  7861  0A26  0024               	movlb	4	; select bank4
  7862  0A27  151E               	bsf	30,2	;volatile
  7863  0A28                     l151:	
  7864                           ;i2c.c: 17:     while(SSP2CON2bits.PEN);
  7865                           
  7866  0A28  191E               	btfsc	30,2	;volatile
  7867  0A29  2A2B               	goto	u1111
  7868  0A2A  2A2C               	goto	u1110
  7869  0A2B                     u1111:
  7870  0A2B  2A28               	goto	l151
  7871  0A2C                     u1110:
  7872  0A2C                     l154:
  7873  0A2C  0008               	return
  7874  0A2D                     __end_of_i2c_stop:
  7875                           
  7876                           	psect	text34
  7877  0A37                     __ptext34:	
  7878 ;; *************** function _i2c_start *****************
  7879 ;; Defined at:
  7880 ;;		line 9 in file "i2c.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;		None
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      void 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0, pclath, cstack
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7894 ;;      Params:         0       0       0       0       0       0
  7895 ;;      Locals:         0       0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0
  7897 ;;      Totals:         0       0       0       0       0       0
  7898 ;;Total ram usage:        0 bytes
  7899 ;; Hardware stack levels used: 1
  7900 ;; Hardware stack levels required when called: 1
  7901 ;; This function calls:
  7902 ;;		_i2c_wait
  7903 ;; This function is called by:
  7904 ;;		_lcd_cmd
  7905 ;;		__read
  7906 ;;		_write_date
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           
  7911                           ;psect for function _i2c_start
  7912  0A37                     _i2c_start:
  7913  0A37                     l1926:	
  7914                           ;incstack = 0
  7915                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7916                           
  7917                           
  7918                           ;i2c.c: 10:     i2c_wait();
  7919  0A37  318A  224B  318A   	fcall	_i2c_wait
  7920  0A3A                     l1928:
  7921                           
  7922                           ;i2c.c: 11:     SSP2CON2bits.SEN = 1;
  7923  0A3A  0024               	movlb	4	; select bank4
  7924  0A3B  141E               	bsf	30,0	;volatile
  7925  0A3C                     l145:	
  7926                           ;i2c.c: 12:     while(SSP2CON2bits.SEN);
  7927                           
  7928  0A3C  181E               	btfsc	30,0	;volatile
  7929  0A3D  2A3F               	goto	u1101
  7930  0A3E  2A40               	goto	u1100
  7931  0A3F                     u1101:
  7932  0A3F  2A3C               	goto	l145
  7933  0A40                     u1100:
  7934  0A40                     l148:
  7935  0A40  0008               	return
  7936  0A41                     __end_of_i2c_start:
  7937                           
  7938                           	psect	text35
  7939  0A4B                     __ptext35:	
  7940 ;; *************** function _i2c_wait *****************
  7941 ;; Defined at:
  7942 ;;		line 5 in file "i2c.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;		None
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      void 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7956 ;;      Params:         0       0       0       0       0       0
  7957 ;;      Locals:         0       0       0       0       0       0
  7958 ;;      Temps:          0       0       0       0       0       0
  7959 ;;      Totals:         0       0       0       0       0       0
  7960 ;;Total ram usage:        0 bytes
  7961 ;; Hardware stack levels used: 1
  7962 ;; This function calls:
  7963 ;;		Nothing
  7964 ;; This function is called by:
  7965 ;;		_i2c_start
  7966 ;;		_i2c_repeated_start
  7967 ;;		_i2c_write
  7968 ;;		_i2c_read
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           
  7973                           ;psect for function _i2c_wait
  7974  0A4B                     _i2c_wait:
  7975  0A4B                     l1902:	
  7976                           ;incstack = 0
  7977                           ; Regs used in _i2c_wait: [wreg+status,2]
  7978                           
  7979  0A4B                     l1904:	
  7980                           ;i2c.c: 6:     while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  7981                           
  7982  0A4B  0024               	movlb	4	; select bank4
  7983  0A4C  081E               	movf	30,w	;volatile
  7984  0A4D  391F               	andlw	31
  7985  0A4E  1D03               	btfss	3,2
  7986  0A4F  2A51               	goto	u1061
  7987  0A50  2A52               	goto	u1060
  7988  0A51                     u1061:
  7989  0A51  2A4B               	goto	l1904
  7990  0A52                     u1060:
  7991  0A52                     l1906:
  7992  0A52  191C               	btfsc	28,2	;volatile
  7993  0A53  2A55               	goto	u1071
  7994  0A54  2A56               	goto	u1070
  7995  0A55                     u1071:
  7996  0A55  2A4B               	goto	l1904
  7997  0A56                     u1070:
  7998  0A56                     l142:
  7999  0A56  0008               	return
  8000  0A57                     __end_of_i2c_wait:
  8001                           
  8002                           	psect	text36
  8003  0F61                     __ptext36:	
  8004 ;; *************** function _get_next *****************
  8005 ;; Defined at:
  8006 ;;		line 13 in file "train_lib.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  next            2    6[COMMON] PTR struct train
  8009 ;;		 -> main@next1(2), main@next(2), 
  8010 ;;  hour            1    8[COMMON] unsigned char 
  8011 ;;  min             1    9[COMMON] unsigned char 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;  t_min           2   14[BANK0 ] unsigned short 
  8014 ;;  i               1   17[BANK0 ] unsigned char 
  8015 ;;  now_min         2   12[BANK0 ] unsigned short 
  8016 ;;  idx             1   16[BANK0 ] unsigned char 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8026 ;;      Params:         4       0       0       0       0       0
  8027 ;;      Locals:         0       6       0       0       0       0
  8028 ;;      Temps:          0      12       0       0       0       0
  8029 ;;      Totals:         4      18       0       0       0       0
  8030 ;;Total ram usage:       22 bytes
  8031 ;; Hardware stack levels used: 1
  8032 ;; Hardware stack levels required when called: 1
  8033 ;; This function calls:
  8034 ;;		___wmul
  8035 ;; This function is called by:
  8036 ;;		_main
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           
  8041                           ;psect for function _get_next
  8042  0F61                     _get_next:
  8043  0F61                     l2488:	
  8044                           ;incstack = 0
  8045                           ; Regs used in _get_next: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8046                           
  8047                           
  8048                           ;train_lib.c: 14:     uint8_t idx = 0;
  8049  0F61  0020               	movlb	0	; select bank0
  8050  0F62  01B0               	clrf	get_next@idx
  8051  0F63                     l2490:
  8052                           
  8053                           ;train_lib.c: 15:     uint16_t now_min = ((uint16_t)hour * 60) + min;
  8054  0F63  0879               	movf	get_next@min,w
  8055  0F64  00A0               	movwf	??_get_next
  8056  0F65  01A1               	clrf	??_get_next+1
  8057  0F66  0878               	movf	get_next@hour,w
  8058  0F67  00A2               	movwf	??_get_next+2
  8059  0F68  01A3               	clrf	??_get_next+3
  8060  0F69  0822               	movf	??_get_next+2,w
  8061  0F6A  00F0               	movwf	___wmul@multiplier
  8062  0F6B  0823               	movf	??_get_next+3,w
  8063  0F6C  00F1               	movwf	___wmul@multiplier+1
  8064  0F6D  303C               	movlw	60
  8065  0F6E  00F2               	movwf	___wmul@multiplicand
  8066  0F6F  3000               	movlw	0
  8067  0F70  00F3               	movwf	___wmul@multiplicand+1
  8068  0F71  318B  2360  318F   	fcall	___wmul
  8069  0F74  0020               	movlb	0	; select bank0
  8070  0F75  0820               	movf	??_get_next,w
  8071  0F76  0770               	addwf	?___wmul,w
  8072  0F77  00AC               	movwf	get_next@now_min
  8073  0F78  0821               	movf	??_get_next+1,w
  8074  0F79  3D71               	addwfc	?___wmul+1,w
  8075  0F7A  00AD               	movwf	get_next@now_min+1
  8076  0F7B                     l2492:
  8077                           
  8078                           ;train_lib.c: 17:     for(uint8_t i = 0; i < (sizeof(trains)/sizeof(trains[0])); i++){
  8079  0F7B  01B1               	clrf	get_next@i
  8080  0F7C                     l2498:
  8081                           
  8082                           ;train_lib.c: 18:         uint16_t t_min = ((uint16_t)trains[i].hour * 60) + trains[i].m
      +                          in;
  8083  0F7C  0831               	movf	get_next@i,w
  8084  0F7D  00A0               	movwf	??_get_next
  8085  0F7E  01A1               	clrf	??_get_next+1
  8086  0F7F  35A0               	lslf	??_get_next,f
  8087  0F80  0DA1               	rlf	??_get_next+1,f
  8088  0F81  301B               	movlw	27
  8089  0F82  00A2               	movwf	??_get_next+2
  8090  0F83  3021               	movlw	33
  8091  0F84  00A3               	movwf	??_get_next+3
  8092  0F85  0820               	movf	??_get_next,w
  8093  0F86  0722               	addwf	??_get_next+2,w
  8094  0F87  0086               	movwf	6
  8095  0F88  0821               	movf	??_get_next+1,w
  8096  0F89  3D23               	addwfc	??_get_next+3,w
  8097  0F8A  0087               	movwf	7
  8098  0F8B  0801               	movf	1,w
  8099  0F8C  00A4               	movwf	??_get_next+4
  8100  0F8D  01A5               	clrf	??_get_next+5
  8101  0F8E  0831               	movf	get_next@i,w
  8102  0F8F  00A6               	movwf	??_get_next+6
  8103  0F90  01A7               	clrf	??_get_next+7
  8104  0F91  35A6               	lslf	??_get_next+6,f
  8105  0F92  0DA7               	rlf	??_get_next+7,f
  8106  0F93  301A               	movlw	26
  8107  0F94  00A8               	movwf	??_get_next+8
  8108  0F95  3021               	movlw	33
  8109  0F96  00A9               	movwf	??_get_next+9
  8110  0F97  0826               	movf	??_get_next+6,w
  8111  0F98  0728               	addwf	??_get_next+8,w
  8112  0F99  0086               	movwf	6
  8113  0F9A  0827               	movf	??_get_next+7,w
  8114  0F9B  3D29               	addwfc	??_get_next+9,w
  8115  0F9C  0087               	movwf	7
  8116  0F9D  0801               	movf	1,w
  8117  0F9E  00AA               	movwf	??_get_next+10
  8118  0F9F  01AB               	clrf	??_get_next+11
  8119  0FA0  082A               	movf	??_get_next+10,w
  8120  0FA1  00F0               	movwf	___wmul@multiplier
  8121  0FA2  082B               	movf	??_get_next+11,w
  8122  0FA3  00F1               	movwf	___wmul@multiplier+1
  8123  0FA4  303C               	movlw	60
  8124  0FA5  00F2               	movwf	___wmul@multiplicand
  8125  0FA6  3000               	movlw	0
  8126  0FA7  00F3               	movwf	___wmul@multiplicand+1
  8127  0FA8  318B  2360  318F   	fcall	___wmul
  8128  0FAB  0020               	movlb	0	; select bank0
  8129  0FAC  0824               	movf	??_get_next+4,w
  8130  0FAD  0770               	addwf	?___wmul,w
  8131  0FAE  00AE               	movwf	get_next@t_min
  8132  0FAF  0825               	movf	??_get_next+5,w
  8133  0FB0  3D71               	addwfc	?___wmul+1,w
  8134  0FB1  00AF               	movwf	get_next@t_min+1
  8135  0FB2                     l2500:
  8136                           
  8137                           ;train_lib.c: 20:         if(now_min < t_min){
  8138  0FB2  082F               	movf	get_next@t_min+1,w
  8139  0FB3  022D               	subwf	get_next@now_min+1,w
  8140  0FB4  1D03               	skipz
  8141  0FB5  2FB8               	goto	u1935
  8142  0FB6  082E               	movf	get_next@t_min,w
  8143  0FB7  022C               	subwf	get_next@now_min,w
  8144  0FB8                     u1935:
  8145  0FB8  1803               	skipnc
  8146  0FB9  2FBB               	goto	u1931
  8147  0FBA  2FBC               	goto	u1930
  8148  0FBB                     u1931:
  8149  0FBB  2FC1               	goto	l2504
  8150  0FBC                     u1930:
  8151  0FBC                     l2502:
  8152                           
  8153                           ;train_lib.c: 21:             idx = i;
  8154  0FBC  0831               	movf	get_next@i,w
  8155  0FBD  00A0               	movwf	??_get_next
  8156  0FBE  0820               	movf	??_get_next,w
  8157  0FBF  00B0               	movwf	get_next@idx
  8158                           
  8159                           ;train_lib.c: 22:             break;
  8160  0FC0  2FCB               	goto	l2508
  8161  0FC1                     l2504:
  8162                           
  8163                           ;train_lib.c: 24:     }
  8164  0FC1  3001               	movlw	1
  8165  0FC2  00A0               	movwf	??_get_next
  8166  0FC3  0820               	movf	??_get_next,w
  8167  0FC4  07B1               	addwf	get_next@i,f
  8168  0FC5                     l2506:
  8169  0FC5  302B               	movlw	43
  8170  0FC6  0231               	subwf	get_next@i,w
  8171  0FC7  1C03               	skipc
  8172  0FC8  2FCA               	goto	u1941
  8173  0FC9  2FCB               	goto	u1940
  8174  0FCA                     u1941:
  8175  0FCA  2F7C               	goto	l2498
  8176  0FCB                     u1940:
  8177  0FCB                     l2508:
  8178                           
  8179                           ;train_lib.c: 26:     next->hour = trains[idx].hour;
  8180  0FCB  0830               	movf	get_next@idx,w
  8181  0FCC  00A0               	movwf	??_get_next
  8182  0FCD  01A1               	clrf	??_get_next+1
  8183  0FCE  35A0               	lslf	??_get_next,f
  8184  0FCF  0DA1               	rlf	??_get_next+1,f
  8185  0FD0  301A               	movlw	26
  8186  0FD1  00A2               	movwf	??_get_next+2
  8187  0FD2  3021               	movlw	33
  8188  0FD3  00A3               	movwf	??_get_next+3
  8189  0FD4  0820               	movf	??_get_next,w
  8190  0FD5  0722               	addwf	??_get_next+2,w
  8191  0FD6  0086               	movwf	6
  8192  0FD7  0821               	movf	??_get_next+1,w
  8193  0FD8  3D23               	addwfc	??_get_next+3,w
  8194  0FD9  0087               	movwf	7
  8195  0FDA  0801               	movf	1,w
  8196  0FDB  00A4               	movwf	??_get_next+4
  8197  0FDC  0876               	movf	get_next@next,w
  8198  0FDD  0086               	movwf	6
  8199  0FDE  0877               	movf	get_next@next+1,w
  8200  0FDF  0087               	movwf	7
  8201  0FE0  0824               	movf	??_get_next+4,w
  8202  0FE1  0081               	movwf	1
  8203                           
  8204                           ;train_lib.c: 27:     next->min = trains[idx].min;
  8205  0FE2  0830               	movf	get_next@idx,w
  8206  0FE3  00A0               	movwf	??_get_next
  8207  0FE4  01A1               	clrf	??_get_next+1
  8208  0FE5  35A0               	lslf	??_get_next,f
  8209  0FE6  0DA1               	rlf	??_get_next+1,f
  8210  0FE7  301B               	movlw	27
  8211  0FE8  00A2               	movwf	??_get_next+2
  8212  0FE9  3021               	movlw	33
  8213  0FEA  00A3               	movwf	??_get_next+3
  8214  0FEB  0820               	movf	??_get_next,w
  8215  0FEC  0722               	addwf	??_get_next+2,w
  8216  0FED  0086               	movwf	6
  8217  0FEE  0821               	movf	??_get_next+1,w
  8218  0FEF  3D23               	addwfc	??_get_next+3,w
  8219  0FF0  0087               	movwf	7
  8220  0FF1  0801               	movf	1,w
  8221  0FF2  00A4               	movwf	??_get_next+4
  8222  0FF3  0876               	movf	get_next@next,w
  8223  0FF4  3E01               	addlw	1
  8224  0FF5  00A5               	movwf	??_get_next+5
  8225  0FF6  3000               	movlw	0
  8226  0FF7  3D77               	addwfc	get_next@next+1,w
  8227  0FF8  00A6               	movwf	??_get_next+6
  8228  0FF9  0825               	movf	??_get_next+5,w
  8229  0FFA  0086               	movwf	6
  8230  0FFB  0826               	movf	??_get_next+6,w
  8231  0FFC  0087               	movwf	7
  8232  0FFD  0824               	movf	??_get_next+4,w
  8233  0FFE  0081               	movwf	1
  8234  0FFF                     l230:
  8235  0FFF  0008               	return
  8236  1000                     __end_of_get_next:
  8237                           
  8238                           	psect	text37
  8239  0E59                     __ptext37:	
  8240 ;; *************** function _calc_money *****************
  8241 ;; Defined at:
  8242 ;;		line 14 in file "money_lib.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  date            6    6[COMMON] struct Date
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;  min             2    6[BANK0 ] unsigned short 
  8247 ;;  hour            2    4[BANK0 ] unsigned short 
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  2    6[COMMON] unsigned short 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0, pclath, cstack
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8257 ;;      Params:         6       0       0       0       0       0
  8258 ;;      Locals:         0       4       0       0       0       0
  8259 ;;      Temps:          0       4       0       0       0       0
  8260 ;;      Totals:         6       8       0       0       0       0
  8261 ;;Total ram usage:       14 bytes
  8262 ;; Hardware stack levels used: 1
  8263 ;; Hardware stack levels required when called: 1
  8264 ;; This function calls:
  8265 ;;		___wmul
  8266 ;; This function is called by:
  8267 ;;		_main
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _calc_money
  8273  0E59                     _calc_money:
  8274  0E59                     l2536:	
  8275                           ;incstack = 0
  8276                           ; Regs used in _calc_money: [wreg+status,2+status,0+pclath+cstack]
  8277                           
  8278                           
  8279                           ;money_lib.c: 15:     uint16_t hour = (uint16_t)date.hour;
  8280  0E59  0879               	movf	calc_money@date+3,w
  8281  0E5A  0020               	movlb	0	; select bank0
  8282  0E5B  00A0               	movwf	??_calc_money
  8283  0E5C  01A1               	clrf	??_calc_money+1
  8284  0E5D  0820               	movf	??_calc_money,w
  8285  0E5E  00A4               	movwf	calc_money@hour
  8286  0E5F  0821               	movf	??_calc_money+1,w
  8287  0E60  00A5               	movwf	calc_money@hour+1
  8288                           
  8289                           ;money_lib.c: 16:     uint16_t min = (uint16_t)date.min;
  8290  0E61  087A               	movf	calc_money@date+4,w
  8291  0E62  00A0               	movwf	??_calc_money
  8292  0E63  01A1               	clrf	??_calc_money+1
  8293  0E64  0820               	movf	??_calc_money,w
  8294  0E65  00A6               	movwf	calc_money@min
  8295  0E66  0821               	movf	??_calc_money+1,w
  8296  0E67  00A7               	movwf	calc_money@min+1
  8297  0E68  3012               	movlw	18
  8298  0E69  0279               	subwf	calc_money@date+3,w
  8299  0E6A  1C03               	skipc
  8300  0E6B  2E6D               	goto	u1951
  8301  0E6C  2E6E               	goto	u1950
  8302  0E6D                     u1951:
  8303  0E6D  2E72               	goto	l2540
  8304  0E6E                     u1950:
  8305  0E6E                     l2538:
  8306                           
  8307                           ;money_lib.c: 18:         regular_flg = 1;
  8308  0E6E  0021               	movlb	1	; select bank1
  8309  0E6F  01CF               	clrf	_regular_flg^(0+128)
  8310  0E70  0ACF               	incf	_regular_flg^(0+128),f
  8311                           
  8312                           ;money_lib.c: 19:     }
  8313  0E71  2E81               	goto	l2548
  8314  0E72                     l2540:
  8315  0E72  3011               	movlw	17
  8316  0E73  0679               	xorwf	calc_money@date+3,w
  8317  0E74  1D03               	btfss	3,2
  8318  0E75  2E77               	goto	u1961
  8319  0E76  2E78               	goto	u1960
  8320  0E77                     u1961:
  8321  0E77  2E7F               	goto	l2546
  8322  0E78                     u1960:
  8323  0E78                     l2542:
  8324  0E78  3014               	movlw	20
  8325  0E79  027A               	subwf	calc_money@date+4,w
  8326  0E7A  1C03               	skipc
  8327  0E7B  2E7D               	goto	u1971
  8328  0E7C  2E7E               	goto	u1970
  8329  0E7D                     u1971:
  8330  0E7D  2E7F               	goto	l2546
  8331  0E7E                     u1970:
  8332  0E7E  2E6E               	goto	l2538
  8333  0E7F                     l2546:
  8334                           
  8335                           ;money_lib.c: 23:         regular_flg = 0;
  8336  0E7F  0021               	movlb	1	; select bank1
  8337  0E80  01CF               	clrf	_regular_flg^(0+128)
  8338  0E81                     l2548:
  8339                           
  8340                           ;money_lib.c: 27:     if(regular_flg){
  8341  0E81  084F               	movf	_regular_flg^(0+128),w
  8342  0E82  1903               	btfsc	3,2
  8343  0E83  2E85               	goto	u1981
  8344  0E84  2E86               	goto	u1980
  8345  0E85                     u1981:
  8346  0E85  2EB0               	goto	l2556
  8347  0E86                     u1980:
  8348  0E86                     l2550:
  8349  0E86  0020               	movlb	0	; select bank0
  8350  0E87  0825               	movf	calc_money@hour+1,w
  8351  0E88  00F1               	movwf	___wmul@multiplier+1
  8352  0E89  0824               	movf	calc_money@hour,w
  8353  0E8A  00F0               	movwf	___wmul@multiplier
  8354  0E8B  3054               	movlw	84
  8355  0E8C  00F2               	movwf	___wmul@multiplicand
  8356  0E8D  3006               	movlw	6
  8357  0E8E  00F3               	movwf	___wmul@multiplicand+1
  8358  0E8F  318B  2360  318E   	fcall	___wmul
  8359  0E92  0870               	movf	?___wmul,w
  8360  0E93  0020               	movlb	0	; select bank0
  8361  0E94  00A0               	movwf	??_calc_money
  8362  0E95  0871               	movf	?___wmul+1,w
  8363  0E96  00A1               	movwf	??_calc_money+1
  8364  0E97  0827               	movf	calc_money@min+1,w
  8365  0E98  00F1               	movwf	___wmul@multiplier+1
  8366  0E99  0826               	movf	calc_money@min,w
  8367  0E9A  00F0               	movwf	___wmul@multiplier
  8368  0E9B  301B               	movlw	27
  8369  0E9C  00F2               	movwf	___wmul@multiplicand
  8370  0E9D  3000               	movlw	0
  8371  0E9E  00F3               	movwf	___wmul@multiplicand+1
  8372  0E9F  318B  2360  318E   	fcall	___wmul
  8373  0EA2  0870               	movf	?___wmul,w
  8374  0EA3  0020               	movlb	0	; select bank0
  8375  0EA4  0720               	addwf	??_calc_money,w
  8376  0EA5  00A2               	movwf	??_calc_money+2
  8377  0EA6  0871               	movf	?___wmul+1,w
  8378  0EA7  3D21               	addwfc	??_calc_money+1,w
  8379  0EA8  00A3               	movwf	??_calc_money+3
  8380  0EA9  0822               	movf	??_calc_money+2,w
  8381  0EAA  3E50               	addlw	80
  8382  0EAB  00F6               	movwf	?_calc_money
  8383  0EAC  3092               	movlw	146
  8384  0EAD  3D23               	addwfc	??_calc_money+3,w
  8385  0EAE  00F7               	movwf	?_calc_money+1
  8386  0EAF  2ED9               	goto	l273
  8387  0EB0                     l2556:
  8388                           
  8389                           ;money_lib.c: 30:         return ((hour - 8) * HOUR_4_MONEY) + (MIN_4_MONEY * min) - (MI
      +                          N_4_MONEY * 40);
  8390  0EB0  0020               	movlb	0	; select bank0
  8391  0EB1  0825               	movf	calc_money@hour+1,w
  8392  0EB2  00F1               	movwf	___wmul@multiplier+1
  8393  0EB3  0824               	movf	calc_money@hour,w
  8394  0EB4  00F0               	movwf	___wmul@multiplier
  8395  0EB5  3054               	movlw	84
  8396  0EB6  00F2               	movwf	___wmul@multiplicand
  8397  0EB7  3006               	movlw	6
  8398  0EB8  00F3               	movwf	___wmul@multiplicand+1
  8399  0EB9  318B  2360  318E   	fcall	___wmul
  8400  0EBC  0870               	movf	?___wmul,w
  8401  0EBD  0020               	movlb	0	; select bank0
  8402  0EBE  00A0               	movwf	??_calc_money
  8403  0EBF  0871               	movf	?___wmul+1,w
  8404  0EC0  00A1               	movwf	??_calc_money+1
  8405  0EC1  0827               	movf	calc_money@min+1,w
  8406  0EC2  00F1               	movwf	___wmul@multiplier+1
  8407  0EC3  0826               	movf	calc_money@min,w
  8408  0EC4  00F0               	movwf	___wmul@multiplier
  8409  0EC5  301B               	movlw	27
  8410  0EC6  00F2               	movwf	___wmul@multiplicand
  8411  0EC7  3000               	movlw	0
  8412  0EC8  00F3               	movwf	___wmul@multiplicand+1
  8413  0EC9  318B  2360  318E   	fcall	___wmul
  8414  0ECC  0870               	movf	?___wmul,w
  8415  0ECD  0020               	movlb	0	; select bank0
  8416  0ECE  0720               	addwf	??_calc_money,w
  8417  0ECF  00A2               	movwf	??_calc_money+2
  8418  0ED0  0871               	movf	?___wmul+1,w
  8419  0ED1  3D21               	addwfc	??_calc_money+1,w
  8420  0ED2  00A3               	movwf	??_calc_money+3
  8421  0ED3  0822               	movf	??_calc_money+2,w
  8422  0ED4  3E28               	addlw	40
  8423  0ED5  00F6               	movwf	?_calc_money
  8424  0ED6  30C9               	movlw	201
  8425  0ED7  3D23               	addwfc	??_calc_money+3,w
  8426  0ED8  00F7               	movwf	?_calc_money+1
  8427  0ED9                     l273:
  8428  0ED9  0008               	return
  8429  0EDA                     __end_of_calc_money:
  8430                           
  8431                           	psect	text38
  8432  0B60                     __ptext38:	
  8433 ;; *************** function ___wmul *****************
  8434 ;; Defined at:
  8435 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  multiplier      2    0[COMMON] unsigned int 
  8438 ;;  multiplicand    2    2[COMMON] unsigned int 
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  product         2    4[COMMON] unsigned int 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  2    0[COMMON] unsigned int 
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8450 ;;      Params:         4       0       0       0       0       0
  8451 ;;      Locals:         2       0       0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0
  8453 ;;      Totals:         6       0       0       0       0       0
  8454 ;;Total ram usage:        6 bytes
  8455 ;; Hardware stack levels used: 1
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_print_remaing
  8460 ;;		_get_next
  8461 ;;		_calc_money
  8462 ;;		_atoi
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           
  8467                           ;psect for function ___wmul
  8468  0B60                     ___wmul:
  8469  0B60                     l1936:	
  8470                           ;incstack = 0
  8471                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8472                           
  8473  0B60  01F4               	clrf	___wmul@product
  8474  0B61  01F5               	clrf	___wmul@product+1
  8475  0B62                     l1938:
  8476  0B62  1C70               	btfss	___wmul@multiplier,0
  8477  0B63  2B65               	goto	u1141
  8478  0B64  2B66               	goto	u1140
  8479  0B65                     u1141:
  8480  0B65  2B6A               	goto	l424
  8481  0B66                     u1140:
  8482  0B66                     l1940:
  8483  0B66  0872               	movf	___wmul@multiplicand,w
  8484  0B67  07F4               	addwf	___wmul@product,f
  8485  0B68  0873               	movf	___wmul@multiplicand+1,w
  8486  0B69  3DF5               	addwfc	___wmul@product+1,f
  8487  0B6A                     l424:
  8488  0B6A  3001               	movlw	1
  8489  0B6B                     u1155:
  8490  0B6B  35F2               	lslf	___wmul@multiplicand,f
  8491  0B6C  0DF3               	rlf	___wmul@multiplicand+1,f
  8492  0B6D  0B89               	decfsz	9,f
  8493  0B6E  2B6B               	goto	u1155
  8494  0B6F                     l1942:
  8495  0B6F  3001               	movlw	1
  8496  0B70                     u1165:
  8497  0B70  36F1               	lsrf	___wmul@multiplier+1,f
  8498  0B71  0CF0               	rrf	___wmul@multiplier,f
  8499  0B72  0B89               	decfsz	9,f
  8500  0B73  2B70               	goto	u1165
  8501  0B74                     l1944:
  8502  0B74  0870               	movf	___wmul@multiplier,w
  8503  0B75  0471               	iorwf	___wmul@multiplier+1,w
  8504  0B76  1D03               	btfss	3,2
  8505  0B77  2B79               	goto	u1171
  8506  0B78  2B7A               	goto	u1170
  8507  0B79                     u1171:
  8508  0B79  2B62               	goto	l1938
  8509  0B7A                     u1170:
  8510  0B7A                     l1946:
  8511  0B7A  0875               	movf	___wmul@product+1,w
  8512  0B7B  00F1               	movwf	?___wmul+1
  8513  0B7C  0874               	movf	___wmul@product,w
  8514  0B7D  00F0               	movwf	?___wmul
  8515  0B7E                     l426:
  8516  0B7E  0008               	return
  8517  0B7F                     __end_of___wmul:
  8518                           
  8519                           	psect	text39
  8520  0A2D                     __ptext39:	
  8521 ;; *************** function _SYSTEM_Initialize *****************
  8522 ;; Defined at:
  8523 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;		None
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, pclath, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8537 ;;      Params:         0       0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0
  8540 ;;      Totals:         0       0       0       0       0       0
  8541 ;;Total ram usage:        0 bytes
  8542 ;; Hardware stack levels used: 1
  8543 ;; Hardware stack levels required when called: 1
  8544 ;; This function calls:
  8545 ;;		_OSCILLATOR_Initialize
  8546 ;;		_PIN_MANAGER_Initialize
  8547 ;;		_WDT_Initialize
  8548 ;; This function is called by:
  8549 ;;		_main
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           
  8554                           ;psect for function _SYSTEM_Initialize
  8555  0A2D                     _SYSTEM_Initialize:
  8556  0A2D                     l2404:	
  8557                           ;incstack = 0
  8558                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8559                           
  8560                           
  8561                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8562  0A2D  318A  22CA  318A   	fcall	_PIN_MANAGER_Initialize
  8563                           
  8564                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8565  0A30  318A  221F  318A   	fcall	_OSCILLATOR_Initialize
  8566                           
  8567                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8568  0A33  318A  2217  318A   	fcall	_WDT_Initialize
  8569  0A36                     l17:
  8570  0A36  0008               	return
  8571  0A37                     __end_of_SYSTEM_Initialize:
  8572                           
  8573                           	psect	text40
  8574  0A17                     __ptext40:	
  8575 ;; *************** function _WDT_Initialize *****************
  8576 ;; Defined at:
  8577 ;;		line 68 in file "mcc_generated_files/mcc.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8591 ;;      Params:         0       0       0       0       0       0
  8592 ;;      Locals:         0       0       0       0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0
  8594 ;;      Totals:         0       0       0       0       0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used: 1
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_SYSTEM_Initialize
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           
  8605                           ;psect for function _WDT_Initialize
  8606  0A17                     _WDT_Initialize:
  8607  0A17                     l2360:	
  8608                           ;incstack = 0
  8609                           ; Regs used in _WDT_Initialize: [wreg]
  8610                           
  8611                           
  8612                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  8613  0A17  3016               	movlw	22
  8614  0A18  0021               	movlb	1	; select bank1
  8615  0A19  0097               	movwf	23	;volatile
  8616  0A1A                     l23:
  8617  0A1A  0008               	return
  8618  0A1B                     __end_of_WDT_Initialize:
  8619                           
  8620                           	psect	text41
  8621  0ACA                     __ptext41:	
  8622 ;; *************** function _PIN_MANAGER_Initialize *****************
  8623 ;; Defined at:
  8624 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, status,2
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8638 ;;      Params:         0       0       0       0       0       0
  8639 ;;      Locals:         0       0       0       0       0       0
  8640 ;;      Temps:          0       0       0       0       0       0
  8641 ;;      Totals:         0       0       0       0       0       0
  8642 ;;Total ram usage:        0 bytes
  8643 ;; Hardware stack levels used: 1
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_SYSTEM_Initialize
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           
  8652                           ;psect for function _PIN_MANAGER_Initialize
  8653  0ACA                     _PIN_MANAGER_Initialize:
  8654  0ACA                     l2342:	
  8655                           ;incstack = 0
  8656                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8657                           
  8658                           
  8659                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8660  0ACA  0022               	movlb	2	; select bank2
  8661  0ACB  018C               	clrf	12	;volatile
  8662                           
  8663                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8664  0ACC  018D               	clrf	13	;volatile
  8665  0ACD                     l2344:
  8666                           
  8667                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  8668  0ACD  30FF               	movlw	255
  8669  0ACE  0021               	movlb	1	; select bank1
  8670  0ACF  008C               	movwf	12	;volatile
  8671  0AD0                     l2346:
  8672                           
  8673                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  8674  0AD0  30FF               	movlw	255
  8675  0AD1  008D               	movwf	13	;volatile
  8676  0AD2                     l2348:
  8677                           
  8678                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  8679  0AD2  30FE               	movlw	254
  8680  0AD3  0023               	movlb	3	; select bank3
  8681  0AD4  008D               	movwf	13	;volatile
  8682  0AD5                     l2350:
  8683                           
  8684                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  8685  0AD5  301F               	movlw	31
  8686  0AD6  008C               	movwf	12	;volatile
  8687                           
  8688                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  8689  0AD7  0024               	movlb	4	; select bank4
  8690  0AD8  018D               	clrf	13	;volatile
  8691                           
  8692                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  8693  0AD9  018C               	clrf	12	;volatile
  8694  0ADA                     l2352:
  8695                           
  8696                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  8697  0ADA  0021               	movlb	1	; select bank1
  8698  0ADB  1795               	bsf	21,7	;volatile
  8699                           
  8700                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  8701  0ADC  0022               	movlb	2	; select bank2
  8702  0ADD  019D               	clrf	29	;volatile
  8703                           
  8704                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  8705  0ADE  019E               	clrf	30	;volatile
  8706  0ADF                     l48:
  8707  0ADF  0008               	return
  8708  0AE0                     __end_of_PIN_MANAGER_Initialize:
  8709                           
  8710                           	psect	text42
  8711  0A1F                     __ptext42:	
  8712 ;; *************** function _OSCILLATOR_Initialize *****************
  8713 ;; Defined at:
  8714 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, status,2
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8728 ;;      Params:         0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0
  8731 ;;      Totals:         0       0       0       0       0       0
  8732 ;;Total ram usage:        0 bytes
  8733 ;; Hardware stack levels used: 1
  8734 ;; This function calls:
  8735 ;;		Nothing
  8736 ;; This function is called by:
  8737 ;;		_SYSTEM_Initialize
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           
  8742                           ;psect for function _OSCILLATOR_Initialize
  8743  0A1F                     _OSCILLATOR_Initialize:
  8744  0A1F                     l2354:	
  8745                           ;incstack = 0
  8746                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8747                           
  8748                           
  8749                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  8750  0A1F  3070               	movlw	112
  8751  0A20  0021               	movlb	1	; select bank1
  8752  0A21  0099               	movwf	25	;volatile
  8753  0A22                     l2356:
  8754                           
  8755                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  8756  0A22  0198               	clrf	24	;volatile
  8757  0A23                     l2358:
  8758                           
  8759                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  8760  0A23  0022               	movlb	2	; select bank2
  8761  0A24  0196               	clrf	22	;volatile
  8762  0A25                     l20:
  8763  0A25  0008               	return
  8764  0A26                     __end_of_OSCILLATOR_Initialize:
  8765  007E                     btemp	set	126	;btemp
  8766  007E                     wtemp0	set	126
  8767  211A                     
  8768                           	psect	config
  8769                           
  8770                           ;Config register CONFIG1 @ 0x8007
  8771                           ;	Oscillator Selection
  8772                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8773                           ;	Watchdog Timer Enable
  8774                           ;	WDTE = OFF, WDT disabled
  8775                           ;	Power-up Timer Enable
  8776                           ;	PWRTE = OFF, PWRT disabled
  8777                           ;	MCLR Pin Function Select
  8778                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8779                           ;	Flash Program Memory Code Protection
  8780                           ;	CP = OFF, Program memory code protection is disabled
  8781                           ;	Data Memory Code Protection
  8782                           ;	CPD = OFF, Data memory code protection is disabled
  8783                           ;	Brown-out Reset Enable
  8784                           ;	BOREN = ON, Brown-out Reset enabled
  8785                           ;	Clock Out Enable
  8786                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8787                           ;	Internal/External Switchover
  8788                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8789                           ;	Fail-Safe Clock Monitor Enable
  8790                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8791  8007                     	org	32775
  8792  8007  3FE4               	dw	16356
  8793                           
  8794                           ;Config register CONFIG2 @ 0x8008
  8795                           ;	Flash Memory Self-Write Protection
  8796                           ;	WRT = OFF, Write protection off
  8797                           ;	PLL Enable
  8798                           ;	PLLEN = OFF, 4x PLL disabled
  8799                           ;	Stack Overflow/Underflow Reset Enable
  8800                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8801                           ;	Brown-out Reset Voltage Selection
  8802                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8803                           ;	Low-Voltage Programming Enable
  8804                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  8805  8008                     	org	32776
  8806  8008  1EFF               	dw	7935

Data Sizes:
    Strings     60
    Constant    6
    Data        90
    BSS         60
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     37      68
    BANK2            80      0      32
    BANK3            42      0       0
    BANK4             0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S946_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK1[6]), 

    get_next@next	PTR struct train size(2) Largest target is 2
		 -> main@next1(BANK1[2]), main@next(BANK1[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[2]), line(BANK1[16]), 


Critical Paths under _main in COMMON

    _read_date->__read
    __read->_bcd_2_decimal
    _bcd_2_decimal->___bmul
    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _lcd_clear->_lcd_print
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_next->___wmul
    _calc_money->___wmul

Critical Paths under _main in BANK0

    _main->_print_money
    _main->_print_remaing
    _main->_print_train
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_clear->_lcd_set_cursor

Critical Paths under _main in BANK1

    _main->_print_remaing
    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   50471
                                             25 BANK1     12    12      0
                  _SYSTEM_Initialize
                         _calc_money
                           _get_next
                      _lcd_backlight
                           _lcd_init
                     _lcd_set_cursor
                        _print_money
                      _print_remaing
                        _print_train
                          _read_date
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     489
                                             11 COMMON     2     2      0
                              __read
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     324
                                              8 COMMON     3     3      0
                      _bcd_2_decimal
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _print_train                                          8     4      4   14244
                                             75 BANK0      4     4      0
                                             13 BANK1      4     0      4
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_remaing                                       16     8      8   15840
                                             75 BANK0      4     4      0
                                             13 BANK1     12     4      8
                             ___wmul
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_money                                         12     4      8   14222
                                             75 BANK0      4     4      0
                                             13 BANK1      8     0      8
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    9550
                                             13 COMMON     1     1      0
                                              0 BANK1     13     7      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    8695
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    41      2    8365
                                             46 BANK0     21    19      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2301
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            3     3      0    2294
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       8     7      1    1140
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            4     2      2    1018
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (3) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_next                                            22    18      4    2208
                                              6 COMMON     4     0      4
                                              0 BANK0     18    18      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _calc_money                                          14     8      6    1741
                                              6 COMMON     6     0      6
                                              0 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1460
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_money
     ___wmul
   _get_next
     ___wmul
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_init
     _lcd_cmd
   _lcd_set_cursor
     _command
       _lcd_cmd
   _print_money
     _lcd_clear
       _lcd_print
         _command
       _lcd_set_cursor
     _lcd_print
     _lcd_set_cursor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
   _print_remaing
     ___wmul
     _lcd_clear
     _lcd_print
     _lcd_set_cursor
     _sprintf
   _print_train
     _lcd_clear
     _lcd_print
     _lcd_set_cursor
     _sprintf
   _read_date
     __read
       _bcd_2_decimal
         ___bmul
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
       _i2c_stop
       _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               2A      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C2      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 01 21:50:18 2021

                 ___bmul@product 0072                               l20 0A25                               l23 0A1A  
                             l17 0A36                               l48 0ADF              ___wmul@multiplicand 0072  
                   lcd_clear@col 0027                     lcd_clear@row 0026                              l200 0A7C  
                            l121 0F60                              l124 0D5A                              l213 0C62  
                            l117 005F                              l230 0FFF                              l142 0A56  
                            l222 0CCB                              l151 0A28                              l207 0C0F  
                            l160 0A4A                              l145 0A3C                              l154 0A2C  
                            l163 0A81                              l219 0B5F                              l148 0A40  
                            l172 0AE8                              l245 0AB4                              l157 0A46  
                            l166 0A85                              l174 0AEC                              l254 0BC1  
                            l175 0AF6                              l424 0B6A                              l273 0ED9  
                            l169 0A8C                              l257 0D11                              l426 0B7E  
                            l194 0AA0                              l450 0AC9                              l524 04A5  
                            l197 03B5                              l525 04B6                              l537 02B8  
                            l538 02C9                              l921 0E3E                              l923 0E58  
                            l931 0526                              l932 053E                              l918 0E1C  
                            l926 0500                              l935 05AF                              l927 0509  
                            l960 0661                              l961 0664                              l963 0696  
                            l956 064F                              l949 0626                              l958 065B  
                            l959 065E                              l887 0BE7                              l992 0B28  
                            l985 0C93                              l978 07C9                              l989 0B28  
                            _abs 0B0F                              _pad 0E00                              wreg 0009  
                  calc_money@min 0026              bcd_2_decimal@number 0077                      command@mode 0072  
                    get_next@idx 0030                      get_next@min 0079                   ?_bcd_2_decimal 0070  
                ?_lcd_set_cursor 0078                             l1010 009D                             l1023 010E  
                           l2000 0242                             l1026 0B0E                             l1034 0B9F  
                           l2010 0277                             l2002 0245                             ?_abs 0073  
                           l2012 0287                             l2004 024D                             l1060 0004  
                           l2020 0E07                             l2100 05D7                             l2006 0251  
                           l2014 0295                             l2030 0E2B                             l2022 0E10  
                           l2110 05FB                             l2102 05E5                             l2016 029A  
                           l2008 0255                             l2040 0B0F                             l2032 0E30  
                           l2024 0E15                             l2112 0601                             l2104 05EA  
                           l2200 063A                             l1049 0DA9                             l1057 0C38  
                           l2050 0B81                             l2130 0076                             l2122 0060  
                           l2042 0B1C                             l1066 0B42                             l2034 0E43  
                           l2026 0E1A                             l2018 0E02                             l2114 0606  
                           l2106 05F1                             l2202 0642                             l2060 0A8E  
                           l2300 0B44                             l2044 0AF7                             l2052 0B88  
                           l2140 0099                             l2132 008A                             l2124 0066  
                           l2036 0E4C                             l2028 0E1F                             l2116 060A  
                           l2108 05F6                             l2204 0647                             l2062 0A99  
                           l2302 0B4C                             l2054 0B97                             l2142 00A2  
                           l2134 008B                             l2126 006A                             l2118 0613  
                           l2070 04E2                             l2230 06B1                             l2222 066C  
                           l2206 064B                             l2310 0A44                             l2304 0B50  
                           l2056 0B98                             l2048 0B7F                             l2152 00F2  
                           l2144 00B6                             l2128 006C                             l2080 0534  
                           l2072 0505                             l2064 04B9                             l2232 06B9  
                           l2240 06D1                             l2208 0651                             l2224 0690  
                           l2320 0AF2                             l2312 0AE1                             l2400 0BBD  
                           l2410 02DA                             l2170 0CAB                             l2306 0B56  
                           l2154 00F8                             l2138 0092                             l2090 057A  
                           l2082 0539                             l2074 0518                             l2066 04C9  
                           l2242 06E1                             l2250 0713                             l2234 06C6  
                           l2226 069B                             l2218 0667                             l2330 0C65  
                           l2322 0AF5                             l2314 0AE7                             l2404 0A2D  
                           l2500 0FB2                             l2420 0300                             l2412 02DE  
                           l2180 0CC1                             l2172 0CAF                             l2156 00FE  
                           l2148 00D6                             l2092 057E                             l2084 0543  
                           l2076 051E                             l2068 04DC                             l2252 0725  
                           l2244 06E9                             l2236 06CA                             l2228 069F  
                           l2332 0C69                             l2316 0AED                             l2308 0A41  
                           l2350 0AD5                             l2342 0ACA                             l2502 0FBC  
                           l2430 0317                             l2422 0304                             l2414 02E2  
                           l2406 02CA                             l2182 0CC6                             l2174 0CB4  
                           l2158 010A                             l2094 0582                             l2086 0546  
                           l2078 052E                             l2262 0771                             l2254 0736  
                           l2238 06CB                             l2334 0C6D                             l2510 0005  
                           l2190 0ABF                             l2326 0AA2                             l2318 0AF1  
                           l2352 0ADA                             l2344 0ACD                             l2360 0A17  
                           l2504 0FC1                             l2440 0337                             l2432 0327  
                           l2424 030B                             l2416 02F5                             l2408 02D6  
                           l2176 0CB9                             l2168 0C95                             l2096 05BD  
                           l2088 054B                             l2280 07BF                             l2264 0782  
                           l2272 079B                             l2256 073E                             l2248 070D  
                           l2336 0C81                             l2520 0EDA                             l2512 0027  
                           l2192 0AC1                             l2184 0AB6                             l2600 013C  
                           l2354 0A1F                             l2346 0AD0                             l2506 0FC5  
                           l2450 0363                             l2442 033B                             l2434 032B  
                           l2426 030F                             l2418 02FC                             l2178 0CBD  
                           l2290 0C3B                             l2362 0BE8                             l2098 05CA  
                           l2274 07A3                             l2266 078A                             l2258 0757  
                           l2338 0C8B                             l2530 0F44                             l2522 0EDD  
                           l2514 002C                             l2194 0AC8                             l2186 0AB7  
                           l2610 015C                             l2602 013D                             l2356 0A22  
                           l2348 0AD2                             l2540 0E72                             l2508 0FCB  
                           l2460 037E                             l2452 0367                             l2444 033F  
                           l2436 032F                             l2428 0313                             l2292 0C51  
                           l2380 0BFF                             l2268 0795                             l2532 0F53  
                           l2524 0EFC                             l2516 0033                             l2188 0ABB  
                           l2620 01A0                             l2612 016C                             l2604 013F  
                           l2358 0A23                             l2550 0E86                             l2542 0E78  
                           l1902 0A4B                             l2470 03AA                             l2462 0382  
                           l2454 036B                             l2446 0343                             l2438 0333  
                           l2294 0C53                             l2382 0C05                             l2374 0BEB  
                           l1910 0C15                             l2278 07A6                             l2198 0629  
                           l2390 0BCE                             l2526 0F38                             l2518 0052  
                           l2622 01A6                             l2614 0172                             l2606 0143  
                           l2536 0E59                             l1904 0A4B                             l2472 0A6F  
                           l2464 039E                             l2456 0376                             l2448 035F  
                           l2296 0C5D                             l2384 0C09                             l2376 0BF3  
                           l2368 0BEA                             l1912 0C23                             l1920 0B33  
                           l2392 0BD0                             l2560 0D12                             l2528 0F3D  
                           l2480 0CEC                             l2616 017E                             l2608 014C  
                           l2546 0E7F                             l2538 0E6E                             l2490 0F63  
                           l1906 0A52                             l1930 0A26                             l2474 0A73  
                           l2466 03A2                             l2458 037A                             l2298 0B43  
                           l2378 0BFA                             l1914 0C28                             l1922 0B3C  
                           l2394 0BDF                             l2386 0BC4                             l2562 0D34  
                           l2482 0CF0                             l2618 0184                             l2570 010F  
                           l1940 0B66                             l2556 0EB0                             l2548 0E81  
                           l2492 0F7B                             l1932 0A7E                             l2476 0A78  
                           l2468 03A6                             l1908 0C12                             l1916 0B2A  
                           l2388 0BCC                             l2564 0D39                             l2484 0CFB  
                           l2580 011C                             l2572 0112                             l1942 0B6F  
                           l1926 0A37                             l1934 0A89                             l1950 03B6  
                           l1918 0B2F                             l2566 0D40                             l2398 0BA1  
                           l2486 0D06                             l2478 0CCD                             l2590 0129  
                           l2582 011D                             l2574 0115                             l1944 0B74  
                           l1936 0B60                             l2488 0F61                             l1928 0A3A  
                           l1960 040B                             l1952 03B7                             l2568 0D4D  
                           l2592 012E                             l2584 011E                             l2576 0117  
                           l1946 0B7A                             l1938 0B62                             l2498 0F7C  
                           l2690 00AE                             l1970 0431                             l1962 040F  
                           l1954 03C1                             l1890 0D65                             l2594 0132  
                           l2586 0121                             l2578 011A                             l1980 0473  
                           l1972 0435                             l1964 0419                             l1956 03E2  
                           l1892 0D6A                             l2596 0134                             l2588 0124  
                           l1982 0474                             l1974 0439                             l1966 0426  
                           l1958 03EC                             l1990 01E1                             l1894 0D74  
                           l1886 0D5B                             l2598 0138                             ?_pad 0024  
                           l1976 0441                             l1968 0429                             l1984 0482  
                           l1992 01EB                             l1896 0D91                             l1888 0D60  
                           l2688 067F                             l1986 0487                             l1978 0463  
                           l1994 020C                             l1898 0DA1                             l1996 0216  
                           l1988 01E0                             l1998 0235                             STR_1 0802  
                           STR_2 0802                             STR_3 0802                             STR_4 0830  
                           STR_5 0814                             STR_6 0824                             STR_7 0840  
                           u1100 0A40                             u1020 0D60                             u1101 0A3F  
                           u1021 0D5F                             u1110 0A2C                             u1030 0D65  
                           u1111 0A2B                             u1031 0D64                             u1120 0A85  
                           u1200 03EC                             u1040 0D74                             u2000 0184  
                           u1121 0A84                             u1201 03EB                             u1041 0D73  
                           u2001 0183                             u1130 0A89                             u1050 0D91  
                           u2010 01A6                             u1131 0A88                             u1051 0D90  
                           u2011 01A5                             u1140 0B66                             u1060 0A52  
                           u1220 0416                             u1141 0B65                             u1061 0A51  
                           u1070 0A56                             u1230 0426                             u1310 0216  
                           u1071 0A55                             u1231 0425                             u1311 0215  
                           u1055 0D8D                             u1240 0439                             u1080 0C38  
                           u1400 0E15                             u1241 0438                             u1081 0C37  
                           u1401 0E14                             u1170 0B7A                             u1250 0463  
                           u1330 0242                             u1090 0B3C                             u1410 0E3E  
                           u1171 0B79                             u1155 0B6B                             u2107 0344  
                           u1251 0462                             u1331 0241                             u1091 0B3B  
                           u1411 0E3D                             u2027 0147                             u1260 0482  
                           u1180 03C1                             u1340 0255                             u1420 0E43  
                           u1500 04E2                             u1165 0B70                             u2117 0360  
                           u2037 0CBA                             u1261 0481                             u1181 03C0  
                           u1341 0254                             u1421 0E42                             u1501 04E1  
                           _LATA 010C                             u1270 0487                             u1350 0277  
                           u1430 0B1C                             _LATB 010D                             u2127 0372  
                           u2047 02CF                             u1271 0486                             u1255 045F  
                           u1351 0276                             u1431 0B1B                             u1415 0E3A  
                           u1440 0B07                             u1360 0295                             u1600 05EA  
                           u1520 0505                             u2137 0383                             u2057 02E5  
                           u1441 0B05                             u1361 0294                             u1601 05E9  
                           u1521 0504                             u1450 0B08                             u1370 029A  
                           u1290 01EB                             u1610 05F1                             u1530 0518  
                           u2147 039F                             u2067 02F8                             u1371 0299  
                           u1355 0273                             u1291 01EA                             u1435 0B18  
                           u1611 05F0                             u1531 0517                             u1460 0B88  
                           u1700 00FE                             u1620 05F6                             u1540 0534  
                           u2157 03B1                             u2077 0309                             u1461 0B87  
                           u1701 00FD                             u1621 05F5                             u1541 0533  
                           u1470 0B97                             u1390 0E07                             u1630 0601  
                           u1550 0539                             u2167 0A79                             u2087 0318  
                           u1471 0B96                             u1391 0E06                             u1631 0600  
                           u1551 0538                             u1535 0514                             u1640 0076  
                           u1560 05BD                             u1480 04D4                             u1800 0707  
                           u1720 0ABB                             u2177 0A9D                             u2097 0328  
                           u1641 0075                             u1561 05BC                             u1481 04D2  
                           u1721 0ABA                             u1650 008A                             u1570 05CA  
                           u1490 04D5                             u1810 0713                             u1730 0AC8  
                           u1715 0CA0                             u1651 0089                             u1571 05C9  
                           u1811 0712                             u1731 0AC7                             u1660 0098  
                           u1580 05D7                             u1820 0725                             u1740 063A  
                           u1900 0C8B                             u1661 0097                             u1581 05D6  
                           u1565 05B9                             u1821 0724                             u1741 0639  
                           u1901 0C8A                             u1910 0C05                             u1670 00EB  
                           u1590 05E5                             u1830 0736                             u1750 0696  
                           u1911 0C04                             u1671 00E9                             u1591 05E4  
                           u1831 0735                             u1751 0695                             u1920 0C0F  
                           u1680 00EC                             u1840 0782                             u1760 069B  
                           u1921 0C0E                             u1585 05D3                             u1841 0781  
                           u1761 069A                             u1930 0FBC                             u1850 0C51  
                           u1690 00F8                             u1770 06B1                             u1931 0FBB  
                           u1851 0C50                             u1691 00F7                             u1595 05E1  
                           u1771 06B0                             u1940 0FCB                             u1860 0B5F  
                           u1780 06CA                             u1941 0FCA                             u1861 0B5E  
                           u1781 06C9                             u1950 0E6E                             u1790 0706  
                           u1870 0A4A                             u1951 0E6D                             u1935 0FB8  
                           u1791 0704                             u1871 0A49                             u1960 0E78  
                           u1880 0AEC                             u1961 0E77                             u1881 0AEB  
                           u1970 0E7E                             u1971 0E7D                             u1980 0E86  
                           u1981 0E85                             u1990 0172                             u1895 0AAC  
                           u1991 0171                             _WPUA 020C                             _WPUB 020D  
                           abs@a 0073                             _dbuf 0120                             _atoi 0060  
                ??_lcd_backlight 0072                             _main 010F                             _dtoa 04B7  
                           _line 00D0                             _prec 00C9                             _nout 00C5  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                             start 0002                   calc_money@date 0076  
                 calc_money@hour 0024                ___bmul@multiplier 0073                     get_next@hour 0078  
                   get_next@next 0076                            ??_abs 0075                            ??_pad 007C  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0A26                  __end_of___aodiv 04B7  
                          ?_atoi 0076                            ?_main 0070                            ?_dtoa 0030  
                __end_of___aomod 02CA                      i2c_read@ack 0071                     vfpfcnvrt@fmt 004E  
                          _TRISA 008C                            _TRISB 008D                     lcd_print@cmd 007B  
                   lcd_print@str 0078                  __end_of_lcd_cmd 0AA1                  __end_of_command 0CCC  
                          __read 0BA0                            _flags 00CB                   _WDT_Initialize 0A17  
                          _fputc 0D5B                            _fputs 0C10                  __end_of_isdigit 0B0F  
                          _money 00CD                            atoi@n 0027                            pad@fp 002B  
                          atoi@s 0076                            _width 00C7                            _putch 0004  
                          dtoa@d 0030                            dtoa@i 004C                            dtoa@n 0044  
                          dtoa@p 003E                            dtoa@s 0042                            dtoa@w 0040  
                __end_of_isspace 0BA0                            status 0003                            wtemp0 007E  
                __end_of_sprintf 0BE8                  ??_print_remaing 006B                  __initialization 07CA  
                   __end_of_atoi 010F                     __end_of_main 01E0                     __end_of_dtoa 0627  
                  command@lownib 0077                 __end_of_i2c_read 0AF7                 __end_of_i2c_wait 0A57  
               __end_of_i2c_stop 0A2D                    get_next@t_min 002E                           ??_atoi 0078  
                         ??_main 00B9                           ??_dtoa 0038                  ??_bcd_2_decimal 0074  
         __end_of_WDT_Initialize 0A1B                           ?__read 0070                           ?_fputc 0070  
                         ?_fputs 0078                           _ANSELA 018C                           ?_putch 0070  
                         _ANSELB 018D                           _BORCON 0116                 print_money@money 00B3  
                   i2c_read@data 0072                           _OSCCON 0099                           u121lld 040B  
                         u130lld 020A                           u132lld 0235                    vfpfcnvrt@done 005E  
                         u119lld 03E0                           u151lld 0500                           u128lld 04A5  
                         u138lld 02B8                           _WDTCON 0097               __size_of_i2c_start 000A  
             __size_of_i2c_write 0010                     vfprintf@cfmt 0069                 __end_of_lcd_init 03B6  
               __end_of_get_next 1000                           ___bmul 0AB5                        ??___aodiv 0070  
                      ??___aomod 0070                           ___wmul 0B60                           pad@buf 0024  
                         _trains 211A                        ??_lcd_cmd 0071                           dtoa@fp 003D  
                      ??_command 0073                           _strlen 0B29                     __pdataBIGRAM 211A  
                         fputc@c 0070                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023                        ??_isdigit 0072               _i2c_repeated_start 0A41  
                      ??_isspace 0072                  ?_WDT_Initialize 0070                           putch@c 0070  
               __end_of_vfprintf 0C94                        ??_sprintf 007D              ?_i2c_repeated_start 0070  
              _SYSTEM_Initialize 0A2D                     ?_print_money 00AD          __end_of__initialization 07FD  
                   ?_print_train 00AD               ?_SYSTEM_Initialize 0070            print_remaing@next_min 00B7  
               print_train@next1 00AF              ___bmul@multiplicand 0070                   command@highnib 0076  
                 __pcstackCOMMON 0070                     __pidataBANK1 0A1B              ??_SYSTEM_Initialize 0070  
                  __end_of__read 0BC2                    __end_of_fputc 0DAA                    __end_of_fputs 0C39  
           ??_i2c_repeated_start 0070                    __end_of_putch 0005                __end_of_i2c_start 0A41  
               ??_lcd_set_cursor 0079                __end_of_i2c_write 0A8D                   _OPTION_REGbits 0095  
                     _calc_money 0E59               __size_of_lcd_clear 0028                          ??__read 0078  
             __size_of_lcd_print 001D                          ??_fputc 0073        __end_of_SYSTEM_Initialize 0A37  
                        ??_fputs 0079                       __read@data 007A                          ??_putch 0070  
                     __pbssBANK0 006F                       __pbssBANK1 00C5                       __pbssBANK2 0120  
                      ?_i2c_read 0070                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
             __size_of_read_date 0046                print_remaing@date 00AD                print_remaing@next 00B3  
                     __pmaintext 010F                          ?___bmul 0070                          ?___wmul 0070  
                        _APFCON0 011D                          _APFCON1 011E                          ?_strlen 0070  
             __size_of_vfpfcnvrt 01A3                          _OSCTUNE 0098                          _SSP2ADD 021A  
                        _SSP2BUF 0219                        ?_lcd_init 0070                        ?_get_next 0076  
                     ??_i2c_read 0070                       ??_i2c_wait 0070                       ??_i2c_stop 0070  
           __end_of_HOUR_4_MONEY 083E            __end_of_lcd_backlight 0A7D                __end_of_lcd_clear 0C10  
                __size_of___bmul 0015                          ___aodiv 03B6                __end_of_lcd_print 0B60  
                        ___aomod 01E0                  __size_of___wmul 001F                        ?_vfprintf 0063  
                        __ptext1 0CCC                          __ptext2 0BA0                          __ptext3 0A41  
                        __ptext4 0AE0                          __ptext5 0AA1                          __ptext6 0AB5  
                        __ptext7 0005                          __ptext8 0EDA                          __ptext9 0D12  
                        _lcd_cmd 0A8D             __end_of_REGULAR_HOUR 0802                          _command 0C94  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 0A1F                     __size_of_abs 001A  
                   __size_of_pad 0059                          _isdigit 0AF7                __end_of_read_date 0D12  
                    ?_calc_money 0076         ??_PIN_MANAGER_Initialize 0070                          _isspace 0B7F  
                        atoi@neg 0020       __size_of_SYSTEM_Initialize 000A                          _sprintf 0BC2  
                        clrloop0 0A58                       ??_lcd_init 0072                       ??_get_next 0020  
           end_of_initialization 07FD                          fputc@fp 0072                          init_ram 0A63  
                        fputs@fp 0078                          initloop 0A64                    __read@address 0079  
           __size_of_print_money 0049             __size_of_print_train 005B            __end_of_print_remaing 0F61  
              __end_of_vfpfcnvrt 07CA                       ??_vfprintf 0066                          strlen@a 0073  
                        strlen@s 0074                 ??_WDT_Initialize 0070                    i2c_write@data 0070  
      lcd_set_cursor@row_offsets 0020                       lcd_cmd@cmd 0071            __end_of_bcd_2_decimal 0AB5  
                     command@val 0075              __size_of_calc_money 0081                   __end_of___bmul 0ACA  
                  __pidataBIGRAM 0DAA                      vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 0062  
                    vfpfcnvrt@ll 0056                   __end_of___wmul 0B7F           ?_OSCILLATOR_Initialize 0070  
                 __end_of_strlen 0B43              start_initialization 07CA  __size_of_PIN_MANAGER_Initialize 0016  
                    __end_of_abs 0B29                        _i2c_start 0A37                      __end_of_pad 0E59  
                      _i2c_write 0A7D                  print_money@date 00AD                __size_of_i2c_read 0017  
              __size_of_i2c_wait 000C                __size_of_i2c_stop 0007                  get_next@now_min 002C  
                    vfprintf@fmt 0063                         ??___bmul 0071                         ??___wmul 0074  
                    __pdataBANK1 00E0      __size_of_i2c_repeated_start 000A                         ??_strlen 0072  
                   _HOUR_4_MONEY 083C              lcd_set_cursor@F2502 00E0                        ___latbits 0001  
                print_train@next 00AD                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
               ___aodiv@dividend 0028             print_remaing@now_min 00B5                       ?_i2c_start 0070  
                     ?_i2c_write 0070                __size_of_lcd_init 00EC                __size_of_get_next 009F  
                   _REGULAR_HOUR 0800                        _atoi$1064 0022                        _atoi$1065 0026  
                      _atoi$1066 0024           _PIN_MANAGER_Initialize 0ACA                        _dtoa$1029 003B  
                       ?___aodiv 0020                         ?___aomod 0020                 ___aodiv@quotient 0073  
                      _lcd_clear 0BE8                        _lcd_print 0B43                         ?_lcd_cmd 0070  
              __size_of_vfprintf 0031                         ?_command 0072                         ?_isdigit 0070  
                   ??_calc_money 0020              __end_of_MIN_4_MONEY 0840                         ?_isspace 0070  
                 __size_of__read 0022                         ?_sprintf 00A0                        _read_date 0CCC  
                 __size_of_fputc 004F                   __size_of_fputs 0029                   __size_of_putch 0001  
        __size_of_lcd_set_cursor 002A                   ___wmul@product 0074                        clear_ram0 0A57  
             __end_of_calc_money 0EDA                         _SSP2CON1 021D                         _SSP2CON2 021E  
                       _SSP2STAT 021C                       ?_lcd_clear 0070                        _vfpfcnvrt 0627  
                     ?_lcd_print 0078                ___wmul@multiplier 0070                        get_next@i 0031  
                      main@next1 00BB           __size_of_lcd_backlight 000E                      ??_i2c_start 0070  
                   _isspace$1082 0074                      ??_i2c_write 0070                       ?_read_date 0070  
                  ??_print_money 006B                         _i2c_read 0AE0                    ??_print_train 006B  
                       _i2c_wait 0A4B                         _i2c_stop 0A26                       vfprintf@ap 0065  
                     vfprintf@fp 0068          ??_OSCILLATOR_Initialize 0070                 __size_of___aodiv 0101  
               __size_of___aomod 00EA                       ?_vfpfcnvrt 004E                      _MIN_4_MONEY 083E  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071                 __size_of_lcd_cmd 0014  
               __size_of_command 0038                       sprintf@fmt 00A0                 __size_of_isdigit 0018  
               __size_of_isspace 0021                         __ptext10 0BC2                         __ptext11 0C63  
                       __ptext20 01E0                         __ptext12 0627                         __ptext21 03B6  
                       __ptext13 04B7                         __ptext30 0A6F                         __ptext22 0060  
                       __ptext14 0E00                         __ptext31 0A8D                         __ptext23 0B7F  
                       __ptext15 0B29                         __ptext40 0A17                         __ptext32 0A7D  
                       __ptext24 0AF7                         __ptext16 0C10                         __ptext41 0ACA  
                       __ptext33 0A26                         __ptext25 0BE8                         __ptext17 0D5B  
                       __ptext42 0A1F                         __ptext34 0A37                         __ptext26 0C39  
                       __ptext18 0004                         __ptext35 0A4B                         __ptext27 0B43  
                       __ptext19 0B0F                         __ptext36 0F61                         __ptext28 0C94  
                       __ptext37 0E59                         __ptext29 02CA                         __ptext38 0B60  
                       __ptext39 0A2D           __size_of_print_remaing 0087                         _lcd_init 02CA  
                       _get_next 0F61                     _SSP2CON1bits 021D                     _SSP2CON2bits 021E  
               __size_of_sprintf 0026                    __size_of_atoi 00AF                    __size_of_main 00D1  
                  __size_of_dtoa 0170                    _lcd_backlight 0A6F              __end_of_print_money 0D5B  
            __end_of_print_train 0060           __size_of_bcd_2_decimal 0014                         _vfprintf 0C63  
                       main@date 00BF                      ??_lcd_clear 007C                         main@next 00BD  
                   _SSP2STATbits 021C                      ??_lcd_print 007A                 ___aomod@dividend 0028  
                 _vfpfcnvrt$1044 0060                         isdigit@c 0070                    read_date@date 007C  
                    _regular_flg 00CF                      ??_read_date 007B          __size_of_WDT_Initialize 0004  
                 _lcd_set_cursor 0C39                lcd_set_cursor@cmd 0025                lcd_set_cursor@col 0024  
                      sprintf@ap 00A6                lcd_set_cursor@row 0078                         isspace@c 0070  
        ?_PIN_MANAGER_Initialize 0070                   ?_lcd_backlight 0070       __end_of_i2c_repeated_start 0A4B  
                  _print_remaing 0EDA                  ___aomod@divisor 0020                      ??_vfpfcnvrt 0050  
                ___aomod@counter 0071                    __pstringtext1 083C                    __pstringtext2 083E  
                  __pstringtext3 0800                    __pstringtext4 0814                    __pstringtext5 0824  
                  __pstringtext6 0830                    __pstringtext7 0840                    __pstringtext8 0000  
                       sprintf@f 00A8                         sprintf@s 00A7           __end_of_lcd_set_cursor 0C63  
                  _bcd_2_decimal 0AA1                     ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0AE0  
                    _print_money 0D12                      _print_train 0005                     ___aomod@sign 0072  
                  __backlightval 006F                   ?_print_remaing 00AD  
