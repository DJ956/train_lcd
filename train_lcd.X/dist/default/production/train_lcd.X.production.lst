

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 20:28:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.31
    76                           ; Generated 13/10/2020 GMT
    77                           ; 
    78                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1827 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0118                     	;# 
   166  0119                     	;# 
   167  011A                     	;# 
   168  011B                     	;# 
   169  011D                     	;# 
   170  011E                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0191                     	;# 
   174  0191                     	;# 
   175  0192                     	;# 
   176  0193                     	;# 
   177  0193                     	;# 
   178  0193                     	;# 
   179  0194                     	;# 
   180  0195                     	;# 
   181  0196                     	;# 
   182  0199                     	;# 
   183  019A                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019C                     	;# 
   189  019C                     	;# 
   190  019D                     	;# 
   191  019E                     	;# 
   192  019F                     	;# 
   193  020C                     	;# 
   194  020D                     	;# 
   195  0211                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0212                     	;# 
   199  0213                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0214                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0216                     	;# 
   207  0216                     	;# 
   208  0217                     	;# 
   209  0217                     	;# 
   210  0219                     	;# 
   211  021A                     	;# 
   212  021B                     	;# 
   213  021C                     	;# 
   214  021D                     	;# 
   215  021E                     	;# 
   216  021F                     	;# 
   217  0291                     	;# 
   218  0291                     	;# 
   219  0292                     	;# 
   220  0293                     	;# 
   221  0294                     	;# 
   222  0295                     	;# 
   223  0295                     	;# 
   224  0296                     	;# 
   225  0298                     	;# 
   226  0298                     	;# 
   227  0299                     	;# 
   228  029A                     	;# 
   229  029B                     	;# 
   230  029C                     	;# 
   231  029C                     	;# 
   232  029D                     	;# 
   233  029E                     	;# 
   234  029E                     	;# 
   235  0311                     	;# 
   236  0311                     	;# 
   237  0312                     	;# 
   238  0313                     	;# 
   239  0318                     	;# 
   240  0318                     	;# 
   241  0319                     	;# 
   242  031A                     	;# 
   243  0394                     	;# 
   244  0395                     	;# 
   245  0396                     	;# 
   246  039A                     	;# 
   247  039C                     	;# 
   248  039D                     	;# 
   249  039E                     	;# 
   250  039F                     	;# 
   251  0415                     	;# 
   252  0416                     	;# 
   253  0417                     	;# 
   254  041C                     	;# 
   255  041D                     	;# 
   256  041E                     	;# 
   257  0FE4                     	;# 
   258  0FE5                     	;# 
   259  0FE6                     	;# 
   260  0FE7                     	;# 
   261  0FE8                     	;# 
   262  0FE9                     	;# 
   263  0FEA                     	;# 
   264  0FEB                     	;# 
   265  0FED                     	;# 
   266  0FEE                     	;# 
   267  0FEF                     	;# 
   268  0000                     	;# 
   269  0001                     	;# 
   270  0002                     	;# 
   271  0003                     	;# 
   272  0004                     	;# 
   273  0005                     	;# 
   274  0006                     	;# 
   275  0007                     	;# 
   276  0008                     	;# 
   277  0009                     	;# 
   278  000A                     	;# 
   279  000B                     	;# 
   280  000C                     	;# 
   281  000D                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  0111                     	;# 
   317  0112                     	;# 
   318  0113                     	;# 
   319  0114                     	;# 
   320  0115                     	;# 
   321  0116                     	;# 
   322  0117                     	;# 
   323  0118                     	;# 
   324  0119                     	;# 
   325  011A                     	;# 
   326  011B                     	;# 
   327  011D                     	;# 
   328  011E                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  0191                     	;# 
   332  0191                     	;# 
   333  0192                     	;# 
   334  0193                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0194                     	;# 
   338  0195                     	;# 
   339  0196                     	;# 
   340  0199                     	;# 
   341  019A                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019C                     	;# 
   347  019C                     	;# 
   348  019D                     	;# 
   349  019E                     	;# 
   350  019F                     	;# 
   351  020C                     	;# 
   352  020D                     	;# 
   353  0211                     	;# 
   354  0211                     	;# 
   355  0212                     	;# 
   356  0212                     	;# 
   357  0213                     	;# 
   358  0213                     	;# 
   359  0214                     	;# 
   360  0214                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0215                     	;# 
   364  0216                     	;# 
   365  0216                     	;# 
   366  0217                     	;# 
   367  0217                     	;# 
   368  0219                     	;# 
   369  021A                     	;# 
   370  021B                     	;# 
   371  021C                     	;# 
   372  021D                     	;# 
   373  021E                     	;# 
   374  021F                     	;# 
   375  0291                     	;# 
   376  0291                     	;# 
   377  0292                     	;# 
   378  0293                     	;# 
   379  0294                     	;# 
   380  0295                     	;# 
   381  0295                     	;# 
   382  0296                     	;# 
   383  0298                     	;# 
   384  0298                     	;# 
   385  0299                     	;# 
   386  029A                     	;# 
   387  029B                     	;# 
   388  029C                     	;# 
   389  029C                     	;# 
   390  029D                     	;# 
   391  029E                     	;# 
   392  029E                     	;# 
   393  0311                     	;# 
   394  0311                     	;# 
   395  0312                     	;# 
   396  0313                     	;# 
   397  0318                     	;# 
   398  0318                     	;# 
   399  0319                     	;# 
   400  031A                     	;# 
   401  0394                     	;# 
   402  0395                     	;# 
   403  0396                     	;# 
   404  039A                     	;# 
   405  039C                     	;# 
   406  039D                     	;# 
   407  039E                     	;# 
   408  039F                     	;# 
   409  0415                     	;# 
   410  0416                     	;# 
   411  0417                     	;# 
   412  041C                     	;# 
   413  041D                     	;# 
   414  041E                     	;# 
   415  0FE4                     	;# 
   416  0FE5                     	;# 
   417  0FE6                     	;# 
   418  0FE7                     	;# 
   419  0FE8                     	;# 
   420  0FE9                     	;# 
   421  0FEA                     	;# 
   422  0FEB                     	;# 
   423  0FED                     	;# 
   424  0FEE                     	;# 
   425  0FEF                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0008                     	;# 
   435  0009                     	;# 
   436  000A                     	;# 
   437  000B                     	;# 
   438  000C                     	;# 
   439  000D                     	;# 
   440  0011                     	;# 
   441  0012                     	;# 
   442  0013                     	;# 
   443  0014                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0016                     	;# 
   447  0017                     	;# 
   448  0018                     	;# 
   449  0019                     	;# 
   450  001A                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  008C                     	;# 
   456  008D                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0094                     	;# 
   461  0095                     	;# 
   462  0096                     	;# 
   463  0097                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009A                     	;# 
   467  009B                     	;# 
   468  009B                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  0111                     	;# 
   475  0112                     	;# 
   476  0113                     	;# 
   477  0114                     	;# 
   478  0115                     	;# 
   479  0116                     	;# 
   480  0117                     	;# 
   481  0118                     	;# 
   482  0119                     	;# 
   483  011A                     	;# 
   484  011B                     	;# 
   485  011D                     	;# 
   486  011E                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0191                     	;# 
   490  0191                     	;# 
   491  0192                     	;# 
   492  0193                     	;# 
   493  0193                     	;# 
   494  0193                     	;# 
   495  0194                     	;# 
   496  0195                     	;# 
   497  0196                     	;# 
   498  0199                     	;# 
   499  019A                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019C                     	;# 
   505  019C                     	;# 
   506  019D                     	;# 
   507  019E                     	;# 
   508  019F                     	;# 
   509  020C                     	;# 
   510  020D                     	;# 
   511  0211                     	;# 
   512  0211                     	;# 
   513  0212                     	;# 
   514  0212                     	;# 
   515  0213                     	;# 
   516  0213                     	;# 
   517  0214                     	;# 
   518  0214                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0216                     	;# 
   523  0216                     	;# 
   524  0217                     	;# 
   525  0217                     	;# 
   526  0219                     	;# 
   527  021A                     	;# 
   528  021B                     	;# 
   529  021C                     	;# 
   530  021D                     	;# 
   531  021E                     	;# 
   532  021F                     	;# 
   533  0291                     	;# 
   534  0291                     	;# 
   535  0292                     	;# 
   536  0293                     	;# 
   537  0294                     	;# 
   538  0295                     	;# 
   539  0295                     	;# 
   540  0296                     	;# 
   541  0298                     	;# 
   542  0298                     	;# 
   543  0299                     	;# 
   544  029A                     	;# 
   545  029B                     	;# 
   546  029C                     	;# 
   547  029C                     	;# 
   548  029D                     	;# 
   549  029E                     	;# 
   550  029E                     	;# 
   551  0311                     	;# 
   552  0311                     	;# 
   553  0312                     	;# 
   554  0313                     	;# 
   555  0318                     	;# 
   556  0318                     	;# 
   557  0319                     	;# 
   558  031A                     	;# 
   559  0394                     	;# 
   560  0395                     	;# 
   561  0396                     	;# 
   562  039A                     	;# 
   563  039C                     	;# 
   564  039D                     	;# 
   565  039E                     	;# 
   566  039F                     	;# 
   567  0415                     	;# 
   568  0416                     	;# 
   569  0417                     	;# 
   570  041C                     	;# 
   571  041D                     	;# 
   572  041E                     	;# 
   573  0FE4                     	;# 
   574  0FE5                     	;# 
   575  0FE6                     	;# 
   576  0FE7                     	;# 
   577  0FE8                     	;# 
   578  0FE9                     	;# 
   579  0FEA                     	;# 
   580  0FEB                     	;# 
   581  0FED                     	;# 
   582  0FEE                     	;# 
   583  0FEF                     	;# 
   584  0000                     	;# 
   585  0001                     	;# 
   586  0002                     	;# 
   587  0003                     	;# 
   588  0004                     	;# 
   589  0005                     	;# 
   590  0006                     	;# 
   591  0007                     	;# 
   592  0008                     	;# 
   593  0009                     	;# 
   594  000A                     	;# 
   595  000B                     	;# 
   596  000C                     	;# 
   597  000D                     	;# 
   598  0011                     	;# 
   599  0012                     	;# 
   600  0013                     	;# 
   601  0014                     	;# 
   602  0015                     	;# 
   603  0016                     	;# 
   604  0016                     	;# 
   605  0017                     	;# 
   606  0018                     	;# 
   607  0019                     	;# 
   608  001A                     	;# 
   609  001B                     	;# 
   610  001C                     	;# 
   611  001E                     	;# 
   612  001F                     	;# 
   613  008C                     	;# 
   614  008D                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  010C                     	;# 
   631  010D                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0118                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011B                     	;# 
   643  011D                     	;# 
   644  011E                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  0191                     	;# 
   648  0191                     	;# 
   649  0192                     	;# 
   650  0193                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0194                     	;# 
   654  0195                     	;# 
   655  0196                     	;# 
   656  0199                     	;# 
   657  019A                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019C                     	;# 
   663  019C                     	;# 
   664  019D                     	;# 
   665  019E                     	;# 
   666  019F                     	;# 
   667  020C                     	;# 
   668  020D                     	;# 
   669  0211                     	;# 
   670  0211                     	;# 
   671  0212                     	;# 
   672  0212                     	;# 
   673  0213                     	;# 
   674  0213                     	;# 
   675  0214                     	;# 
   676  0214                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0216                     	;# 
   681  0216                     	;# 
   682  0217                     	;# 
   683  0217                     	;# 
   684  0219                     	;# 
   685  021A                     	;# 
   686  021B                     	;# 
   687  021C                     	;# 
   688  021D                     	;# 
   689  021E                     	;# 
   690  021F                     	;# 
   691  0291                     	;# 
   692  0291                     	;# 
   693  0292                     	;# 
   694  0293                     	;# 
   695  0294                     	;# 
   696  0295                     	;# 
   697  0295                     	;# 
   698  0296                     	;# 
   699  0298                     	;# 
   700  0298                     	;# 
   701  0299                     	;# 
   702  029A                     	;# 
   703  029B                     	;# 
   704  029C                     	;# 
   705  029C                     	;# 
   706  029D                     	;# 
   707  029E                     	;# 
   708  029E                     	;# 
   709  0311                     	;# 
   710  0311                     	;# 
   711  0312                     	;# 
   712  0313                     	;# 
   713  0318                     	;# 
   714  0318                     	;# 
   715  0319                     	;# 
   716  031A                     	;# 
   717  0394                     	;# 
   718  0395                     	;# 
   719  0396                     	;# 
   720  039A                     	;# 
   721  039C                     	;# 
   722  039D                     	;# 
   723  039E                     	;# 
   724  039F                     	;# 
   725  0415                     	;# 
   726  0416                     	;# 
   727  0417                     	;# 
   728  041C                     	;# 
   729  041D                     	;# 
   730  041E                     	;# 
   731  0FE4                     	;# 
   732  0FE5                     	;# 
   733  0FE6                     	;# 
   734  0FE7                     	;# 
   735  0FE8                     	;# 
   736  0FE9                     	;# 
   737  0FEA                     	;# 
   738  0FEB                     	;# 
   739  0FED                     	;# 
   740  0FEE                     	;# 
   741  0FEF                     	;# 
   742  0000                     	;# 
   743  0001                     	;# 
   744  0002                     	;# 
   745  0003                     	;# 
   746  0004                     	;# 
   747  0005                     	;# 
   748  0006                     	;# 
   749  0007                     	;# 
   750  0008                     	;# 
   751  0009                     	;# 
   752  000A                     	;# 
   753  000B                     	;# 
   754  000C                     	;# 
   755  000D                     	;# 
   756  0011                     	;# 
   757  0012                     	;# 
   758  0013                     	;# 
   759  0014                     	;# 
   760  0015                     	;# 
   761  0016                     	;# 
   762  0016                     	;# 
   763  0017                     	;# 
   764  0018                     	;# 
   765  0019                     	;# 
   766  001A                     	;# 
   767  001B                     	;# 
   768  001C                     	;# 
   769  001E                     	;# 
   770  001F                     	;# 
   771  008C                     	;# 
   772  008D                     	;# 
   773  0091                     	;# 
   774  0092                     	;# 
   775  0093                     	;# 
   776  0094                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0097                     	;# 
   780  0098                     	;# 
   781  0099                     	;# 
   782  009A                     	;# 
   783  009B                     	;# 
   784  009B                     	;# 
   785  009C                     	;# 
   786  009D                     	;# 
   787  009E                     	;# 
   788  010C                     	;# 
   789  010D                     	;# 
   790  0111                     	;# 
   791  0112                     	;# 
   792  0113                     	;# 
   793  0114                     	;# 
   794  0115                     	;# 
   795  0116                     	;# 
   796  0117                     	;# 
   797  0118                     	;# 
   798  0119                     	;# 
   799  011A                     	;# 
   800  011B                     	;# 
   801  011D                     	;# 
   802  011E                     	;# 
   803  018C                     	;# 
   804  018D                     	;# 
   805  0191                     	;# 
   806  0191                     	;# 
   807  0192                     	;# 
   808  0193                     	;# 
   809  0193                     	;# 
   810  0193                     	;# 
   811  0194                     	;# 
   812  0195                     	;# 
   813  0196                     	;# 
   814  0199                     	;# 
   815  019A                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019C                     	;# 
   821  019C                     	;# 
   822  019D                     	;# 
   823  019E                     	;# 
   824  019F                     	;# 
   825  020C                     	;# 
   826  020D                     	;# 
   827  0211                     	;# 
   828  0211                     	;# 
   829  0212                     	;# 
   830  0212                     	;# 
   831  0213                     	;# 
   832  0213                     	;# 
   833  0214                     	;# 
   834  0214                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0216                     	;# 
   839  0216                     	;# 
   840  0217                     	;# 
   841  0217                     	;# 
   842  0219                     	;# 
   843  021A                     	;# 
   844  021B                     	;# 
   845  021C                     	;# 
   846  021D                     	;# 
   847  021E                     	;# 
   848  021F                     	;# 
   849  0291                     	;# 
   850  0291                     	;# 
   851  0292                     	;# 
   852  0293                     	;# 
   853  0294                     	;# 
   854  0295                     	;# 
   855  0295                     	;# 
   856  0296                     	;# 
   857  0298                     	;# 
   858  0298                     	;# 
   859  0299                     	;# 
   860  029A                     	;# 
   861  029B                     	;# 
   862  029C                     	;# 
   863  029C                     	;# 
   864  029D                     	;# 
   865  029E                     	;# 
   866  029E                     	;# 
   867  0311                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0318                     	;# 
   872  0318                     	;# 
   873  0319                     	;# 
   874  031A                     	;# 
   875  0394                     	;# 
   876  0395                     	;# 
   877  0396                     	;# 
   878  039A                     	;# 
   879  039C                     	;# 
   880  039D                     	;# 
   881  039E                     	;# 
   882  039F                     	;# 
   883  0415                     	;# 
   884  0416                     	;# 
   885  0417                     	;# 
   886  041C                     	;# 
   887  041D                     	;# 
   888  041E                     	;# 
   889  0FE4                     	;# 
   890  0FE5                     	;# 
   891  0FE6                     	;# 
   892  0FE7                     	;# 
   893  0FE8                     	;# 
   894  0FE9                     	;# 
   895  0FEA                     	;# 
   896  0FEB                     	;# 
   897  0FED                     	;# 
   898  0FEE                     	;# 
   899  0FEF                     	;# 
   900  0000                     	;# 
   901  0001                     	;# 
   902  0002                     	;# 
   903  0003                     	;# 
   904  0004                     	;# 
   905  0005                     	;# 
   906  0006                     	;# 
   907  0007                     	;# 
   908  0008                     	;# 
   909  0009                     	;# 
   910  000A                     	;# 
   911  000B                     	;# 
   912  000C                     	;# 
   913  000D                     	;# 
   914  0011                     	;# 
   915  0012                     	;# 
   916  0013                     	;# 
   917  0014                     	;# 
   918  0015                     	;# 
   919  0016                     	;# 
   920  0016                     	;# 
   921  0017                     	;# 
   922  0018                     	;# 
   923  0019                     	;# 
   924  001A                     	;# 
   925  001B                     	;# 
   926  001C                     	;# 
   927  001E                     	;# 
   928  001F                     	;# 
   929  008C                     	;# 
   930  008D                     	;# 
   931  0091                     	;# 
   932  0092                     	;# 
   933  0093                     	;# 
   934  0094                     	;# 
   935  0095                     	;# 
   936  0096                     	;# 
   937  0097                     	;# 
   938  0098                     	;# 
   939  0099                     	;# 
   940  009A                     	;# 
   941  009B                     	;# 
   942  009B                     	;# 
   943  009C                     	;# 
   944  009D                     	;# 
   945  009E                     	;# 
   946  010C                     	;# 
   947  010D                     	;# 
   948  0111                     	;# 
   949  0112                     	;# 
   950  0113                     	;# 
   951  0114                     	;# 
   952  0115                     	;# 
   953  0116                     	;# 
   954  0117                     	;# 
   955  0118                     	;# 
   956  0119                     	;# 
   957  011A                     	;# 
   958  011B                     	;# 
   959  011D                     	;# 
   960  011E                     	;# 
   961  018C                     	;# 
   962  018D                     	;# 
   963  0191                     	;# 
   964  0191                     	;# 
   965  0192                     	;# 
   966  0193                     	;# 
   967  0193                     	;# 
   968  0193                     	;# 
   969  0194                     	;# 
   970  0195                     	;# 
   971  0196                     	;# 
   972  0199                     	;# 
   973  019A                     	;# 
   974  019B                     	;# 
   975  019B                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019C                     	;# 
   979  019C                     	;# 
   980  019D                     	;# 
   981  019E                     	;# 
   982  019F                     	;# 
   983  020C                     	;# 
   984  020D                     	;# 
   985  0211                     	;# 
   986  0211                     	;# 
   987  0212                     	;# 
   988  0212                     	;# 
   989  0213                     	;# 
   990  0213                     	;# 
   991  0214                     	;# 
   992  0214                     	;# 
   993  0215                     	;# 
   994  0215                     	;# 
   995  0215                     	;# 
   996  0216                     	;# 
   997  0216                     	;# 
   998  0217                     	;# 
   999  0217                     	;# 
  1000  0219                     	;# 
  1001  021A                     	;# 
  1002  021B                     	;# 
  1003  021C                     	;# 
  1004  021D                     	;# 
  1005  021E                     	;# 
  1006  021F                     	;# 
  1007  0291                     	;# 
  1008  0291                     	;# 
  1009  0292                     	;# 
  1010  0293                     	;# 
  1011  0294                     	;# 
  1012  0295                     	;# 
  1013  0295                     	;# 
  1014  0296                     	;# 
  1015  0298                     	;# 
  1016  0298                     	;# 
  1017  0299                     	;# 
  1018  029A                     	;# 
  1019  029B                     	;# 
  1020  029C                     	;# 
  1021  029C                     	;# 
  1022  029D                     	;# 
  1023  029E                     	;# 
  1024  029E                     	;# 
  1025  0311                     	;# 
  1026  0311                     	;# 
  1027  0312                     	;# 
  1028  0313                     	;# 
  1029  0318                     	;# 
  1030  0318                     	;# 
  1031  0319                     	;# 
  1032  031A                     	;# 
  1033  0394                     	;# 
  1034  0395                     	;# 
  1035  0396                     	;# 
  1036  039A                     	;# 
  1037  039C                     	;# 
  1038  039D                     	;# 
  1039  039E                     	;# 
  1040  039F                     	;# 
  1041  0415                     	;# 
  1042  0416                     	;# 
  1043  0417                     	;# 
  1044  041C                     	;# 
  1045  041D                     	;# 
  1046  041E                     	;# 
  1047  0FE4                     	;# 
  1048  0FE5                     	;# 
  1049  0FE6                     	;# 
  1050  0FE7                     	;# 
  1051  0FE8                     	;# 
  1052  0FE9                     	;# 
  1053  0FEA                     	;# 
  1054  0FEB                     	;# 
  1055  0FED                     	;# 
  1056  0FEE                     	;# 
  1057  0FEF                     	;# 
  1058  0000                     	;# 
  1059  0001                     	;# 
  1060  0002                     	;# 
  1061  0003                     	;# 
  1062  0004                     	;# 
  1063  0005                     	;# 
  1064  0006                     	;# 
  1065  0007                     	;# 
  1066  0008                     	;# 
  1067  0009                     	;# 
  1068  000A                     	;# 
  1069  000B                     	;# 
  1070  000C                     	;# 
  1071  000D                     	;# 
  1072  0011                     	;# 
  1073  0012                     	;# 
  1074  0013                     	;# 
  1075  0014                     	;# 
  1076  0015                     	;# 
  1077  0016                     	;# 
  1078  0016                     	;# 
  1079  0017                     	;# 
  1080  0018                     	;# 
  1081  0019                     	;# 
  1082  001A                     	;# 
  1083  001B                     	;# 
  1084  001C                     	;# 
  1085  001E                     	;# 
  1086  001F                     	;# 
  1087  008C                     	;# 
  1088  008D                     	;# 
  1089  0091                     	;# 
  1090  0092                     	;# 
  1091  0093                     	;# 
  1092  0094                     	;# 
  1093  0095                     	;# 
  1094  0096                     	;# 
  1095  0097                     	;# 
  1096  0098                     	;# 
  1097  0099                     	;# 
  1098  009A                     	;# 
  1099  009B                     	;# 
  1100  009B                     	;# 
  1101  009C                     	;# 
  1102  009D                     	;# 
  1103  009E                     	;# 
  1104  010C                     	;# 
  1105  010D                     	;# 
  1106  0111                     	;# 
  1107  0112                     	;# 
  1108  0113                     	;# 
  1109  0114                     	;# 
  1110  0115                     	;# 
  1111  0116                     	;# 
  1112  0117                     	;# 
  1113  0118                     	;# 
  1114  0119                     	;# 
  1115  011A                     	;# 
  1116  011B                     	;# 
  1117  011D                     	;# 
  1118  011E                     	;# 
  1119  018C                     	;# 
  1120  018D                     	;# 
  1121  0191                     	;# 
  1122  0191                     	;# 
  1123  0192                     	;# 
  1124  0193                     	;# 
  1125  0193                     	;# 
  1126  0193                     	;# 
  1127  0194                     	;# 
  1128  0195                     	;# 
  1129  0196                     	;# 
  1130  0199                     	;# 
  1131  019A                     	;# 
  1132  019B                     	;# 
  1133  019B                     	;# 
  1134  019B                     	;# 
  1135  019B                     	;# 
  1136  019C                     	;# 
  1137  019C                     	;# 
  1138  019D                     	;# 
  1139  019E                     	;# 
  1140  019F                     	;# 
  1141  020C                     	;# 
  1142  020D                     	;# 
  1143  0211                     	;# 
  1144  0211                     	;# 
  1145  0212                     	;# 
  1146  0212                     	;# 
  1147  0213                     	;# 
  1148  0213                     	;# 
  1149  0214                     	;# 
  1150  0214                     	;# 
  1151  0215                     	;# 
  1152  0215                     	;# 
  1153  0215                     	;# 
  1154  0216                     	;# 
  1155  0216                     	;# 
  1156  0217                     	;# 
  1157  0217                     	;# 
  1158  0219                     	;# 
  1159  021A                     	;# 
  1160  021B                     	;# 
  1161  021C                     	;# 
  1162  021D                     	;# 
  1163  021E                     	;# 
  1164  021F                     	;# 
  1165  0291                     	;# 
  1166  0291                     	;# 
  1167  0292                     	;# 
  1168  0293                     	;# 
  1169  0294                     	;# 
  1170  0295                     	;# 
  1171  0295                     	;# 
  1172  0296                     	;# 
  1173  0298                     	;# 
  1174  0298                     	;# 
  1175  0299                     	;# 
  1176  029A                     	;# 
  1177  029B                     	;# 
  1178  029C                     	;# 
  1179  029C                     	;# 
  1180  029D                     	;# 
  1181  029E                     	;# 
  1182  029E                     	;# 
  1183  0311                     	;# 
  1184  0311                     	;# 
  1185  0312                     	;# 
  1186  0313                     	;# 
  1187  0318                     	;# 
  1188  0318                     	;# 
  1189  0319                     	;# 
  1190  031A                     	;# 
  1191  0394                     	;# 
  1192  0395                     	;# 
  1193  0396                     	;# 
  1194  039A                     	;# 
  1195  039C                     	;# 
  1196  039D                     	;# 
  1197  039E                     	;# 
  1198  039F                     	;# 
  1199  0415                     	;# 
  1200  0416                     	;# 
  1201  0417                     	;# 
  1202  041C                     	;# 
  1203  041D                     	;# 
  1204  041E                     	;# 
  1205  0FE4                     	;# 
  1206  0FE5                     	;# 
  1207  0FE6                     	;# 
  1208  0FE7                     	;# 
  1209  0FE8                     	;# 
  1210  0FE9                     	;# 
  1211  0FEA                     	;# 
  1212  0FEB                     	;# 
  1213  0FED                     	;# 
  1214  0FEE                     	;# 
  1215  0FEF                     	;# 
  1216  0000                     	;# 
  1217  0001                     	;# 
  1218  0002                     	;# 
  1219  0003                     	;# 
  1220  0004                     	;# 
  1221  0005                     	;# 
  1222  0006                     	;# 
  1223  0007                     	;# 
  1224  0008                     	;# 
  1225  0009                     	;# 
  1226  000A                     	;# 
  1227  000B                     	;# 
  1228  000C                     	;# 
  1229  000D                     	;# 
  1230  0011                     	;# 
  1231  0012                     	;# 
  1232  0013                     	;# 
  1233  0014                     	;# 
  1234  0015                     	;# 
  1235  0016                     	;# 
  1236  0016                     	;# 
  1237  0017                     	;# 
  1238  0018                     	;# 
  1239  0019                     	;# 
  1240  001A                     	;# 
  1241  001B                     	;# 
  1242  001C                     	;# 
  1243  001E                     	;# 
  1244  001F                     	;# 
  1245  008C                     	;# 
  1246  008D                     	;# 
  1247  0091                     	;# 
  1248  0092                     	;# 
  1249  0093                     	;# 
  1250  0094                     	;# 
  1251  0095                     	;# 
  1252  0096                     	;# 
  1253  0097                     	;# 
  1254  0098                     	;# 
  1255  0099                     	;# 
  1256  009A                     	;# 
  1257  009B                     	;# 
  1258  009B                     	;# 
  1259  009C                     	;# 
  1260  009D                     	;# 
  1261  009E                     	;# 
  1262  010C                     	;# 
  1263  010D                     	;# 
  1264  0111                     	;# 
  1265  0112                     	;# 
  1266  0113                     	;# 
  1267  0114                     	;# 
  1268  0115                     	;# 
  1269  0116                     	;# 
  1270  0117                     	;# 
  1271  0118                     	;# 
  1272  0119                     	;# 
  1273  011A                     	;# 
  1274  011B                     	;# 
  1275  011D                     	;# 
  1276  011E                     	;# 
  1277  018C                     	;# 
  1278  018D                     	;# 
  1279  0191                     	;# 
  1280  0191                     	;# 
  1281  0192                     	;# 
  1282  0193                     	;# 
  1283  0193                     	;# 
  1284  0193                     	;# 
  1285  0194                     	;# 
  1286  0195                     	;# 
  1287  0196                     	;# 
  1288  0199                     	;# 
  1289  019A                     	;# 
  1290  019B                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019C                     	;# 
  1295  019C                     	;# 
  1296  019D                     	;# 
  1297  019E                     	;# 
  1298  019F                     	;# 
  1299  020C                     	;# 
  1300  020D                     	;# 
  1301  0211                     	;# 
  1302  0211                     	;# 
  1303  0212                     	;# 
  1304  0212                     	;# 
  1305  0213                     	;# 
  1306  0213                     	;# 
  1307  0214                     	;# 
  1308  0214                     	;# 
  1309  0215                     	;# 
  1310  0215                     	;# 
  1311  0215                     	;# 
  1312  0216                     	;# 
  1313  0216                     	;# 
  1314  0217                     	;# 
  1315  0217                     	;# 
  1316  0219                     	;# 
  1317  021A                     	;# 
  1318  021B                     	;# 
  1319  021C                     	;# 
  1320  021D                     	;# 
  1321  021E                     	;# 
  1322  021F                     	;# 
  1323  0291                     	;# 
  1324  0291                     	;# 
  1325  0292                     	;# 
  1326  0293                     	;# 
  1327  0294                     	;# 
  1328  0295                     	;# 
  1329  0295                     	;# 
  1330  0296                     	;# 
  1331  0298                     	;# 
  1332  0298                     	;# 
  1333  0299                     	;# 
  1334  029A                     	;# 
  1335  029B                     	;# 
  1336  029C                     	;# 
  1337  029C                     	;# 
  1338  029D                     	;# 
  1339  029E                     	;# 
  1340  029E                     	;# 
  1341  0311                     	;# 
  1342  0311                     	;# 
  1343  0312                     	;# 
  1344  0313                     	;# 
  1345  0318                     	;# 
  1346  0318                     	;# 
  1347  0319                     	;# 
  1348  031A                     	;# 
  1349  0394                     	;# 
  1350  0395                     	;# 
  1351  0396                     	;# 
  1352  039A                     	;# 
  1353  039C                     	;# 
  1354  039D                     	;# 
  1355  039E                     	;# 
  1356  039F                     	;# 
  1357  0415                     	;# 
  1358  0416                     	;# 
  1359  0417                     	;# 
  1360  041C                     	;# 
  1361  041D                     	;# 
  1362  041E                     	;# 
  1363  0FE4                     	;# 
  1364  0FE5                     	;# 
  1365  0FE6                     	;# 
  1366  0FE7                     	;# 
  1367  0FE8                     	;# 
  1368  0FE9                     	;# 
  1369  0FEA                     	;# 
  1370  0FEB                     	;# 
  1371  0FED                     	;# 
  1372  0FEE                     	;# 
  1373  0FEF                     	;# 
  1374  0000                     	;# 
  1375  0001                     	;# 
  1376  0002                     	;# 
  1377  0003                     	;# 
  1378  0004                     	;# 
  1379  0005                     	;# 
  1380  0006                     	;# 
  1381  0007                     	;# 
  1382  0008                     	;# 
  1383  0009                     	;# 
  1384  000A                     	;# 
  1385  000B                     	;# 
  1386  000C                     	;# 
  1387  000D                     	;# 
  1388  0011                     	;# 
  1389  0012                     	;# 
  1390  0013                     	;# 
  1391  0014                     	;# 
  1392  0015                     	;# 
  1393  0016                     	;# 
  1394  0016                     	;# 
  1395  0017                     	;# 
  1396  0018                     	;# 
  1397  0019                     	;# 
  1398  001A                     	;# 
  1399  001B                     	;# 
  1400  001C                     	;# 
  1401  001E                     	;# 
  1402  001F                     	;# 
  1403  008C                     	;# 
  1404  008D                     	;# 
  1405  0091                     	;# 
  1406  0092                     	;# 
  1407  0093                     	;# 
  1408  0094                     	;# 
  1409  0095                     	;# 
  1410  0096                     	;# 
  1411  0097                     	;# 
  1412  0098                     	;# 
  1413  0099                     	;# 
  1414  009A                     	;# 
  1415  009B                     	;# 
  1416  009B                     	;# 
  1417  009C                     	;# 
  1418  009D                     	;# 
  1419  009E                     	;# 
  1420  010C                     	;# 
  1421  010D                     	;# 
  1422  0111                     	;# 
  1423  0112                     	;# 
  1424  0113                     	;# 
  1425  0114                     	;# 
  1426  0115                     	;# 
  1427  0116                     	;# 
  1428  0117                     	;# 
  1429  0118                     	;# 
  1430  0119                     	;# 
  1431  011A                     	;# 
  1432  011B                     	;# 
  1433  011D                     	;# 
  1434  011E                     	;# 
  1435  018C                     	;# 
  1436  018D                     	;# 
  1437  0191                     	;# 
  1438  0191                     	;# 
  1439  0192                     	;# 
  1440  0193                     	;# 
  1441  0193                     	;# 
  1442  0193                     	;# 
  1443  0194                     	;# 
  1444  0195                     	;# 
  1445  0196                     	;# 
  1446  0199                     	;# 
  1447  019A                     	;# 
  1448  019B                     	;# 
  1449  019B                     	;# 
  1450  019B                     	;# 
  1451  019B                     	;# 
  1452  019C                     	;# 
  1453  019C                     	;# 
  1454  019D                     	;# 
  1455  019E                     	;# 
  1456  019F                     	;# 
  1457  020C                     	;# 
  1458  020D                     	;# 
  1459  0211                     	;# 
  1460  0211                     	;# 
  1461  0212                     	;# 
  1462  0212                     	;# 
  1463  0213                     	;# 
  1464  0213                     	;# 
  1465  0214                     	;# 
  1466  0214                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0216                     	;# 
  1471  0216                     	;# 
  1472  0217                     	;# 
  1473  0217                     	;# 
  1474  0219                     	;# 
  1475  021A                     	;# 
  1476  021B                     	;# 
  1477  021C                     	;# 
  1478  021D                     	;# 
  1479  021E                     	;# 
  1480  021F                     	;# 
  1481  0291                     	;# 
  1482  0291                     	;# 
  1483  0292                     	;# 
  1484  0293                     	;# 
  1485  0294                     	;# 
  1486  0295                     	;# 
  1487  0295                     	;# 
  1488  0296                     	;# 
  1489  0298                     	;# 
  1490  0298                     	;# 
  1491  0299                     	;# 
  1492  029A                     	;# 
  1493  029B                     	;# 
  1494  029C                     	;# 
  1495  029C                     	;# 
  1496  029D                     	;# 
  1497  029E                     	;# 
  1498  029E                     	;# 
  1499  0311                     	;# 
  1500  0311                     	;# 
  1501  0312                     	;# 
  1502  0313                     	;# 
  1503  0318                     	;# 
  1504  0318                     	;# 
  1505  0319                     	;# 
  1506  031A                     	;# 
  1507  0394                     	;# 
  1508  0395                     	;# 
  1509  0396                     	;# 
  1510  039A                     	;# 
  1511  039C                     	;# 
  1512  039D                     	;# 
  1513  039E                     	;# 
  1514  039F                     	;# 
  1515  0415                     	;# 
  1516  0416                     	;# 
  1517  0417                     	;# 
  1518  041C                     	;# 
  1519  041D                     	;# 
  1520  041E                     	;# 
  1521  0FE4                     	;# 
  1522  0FE5                     	;# 
  1523  0FE6                     	;# 
  1524  0FE7                     	;# 
  1525  0FE8                     	;# 
  1526  0FE9                     	;# 
  1527  0FEA                     	;# 
  1528  0FEB                     	;# 
  1529  0FED                     	;# 
  1530  0FEE                     	;# 
  1531  0FEF                     	;# 
  1532                           
  1533                           	psect	idataBANK1
  1534  0004                     __pidataBANK1:
  1535                           
  1536                           ;initializer for lcd_set_cursor@F2500
  1537  0004  3400               	retlw	0
  1538  0005  3440               	retlw	64
  1539  0006  3414               	retlw	20
  1540  0007  3454               	retlw	84
  1541                           
  1542                           	psect	idataBANK3
  1543  0B99                     __pidataBANK3:
  1544                           
  1545                           ;initializer for _trains
  1546  0B99  3401               	retlw	1
  1547  0B9A  3411               	retlw	17
  1548  0B9B  3419               	retlw	25
  1549  0B9C  3402               	retlw	2
  1550  0B9D  3411               	retlw	17
  1551  0B9E  3425               	retlw	37
  1552  0B9F  3403               	retlw	3
  1553  0BA0  3411               	retlw	17
  1554  0BA1  3431               	retlw	49
  1555  0BA2  3404               	retlw	4
  1556  0BA3  3412               	retlw	18
  1557  0BA4  3401               	retlw	1
  1558  0BA5  3405               	retlw	5
  1559  0BA6  3412               	retlw	18
  1560  0BA7  3425               	retlw	37
  1561  0BA8  3406               	retlw	6
  1562  0BA9  3412               	retlw	18
  1563  0BAA  3431               	retlw	49
  1564  0BAB  3407               	retlw	7
  1565  0BAC  3413               	retlw	19
  1566  0BAD  3401               	retlw	1
  1567  0BAE  3408               	retlw	8
  1568  0BAF  3413               	retlw	19
  1569  0BB0  3419               	retlw	25
  1570  0BB1  3409               	retlw	9
  1571  0BB2  3413               	retlw	19
  1572  0BB3  3425               	retlw	37
  1573  0BB4  340A               	retlw	10
  1574  0BB5  3413               	retlw	19
  1575  0BB6  3431               	retlw	49
  1576  0BB7  340B               	retlw	11
  1577  0BB8  3414               	retlw	20
  1578  0BB9  340D               	retlw	13
  1579  0BBA  340C               	retlw	12
  1580  0BBB  3414               	retlw	20
  1581  0BBC  3425               	retlw	37
  1582  0BBD  340D               	retlw	13
  1583  0BBE  3415               	retlw	21
  1584  0BBF  3401               	retlw	1
  1585  0BC0  340E               	retlw	14
  1586  0BC1  3415               	retlw	21
  1587  0BC2  3418               	retlw	24
  1588  0BC3  340F               	retlw	15
  1589  0BC4  3415               	retlw	21
  1590  0BC5  3430               	retlw	48
  1591  0BC6  3410               	retlw	16
  1592  0BC7  3416               	retlw	22
  1593  0BC8  3412               	retlw	18
  1594                           
  1595                           	psect	stringtext1
  1596  0840                     __pstringtext1:
  1597  0840                     _HOUR_4_MONEY:
  1598  0840  3454               	retlw	84
  1599  0841  3406               	retlw	6
  1600  0842                     __end_of_HOUR_4_MONEY:
  1601                           
  1602                           	psect	stringtext2
  1603  0842                     __pstringtext2:
  1604  0842                     _MIN_4_MONEY:
  1605  0842  341B               	retlw	27
  1606  0843  3400               	retlw	0
  1607  0844                     __end_of_MIN_4_MONEY:
  1608                           
  1609                           	psect	stringtext3
  1610  0800                     __pstringtext3:
  1611  0800                     _REGULAR_HOUR:
  1612  0800  3411               	retlw	17
  1613  0801  3400               	retlw	0
  1614  0802                     __end_of_REGULAR_HOUR:
  1615  0095                     _OPTION_REGbits	set	149
  1616  008D                     _TRISB	set	141
  1617  008C                     _TRISA	set	140
  1618  0097                     _WDTCON	set	151
  1619  0098                     _OSCTUNE	set	152
  1620  0099                     _OSCCON	set	153
  1621  011E                     _APFCON1	set	286
  1622  011D                     _APFCON0	set	285
  1623  010D                     _LATB	set	269
  1624  010C                     _LATA	set	268
  1625  0116                     _BORCON	set	278
  1626  018C                     _ANSELA	set	396
  1627  018D                     _ANSELB	set	397
  1628  021D                     _SSP2CON1bits	set	541
  1629  021C                     _SSP2STATbits	set	540
  1630  0219                     _SSP2BUF	set	537
  1631  021E                     _SSP2CON2bits	set	542
  1632  021C                     _SSP2STAT	set	540
  1633  021E                     _SSP2CON2	set	542
  1634  021D                     _SSP2CON1	set	541
  1635  021A                     _SSP2ADD	set	538
  1636  020C                     _WPUA	set	524
  1637  020D                     _WPUB	set	525
  1638  0802                     STR_1:
  1639  0802  344B               	retlw	75	;'K'
  1640  0803  3457               	retlw	87	;'W'
  1641  0804  3420               	retlw	32	;' '
  1642  0805  343E               	retlw	62	;'>'
  1643  0806  3420               	retlw	32	;' '
  1644  0807  344D               	retlw	77	;'M'
  1645  0808  3454               	retlw	84	;'T'
  1646  0809  3420               	retlw	32	;' '
  1647  080A  3425               	retlw	37	;'%'
  1648  080B  3430               	retlw	48	;'0'
  1649  080C  3432               	retlw	50	;'2'
  1650  080D  3464               	retlw	100	;'d'
  1651  080E  343A               	retlw	58	;':'
  1652  080F  3425               	retlw	37	;'%'
  1653  0810  3430               	retlw	48	;'0'
  1654  0811  3432               	retlw	50	;'2'
  1655  0812  3464               	retlw	100	;'d'
  1656  0813  3400               	retlw	0
  1657                           
  1658                           	psect	stringtext4
  1659  0814                     __pstringtext4:
  1660  0814                     STR_4:
  1661  0814  3452               	retlw	82	;'R'
  1662  0815  3465               	retlw	101	;'e'
  1663  0816  346D               	retlw	109	;'m'
  1664  0817  3461               	retlw	97	;'a'
  1665  0818  3469               	retlw	105	;'i'
  1666  0819  346E               	retlw	110	;'n'
  1667  081A  3469               	retlw	105	;'i'
  1668  081B  346E               	retlw	110	;'n'
  1669  081C  3467               	retlw	103	;'g'
  1670  081D  3420               	retlw	32	;' '
  1671  081E  3425               	retlw	37	;'%'
  1672  081F  3464               	retlw	100	;'d'
  1673  0820  3420               	retlw	32	;' '
  1674  0821  346D               	retlw	109	;'m'
  1675  0822  3469               	retlw	105	;'i'
  1676  0823  346E               	retlw	110	;'n'
  1677  0824  3400               	retlw	0
  1678                           
  1679                           	psect	stringtext5
  1680  0825                     __pstringtext5:
  1681  0825                     STR_5:
  1682  0825  3454               	retlw	84	;'T'
  1683  0826  3469               	retlw	105	;'i'
  1684  0827  346D               	retlw	109	;'m'
  1685  0828  3465               	retlw	101	;'e'
  1686  0829  343A               	retlw	58	;':'
  1687  082A  3425               	retlw	37	;'%'
  1688  082B  3430               	retlw	48	;'0'
  1689  082C  3432               	retlw	50	;'2'
  1690  082D  3464               	retlw	100	;'d'
  1691  082E  343A               	retlw	58	;':'
  1692  082F  3425               	retlw	37	;'%'
  1693  0830  3430               	retlw	48	;'0'
  1694  0831  3432               	retlw	50	;'2'
  1695  0832  3464               	retlw	100	;'d'
  1696  0833  3400               	retlw	0
  1697                           
  1698                           	psect	stringtext6
  1699  0834                     __pstringtext6:
  1700  0834                     STR_6:
  1701  0834  344D               	retlw	77	;'M'
  1702  0835  346F               	retlw	111	;'o'
  1703  0836  346E               	retlw	110	;'n'
  1704  0837  3465               	retlw	101	;'e'
  1705  0838  3479               	retlw	121	;'y'
  1706  0839  343A               	retlw	58	;':'
  1707  083A  3425               	retlw	37	;'%'
  1708  083B  3464               	retlw	100	;'d'
  1709  083C  3459               	retlw	89	;'Y'
  1710  083D  3445               	retlw	69	;'E'
  1711  083E  344E               	retlw	78	;'N'
  1712  083F  3400               	retlw	0
  1713                           
  1714                           	psect	stringtext7
  1715  0000                     __pstringtext7:
  1716  0802                     
  1717                           	psect	cinit
  1718  07D4                     start_initialization:	
  1719                           ; #config settings
  1720                           
  1721  07D4                     __initialization:
  1722                           
  1723                           ; Initialize objects allocated to BANK1
  1724  07D4  3004               	movlw	low __pidataBANK1
  1725  07D5  0084               	movwf	4
  1726  07D6  3080               	movlw	(high __pidataBANK1)| (0+128)
  1727  07D7  0085               	movwf	5
  1728  07D8  30E6               	movlw	low __pdataBANK1
  1729  07D9  0086               	movwf	6
  1730  07DA  3000               	movlw	high __pdataBANK1
  1731  07DB  0087               	movwf	7
  1732  07DC  3004               	movlw	4
  1733  07DD  3189  213A  3187   	fcall	init_ram
  1734                           
  1735                           ; Initialize objects allocated to BANK3
  1736  07E0  3099               	movlw	low __pidataBANK3
  1737  07E1  0084               	movwf	4
  1738  07E2  308B               	movlw	(high __pidataBANK3)| (0+128)
  1739  07E3  0085               	movwf	5
  1740  07E4  30A0               	movlw	low __pdataBANK3
  1741  07E5  0086               	movwf	6
  1742  07E6  3001               	movlw	high __pdataBANK3
  1743  07E7  0087               	movwf	7
  1744  07E8  3030               	movlw	48
  1745  07E9  3189  213A  3187   	fcall	init_ram
  1746                           
  1747                           ; Clear objects allocated to BANK0
  1748  07EC  01EF               	clrf	__pbssBANK0& (0+127)
  1749                           
  1750                           ; Clear objects allocated to BANK1
  1751  07ED  30CC               	movlw	low __pbssBANK1
  1752  07EE  0084               	movwf	4
  1753  07EF  3000               	movlw	high __pbssBANK1
  1754  07F0  0085               	movwf	5
  1755  07F1  301A               	movlw	26
  1756  07F2  3189  2134  3187   	fcall	clear_ram0
  1757                           
  1758                           ; Clear objects allocated to BANK2
  1759  07F5  3020               	movlw	low __pbssBANK2
  1760  07F6  0084               	movwf	4
  1761  07F7  3001               	movlw	high __pbssBANK2
  1762  07F8  0085               	movwf	5
  1763  07F9  3030               	movlw	48
  1764  07FA  3189  2134  3187   	fcall	clear_ram0
  1765  07FD                     end_of_initialization:	
  1766                           ;End of C runtime variable initialization code
  1767                           
  1768  07FD                     __end_of__initialization:
  1769  07FD  0020               	movlb	0
  1770  07FE  3181  2910         	ljmp	_main	;jump to C main() function
  1771                           
  1772                           	psect	bssBANK0
  1773  006F                     __pbssBANK0:
  1774  006F                     __backlightval:
  1775  006F                     	ds	1
  1776                           
  1777                           	psect	bssBANK1
  1778  00CC                     __pbssBANK1:
  1779  00CC                     _nout:
  1780  00CC                     	ds	2
  1781  00CE                     _width:
  1782  00CE                     	ds	2
  1783  00D0                     _prec:
  1784  00D0                     	ds	2
  1785  00D2                     _flags:
  1786  00D2                     	ds	2
  1787  00D4                     _money:
  1788  00D4                     	ds	2
  1789  00D6                     _line1:
  1790  00D6                     	ds	16
  1791                           
  1792                           	psect	dataBANK1
  1793  00E6                     __pdataBANK1:
  1794  00E6                     lcd_set_cursor@F2500:
  1795  00E6                     	ds	4
  1796                           
  1797                           	psect	bssBANK2
  1798  0120                     __pbssBANK2:
  1799  0120                     _dbuf:
  1800  0120                     	ds	32
  1801  0140                     _line2:
  1802  0140                     	ds	16
  1803                           
  1804                           	psect	dataBANK3
  1805  01A0                     __pdataBANK3:
  1806  01A0                     _trains:
  1807  01A0                     	ds	48
  1808                           
  1809                           	psect	inittext
  1810  093A                     init_ram:
  1811  093A  00FE               	movwf	btemp
  1812  093B                     initloop:
  1813  093B  0012               	moviw fsr0++
  1814  093C  001E               	movwi fsr1++
  1815  093D  0BFE               	decfsz	btemp,f
  1816  093E  293B               	goto	initloop
  1817  093F  3400               	retlw	0
  1818                           
  1819                           	psect	clrtext
  1820  0934                     clear_ram0:	
  1821                           ;	Called with FSR0 containing the base address, and
  1822                           ;	WREG with the size to clear
  1823                           
  1824  0934  0064               	clrwdt	;clear the watchdog before getting into this loop
  1825  0935                     clrloop0:
  1826  0935  0180               	clrf	0	;clear RAM location pointed to by FSR
  1827  0936  3101               	addfsr 0,1
  1828  0937  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1829  0938  2935               	goto	clrloop0	;have we reached the end yet?
  1830  0939  3400               	retlw	0	;all done for this memory range, return
  1831                           
  1832                           	psect	cstackBANK1
  1833  00A0                     __pcstackBANK1:
  1834  00A0                     ?_sprintf:
  1835  00A0                     sprintf@s:	
  1836                           ; 2 bytes @ 0x0
  1837                           
  1838                           
  1839                           ; 2 bytes @ 0x0
  1840  00A0                     	ds	2
  1841  00A2                     sprintf@fmt:
  1842                           
  1843                           ; 2 bytes @ 0x2
  1844  00A2                     	ds	8
  1845  00AA                     sprintf@ap:
  1846                           
  1847                           ; 1 bytes @ 0xA
  1848  00AA                     	ds	1
  1849  00AB                     sprintf@f:
  1850                           
  1851                           ; 6 bytes @ 0xB
  1852  00AB                     	ds	6
  1853  00B1                     ?_print_train:
  1854  00B1                     ?_print_remaing:	
  1855                           ; 1 bytes @ 0x11
  1856                           
  1857  00B1                     ?_print_money:	
  1858                           ; 1 bytes @ 0x11
  1859                           
  1860  00B1                     print_train@next:	
  1861                           ; 1 bytes @ 0x11
  1862                           
  1863  00B1                     print_remaing@date:	
  1864                           ; 3 bytes @ 0x11
  1865                           
  1866  00B1                     print_money@date:	
  1867                           ; 6 bytes @ 0x11
  1868                           
  1869                           
  1870                           ; 6 bytes @ 0x11
  1871  00B1                     	ds	3
  1872  00B4                     print_train@next1:
  1873                           
  1874                           ; 3 bytes @ 0x14
  1875  00B4                     	ds	3
  1876  00B7                     print_money@money:
  1877  00B7                     print_remaing@next:	
  1878                           ; 2 bytes @ 0x17
  1879                           
  1880                           
  1881                           ; 3 bytes @ 0x17
  1882  00B7                     	ds	3
  1883  00BA                     print_remaing@now_min:
  1884                           
  1885                           ; 2 bytes @ 0x1A
  1886  00BA                     	ds	2
  1887  00BC                     print_remaing@next_min:
  1888                           
  1889                           ; 2 bytes @ 0x1C
  1890  00BC                     	ds	2
  1891  00BE                     ??_main:
  1892                           
  1893                           ; 1 bytes @ 0x1E
  1894  00BE                     	ds	2
  1895  00C0                     main@next1:
  1896                           
  1897                           ; 3 bytes @ 0x20
  1898  00C0                     	ds	3
  1899  00C3                     main@next:
  1900                           
  1901                           ; 3 bytes @ 0x23
  1902  00C3                     	ds	3
  1903  00C6                     main@date:
  1904                           
  1905                           ; 6 bytes @ 0x26
  1906  00C6                     	ds	6
  1907                           
  1908                           	psect	cstackCOMMON
  1909  0070                     __pcstackCOMMON:
  1910  0070                     ?_PIN_MANAGER_Initialize:
  1911  0070                     ??_PIN_MANAGER_Initialize:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914  0070                     ?_OSCILLATOR_Initialize:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917  0070                     ??_OSCILLATOR_Initialize:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920  0070                     ?_WDT_Initialize:	
  1921                           ; 1 bytes @ 0x0
  1922                           
  1923  0070                     ??_WDT_Initialize:	
  1924                           ; 1 bytes @ 0x0
  1925                           
  1926  0070                     ?_lcd_init:	
  1927                           ; 1 bytes @ 0x0
  1928                           
  1929  0070                     ?_lcd_backlight:	
  1930                           ; 1 bytes @ 0x0
  1931                           
  1932  0070                     ?_write_date:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935  0070                     ?_read_date:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938  0070                     ?_lcd_clear:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941  0070                     ?_putch:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944  0070                     ??_putch:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947  0070                     ?_SYSTEM_Initialize:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950  0070                     ??_SYSTEM_Initialize:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953  0070                     ?_main:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956  0070                     ?_init_char:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959  0070                     ??_init_char:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962  0070                     ?_i2c_wait:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965  0070                     ??_i2c_wait:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968  0070                     ?_i2c_start:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971  0070                     ??_i2c_start:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974  0070                     ?_i2c_stop:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977  0070                     ??_i2c_stop:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980  0070                     ?_i2c_repeated_start:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983  0070                     ??_i2c_repeated_start:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986  0070                     ?_i2c_write:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989  0070                     ??_i2c_write:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992  0070                     ?_i2c_read:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995  0070                     ??_i2c_read:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998  0070                     ?_lcd_cmd:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001  0070                     ?_bcd_2_decimal:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004  0070                     ?_decimal_2_bcd:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007  0070                     ?__read:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010  0070                     ?___bmul:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013  0070                     ??___aodiv:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016  0070                     ??___aomod:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019  0070                     ?_fputc:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0070                     ?_strlen:	
  2023                           ; 2 bytes @ 0x0
  2024                           
  2025  0070                     ?_isdigit:	
  2026                           ; 2 bytes @ 0x0
  2027                           
  2028  0070                     ?_isspace:	
  2029                           ; 2 bytes @ 0x0
  2030                           
  2031  0070                     ?___awdiv:	
  2032                           ; 2 bytes @ 0x0
  2033                           
  2034  0070                     ?___awmod:	
  2035                           ; 2 bytes @ 0x0
  2036                           
  2037  0070                     i2c_write@data:	
  2038                           ; 2 bytes @ 0x0
  2039                           
  2040  0070                     ___bmul@multiplicand:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     putch@c:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ___awdiv@divisor:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ___awmod@divisor:	
  2050                           ; 2 bytes @ 0x0
  2051                           
  2052  0070                     isdigit@c:	
  2053                           ; 2 bytes @ 0x0
  2054                           
  2055  0070                     isspace@c:	
  2056                           ; 2 bytes @ 0x0
  2057                           
  2058  0070                     fputc@c:	
  2059                           ; 2 bytes @ 0x0
  2060                           
  2061                           
  2062                           ; 2 bytes @ 0x0
  2063  0070                     	ds	1
  2064  0071                     ??_lcd_cmd:
  2065  0071                     ??___bmul:	
  2066                           ; 1 bytes @ 0x1
  2067                           
  2068  0071                     i2c_read@ack:	
  2069                           ; 1 bytes @ 0x1
  2070                           
  2071  0071                     lcd_cmd@cmd:	
  2072                           ; 1 bytes @ 0x1
  2073                           
  2074  0071                     ___aodiv@counter:	
  2075                           ; 1 bytes @ 0x1
  2076                           
  2077  0071                     ___aomod@counter:	
  2078                           ; 1 bytes @ 0x1
  2079                           
  2080                           
  2081                           ; 1 bytes @ 0x1
  2082  0071                     	ds	1
  2083  0072                     ??_lcd_init:
  2084  0072                     ??_lcd_backlight:	
  2085                           ; 1 bytes @ 0x2
  2086                           
  2087  0072                     ??_lcd_clear:	
  2088                           ; 1 bytes @ 0x2
  2089                           
  2090  0072                     ?_command:	
  2091                           ; 1 bytes @ 0x2
  2092                           
  2093  0072                     ??_strlen:	
  2094                           ; 1 bytes @ 0x2
  2095                           
  2096  0072                     ??_isdigit:	
  2097                           ; 1 bytes @ 0x2
  2098                           
  2099  0072                     ??_isspace:	
  2100                           ; 1 bytes @ 0x2
  2101                           
  2102  0072                     i2c_read@data:	
  2103                           ; 1 bytes @ 0x2
  2104                           
  2105  0072                     command@mode:	
  2106                           ; 1 bytes @ 0x2
  2107                           
  2108  0072                     ___bmul@product:	
  2109                           ; 1 bytes @ 0x2
  2110                           
  2111  0072                     ___aodiv@sign:	
  2112                           ; 1 bytes @ 0x2
  2113                           
  2114  0072                     ___aomod@sign:	
  2115                           ; 1 bytes @ 0x2
  2116                           
  2117  0072                     fputc@fp:	
  2118                           ; 1 bytes @ 0x2
  2119                           
  2120  0072                     ___awdiv@dividend:	
  2121                           ; 1 bytes @ 0x2
  2122                           
  2123  0072                     ___awmod@dividend:	
  2124                           ; 2 bytes @ 0x2
  2125                           
  2126                           
  2127                           ; 2 bytes @ 0x2
  2128  0072                     	ds	1
  2129  0073                     ??_command:
  2130  0073                     ??_fputc:	
  2131                           ; 1 bytes @ 0x3
  2132                           
  2133  0073                     ?_abs:	
  2134                           ; 1 bytes @ 0x3
  2135                           
  2136  0073                     ___bmul@multiplier:	
  2137                           ; 2 bytes @ 0x3
  2138                           
  2139  0073                     strlen@a:	
  2140                           ; 1 bytes @ 0x3
  2141                           
  2142  0073                     abs@a:	
  2143                           ; 1 bytes @ 0x3
  2144                           
  2145  0073                     ___aodiv@quotient:	
  2146                           ; 2 bytes @ 0x3
  2147                           
  2148                           
  2149                           ; 8 bytes @ 0x3
  2150  0073                     	ds	1
  2151  0074                     ??_bcd_2_decimal:
  2152  0074                     ??___awdiv:	
  2153                           ; 1 bytes @ 0x4
  2154                           
  2155  0074                     ??___awmod:	
  2156                           ; 1 bytes @ 0x4
  2157                           
  2158  0074                     ?___wmul:	
  2159                           ; 1 bytes @ 0x4
  2160                           
  2161  0074                     _isspace$1093:	
  2162                           ; 2 bytes @ 0x4
  2163                           
  2164  0074                     strlen@s:	
  2165                           ; 1 bytes @ 0x4
  2166                           
  2167  0074                     ___wmul@multiplier:	
  2168                           ; 1 bytes @ 0x4
  2169                           
  2170                           
  2171                           ; 2 bytes @ 0x4
  2172  0074                     	ds	1
  2173  0075                     ??_abs:
  2174  0075                     command@val:	
  2175                           ; 1 bytes @ 0x5
  2176                           
  2177  0075                     ___awdiv@counter:	
  2178                           ; 1 bytes @ 0x5
  2179                           
  2180  0075                     ___awmod@counter:	
  2181                           ; 1 bytes @ 0x5
  2182                           
  2183                           
  2184                           ; 1 bytes @ 0x5
  2185  0075                     	ds	1
  2186  0076                     command@highnib:
  2187  0076                     ___awdiv@sign:	
  2188                           ; 1 bytes @ 0x6
  2189                           
  2190  0076                     ___awmod@sign:	
  2191                           ; 1 bytes @ 0x6
  2192                           
  2193  0076                     ___wmul@multiplicand:	
  2194                           ; 1 bytes @ 0x6
  2195                           
  2196                           
  2197                           ; 2 bytes @ 0x6
  2198  0076                     	ds	1
  2199  0077                     command@lownib:
  2200  0077                     bcd_2_decimal@number:	
  2201                           ; 1 bytes @ 0x7
  2202                           
  2203  0077                     ___awdiv@quotient:	
  2204                           ; 1 bytes @ 0x7
  2205                           
  2206                           
  2207                           ; 2 bytes @ 0x7
  2208  0077                     	ds	1
  2209  0078                     ?_lcd_set_cursor:
  2210  0078                     ?_lcd_print:	
  2211                           ; 1 bytes @ 0x8
  2212                           
  2213  0078                     ??__read:	
  2214                           ; 1 bytes @ 0x8
  2215                           
  2216  0078                     ??___wmul:	
  2217                           ; 1 bytes @ 0x8
  2218                           
  2219  0078                     ?_fputs:	
  2220                           ; 1 bytes @ 0x8
  2221                           
  2222  0078                     lcd_set_cursor@row:	
  2223                           ; 2 bytes @ 0x8
  2224                           
  2225  0078                     fputs@fp:	
  2226                           ; 1 bytes @ 0x8
  2227                           
  2228  0078                     lcd_print@str:	
  2229                           ; 1 bytes @ 0x8
  2230                           
  2231  0078                     ___wmul@product:	
  2232                           ; 2 bytes @ 0x8
  2233                           
  2234                           
  2235                           ; 2 bytes @ 0x8
  2236  0078                     	ds	1
  2237  0079                     ??_lcd_set_cursor:
  2238  0079                     ??_fputs:	
  2239                           ; 1 bytes @ 0x9
  2240                           
  2241  0079                     decimal_2_bcd@number:	
  2242                           ; 1 bytes @ 0x9
  2243                           
  2244  0079                     __read@address:	
  2245                           ; 1 bytes @ 0x9
  2246                           
  2247                           
  2248                           ; 1 bytes @ 0x9
  2249  0079                     	ds	1
  2250  007A                     ??_write_date:
  2251  007A                     ?_get_next:	
  2252                           ; 1 bytes @ 0xA
  2253                           
  2254  007A                     ??_calc_money:	
  2255                           ; 1 bytes @ 0xA
  2256                           
  2257  007A                     ??_lcd_print:	
  2258                           ; 1 bytes @ 0xA
  2259                           
  2260  007A                     ?_atoi:	
  2261                           ; 1 bytes @ 0xA
  2262                           
  2263  007A                     get_next@hour:	
  2264                           ; 2 bytes @ 0xA
  2265                           
  2266  007A                     __read@data:	
  2267                           ; 1 bytes @ 0xA
  2268                           
  2269  007A                     atoi@s:	
  2270                           ; 1 bytes @ 0xA
  2271                           
  2272                           
  2273                           ; 2 bytes @ 0xA
  2274  007A                     	ds	1
  2275  007B                     ??_read_date:
  2276  007B                     lcd_print@cmd:	
  2277                           ; 1 bytes @ 0xB
  2278                           
  2279  007B                     get_next@min:	
  2280                           ; 1 bytes @ 0xB
  2281                           
  2282                           
  2283                           ; 1 bytes @ 0xB
  2284  007B                     	ds	1
  2285  007C                     ??_pad:
  2286  007C                     write_date@date:	
  2287                           ; 1 bytes @ 0xC
  2288                           
  2289  007C                     read_date@date:	
  2290                           ; 1 bytes @ 0xC
  2291                           
  2292                           
  2293                           ; 1 bytes @ 0xC
  2294  007C                     	ds	1
  2295  007D                     ??_sprintf:
  2296                           
  2297                           ; 1 bytes @ 0xD
  2298  007D                     	ds	1
  2299                           
  2300                           	psect	cstackBANK0
  2301  0020                     __pcstackBANK0:
  2302  0020                     ??_get_next:
  2303  0020                     ??_atoi:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0020                     ??_decimal_2_bcd:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0020                     ?_calc_money:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0020                     ?___aodiv:	
  2313                           ; 2 bytes @ 0x0
  2314                           
  2315  0020                     ?___aomod:	
  2316                           ; 8 bytes @ 0x0
  2317                           
  2318  0020                     fputs@c:	
  2319                           ; 8 bytes @ 0x0
  2320                           
  2321  0020                     lcd_set_cursor@row_offsets:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0020                     calc_money@date:	
  2325                           ; 4 bytes @ 0x0
  2326                           
  2327  0020                     ___aodiv@divisor:	
  2328                           ; 6 bytes @ 0x0
  2329                           
  2330  0020                     ___aomod@divisor:	
  2331                           ; 8 bytes @ 0x0
  2332                           
  2333                           
  2334                           ; 8 bytes @ 0x0
  2335  0020                     	ds	1
  2336  0021                     fputs@i:
  2337                           
  2338                           ; 2 bytes @ 0x1
  2339  0021                     	ds	2
  2340  0023                     fputs@s:
  2341                           
  2342                           ; 1 bytes @ 0x3
  2343  0023                     	ds	1
  2344  0024                     ?_pad:
  2345  0024                     lcd_set_cursor@col:	
  2346                           ; 2 bytes @ 0x4
  2347                           
  2348  0024                     pad@buf:	
  2349                           ; 1 bytes @ 0x4
  2350                           
  2351  0024                     atoi@neg:	
  2352                           ; 1 bytes @ 0x4
  2353                           
  2354                           
  2355                           ; 2 bytes @ 0x4
  2356  0024                     	ds	1
  2357  0025                     lcd_set_cursor@cmd:
  2358  0025                     pad@p:	
  2359                           ; 1 bytes @ 0x5
  2360                           
  2361                           
  2362                           ; 2 bytes @ 0x5
  2363  0025                     	ds	1
  2364  0026                     get_next@now_min:
  2365  0026                     calc_money@hour:	
  2366                           ; 2 bytes @ 0x6
  2367                           
  2368  0026                     _atoi$1075:	
  2369                           ; 2 bytes @ 0x6
  2370                           
  2371                           
  2372                           ; 2 bytes @ 0x6
  2373  0026                     	ds	1
  2374  0027                     pad@i:
  2375                           
  2376                           ; 2 bytes @ 0x7
  2377  0027                     	ds	1
  2378  0028                     get_next@t_min:
  2379  0028                     calc_money@min:	
  2380                           ; 2 bytes @ 0x8
  2381                           
  2382  0028                     _atoi$1077:	
  2383                           ; 2 bytes @ 0x8
  2384                           
  2385  0028                     ___aodiv@dividend:	
  2386                           ; 2 bytes @ 0x8
  2387                           
  2388  0028                     ___aomod@dividend:	
  2389                           ; 8 bytes @ 0x8
  2390                           
  2391                           
  2392                           ; 8 bytes @ 0x8
  2393  0028                     	ds	1
  2394  0029                     pad@w:
  2395                           
  2396                           ; 2 bytes @ 0x9
  2397  0029                     	ds	1
  2398  002A                     get_next@idx:
  2399  002A                     _atoi$1076:	
  2400                           ; 1 bytes @ 0xA
  2401                           
  2402                           
  2403                           ; 1 bytes @ 0xA
  2404  002A                     	ds	1
  2405  002B                     get_next@next:
  2406  002B                     pad@fp:	
  2407                           ; 1 bytes @ 0xB
  2408                           
  2409  002B                     atoi@n:	
  2410                           ; 1 bytes @ 0xB
  2411                           
  2412                           
  2413                           ; 2 bytes @ 0xB
  2414  002B                     	ds	1
  2415  002C                     get_next@i:
  2416                           
  2417                           ; 1 bytes @ 0xC
  2418  002C                     	ds	4
  2419  0030                     ?_dtoa:
  2420  0030                     dtoa@d:	
  2421                           ; 2 bytes @ 0x10
  2422                           
  2423                           
  2424                           ; 8 bytes @ 0x10
  2425  0030                     	ds	8
  2426  0038                     ??_dtoa:
  2427                           
  2428                           ; 1 bytes @ 0x18
  2429  0038                     	ds	3
  2430  003B                     _dtoa$1040:
  2431                           
  2432                           ; 2 bytes @ 0x1B
  2433  003B                     	ds	2
  2434  003D                     dtoa@fp:
  2435                           
  2436                           ; 1 bytes @ 0x1D
  2437  003D                     	ds	1
  2438  003E                     dtoa@p:
  2439                           
  2440                           ; 2 bytes @ 0x1E
  2441  003E                     	ds	2
  2442  0040                     dtoa@w:
  2443                           
  2444                           ; 2 bytes @ 0x20
  2445  0040                     	ds	2
  2446  0042                     dtoa@s:
  2447                           
  2448                           ; 2 bytes @ 0x22
  2449  0042                     	ds	2
  2450  0044                     dtoa@n:
  2451                           
  2452                           ; 8 bytes @ 0x24
  2453  0044                     	ds	8
  2454  004C                     dtoa@i:
  2455                           
  2456                           ; 2 bytes @ 0x2C
  2457  004C                     	ds	2
  2458  004E                     ?_vfpfcnvrt:
  2459  004E                     vfpfcnvrt@fmt:	
  2460                           ; 2 bytes @ 0x2E
  2461                           
  2462                           
  2463                           ; 1 bytes @ 0x2E
  2464  004E                     	ds	1
  2465  004F                     vfpfcnvrt@ap:
  2466                           
  2467                           ; 1 bytes @ 0x2F
  2468  004F                     	ds	1
  2469  0050                     ??_vfpfcnvrt:
  2470                           
  2471                           ; 1 bytes @ 0x30
  2472  0050                     	ds	6
  2473  0056                     vfpfcnvrt@ll:
  2474                           
  2475                           ; 8 bytes @ 0x36
  2476  0056                     	ds	8
  2477  005E                     vfpfcnvrt@done:
  2478                           
  2479                           ; 2 bytes @ 0x3E
  2480  005E                     	ds	2
  2481  0060                     _vfpfcnvrt$1055:
  2482                           
  2483                           ; 2 bytes @ 0x40
  2484  0060                     	ds	2
  2485  0062                     vfpfcnvrt@fp:
  2486                           
  2487                           ; 1 bytes @ 0x42
  2488  0062                     	ds	1
  2489  0063                     ?_vfprintf:
  2490  0063                     vfprintf@fmt:	
  2491                           ; 2 bytes @ 0x43
  2492                           
  2493                           
  2494                           ; 2 bytes @ 0x43
  2495  0063                     	ds	2
  2496  0065                     vfprintf@ap:
  2497                           
  2498                           ; 1 bytes @ 0x45
  2499  0065                     	ds	1
  2500  0066                     ??_vfprintf:
  2501                           
  2502                           ; 1 bytes @ 0x46
  2503  0066                     	ds	2
  2504  0068                     vfprintf@fp:
  2505                           
  2506                           ; 1 bytes @ 0x48
  2507  0068                     	ds	1
  2508  0069                     vfprintf@cfmt:
  2509                           
  2510                           ; 2 bytes @ 0x49
  2511  0069                     	ds	2
  2512  006B                     ??_print_train:
  2513  006B                     ??_print_remaing:	
  2514                           ; 1 bytes @ 0x4B
  2515                           
  2516  006B                     ??_print_money:	
  2517                           ; 1 bytes @ 0x4B
  2518                           
  2519                           
  2520                           ; 1 bytes @ 0x4B
  2521  006B                     	ds	4
  2522                           
  2523                           	psect	maintext
  2524  0110                     __pmaintext:	
  2525 ;;
  2526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2527 ;;
  2528 ;; *************** function _main *****************
  2529 ;; Defined at:
  2530 ;;		line 21 in file "main.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  date            6   38[BANK1 ] struct Date
  2535 ;;  next            3   35[BANK1 ] struct train
  2536 ;;  next1           3   32[BANK1 ] struct train
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : B1F/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2546 ;;      Params:         0       0       0       0       0       0
  2547 ;;      Locals:         0       0      12       0       0       0
  2548 ;;      Temps:          0       0       2       0       0       0
  2549 ;;      Totals:         0       0      14       0       0       0
  2550 ;;Total ram usage:       14 bytes
  2551 ;; Hardware stack levels required when called:    9
  2552 ;; This function calls:
  2553 ;;		_SYSTEM_Initialize
  2554 ;;		_calc_money
  2555 ;;		_get_next
  2556 ;;		_lcd_backlight
  2557 ;;		_lcd_init
  2558 ;;		_lcd_set_cursor
  2559 ;;		_print_money
  2560 ;;		_print_remaing
  2561 ;;		_print_train
  2562 ;;		_read_date
  2563 ;;		_write_date
  2564 ;; This function is called by:
  2565 ;;		Startup code after reset
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _main
  2571  0110                     _main:
  2572  0110                     l2906:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2575                           
  2576                           
  2577                           ;main.c: 24:     SYSTEM_Initialize();
  2578  0110  3189  214E  3181   	fcall	_SYSTEM_Initialize
  2579  0113                     l2908:
  2580                           
  2581                           ;main.c: 26:     WPUB = 0x24;
  2582  0113  3024               	movlw	36
  2583  0114  0024               	movlb	4	; select bank4
  2584  0115  008D               	movwf	13	;volatile
  2585  0116                     l2910:
  2586                           
  2587                           ;main.c: 27:     OPTION_REGbits.nWPUEN = 0;
  2588  0116  0021               	movlb	1	; select bank1
  2589  0117  1395               	bcf	21,7	;volatile
  2590  0118                     l2912:
  2591                           
  2592                           ;main.c: 29:     SSP2ADD = 0x13;
  2593  0118  3013               	movlw	19
  2594  0119  0024               	movlb	4	; select bank4
  2595  011A  009A               	movwf	26	;volatile
  2596  011B                     l2914:
  2597                           
  2598                           ;main.c: 30:     SSP2CON1 = 0x28;
  2599  011B  3028               	movlw	40
  2600  011C  009D               	movwf	29	;volatile
  2601  011D                     l2916:
  2602                           
  2603                           ;main.c: 31:     SSP2CON2 = 0x0;
  2604  011D  019E               	clrf	30	;volatile
  2605  011E                     l2918:
  2606                           
  2607                           ;main.c: 32:     SSP2STAT = 0;
  2608  011E  019C               	clrf	28	;volatile
  2609  011F                     l2920:
  2610                           
  2611                           ;main.c: 34:     lcd_init();
  2612  011F  3182  22D4  3181   	fcall	_lcd_init
  2613  0122                     l2922:
  2614                           
  2615                           ;main.c: 35:     lcd_backlight();
  2616  0122  3189  2178  3181   	fcall	_lcd_backlight
  2617  0125                     l2924:
  2618                           
  2619                           ;main.c: 36:     lcd_set_cursor(0, 0);
  2620  0125  01F8               	clrf	lcd_set_cursor@row
  2621  0126  3000               	movlw	0
  2622  0127  318B  2341  3181   	fcall	_lcd_set_cursor
  2623  012A                     l2926:
  2624                           
  2625                           ;main.c: 38:     struct Date date;;main.c: 39:     date.year = 21;
  2626  012A  3015               	movlw	21
  2627  012B  0021               	movlb	1	; select bank1
  2628  012C  00BE               	movwf	??_main^(0+128)
  2629  012D  083E               	movf	??_main^(0+128),w
  2630  012E  00C6               	movwf	main@date^(0+128)
  2631  012F                     l2928:
  2632                           
  2633                           ;main.c: 40:     date.month = 2;
  2634  012F  3002               	movlw	2
  2635  0130  00BE               	movwf	??_main^(0+128)
  2636  0131  083E               	movf	??_main^(0+128),w
  2637  0132  00C7               	movwf	(main@date^(0+128)+1)
  2638  0133                     l2930:
  2639                           
  2640                           ;main.c: 41:     date.day = 21;
  2641  0133  3015               	movlw	21
  2642  0134  00BE               	movwf	??_main^(0+128)
  2643  0135  083E               	movf	??_main^(0+128),w
  2644  0136  00C8               	movwf	(main@date^(0+128)+2)
  2645  0137                     l2932:
  2646                           
  2647                           ;main.c: 42:     date.hour = 18;
  2648  0137  3012               	movlw	18
  2649  0138  00BE               	movwf	??_main^(0+128)
  2650  0139  083E               	movf	??_main^(0+128),w
  2651  013A  00C9               	movwf	(main@date^(0+128)+3)
  2652  013B                     l2934:
  2653                           
  2654                           ;main.c: 43:     date.min = 6;
  2655  013B  3006               	movlw	6
  2656  013C  00BE               	movwf	??_main^(0+128)
  2657  013D  083E               	movf	??_main^(0+128),w
  2658  013E  00CA               	movwf	(main@date^(0+128)+4)
  2659  013F                     l2936:
  2660                           
  2661                           ;main.c: 44:     date.sec = 0;
  2662  013F  01CB               	clrf	(main@date^(0+128)+5)
  2663  0140                     l2938:
  2664                           
  2665                           ;main.c: 46:     money = 0;
  2666  0140  01D4               	clrf	_money^(0+128)
  2667  0141  01D5               	clrf	(_money+1)^(0+128)
  2668  0142                     l2940:
  2669                           
  2670                           ;main.c: 48:     write_date(&date);
  2671  0142  30C6               	movlw	(low (main@date| 0))& (0+255)
  2672  0143  318E  2614  3181   	fcall	_write_date
  2673  0146                     l2942:
  2674                           
  2675                           ;main.c: 53:     {;main.c: 54:         read_date(&date);
  2676  0146  30C6               	movlw	(low (main@date| 0))& (0+255)
  2677  0147  318C  2475  3181   	fcall	_read_date
  2678  014A                     l2944:
  2679                           
  2680                           ;main.c: 55:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2681  014A  301A               	movlw	26
  2682  014B  0021               	movlb	1	; select bank1
  2683  014C  00BE               	movwf	??_main^(0+128)
  2684  014D  30F8               	movlw	248
  2685  014E                     u2357:
  2686  014E  0B89               	decfsz	9,f
  2687  014F  294E               	goto	u2357
  2688  0150  0BBE               	decfsz	??_main^(0+128),f
  2689  0151  294E               	goto	u2357
  2690  0152  0000               	nop
  2691  0153                     l2946:
  2692                           
  2693                           ;main.c: 56:         get_next(&next, date.hour, date.min);
  2694  0153  0021               	movlb	1	; select bank1
  2695  0154  0849               	movf	(main@date^(0+128)+3),w
  2696  0155  00BE               	movwf	??_main^(0+128)
  2697  0156  083E               	movf	??_main^(0+128),w
  2698  0157  00FA               	movwf	get_next@hour
  2699  0158  084A               	movf	(main@date^(0+128)+4),w
  2700  0159  00BF               	movwf	(??_main+1)^(0+128)
  2701  015A  083F               	movf	(??_main+1)^(0+128),w
  2702  015B  00FB               	movwf	get_next@min
  2703  015C  30C3               	movlw	(low (main@next| 0))& (0+255)
  2704  015D  318F  2768  3181   	fcall	_get_next
  2705  0160                     l2948:
  2706                           
  2707                           ;main.c: 57:         get_next(&next1, next.hour, next.min);
  2708  0160  0021               	movlb	1	; select bank1
  2709  0161  0844               	movf	(main@next^(0+128)+1),w
  2710  0162  00BE               	movwf	??_main^(0+128)
  2711  0163  083E               	movf	??_main^(0+128),w
  2712  0164  00FA               	movwf	get_next@hour
  2713  0165  0845               	movf	(main@next^(0+128)+2),w
  2714  0166  00BF               	movwf	(??_main+1)^(0+128)
  2715  0167  083F               	movf	(??_main+1)^(0+128),w
  2716  0168  00FB               	movwf	get_next@min
  2717  0169  30C0               	movlw	(low (main@next1| 0))& (0+255)
  2718  016A  318F  2768  3181   	fcall	_get_next
  2719  016D                     l2950:
  2720                           
  2721                           ;main.c: 59:         if(date.sec == 0){
  2722  016D  0021               	movlb	1	; select bank1
  2723  016E  084B               	movf	(main@date^(0+128)+5),w
  2724  016F  1D03               	btfss	3,2
  2725  0170  2972               	goto	u2321
  2726  0171  2973               	goto	u2320
  2727  0172                     u2321:
  2728  0172  2983               	goto	l2954
  2729  0173                     u2320:
  2730  0173                     l2952:
  2731                           
  2732                           ;main.c: 60:             print_train(next, next1);
  2733  0173  0843               	movf	main@next^(0+128),w
  2734  0174  00B1               	movwf	print_train@next^(0+128)
  2735  0175  0844               	movf	(main@next+1)^(0+128),w
  2736  0176  00B2               	movwf	(print_train@next+1)^(0+128)
  2737  0177  0845               	movf	(main@next+2)^(0+128),w
  2738  0178  00B3               	movwf	(print_train@next+2)^(0+128)
  2739  0179  0840               	movf	main@next1^(0+128),w
  2740  017A  00B4               	movwf	print_train@next1^(0+128)
  2741  017B  0841               	movf	(main@next1+1)^(0+128),w
  2742  017C  00B5               	movwf	(print_train@next1+1)^(0+128)
  2743  017D  0842               	movf	(main@next1+2)^(0+128),w
  2744  017E  00B6               	movwf	(print_train@next1+2)^(0+128)
  2745  017F  318E  2674  3181   	fcall	_print_train
  2746                           
  2747                           ;main.c: 61:             continue;
  2748  0182  2946               	goto	l2942
  2749  0183                     l2954:
  2750                           
  2751                           ;main.c: 64:         if(date.sec == 30){
  2752  0183  301E               	movlw	30
  2753  0184  064B               	xorwf	(main@date^(0+128)+5),w
  2754  0185  1D03               	btfss	3,2
  2755  0186  2988               	goto	u2331
  2756  0187  2989               	goto	u2330
  2757  0188                     u2331:
  2758  0188  29A7               	goto	l2958
  2759  0189                     u2330:
  2760  0189                     l2956:
  2761                           
  2762                           ;main.c: 65:             print_remaing(date, next);
  2763  0189  30C6               	movlw	low main@date
  2764  018A  0086               	movwf	6
  2765  018B  3000               	movlw	high main@date
  2766  018C  0087               	movwf	7
  2767  018D  30B1               	movlw	low print_remaing@date
  2768  018E  0084               	movwf	4
  2769  018F  3000               	movlw	high print_remaing@date
  2770  0190  0085               	movwf	5
  2771  0191  3F40               	moviw [0]fsr1
  2772  0192  3F80               	movwi [0]fsr0
  2773  0193  3F41               	moviw [1]fsr1
  2774  0194  3F81               	movwi [1]fsr0
  2775  0195  3F42               	moviw [2]fsr1
  2776  0196  3F82               	movwi [2]fsr0
  2777  0197  3F43               	moviw [3]fsr1
  2778  0198  3F83               	movwi [3]fsr0
  2779  0199  3F44               	moviw [4]fsr1
  2780  019A  3F84               	movwi [4]fsr0
  2781  019B  3F45               	moviw [5]fsr1
  2782  019C  3F85               	movwi [5]fsr0
  2783  019D  0843               	movf	main@next^(0+128),w
  2784  019E  00B7               	movwf	print_remaing@next^(0+128)
  2785  019F  0844               	movf	(main@next+1)^(0+128),w
  2786  01A0  00B8               	movwf	(print_remaing@next+1)^(0+128)
  2787  01A1  0845               	movf	(main@next+2)^(0+128),w
  2788  01A2  00B9               	movwf	(print_remaing@next+2)^(0+128)
  2789  01A3  318E  26D8  3181   	fcall	_print_remaing
  2790                           
  2791                           ;main.c: 66:             continue;
  2792  01A6  2946               	goto	l2942
  2793  01A7                     l2958:
  2794                           
  2795                           ;main.c: 69:         if(date.sec == 45){
  2796  01A7  302D               	movlw	45
  2797  01A8  064B               	xorwf	(main@date^(0+128)+5),w
  2798  01A9  1D03               	btfss	3,2
  2799  01AA  29AC               	goto	u2341
  2800  01AB  29AD               	goto	u2340
  2801  01AC                     u2341:
  2802  01AC  2946               	goto	l2942
  2803  01AD                     u2340:
  2804  01AD                     l2960:
  2805                           
  2806                           ;main.c: 70:             money = calc_money(date);
  2807  01AD  30C6               	movlw	low main@date
  2808  01AE  0086               	movwf	6
  2809  01AF  3000               	movlw	high main@date
  2810  01B0  0087               	movwf	7
  2811  01B1  3020               	movlw	low calc_money@date
  2812  01B2  0084               	movwf	4
  2813  01B3  3000               	movlw	high calc_money@date
  2814  01B4  0085               	movwf	5
  2815  01B5  3F40               	moviw [0]fsr1
  2816  01B6  3F80               	movwi [0]fsr0
  2817  01B7  3F41               	moviw [1]fsr1
  2818  01B8  3F81               	movwi [1]fsr0
  2819  01B9  3F42               	moviw [2]fsr1
  2820  01BA  3F82               	movwi [2]fsr0
  2821  01BB  3F43               	moviw [3]fsr1
  2822  01BC  3F83               	movwi [3]fsr0
  2823  01BD  3F44               	moviw [4]fsr1
  2824  01BE  3F84               	movwi [4]fsr0
  2825  01BF  3F45               	moviw [5]fsr1
  2826  01C0  3F85               	movwi [5]fsr0
  2827  01C1  318C  2432  3181   	fcall	_calc_money
  2828  01C4  0020               	movlb	0	; select bank0
  2829  01C5  0821               	movf	?_calc_money+1,w
  2830  01C6  0021               	movlb	1	; select bank1
  2831  01C7  00D5               	movwf	(_money+1)^(0+128)
  2832  01C8  0020               	movlb	0	; select bank0
  2833  01C9  0820               	movf	?_calc_money,w
  2834  01CA  0021               	movlb	1	; select bank1
  2835  01CB  00D4               	movwf	_money^(0+128)
  2836                           
  2837                           ;main.c: 71:             print_money(date, money);
  2838  01CC  30C6               	movlw	low main@date
  2839  01CD  0086               	movwf	6
  2840  01CE  3000               	movlw	high main@date
  2841  01CF  0087               	movwf	7
  2842  01D0  30B1               	movlw	low print_money@date
  2843  01D1  0084               	movwf	4
  2844  01D2  3000               	movlw	high print_money@date
  2845  01D3  0085               	movwf	5
  2846  01D4  3F40               	moviw [0]fsr1
  2847  01D5  3F80               	movwi [0]fsr0
  2848  01D6  3F41               	moviw [1]fsr1
  2849  01D7  3F81               	movwi [1]fsr0
  2850  01D8  3F42               	moviw [2]fsr1
  2851  01D9  3F82               	movwi [2]fsr0
  2852  01DA  3F43               	moviw [3]fsr1
  2853  01DB  3F83               	movwi [3]fsr0
  2854  01DC  3F44               	moviw [4]fsr1
  2855  01DD  3F84               	movwi [4]fsr0
  2856  01DE  3F45               	moviw [5]fsr1
  2857  01DF  3F85               	movwi [5]fsr0
  2858  01E0  0855               	movf	(_money+1)^(0+128),w
  2859  01E1  00B8               	movwf	(print_money@money+1)^(0+128)
  2860  01E2  0854               	movf	_money^(0+128),w
  2861  01E3  00B7               	movwf	print_money@money^(0+128)
  2862  01E4  318C  24BB  3181   	fcall	_print_money
  2863                           
  2864                           ;main.c: 72:             continue;
  2865  01E7  2946               	goto	l2942
  2866  01E8  3180  2802         	ljmp	start
  2867  01EA                     __end_of_main:
  2868                           
  2869                           	psect	text1
  2870  0E14                     __ptext1:	
  2871 ;; *************** function _write_date *****************
  2872 ;; Defined at:
  2873 ;;		line 35 in file "DS3231.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  date            1    wreg     PTR struct Date
  2876 ;;		 -> main@date(6), 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  date            1   12[COMMON] PTR struct Date
  2879 ;;		 -> main@date(6), 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2889 ;;      Params:         0       0       0       0       0       0
  2890 ;;      Locals:         1       0       0       0       0       0
  2891 ;;      Temps:          2       0       0       0       0       0
  2892 ;;      Totals:         3       0       0       0       0       0
  2893 ;;Total ram usage:        3 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    2
  2896 ;; This function calls:
  2897 ;;		_decimal_2_bcd
  2898 ;;		_i2c_start
  2899 ;;		_i2c_stop
  2900 ;;		_i2c_write
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           
  2907                           ;psect for function _write_date
  2908  0E14                     _write_date:
  2909                           
  2910                           ;incstack = 0
  2911                           ; Regs used in _write_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2912                           ;write_date@date stored from wreg
  2913  0E14  00FC               	movwf	write_date@date
  2914  0E15                     l2622:
  2915                           
  2916                           ;DS3231.c: 36:     i2c_start();
  2917  0E15  3189  2158  318E   	fcall	_i2c_start
  2918                           
  2919                           ;DS3231.c: 37:     i2c_write(0xD0);
  2920  0E18  30D0               	movlw	208
  2921  0E19  3189  2186  318E   	fcall	_i2c_write
  2922                           
  2923                           ;DS3231.c: 38:     i2c_write(0x00);
  2924  0E1C  3000               	movlw	0
  2925  0E1D  3189  2186  318E   	fcall	_i2c_write
  2926  0E20                     l2624:
  2927                           
  2928                           ;DS3231.c: 40:     i2c_write(decimal_2_bcd(date->sec));
  2929  0E20  087C               	movf	write_date@date,w
  2930  0E21  3E05               	addlw	5
  2931  0E22  0086               	movwf	6
  2932  0E23  0187               	clrf	7
  2933  0E24  0801               	movf	1,w
  2934  0E25  318B  236B  318E   	fcall	_decimal_2_bcd
  2935  0E28  3189  2186  318E   	fcall	_i2c_write
  2936  0E2B                     l2626:
  2937                           
  2938                           ;DS3231.c: 41:     i2c_write(decimal_2_bcd(date->min));
  2939  0E2B  087C               	movf	write_date@date,w
  2940  0E2C  3E04               	addlw	4
  2941  0E2D  0086               	movwf	6
  2942  0E2E  0187               	clrf	7
  2943  0E2F  0801               	movf	1,w
  2944  0E30  318B  236B  318E   	fcall	_decimal_2_bcd
  2945  0E33  3189  2186  318E   	fcall	_i2c_write
  2946  0E36                     l2628:
  2947                           
  2948                           ;DS3231.c: 42:     i2c_write(decimal_2_bcd(date->hour));
  2949  0E36  087C               	movf	write_date@date,w
  2950  0E37  3E03               	addlw	3
  2951  0E38  0086               	movwf	6
  2952  0E39  0187               	clrf	7
  2953  0E3A  0801               	movf	1,w
  2954  0E3B  318B  236B  318E   	fcall	_decimal_2_bcd
  2955  0E3E  3189  2186  318E   	fcall	_i2c_write
  2956  0E41                     l2630:
  2957                           
  2958                           ;DS3231.c: 43:     i2c_write(1);
  2959  0E41  3001               	movlw	1
  2960  0E42  3189  2186  318E   	fcall	_i2c_write
  2961                           
  2962                           ;DS3231.c: 44:     i2c_write(decimal_2_bcd(date->day));
  2963  0E45  087C               	movf	write_date@date,w
  2964  0E46  3E02               	addlw	2
  2965  0E47  0086               	movwf	6
  2966  0E48  0187               	clrf	7
  2967  0E49  0801               	movf	1,w
  2968  0E4A  318B  236B  318E   	fcall	_decimal_2_bcd
  2969  0E4D  3189  2186  318E   	fcall	_i2c_write
  2970                           
  2971                           ;DS3231.c: 45:     i2c_write(decimal_2_bcd(date->month));
  2972  0E50  0A7C               	incf	write_date@date,w
  2973  0E51  0086               	movwf	6
  2974  0E52  0187               	clrf	7
  2975  0E53  0801               	movf	1,w
  2976  0E54  318B  236B  318E   	fcall	_decimal_2_bcd
  2977  0E57  3189  2186  318E   	fcall	_i2c_write
  2978                           
  2979                           ;DS3231.c: 46:     i2c_write(decimal_2_bcd(date->year));
  2980  0E5A  087C               	movf	write_date@date,w
  2981  0E5B  0086               	movwf	6
  2982  0E5C  0187               	clrf	7
  2983  0E5D  0801               	movf	1,w
  2984  0E5E  318B  236B  318E   	fcall	_decimal_2_bcd
  2985  0E61  3189  2186  318E   	fcall	_i2c_write
  2986  0E64                     l2632:
  2987                           
  2988                           ;DS3231.c: 47:     i2c_stop();
  2989  0E64  3189  2147  318E   	fcall	_i2c_stop
  2990  0E67                     l2634:
  2991                           
  2992                           ;DS3231.c: 49:     _delay((unsigned long)((200)*(8000000/4000.0)));
  2993  0E67  3003               	movlw	3
  2994  0E68  00FB               	movwf	??_write_date+1
  2995  0E69  3008               	movlw	8
  2996  0E6A  00FA               	movwf	??_write_date
  2997  0E6B  3077               	movlw	119
  2998  0E6C                     u2367:
  2999  0E6C  0B89               	decfsz	9,f
  3000  0E6D  2E6C               	goto	u2367
  3001  0E6E  0BFA               	decfsz	??_write_date,f
  3002  0E6F  2E6C               	goto	u2367
  3003  0E70  0BFB               	decfsz	??_write_date+1,f
  3004  0E71  2E6C               	goto	u2367
  3005  0E72  0000               	nop
  3006  0E73                     l249:
  3007  0E73  0008               	return
  3008  0E74                     __end_of_write_date:
  3009                           
  3010                           	psect	text2
  3011  0B6B                     __ptext2:	
  3012 ;; *************** function _decimal_2_bcd *****************
  3013 ;; Defined at:
  3014 ;;		line 27 in file "DS3231.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  number          1    wreg     unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  number          1    9[COMMON] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      unsigned char 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0, pclath, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3028 ;;      Params:         0       0       0       0       0       0
  3029 ;;      Locals:         1       0       0       0       0       0
  3030 ;;      Temps:          0       7       0       0       0       0
  3031 ;;      Totals:         1       7       0       0       0       0
  3032 ;;Total ram usage:        8 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    1
  3035 ;; This function calls:
  3036 ;;		___awdiv
  3037 ;;		___awmod
  3038 ;; This function is called by:
  3039 ;;		_write_date
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           
  3044                           ;psect for function _decimal_2_bcd
  3045  0B6B                     _decimal_2_bcd:
  3046                           
  3047                           ;incstack = 0
  3048                           ; Regs used in _decimal_2_bcd: [wreg+status,2+status,0+pclath+cstack]
  3049                           ;decimal_2_bcd@number stored from wreg
  3050  0B6B  00F9               	movwf	decimal_2_bcd@number
  3051  0B6C                     l2538:
  3052                           
  3053                           ;DS3231.c: 28:     return (((number / 10) << 4) + (number % 10));
  3054  0B6C  300A               	movlw	10
  3055  0B6D  00F0               	movwf	___awmod@divisor
  3056  0B6E  3000               	movlw	0
  3057  0B6F  00F1               	movwf	___awmod@divisor+1
  3058  0B70  0879               	movf	decimal_2_bcd@number,w
  3059  0B71  0020               	movlb	0	; select bank0
  3060  0B72  00A0               	movwf	??_decimal_2_bcd
  3061  0B73  01A1               	clrf	??_decimal_2_bcd+1
  3062  0B74  0820               	movf	??_decimal_2_bcd,w
  3063  0B75  00F2               	movwf	___awmod@dividend
  3064  0B76  0821               	movf	??_decimal_2_bcd+1,w
  3065  0B77  00F3               	movwf	___awmod@dividend+1
  3066  0B78  318D  250D  318B   	fcall	___awmod
  3067  0B7B  0870               	movf	?___awmod,w
  3068  0B7C  0020               	movlb	0	; select bank0
  3069  0B7D  00A2               	movwf	??_decimal_2_bcd+2
  3070  0B7E  0871               	movf	?___awmod+1,w
  3071  0B7F  00A3               	movwf	??_decimal_2_bcd+3
  3072  0B80  300A               	movlw	10
  3073  0B81  00F0               	movwf	___awdiv@divisor
  3074  0B82  3000               	movlw	0
  3075  0B83  00F1               	movwf	___awdiv@divisor+1
  3076  0B84  0879               	movf	decimal_2_bcd@number,w
  3077  0B85  00A4               	movwf	??_decimal_2_bcd+4
  3078  0B86  01A5               	clrf	??_decimal_2_bcd+5
  3079  0B87  0824               	movf	??_decimal_2_bcd+4,w
  3080  0B88  00F2               	movwf	___awdiv@dividend
  3081  0B89  0825               	movf	??_decimal_2_bcd+5,w
  3082  0B8A  00F3               	movwf	___awdiv@dividend+1
  3083  0B8B  318D  25B5  318B   	fcall	___awdiv
  3084  0B8E  0870               	movf	?___awdiv,w
  3085  0B8F  0020               	movlb	0	; select bank0
  3086  0B90  00A6               	movwf	??_decimal_2_bcd+6
  3087  0B91  3003               	movlw	3
  3088  0B92                     u2245:
  3089  0B92  35A6               	lslf	??_decimal_2_bcd+6,f
  3090  0B93  3EFF               	addlw	-1
  3091  0B94  1D03               	skipz
  3092  0B95  2B92               	goto	u2245
  3093  0B96  3526               	lslf	??_decimal_2_bcd+6,w
  3094  0B97  0722               	addwf	??_decimal_2_bcd+2,w
  3095  0B98                     l246:
  3096  0B98  0008               	return
  3097  0B99                     __end_of_decimal_2_bcd:
  3098                           
  3099                           	psect	text3
  3100  0D0D                     __ptext3:	
  3101 ;; *************** function ___awmod *****************
  3102 ;; Defined at:
  3103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  divisor         2    0[COMMON] int 
  3106 ;;  dividend        2    2[COMMON] int 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  sign            1    6[COMMON] unsigned char 
  3109 ;;  counter         1    5[COMMON] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    0[COMMON] int 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3119 ;;      Params:         4       0       0       0       0       0
  3120 ;;      Locals:         2       0       0       0       0       0
  3121 ;;      Temps:          1       0       0       0       0       0
  3122 ;;      Totals:         7       0       0       0       0       0
  3123 ;;Total ram usage:        7 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_decimal_2_bcd
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function ___awmod
  3134  0D0D                     ___awmod:
  3135  0D0D                     l2428:	
  3136                           ;incstack = 0
  3137                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3138                           
  3139  0D0D  01F6               	clrf	___awmod@sign
  3140  0D0E                     l2430:
  3141  0D0E  1FF3               	btfss	___awmod@dividend+1,7
  3142  0D0F  2D11               	goto	u2121
  3143  0D10  2D12               	goto	u2120
  3144  0D11                     u2121:
  3145  0D11  2D19               	goto	l2436
  3146  0D12                     u2120:
  3147  0D12                     l2432:
  3148  0D12  09F2               	comf	___awmod@dividend,f
  3149  0D13  09F3               	comf	___awmod@dividend+1,f
  3150  0D14  0AF2               	incf	___awmod@dividend,f
  3151  0D15  1903               	skipnz
  3152  0D16  0AF3               	incf	___awmod@dividend+1,f
  3153  0D17                     l2434:
  3154  0D17  01F6               	clrf	___awmod@sign
  3155  0D18  0AF6               	incf	___awmod@sign,f
  3156  0D19                     l2436:
  3157  0D19  1FF1               	btfss	___awmod@divisor+1,7
  3158  0D1A  2D1C               	goto	u2131
  3159  0D1B  2D1D               	goto	u2130
  3160  0D1C                     u2131:
  3161  0D1C  2D22               	goto	l2440
  3162  0D1D                     u2130:
  3163  0D1D                     l2438:
  3164  0D1D  09F0               	comf	___awmod@divisor,f
  3165  0D1E  09F1               	comf	___awmod@divisor+1,f
  3166  0D1F  0AF0               	incf	___awmod@divisor,f
  3167  0D20  1903               	skipnz
  3168  0D21  0AF1               	incf	___awmod@divisor+1,f
  3169  0D22                     l2440:
  3170  0D22  0870               	movf	___awmod@divisor,w
  3171  0D23  0471               	iorwf	___awmod@divisor+1,w
  3172  0D24  1903               	btfsc	3,2
  3173  0D25  2D27               	goto	u2141
  3174  0D26  2D28               	goto	u2140
  3175  0D27                     u2141:
  3176  0D27  2D51               	goto	l2458
  3177  0D28                     u2140:
  3178  0D28                     l2442:
  3179  0D28  01F5               	clrf	___awmod@counter
  3180  0D29  0AF5               	incf	___awmod@counter,f
  3181  0D2A  2D34               	goto	l2448
  3182  0D2B                     l2444:
  3183  0D2B  3001               	movlw	1
  3184  0D2C                     u2155:
  3185  0D2C  35F0               	lslf	___awmod@divisor,f
  3186  0D2D  0DF1               	rlf	___awmod@divisor+1,f
  3187  0D2E  0B89               	decfsz	9,f
  3188  0D2F  2D2C               	goto	u2155
  3189  0D30                     l2446:
  3190  0D30  3001               	movlw	1
  3191  0D31  00F4               	movwf	??___awmod
  3192  0D32  0874               	movf	??___awmod,w
  3193  0D33  07F5               	addwf	___awmod@counter,f
  3194  0D34                     l2448:
  3195  0D34  1FF1               	btfss	___awmod@divisor+1,7
  3196  0D35  2D37               	goto	u2161
  3197  0D36  2D38               	goto	u2160
  3198  0D37                     u2161:
  3199  0D37  2D2B               	goto	l2444
  3200  0D38                     u2160:
  3201  0D38                     l2450:
  3202  0D38  0871               	movf	___awmod@divisor+1,w
  3203  0D39  0273               	subwf	___awmod@dividend+1,w
  3204  0D3A  1D03               	skipz
  3205  0D3B  2D3E               	goto	u2175
  3206  0D3C  0870               	movf	___awmod@divisor,w
  3207  0D3D  0272               	subwf	___awmod@dividend,w
  3208  0D3E                     u2175:
  3209  0D3E  1C03               	skipc
  3210  0D3F  2D41               	goto	u2171
  3211  0D40  2D42               	goto	u2170
  3212  0D41                     u2171:
  3213  0D41  2D46               	goto	l2454
  3214  0D42                     u2170:
  3215  0D42                     l2452:
  3216  0D42  0870               	movf	___awmod@divisor,w
  3217  0D43  02F2               	subwf	___awmod@dividend,f
  3218  0D44  0871               	movf	___awmod@divisor+1,w
  3219  0D45  3BF3               	subwfb	___awmod@dividend+1,f
  3220  0D46                     l2454:
  3221  0D46  3001               	movlw	1
  3222  0D47                     u2185:
  3223  0D47  36F1               	lsrf	___awmod@divisor+1,f
  3224  0D48  0CF0               	rrf	___awmod@divisor,f
  3225  0D49  0B89               	decfsz	9,f
  3226  0D4A  2D47               	goto	u2185
  3227  0D4B                     l2456:
  3228  0D4B  3001               	movlw	1
  3229  0D4C  02F5               	subwf	___awmod@counter,f
  3230  0D4D  1D03               	btfss	3,2
  3231  0D4E  2D50               	goto	u2191
  3232  0D4F  2D51               	goto	u2190
  3233  0D50                     u2191:
  3234  0D50  2D38               	goto	l2450
  3235  0D51                     u2190:
  3236  0D51                     l2458:
  3237  0D51  0876               	movf	___awmod@sign,w
  3238  0D52  1903               	btfsc	3,2
  3239  0D53  2D55               	goto	u2201
  3240  0D54  2D56               	goto	u2200
  3241  0D55                     u2201:
  3242  0D55  2D5B               	goto	l2462
  3243  0D56                     u2200:
  3244  0D56                     l2460:
  3245  0D56  09F2               	comf	___awmod@dividend,f
  3246  0D57  09F3               	comf	___awmod@dividend+1,f
  3247  0D58  0AF2               	incf	___awmod@dividend,f
  3248  0D59  1903               	skipnz
  3249  0D5A  0AF3               	incf	___awmod@dividend+1,f
  3250  0D5B                     l2462:
  3251  0D5B  0873               	movf	___awmod@dividend+1,w
  3252  0D5C  00F1               	movwf	?___awmod+1
  3253  0D5D  0872               	movf	___awmod@dividend,w
  3254  0D5E  00F0               	movwf	?___awmod
  3255  0D5F                     l582:
  3256  0D5F  0008               	return
  3257  0D60                     __end_of___awmod:
  3258                           
  3259                           	psect	text4
  3260  0DB5                     __ptext4:	
  3261 ;; *************** function ___awdiv *****************
  3262 ;; Defined at:
  3263 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  divisor         2    0[COMMON] int 
  3266 ;;  dividend        2    2[COMMON] int 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  quotient        2    7[COMMON] int 
  3269 ;;  sign            1    6[COMMON] unsigned char 
  3270 ;;  counter         1    5[COMMON] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2    0[COMMON] int 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3280 ;;      Params:         4       0       0       0       0       0
  3281 ;;      Locals:         4       0       0       0       0       0
  3282 ;;      Temps:          1       0       0       0       0       0
  3283 ;;      Totals:         9       0       0       0       0       0
  3284 ;;Total ram usage:        9 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_decimal_2_bcd
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           
  3294                           ;psect for function ___awdiv
  3295  0DB5                     ___awdiv:
  3296  0DB5                     l2384:	
  3297                           ;incstack = 0
  3298                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3299                           
  3300  0DB5  01F6               	clrf	___awdiv@sign
  3301  0DB6                     l2386:
  3302  0DB6  1FF1               	btfss	___awdiv@divisor+1,7
  3303  0DB7  2DB9               	goto	u2021
  3304  0DB8  2DBA               	goto	u2020
  3305  0DB9                     u2021:
  3306  0DB9  2DC1               	goto	l2392
  3307  0DBA                     u2020:
  3308  0DBA                     l2388:
  3309  0DBA  09F0               	comf	___awdiv@divisor,f
  3310  0DBB  09F1               	comf	___awdiv@divisor+1,f
  3311  0DBC  0AF0               	incf	___awdiv@divisor,f
  3312  0DBD  1903               	skipnz
  3313  0DBE  0AF1               	incf	___awdiv@divisor+1,f
  3314  0DBF                     l2390:
  3315  0DBF  01F6               	clrf	___awdiv@sign
  3316  0DC0  0AF6               	incf	___awdiv@sign,f
  3317  0DC1                     l2392:
  3318  0DC1  1FF3               	btfss	___awdiv@dividend+1,7
  3319  0DC2  2DC4               	goto	u2031
  3320  0DC3  2DC5               	goto	u2030
  3321  0DC4                     u2031:
  3322  0DC4  2DCE               	goto	l2398
  3323  0DC5                     u2030:
  3324  0DC5                     l2394:
  3325  0DC5  09F2               	comf	___awdiv@dividend,f
  3326  0DC6  09F3               	comf	___awdiv@dividend+1,f
  3327  0DC7  0AF2               	incf	___awdiv@dividend,f
  3328  0DC8  1903               	skipnz
  3329  0DC9  0AF3               	incf	___awdiv@dividend+1,f
  3330  0DCA                     l2396:
  3331  0DCA  3001               	movlw	1
  3332  0DCB  00F4               	movwf	??___awdiv
  3333  0DCC  0874               	movf	??___awdiv,w
  3334  0DCD  06F6               	xorwf	___awdiv@sign,f
  3335  0DCE                     l2398:
  3336  0DCE  01F7               	clrf	___awdiv@quotient
  3337  0DCF  01F8               	clrf	___awdiv@quotient+1
  3338  0DD0                     l2400:
  3339  0DD0  0870               	movf	___awdiv@divisor,w
  3340  0DD1  0471               	iorwf	___awdiv@divisor+1,w
  3341  0DD2  1903               	btfsc	3,2
  3342  0DD3  2DD5               	goto	u2041
  3343  0DD4  2DD6               	goto	u2040
  3344  0DD5                     u2041:
  3345  0DD5  2E05               	goto	l2420
  3346  0DD6                     u2040:
  3347  0DD6                     l2402:
  3348  0DD6  01F5               	clrf	___awdiv@counter
  3349  0DD7  0AF5               	incf	___awdiv@counter,f
  3350  0DD8  2DE2               	goto	l2408
  3351  0DD9                     l2404:
  3352  0DD9  3001               	movlw	1
  3353  0DDA                     u2055:
  3354  0DDA  35F0               	lslf	___awdiv@divisor,f
  3355  0DDB  0DF1               	rlf	___awdiv@divisor+1,f
  3356  0DDC  0B89               	decfsz	9,f
  3357  0DDD  2DDA               	goto	u2055
  3358  0DDE                     l2406:
  3359  0DDE  3001               	movlw	1
  3360  0DDF  00F4               	movwf	??___awdiv
  3361  0DE0  0874               	movf	??___awdiv,w
  3362  0DE1  07F5               	addwf	___awdiv@counter,f
  3363  0DE2                     l2408:
  3364  0DE2  1FF1               	btfss	___awdiv@divisor+1,7
  3365  0DE3  2DE5               	goto	u2061
  3366  0DE4  2DE6               	goto	u2060
  3367  0DE5                     u2061:
  3368  0DE5  2DD9               	goto	l2404
  3369  0DE6                     u2060:
  3370  0DE6                     l2410:
  3371  0DE6  3001               	movlw	1
  3372  0DE7                     u2075:
  3373  0DE7  35F7               	lslf	___awdiv@quotient,f
  3374  0DE8  0DF8               	rlf	___awdiv@quotient+1,f
  3375  0DE9  0B89               	decfsz	9,f
  3376  0DEA  2DE7               	goto	u2075
  3377  0DEB  0871               	movf	___awdiv@divisor+1,w
  3378  0DEC  0273               	subwf	___awdiv@dividend+1,w
  3379  0DED  1D03               	skipz
  3380  0DEE  2DF1               	goto	u2085
  3381  0DEF  0870               	movf	___awdiv@divisor,w
  3382  0DF0  0272               	subwf	___awdiv@dividend,w
  3383  0DF1                     u2085:
  3384  0DF1  1C03               	skipc
  3385  0DF2  2DF4               	goto	u2081
  3386  0DF3  2DF5               	goto	u2080
  3387  0DF4                     u2081:
  3388  0DF4  2DFA               	goto	l2416
  3389  0DF5                     u2080:
  3390  0DF5                     l2412:
  3391  0DF5  0870               	movf	___awdiv@divisor,w
  3392  0DF6  02F2               	subwf	___awdiv@dividend,f
  3393  0DF7  0871               	movf	___awdiv@divisor+1,w
  3394  0DF8  3BF3               	subwfb	___awdiv@dividend+1,f
  3395  0DF9                     l2414:
  3396  0DF9  1477               	bsf	___awdiv@quotient,0
  3397  0DFA                     l2416:
  3398  0DFA  3001               	movlw	1
  3399  0DFB                     u2095:
  3400  0DFB  36F1               	lsrf	___awdiv@divisor+1,f
  3401  0DFC  0CF0               	rrf	___awdiv@divisor,f
  3402  0DFD  0B89               	decfsz	9,f
  3403  0DFE  2DFB               	goto	u2095
  3404  0DFF                     l2418:
  3405  0DFF  3001               	movlw	1
  3406  0E00  02F5               	subwf	___awdiv@counter,f
  3407  0E01  1D03               	btfss	3,2
  3408  0E02  2E04               	goto	u2101
  3409  0E03  2E05               	goto	u2100
  3410  0E04                     u2101:
  3411  0E04  2DE6               	goto	l2410
  3412  0E05                     u2100:
  3413  0E05                     l2420:
  3414  0E05  0876               	movf	___awdiv@sign,w
  3415  0E06  1903               	btfsc	3,2
  3416  0E07  2E09               	goto	u2111
  3417  0E08  2E0A               	goto	u2110
  3418  0E09                     u2111:
  3419  0E09  2E0F               	goto	l2424
  3420  0E0A                     u2110:
  3421  0E0A                     l2422:
  3422  0E0A  09F7               	comf	___awdiv@quotient,f
  3423  0E0B  09F8               	comf	___awdiv@quotient+1,f
  3424  0E0C  0AF7               	incf	___awdiv@quotient,f
  3425  0E0D  1903               	skipnz
  3426  0E0E  0AF8               	incf	___awdiv@quotient+1,f
  3427  0E0F                     l2424:
  3428  0E0F  0878               	movf	___awdiv@quotient+1,w
  3429  0E10  00F1               	movwf	?___awdiv+1
  3430  0E11  0877               	movf	___awdiv@quotient,w
  3431  0E12  00F0               	movwf	?___awdiv
  3432  0E13                     l569:
  3433  0E13  0008               	return
  3434  0E14                     __end_of___awdiv:
  3435                           
  3436                           	psect	text5
  3437  0C75                     __ptext5:	
  3438 ;; *************** function _read_date *****************
  3439 ;; Defined at:
  3440 ;;		line 77 in file "DS3231.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  date            1    wreg     PTR struct Date
  3443 ;;		 -> main@date(6), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  date            1   12[COMMON] PTR struct Date
  3446 ;;		 -> main@date(6), 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3456 ;;      Params:         0       0       0       0       0       0
  3457 ;;      Locals:         1       0       0       0       0       0
  3458 ;;      Temps:          1       0       0       0       0       0
  3459 ;;      Totals:         2       0       0       0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    3
  3463 ;; This function calls:
  3464 ;;		__read
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _read_date
  3472  0C75                     _read_date:
  3473                           
  3474                           ;incstack = 0
  3475                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3476                           ;read_date@date stored from wreg
  3477  0C75  00FC               	movwf	read_date@date
  3478  0C76                     l2636:
  3479                           
  3480                           ;DS3231.c: 78:     date->year = _read(6);
  3481  0C76  3006               	movlw	6
  3482  0C77  318A  22A9  318C   	fcall	__read
  3483  0C7A  00FB               	movwf	??_read_date
  3484  0C7B  087C               	movf	read_date@date,w
  3485  0C7C  0086               	movwf	6
  3486  0C7D  0187               	clrf	7
  3487  0C7E  087B               	movf	??_read_date,w
  3488  0C7F  0081               	movwf	1
  3489                           
  3490                           ;DS3231.c: 79:     date->month = _read(5);
  3491  0C80  3005               	movlw	5
  3492  0C81  318A  22A9  318C   	fcall	__read
  3493  0C84  00FB               	movwf	??_read_date
  3494  0C85  0A7C               	incf	read_date@date,w
  3495  0C86  0086               	movwf	6
  3496  0C87  0187               	clrf	7
  3497  0C88  087B               	movf	??_read_date,w
  3498  0C89  0081               	movwf	1
  3499                           
  3500                           ;DS3231.c: 80:     date->day = _read(4);
  3501  0C8A  3004               	movlw	4
  3502  0C8B  318A  22A9  318C   	fcall	__read
  3503  0C8E  00FB               	movwf	??_read_date
  3504  0C8F  087C               	movf	read_date@date,w
  3505  0C90  3E02               	addlw	2
  3506  0C91  0086               	movwf	6
  3507  0C92  0187               	clrf	7
  3508  0C93  087B               	movf	??_read_date,w
  3509  0C94  0081               	movwf	1
  3510  0C95                     l2638:
  3511                           
  3512                           ;DS3231.c: 81:     _read(3);
  3513  0C95  3003               	movlw	3
  3514  0C96  318A  22A9  318C   	fcall	__read
  3515  0C99                     l2640:
  3516                           
  3517                           ;DS3231.c: 82:     date->hour = _read(2);
  3518  0C99  3002               	movlw	2
  3519  0C9A  318A  22A9  318C   	fcall	__read
  3520  0C9D  00FB               	movwf	??_read_date
  3521  0C9E  087C               	movf	read_date@date,w
  3522  0C9F  3E03               	addlw	3
  3523  0CA0  0086               	movwf	6
  3524  0CA1  0187               	clrf	7
  3525  0CA2  087B               	movf	??_read_date,w
  3526  0CA3  0081               	movwf	1
  3527  0CA4                     l2642:
  3528                           
  3529                           ;DS3231.c: 83:     date->min = _read(1);
  3530  0CA4  3001               	movlw	1
  3531  0CA5  318A  22A9  318C   	fcall	__read
  3532  0CA8  00FB               	movwf	??_read_date
  3533  0CA9  087C               	movf	read_date@date,w
  3534  0CAA  3E04               	addlw	4
  3535  0CAB  0086               	movwf	6
  3536  0CAC  0187               	clrf	7
  3537  0CAD  087B               	movf	??_read_date,w
  3538  0CAE  0081               	movwf	1
  3539  0CAF                     l2644:
  3540                           
  3541                           ;DS3231.c: 84:     date->sec = _read(0);
  3542  0CAF  3000               	movlw	0
  3543  0CB0  318A  22A9  318C   	fcall	__read
  3544  0CB3  00FB               	movwf	??_read_date
  3545  0CB4  087C               	movf	read_date@date,w
  3546  0CB5  3E05               	addlw	5
  3547  0CB6  0086               	movwf	6
  3548  0CB7  0187               	clrf	7
  3549  0CB8  087B               	movf	??_read_date,w
  3550  0CB9  0081               	movwf	1
  3551  0CBA                     l255:
  3552  0CBA  0008               	return
  3553  0CBB                     __end_of_read_date:
  3554                           
  3555                           	psect	text6
  3556  0AA9                     __ptext6:	
  3557 ;; *************** function __read *****************
  3558 ;; Defined at:
  3559 ;;		line 58 in file "DS3231.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  address         1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  address         1    9[COMMON] unsigned char 
  3564 ;;  data            1   10[COMMON] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      unsigned char 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3574 ;;      Params:         0       0       0       0       0       0
  3575 ;;      Locals:         2       0       0       0       0       0
  3576 ;;      Temps:          1       0       0       0       0       0
  3577 ;;      Totals:         3       0       0       0       0       0
  3578 ;;Total ram usage:        3 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    2
  3581 ;; This function calls:
  3582 ;;		_bcd_2_decimal
  3583 ;;		_i2c_read
  3584 ;;		_i2c_repeated_start
  3585 ;;		_i2c_start
  3586 ;;		_i2c_stop
  3587 ;;		_i2c_write
  3588 ;; This function is called by:
  3589 ;;		_read_date
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function __read
  3595  0AA9                     __read:
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  3599                           ;__read@address stored from wreg
  3600  0AA9  00F9               	movwf	__read@address
  3601  0AAA                     l2542:
  3602                           
  3603                           ;DS3231.c: 59:     uint8_t data;;DS3231.c: 60:     i2c_start();
  3604  0AAA  3189  2158  318A   	fcall	_i2c_start
  3605                           
  3606                           ;DS3231.c: 61:     i2c_write(0xD0);
  3607  0AAD  30D0               	movlw	208
  3608  0AAE  3189  2186  318A   	fcall	_i2c_write
  3609                           
  3610                           ;DS3231.c: 62:     i2c_write(address);
  3611  0AB1  0879               	movf	__read@address,w
  3612  0AB2  3189  2186  318A   	fcall	_i2c_write
  3613                           
  3614                           ;DS3231.c: 64:     i2c_repeated_start();
  3615  0AB5  3189  2162  318A   	fcall	_i2c_repeated_start
  3616                           
  3617                           ;DS3231.c: 66:     i2c_write(0xD0 | 0x01);
  3618  0AB8  30D1               	movlw	209
  3619  0AB9  3189  2186  318A   	fcall	_i2c_write
  3620                           
  3621                           ;DS3231.c: 67:     data = bcd_2_decimal(i2c_read(1));
  3622  0ABC  3001               	movlw	1
  3623  0ABD  3189  21E9  318A   	fcall	_i2c_read
  3624  0AC0  3189  21AA  318A   	fcall	_bcd_2_decimal
  3625  0AC3  00F8               	movwf	??__read
  3626  0AC4  0878               	movf	??__read,w
  3627  0AC5  00FA               	movwf	__read@data
  3628  0AC6                     l2544:
  3629                           
  3630                           ;DS3231.c: 68:     i2c_stop();
  3631  0AC6  3189  2147  318A   	fcall	_i2c_stop
  3632                           
  3633                           ;DS3231.c: 70:     return data;
  3634  0AC9  087A               	movf	__read@data,w
  3635  0ACA                     l252:
  3636  0ACA  0008               	return
  3637  0ACB                     __end_of__read:
  3638                           
  3639                           	psect	text7
  3640  0962                     __ptext7:	
  3641 ;; *************** function _i2c_repeated_start *****************
  3642 ;; Defined at:
  3643 ;;		line 20 in file "i2c.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0, pclath, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3657 ;;      Params:         0       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    1
  3664 ;; This function calls:
  3665 ;;		_i2c_wait
  3666 ;; This function is called by:
  3667 ;;		__read
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           
  3672                           ;psect for function _i2c_repeated_start
  3673  0962                     _i2c_repeated_start:
  3674  0962                     l2346:	
  3675                           ;incstack = 0
  3676                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  3677                           
  3678                           
  3679                           ;i2c.c: 21:     i2c_wait();
  3680  0962  3189  216C  3189   	fcall	_i2c_wait
  3681  0965                     l2348:
  3682                           
  3683                           ;i2c.c: 22:     SSP2CON2bits.RSEN = 1;
  3684  0965  0024               	movlb	4	; select bank4
  3685  0966  149E               	bsf	30,1	;volatile
  3686  0967                     l163:	
  3687                           ;i2c.c: 23:     while(SSP2CON2bits.RSEN);
  3688                           
  3689  0967  189E               	btfsc	30,1	;volatile
  3690  0968  296A               	goto	u1981
  3691  0969  296B               	goto	u1980
  3692  096A                     u1981:
  3693  096A  2967               	goto	l163
  3694  096B                     u1980:
  3695  096B                     l166:
  3696  096B  0008               	return
  3697  096C                     __end_of_i2c_repeated_start:
  3698                           
  3699                           	psect	text8
  3700  09E9                     __ptext8:	
  3701 ;; *************** function _i2c_read *****************
  3702 ;; Defined at:
  3703 ;;		line 33 in file "i2c.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  ack             1    wreg     unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  ack             1    1[COMMON] unsigned char 
  3708 ;;  data            1    2[COMMON] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      unsigned char 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3718 ;;      Params:         0       0       0       0       0       0
  3719 ;;      Locals:         2       0       0       0       0       0
  3720 ;;      Temps:          1       0       0       0       0       0
  3721 ;;      Totals:         3       0       0       0       0       0
  3722 ;;Total ram usage:        3 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    1
  3725 ;; This function calls:
  3726 ;;		_i2c_wait
  3727 ;; This function is called by:
  3728 ;;		__read
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function _i2c_read
  3734  09E9                     _i2c_read:
  3735                           
  3736                           ;incstack = 0
  3737                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3738                           ;i2c_read@ack stored from wreg
  3739  09E9  00F1               	movwf	i2c_read@ack
  3740  09EA                     l2350:
  3741                           
  3742                           ;i2c.c: 34:     uint8_t data;;i2c.c: 36:     SSP2CON2bits.ACKDT = ack;
  3743  09EA  0C71               	rrf	i2c_read@ack,w
  3744  09EB  0024               	movlb	4	; select bank4
  3745  09EC  1C03               	skipc
  3746  09ED  129E               	bcf	30,5	;volatile
  3747  09EE  1803               	skipnc
  3748  09EF  169E               	bsf	30,5	;volatile
  3749  09F0                     l2352:
  3750                           
  3751                           ;i2c.c: 37:     SSP2CON2bits.RCEN = 1;
  3752  09F0  159E               	bsf	30,3	;volatile
  3753  09F1                     l178:	
  3754                           ;i2c.c: 38:     while(!SSP2STATbits.BF);
  3755                           
  3756  09F1  1C1C               	btfss	28,0	;volatile
  3757  09F2  29F4               	goto	u1991
  3758  09F3  29F5               	goto	u1990
  3759  09F4                     u1991:
  3760  09F4  29F1               	goto	l178
  3761  09F5                     u1990:
  3762  09F5                     l180:
  3763                           
  3764                           ;i2c.c: 39:     SSP2CON2bits.ACKEN = 1;
  3765  09F5  161E               	bsf	30,4	;volatile
  3766  09F6                     l2354:
  3767                           
  3768                           ;i2c.c: 40:     data = SSP2BUF;
  3769  09F6  0819               	movf	25,w	;volatile
  3770  09F7  00F0               	movwf	??_i2c_read
  3771  09F8  0870               	movf	??_i2c_read,w
  3772  09F9  00F2               	movwf	i2c_read@data
  3773  09FA                     l2356:
  3774                           
  3775                           ;i2c.c: 41:     SSP2CON1bits.SSPOV = 0;
  3776  09FA  131D               	bcf	29,6	;volatile
  3777  09FB                     l2358:
  3778                           
  3779                           ;i2c.c: 42:     i2c_wait();
  3780  09FB  3189  216C  3189   	fcall	_i2c_wait
  3781  09FE                     l2360:
  3782                           
  3783                           ;i2c.c: 44:     return data;
  3784  09FE  0872               	movf	i2c_read@data,w
  3785  09FF                     l181:
  3786  09FF  0008               	return
  3787  0A00                     __end_of_i2c_read:
  3788                           
  3789                           	psect	text9
  3790  09AA                     __ptext9:	
  3791 ;; *************** function _bcd_2_decimal *****************
  3792 ;; Defined at:
  3793 ;;		line 18 in file "DS3231.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  number          1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  number          1    7[COMMON] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      unsigned char 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, pclath, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3807 ;;      Params:         0       0       0       0       0       0
  3808 ;;      Locals:         1       0       0       0       0       0
  3809 ;;      Temps:          3       0       0       0       0       0
  3810 ;;      Totals:         4       0       0       0       0       0
  3811 ;;Total ram usage:        4 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    1
  3814 ;; This function calls:
  3815 ;;		___bmul
  3816 ;; This function is called by:
  3817 ;;		__read
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _bcd_2_decimal
  3823  09AA                     _bcd_2_decimal:
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  3827                           ;bcd_2_decimal@number stored from wreg
  3828  09AA  00F7               	movwf	bcd_2_decimal@number
  3829  09AB                     l2380:
  3830                           
  3831                           ;DS3231.c: 19:     return ((number >> 4) * 10 + (number & 0x0F));
  3832  09AB  300F               	movlw	15
  3833  09AC  0577               	andwf	bcd_2_decimal@number,w
  3834  09AD  00F4               	movwf	??_bcd_2_decimal
  3835  09AE  300A               	movlw	10
  3836  09AF  00F5               	movwf	??_bcd_2_decimal+1
  3837  09B0  0875               	movf	??_bcd_2_decimal+1,w
  3838  09B1  00F0               	movwf	___bmul@multiplicand
  3839  09B2  0877               	movf	bcd_2_decimal@number,w
  3840  09B3  00F6               	movwf	??_bcd_2_decimal+2
  3841  09B4  3004               	movlw	4
  3842  09B5                     u2015:
  3843  09B5  36F6               	lsrf	??_bcd_2_decimal+2,f
  3844  09B6  0B89               	decfsz	9,f
  3845  09B7  29B5               	goto	u2015
  3846  09B8  0876               	movf	??_bcd_2_decimal+2,w
  3847  09B9  3189  21BE  3189   	fcall	___bmul
  3848  09BC  0774               	addwf	??_bcd_2_decimal,w
  3849  09BD                     l243:
  3850  09BD  0008               	return
  3851  09BE                     __end_of_bcd_2_decimal:
  3852                           
  3853                           	psect	text10
  3854  0E74                     __ptext10:	
  3855 ;; *************** function _print_train *****************
  3856 ;; Defined at:
  3857 ;;		line 87 in file "main.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  next            3   17[BANK1 ] struct train
  3860 ;;  next1           3   20[BANK1 ] struct train
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3872 ;;      Params:         0       0       6       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0
  3874 ;;      Temps:          0       4       0       0       0       0
  3875 ;;      Totals:         0       4       6       0       0       0
  3876 ;;Total ram usage:       10 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    8
  3879 ;; This function calls:
  3880 ;;		_init_char
  3881 ;;		_lcd_clear
  3882 ;;		_lcd_print
  3883 ;;		_lcd_set_cursor
  3884 ;;		_sprintf
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _print_train
  3892  0E74                     _print_train:
  3893  0E74                     l2854:	
  3894                           ;incstack = 0
  3895                           ; Regs used in _print_train: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3896                           
  3897                           
  3898                           ;main.c: 88:     init_char();
  3899  0E74  3189  212E  318E   	fcall	_init_char
  3900  0E77                     l2856:
  3901                           
  3902                           ;main.c: 89:     sprintf(line1, "KW > MT %02d:%02d", next.hour, next.min);
  3903  0E77  30D6               	movlw	low _line1
  3904  0E78  0021               	movlb	1	; select bank1
  3905  0E79  00A0               	movwf	sprintf@s^(0+128)
  3906  0E7A  3000               	movlw	high _line1
  3907  0E7B  00A1               	movwf	(sprintf@s+1)^(0+128)
  3908  0E7C  3002               	movlw	low (STR_1| (0+32768))
  3909  0E7D  00A2               	movwf	sprintf@fmt^(0+128)
  3910  0E7E  3088               	movlw	high (STR_1| (0+32768))
  3911  0E7F  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  3912  0E80  0832               	movf	(print_train@next^(0+128)+1),w
  3913  0E81  0020               	movlb	0	; select bank0
  3914  0E82  00EB               	movwf	??_print_train
  3915  0E83  01EC               	clrf	??_print_train+1
  3916  0E84  086B               	movf	??_print_train,w
  3917  0E85  0021               	movlb	1	; select bank1
  3918  0E86  00A4               	movwf	(?_sprintf^(0+128)+4)
  3919  0E87  0020               	movlb	0	; select bank0
  3920  0E88  086C               	movf	??_print_train+1,w
  3921  0E89  0021               	movlb	1	; select bank1
  3922  0E8A  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  3923  0E8B  0833               	movf	(print_train@next^(0+128)+2),w
  3924  0E8C  0020               	movlb	0	; select bank0
  3925  0E8D  00ED               	movwf	??_print_train+2
  3926  0E8E  01EE               	clrf	??_print_train+3
  3927  0E8F  086D               	movf	??_print_train+2,w
  3928  0E90  0021               	movlb	1	; select bank1
  3929  0E91  00A6               	movwf	(?_sprintf^(0+128)+6)
  3930  0E92  0020               	movlb	0	; select bank0
  3931  0E93  086E               	movf	??_print_train+3,w
  3932  0E94  0021               	movlb	1	; select bank1
  3933  0E95  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
  3934  0E96  318B  2318  318E   	fcall	_sprintf
  3935  0E99                     l2858:
  3936                           
  3937                           ;main.c: 90:     sprintf(line2, "KW > MT %02d:%02d", next1.hour, next1.min);
  3938  0E99  3040               	movlw	low _line2
  3939  0E9A  0021               	movlb	1	; select bank1
  3940  0E9B  00A0               	movwf	sprintf@s^(0+128)
  3941  0E9C  3001               	movlw	high _line2
  3942  0E9D  00A1               	movwf	(sprintf@s+1)^(0+128)
  3943  0E9E  3002               	movlw	low (STR_1| (0+32768))
  3944  0E9F  00A2               	movwf	sprintf@fmt^(0+128)
  3945  0EA0  3088               	movlw	high (STR_1| (0+32768))
  3946  0EA1  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  3947  0EA2  0835               	movf	(print_train@next1^(0+128)+1),w
  3948  0EA3  0020               	movlb	0	; select bank0
  3949  0EA4  00EB               	movwf	??_print_train
  3950  0EA5  01EC               	clrf	??_print_train+1
  3951  0EA6  086B               	movf	??_print_train,w
  3952  0EA7  0021               	movlb	1	; select bank1
  3953  0EA8  00A4               	movwf	(?_sprintf^(0+128)+4)
  3954  0EA9  0020               	movlb	0	; select bank0
  3955  0EAA  086C               	movf	??_print_train+1,w
  3956  0EAB  0021               	movlb	1	; select bank1
  3957  0EAC  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  3958  0EAD  0836               	movf	(print_train@next1^(0+128)+2),w
  3959  0EAE  0020               	movlb	0	; select bank0
  3960  0EAF  00ED               	movwf	??_print_train+2
  3961  0EB0  01EE               	clrf	??_print_train+3
  3962  0EB1  086D               	movf	??_print_train+2,w
  3963  0EB2  0021               	movlb	1	; select bank1
  3964  0EB3  00A6               	movwf	(?_sprintf^(0+128)+6)
  3965  0EB4  0020               	movlb	0	; select bank0
  3966  0EB5  086E               	movf	??_print_train+3,w
  3967  0EB6  0021               	movlb	1	; select bank1
  3968  0EB7  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
  3969  0EB8  318B  2318  318E   	fcall	_sprintf
  3970  0EBB                     l2860:
  3971                           
  3972                           ;main.c: 92:     lcd_clear();
  3973  0EBB  318A  22CB  318E   	fcall	_lcd_clear
  3974  0EBE                     l2862:
  3975                           
  3976                           ;main.c: 94:     lcd_set_cursor(0, 0);
  3977  0EBE  01F8               	clrf	lcd_set_cursor@row
  3978  0EBF  3000               	movlw	0
  3979  0EC0  318B  2341  318E   	fcall	_lcd_set_cursor
  3980  0EC3                     l2864:
  3981                           
  3982                           ;main.c: 95:     lcd_print(line1);
  3983  0EC3  30D6               	movlw	low _line1
  3984  0EC4  00F8               	movwf	lcd_print@str
  3985  0EC5  3000               	movlw	high _line1
  3986  0EC6  00F9               	movwf	lcd_print@str+1
  3987  0EC7  318A  224C  318E   	fcall	_lcd_print
  3988  0ECA                     l2866:
  3989                           
  3990                           ;main.c: 97:     lcd_set_cursor(0, 1);
  3991  0ECA  01F8               	clrf	lcd_set_cursor@row
  3992  0ECB  0AF8               	incf	lcd_set_cursor@row,f
  3993  0ECC  3000               	movlw	0
  3994  0ECD  318B  2341  318E   	fcall	_lcd_set_cursor
  3995  0ED0                     l2868:
  3996                           
  3997                           ;main.c: 98:     lcd_print(line2);
  3998  0ED0  3040               	movlw	low _line2
  3999  0ED1  00F8               	movwf	lcd_print@str
  4000  0ED2  3001               	movlw	high _line2
  4001  0ED3  00F9               	movwf	lcd_print@str+1
  4002  0ED4  318A  224C  318E   	fcall	_lcd_print
  4003  0ED7                     l124:
  4004  0ED7  0008               	return
  4005  0ED8                     __end_of_print_train:
  4006                           
  4007                           	psect	text11
  4008  0ED8                     __ptext11:	
  4009 ;; *************** function _print_remaing *****************
  4010 ;; Defined at:
  4011 ;;		line 101 in file "main.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  date            6   17[BANK1 ] struct Date
  4014 ;;  next            3   23[BANK1 ] struct train
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  next_min        2   28[BANK1 ] unsigned short 
  4017 ;;  now_min         2   26[BANK1 ] unsigned short 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4027 ;;      Params:         0       0       9       0       0       0
  4028 ;;      Locals:         0       0       4       0       0       0
  4029 ;;      Temps:          0       4       0       0       0       0
  4030 ;;      Totals:         0       4      13       0       0       0
  4031 ;;Total ram usage:       17 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    8
  4034 ;; This function calls:
  4035 ;;		___wmul
  4036 ;;		_init_char
  4037 ;;		_lcd_clear
  4038 ;;		_lcd_print
  4039 ;;		_lcd_set_cursor
  4040 ;;		_sprintf
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _print_remaing
  4048  0ED8                     _print_remaing:
  4049  0ED8                     l2870:	
  4050                           ;incstack = 0
  4051                           ; Regs used in _print_remaing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4052                           
  4053                           
  4054                           ;main.c: 102:     init_char();
  4055  0ED8  3189  212E  318E   	fcall	_init_char
  4056  0EDB                     l2872:
  4057                           
  4058                           ;main.c: 103:     uint16_t now_min = ((uint16_t)date.hour * 60) + date.min;
  4059  0EDB  0021               	movlb	1	; select bank1
  4060  0EDC  0835               	movf	(print_remaing@date^(0+128)+4),w
  4061  0EDD  0020               	movlb	0	; select bank0
  4062  0EDE  00EB               	movwf	??_print_remaing
  4063  0EDF  01EC               	clrf	??_print_remaing+1
  4064  0EE0  0021               	movlb	1	; select bank1
  4065  0EE1  0834               	movf	(print_remaing@date^(0+128)+3),w
  4066  0EE2  0020               	movlb	0	; select bank0
  4067  0EE3  00ED               	movwf	??_print_remaing+2
  4068  0EE4  01EE               	clrf	??_print_remaing+3
  4069  0EE5  086D               	movf	??_print_remaing+2,w
  4070  0EE6  00F4               	movwf	___wmul@multiplier
  4071  0EE7  086E               	movf	??_print_remaing+3,w
  4072  0EE8  00F5               	movwf	___wmul@multiplier+1
  4073  0EE9  303C               	movlw	60
  4074  0EEA  00F6               	movwf	___wmul@multiplicand
  4075  0EEB  3000               	movlw	0
  4076  0EEC  00F7               	movwf	___wmul@multiplicand+1
  4077  0EED  318A  2269  318E   	fcall	___wmul
  4078  0EF0  0020               	movlb	0	; select bank0
  4079  0EF1  086B               	movf	??_print_remaing,w
  4080  0EF2  0774               	addwf	?___wmul,w
  4081  0EF3  0021               	movlb	1	; select bank1
  4082  0EF4  00BA               	movwf	print_remaing@now_min^(0+128)
  4083  0EF5  0020               	movlb	0	; select bank0
  4084  0EF6  086C               	movf	??_print_remaing+1,w
  4085  0EF7  3D75               	addwfc	?___wmul+1,w
  4086  0EF8  0021               	movlb	1	; select bank1
  4087  0EF9  00BB               	movwf	(print_remaing@now_min+1)^(0+128)
  4088  0EFA                     l2874:
  4089                           
  4090                           ;main.c: 104:     uint16_t next_min = ((uint16_t)next.hour * 60) + next.min;
  4091  0EFA  0839               	movf	(print_remaing@next^(0+128)+2),w
  4092  0EFB  0020               	movlb	0	; select bank0
  4093  0EFC  00EB               	movwf	??_print_remaing
  4094  0EFD  01EC               	clrf	??_print_remaing+1
  4095  0EFE  0021               	movlb	1	; select bank1
  4096  0EFF  0838               	movf	(print_remaing@next^(0+128)+1),w
  4097  0F00  0020               	movlb	0	; select bank0
  4098  0F01  00ED               	movwf	??_print_remaing+2
  4099  0F02  01EE               	clrf	??_print_remaing+3
  4100  0F03  086D               	movf	??_print_remaing+2,w
  4101  0F04  00F4               	movwf	___wmul@multiplier
  4102  0F05  086E               	movf	??_print_remaing+3,w
  4103  0F06  00F5               	movwf	___wmul@multiplier+1
  4104  0F07  303C               	movlw	60
  4105  0F08  00F6               	movwf	___wmul@multiplicand
  4106  0F09  3000               	movlw	0
  4107  0F0A  00F7               	movwf	___wmul@multiplicand+1
  4108  0F0B  318A  2269  318E   	fcall	___wmul
  4109  0F0E  0020               	movlb	0	; select bank0
  4110  0F0F  086B               	movf	??_print_remaing,w
  4111  0F10  0774               	addwf	?___wmul,w
  4112  0F11  0021               	movlb	1	; select bank1
  4113  0F12  00BC               	movwf	print_remaing@next_min^(0+128)
  4114  0F13  0020               	movlb	0	; select bank0
  4115  0F14  086C               	movf	??_print_remaing+1,w
  4116  0F15  3D75               	addwfc	?___wmul+1,w
  4117  0F16  0021               	movlb	1	; select bank1
  4118  0F17  00BD               	movwf	(print_remaing@next_min+1)^(0+128)
  4119  0F18                     l2876:
  4120                           
  4121                           ;main.c: 106:     sprintf(line1, "KW > MT %02d:%02d", next.hour, next.min);
  4122  0F18  30D6               	movlw	low _line1
  4123  0F19  00A0               	movwf	sprintf@s^(0+128)
  4124  0F1A  3000               	movlw	high _line1
  4125  0F1B  00A1               	movwf	(sprintf@s+1)^(0+128)
  4126  0F1C  3002               	movlw	low (STR_1| (0+32768))
  4127  0F1D  00A2               	movwf	sprintf@fmt^(0+128)
  4128  0F1E  3088               	movlw	high (STR_1| (0+32768))
  4129  0F1F  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  4130  0F20  0838               	movf	(print_remaing@next^(0+128)+1),w
  4131  0F21  0020               	movlb	0	; select bank0
  4132  0F22  00EB               	movwf	??_print_remaing
  4133  0F23  01EC               	clrf	??_print_remaing+1
  4134  0F24  086B               	movf	??_print_remaing,w
  4135  0F25  0021               	movlb	1	; select bank1
  4136  0F26  00A4               	movwf	(?_sprintf^(0+128)+4)
  4137  0F27  0020               	movlb	0	; select bank0
  4138  0F28  086C               	movf	??_print_remaing+1,w
  4139  0F29  0021               	movlb	1	; select bank1
  4140  0F2A  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  4141  0F2B  0839               	movf	(print_remaing@next^(0+128)+2),w
  4142  0F2C  0020               	movlb	0	; select bank0
  4143  0F2D  00ED               	movwf	??_print_remaing+2
  4144  0F2E  01EE               	clrf	??_print_remaing+3
  4145  0F2F  086D               	movf	??_print_remaing+2,w
  4146  0F30  0021               	movlb	1	; select bank1
  4147  0F31  00A6               	movwf	(?_sprintf^(0+128)+6)
  4148  0F32  0020               	movlb	0	; select bank0
  4149  0F33  086E               	movf	??_print_remaing+3,w
  4150  0F34  0021               	movlb	1	; select bank1
  4151  0F35  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
  4152  0F36  318B  2318  318E   	fcall	_sprintf
  4153  0F39                     l2878:
  4154                           
  4155                           ;main.c: 107:     sprintf(line2, "Remaining %d min", (next_min - now_min));
  4156  0F39  3040               	movlw	low _line2
  4157  0F3A  0021               	movlb	1	; select bank1
  4158  0F3B  00A0               	movwf	sprintf@s^(0+128)
  4159  0F3C  3001               	movlw	high _line2
  4160  0F3D  00A1               	movwf	(sprintf@s+1)^(0+128)
  4161  0F3E  3014               	movlw	low (STR_4| (0+32768))
  4162  0F3F  00A2               	movwf	sprintf@fmt^(0+128)
  4163  0F40  3088               	movlw	high (STR_4| (0+32768))
  4164  0F41  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  4165  0F42  083A               	movf	print_remaing@now_min^(0+128),w
  4166  0F43  023C               	subwf	print_remaing@next_min^(0+128),w
  4167  0F44  00A4               	movwf	(?_sprintf^(0+128)+4)
  4168  0F45  083B               	movf	(print_remaing@now_min+1)^(0+128),w
  4169  0F46  3B3D               	subwfb	(print_remaing@next_min+1)^(0+128),w
  4170  0F47  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  4171  0F48  318B  2318  318E   	fcall	_sprintf
  4172  0F4B                     l2880:
  4173                           
  4174                           ;main.c: 109:     lcd_clear();
  4175  0F4B  318A  22CB  318E   	fcall	_lcd_clear
  4176  0F4E                     l2882:
  4177                           
  4178                           ;main.c: 111:     lcd_set_cursor(0, 0);
  4179  0F4E  01F8               	clrf	lcd_set_cursor@row
  4180  0F4F  3000               	movlw	0
  4181  0F50  318B  2341  318E   	fcall	_lcd_set_cursor
  4182  0F53                     l2884:
  4183                           
  4184                           ;main.c: 112:     lcd_print(line1);
  4185  0F53  30D6               	movlw	low _line1
  4186  0F54  00F8               	movwf	lcd_print@str
  4187  0F55  3000               	movlw	high _line1
  4188  0F56  00F9               	movwf	lcd_print@str+1
  4189  0F57  318A  224C  318E   	fcall	_lcd_print
  4190  0F5A                     l2886:
  4191                           
  4192                           ;main.c: 114:     lcd_set_cursor(0, 1);
  4193  0F5A  01F8               	clrf	lcd_set_cursor@row
  4194  0F5B  0AF8               	incf	lcd_set_cursor@row,f
  4195  0F5C  3000               	movlw	0
  4196  0F5D  318B  2341  318E   	fcall	_lcd_set_cursor
  4197  0F60                     l2888:
  4198                           
  4199                           ;main.c: 115:     lcd_print(line2);
  4200  0F60  3040               	movlw	low _line2
  4201  0F61  00F8               	movwf	lcd_print@str
  4202  0F62  3001               	movlw	high _line2
  4203  0F63  00F9               	movwf	lcd_print@str+1
  4204  0F64  318A  224C  318E   	fcall	_lcd_print
  4205  0F67                     l127:
  4206  0F67  0008               	return
  4207  0F68                     __end_of_print_remaing:
  4208                           
  4209                           	psect	text12
  4210  0CBB                     __ptext12:	
  4211 ;; *************** function _print_money *****************
  4212 ;; Defined at:
  4213 ;;		line 118 in file "main.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  date            6   17[BANK1 ] struct Date
  4216 ;;  money           2   23[BANK1 ] unsigned short 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4228 ;;      Params:         0       0       8       0       0       0
  4229 ;;      Locals:         0       0       0       0       0       0
  4230 ;;      Temps:          0       4       0       0       0       0
  4231 ;;      Totals:         0       4       8       0       0       0
  4232 ;;Total ram usage:       12 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    8
  4235 ;; This function calls:
  4236 ;;		_init_char
  4237 ;;		_lcd_clear
  4238 ;;		_lcd_print
  4239 ;;		_lcd_set_cursor
  4240 ;;		_sprintf
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           
  4247                           ;psect for function _print_money
  4248  0CBB                     _print_money:
  4249  0CBB                     l2890:	
  4250                           ;incstack = 0
  4251                           ; Regs used in _print_money: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4252                           
  4253                           
  4254                           ;main.c: 119:     init_char();
  4255  0CBB  3189  212E  318C   	fcall	_init_char
  4256  0CBE                     l2892:
  4257                           
  4258                           ;main.c: 120:     sprintf(line1, "Time:%02d:%02d", date.hour, date.min);
  4259  0CBE  30D6               	movlw	low _line1
  4260  0CBF  0021               	movlb	1	; select bank1
  4261  0CC0  00A0               	movwf	sprintf@s^(0+128)
  4262  0CC1  3000               	movlw	high _line1
  4263  0CC2  00A1               	movwf	(sprintf@s+1)^(0+128)
  4264  0CC3  3025               	movlw	low (STR_5| (0+32768))
  4265  0CC4  00A2               	movwf	sprintf@fmt^(0+128)
  4266  0CC5  3088               	movlw	high (STR_5| (0+32768))
  4267  0CC6  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  4268  0CC7  0834               	movf	(print_money@date^(0+128)+3),w
  4269  0CC8  0020               	movlb	0	; select bank0
  4270  0CC9  00EB               	movwf	??_print_money
  4271  0CCA  01EC               	clrf	??_print_money+1
  4272  0CCB  086B               	movf	??_print_money,w
  4273  0CCC  0021               	movlb	1	; select bank1
  4274  0CCD  00A4               	movwf	(?_sprintf^(0+128)+4)
  4275  0CCE  0020               	movlb	0	; select bank0
  4276  0CCF  086C               	movf	??_print_money+1,w
  4277  0CD0  0021               	movlb	1	; select bank1
  4278  0CD1  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  4279  0CD2  0835               	movf	(print_money@date^(0+128)+4),w
  4280  0CD3  0020               	movlb	0	; select bank0
  4281  0CD4  00ED               	movwf	??_print_money+2
  4282  0CD5  01EE               	clrf	??_print_money+3
  4283  0CD6  086D               	movf	??_print_money+2,w
  4284  0CD7  0021               	movlb	1	; select bank1
  4285  0CD8  00A6               	movwf	(?_sprintf^(0+128)+6)
  4286  0CD9  0020               	movlb	0	; select bank0
  4287  0CDA  086E               	movf	??_print_money+3,w
  4288  0CDB  0021               	movlb	1	; select bank1
  4289  0CDC  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
  4290  0CDD  318B  2318  318C   	fcall	_sprintf
  4291  0CE0                     l2894:
  4292                           
  4293                           ;main.c: 121:     sprintf(line2, "Money:%dYEN", money);
  4294  0CE0  3040               	movlw	low _line2
  4295  0CE1  0021               	movlb	1	; select bank1
  4296  0CE2  00A0               	movwf	sprintf@s^(0+128)
  4297  0CE3  3001               	movlw	high _line2
  4298  0CE4  00A1               	movwf	(sprintf@s+1)^(0+128)
  4299  0CE5  3034               	movlw	low (STR_6| (0+32768))
  4300  0CE6  00A2               	movwf	sprintf@fmt^(0+128)
  4301  0CE7  3088               	movlw	high (STR_6| (0+32768))
  4302  0CE8  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  4303  0CE9  0838               	movf	(print_money@money+1)^(0+128),w
  4304  0CEA  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  4305  0CEB  0837               	movf	print_money@money^(0+128),w
  4306  0CEC  00A4               	movwf	(?_sprintf^(0+128)+4)
  4307  0CED  318B  2318  318C   	fcall	_sprintf
  4308  0CF0                     l2896:
  4309                           
  4310                           ;main.c: 123:     lcd_clear();
  4311  0CF0  318A  22CB  318C   	fcall	_lcd_clear
  4312  0CF3                     l2898:
  4313                           
  4314                           ;main.c: 125:     lcd_set_cursor(0, 0);
  4315  0CF3  01F8               	clrf	lcd_set_cursor@row
  4316  0CF4  3000               	movlw	0
  4317  0CF5  318B  2341  318C   	fcall	_lcd_set_cursor
  4318  0CF8                     l2900:
  4319                           
  4320                           ;main.c: 126:     lcd_print(line1);
  4321  0CF8  30D6               	movlw	low _line1
  4322  0CF9  00F8               	movwf	lcd_print@str
  4323  0CFA  3000               	movlw	high _line1
  4324  0CFB  00F9               	movwf	lcd_print@str+1
  4325  0CFC  318A  224C  318C   	fcall	_lcd_print
  4326  0CFF                     l2902:
  4327                           
  4328                           ;main.c: 128:     lcd_set_cursor(0, 1);
  4329  0CFF  01F8               	clrf	lcd_set_cursor@row
  4330  0D00  0AF8               	incf	lcd_set_cursor@row,f
  4331  0D01  3000               	movlw	0
  4332  0D02  318B  2341  318C   	fcall	_lcd_set_cursor
  4333  0D05                     l2904:
  4334                           
  4335                           ;main.c: 129:     lcd_print(line2);
  4336  0D05  3040               	movlw	low _line2
  4337  0D06  00F8               	movwf	lcd_print@str
  4338  0D07  3001               	movlw	high _line2
  4339  0D08  00F9               	movwf	lcd_print@str+1
  4340  0D09  318A  224C  318C   	fcall	_lcd_print
  4341  0D0C                     l130:
  4342  0D0C  0008               	return
  4343  0D0D                     __end_of_print_money:
  4344                           
  4345                           	psect	text13
  4346  0B18                     __ptext13:	
  4347 ;; *************** function _sprintf *****************
  4348 ;; Defined at:
  4349 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  s               2    0[BANK1 ] PTR unsigned char 
  4352 ;;		 -> line2(16), line1(16), 
  4353 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  4354 ;;		 -> STR_6(12), STR_5(15), STR_4(17), STR_3(18), 
  4355 ;;		 -> STR_2(18), STR_1(18), 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  f               6   11[BANK1 ] struct _IO_FILE
  4358 ;;  ret             2    0        int 
  4359 ;;  ap              1   10[BANK1 ] PTR void [1]
  4360 ;;		 -> ?_sprintf(2), 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2    0[BANK1 ] int 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4370 ;;      Params:         0       0       8       0       0       0
  4371 ;;      Locals:         0       0       9       0       0       0
  4372 ;;      Temps:          1       0       0       0       0       0
  4373 ;;      Totals:         1       0      17       0       0       0
  4374 ;;Total ram usage:       18 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    7
  4377 ;; This function calls:
  4378 ;;		_vfprintf
  4379 ;; This function is called by:
  4380 ;;		_print_train
  4381 ;;		_print_remaing
  4382 ;;		_print_money
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function _sprintf
  4388  0B18                     _sprintf:
  4389  0B18                     l2506:	
  4390                           ;incstack = 0
  4391                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4392                           
  4393  0B18  30A4               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  4394  0B19  00FD               	movwf	??_sprintf
  4395  0B1A  087D               	movf	??_sprintf,w
  4396  0B1B  0021               	movlb	1	; select bank1
  4397  0B1C  00AA               	movwf	sprintf@ap^(0+128)
  4398  0B1D  0821               	movf	(sprintf@s+1)^(0+128),w
  4399  0B1E  00AC               	movwf	(sprintf@f+1)^(0+128)
  4400  0B1F  0820               	movf	sprintf@s^(0+128),w
  4401  0B20  00AB               	movwf	sprintf@f^(0+128)
  4402  0B21                     l2508:
  4403  0B21  01AD               	clrf	(sprintf@f^(0+128)+2)
  4404  0B22  01AE               	clrf	((sprintf@f+1)^(0+128)+2)
  4405  0B23                     l2510:
  4406  0B23  01AF               	clrf	(sprintf@f^(0+128)+4)
  4407  0B24  01B0               	clrf	((sprintf@f+1)^(0+128)+4)
  4408  0B25                     l2512:
  4409  0B25  0823               	movf	(sprintf@fmt+1)^(0+128),w
  4410  0B26  0020               	movlb	0	; select bank0
  4411  0B27  00E4               	movwf	vfprintf@fmt+1
  4412  0B28  0021               	movlb	1	; select bank1
  4413  0B29  0822               	movf	sprintf@fmt^(0+128),w
  4414  0B2A  0020               	movlb	0	; select bank0
  4415  0B2B  00E3               	movwf	vfprintf@fmt
  4416  0B2C  30AA               	movlw	(low (sprintf@ap| 0))& (0+255)
  4417  0B2D  00FD               	movwf	??_sprintf
  4418  0B2E  087D               	movf	??_sprintf,w
  4419  0B2F  00E5               	movwf	vfprintf@ap
  4420  0B30  30AB               	movlw	(low (sprintf@f| 0))& (0+255)
  4421  0B31  318B  23C9  318B   	fcall	_vfprintf
  4422  0B34                     l2514:
  4423  0B34  3002               	movlw	2
  4424  0B35  3EAB               	addlw	(low (sprintf@f| 0))& (0+255)
  4425  0B36  0086               	movwf	6
  4426  0B37  0187               	clrf	7
  4427  0B38  3F40               	moviw [0]fsr1
  4428  0B39  0021               	movlb	1	; select bank1
  4429  0B3A  0720               	addwf	sprintf@s^(0+128),w
  4430  0B3B  0084               	movwf	4
  4431  0B3C  3F41               	moviw [1]fsr1
  4432  0B3D  3D21               	addwfc	(sprintf@s+1)^(0+128),w
  4433  0B3E  0085               	movwf	5
  4434  0B3F  0180               	clrf	0
  4435  0B40                     l879:
  4436  0B40  0008               	return
  4437  0B41                     __end_of_sprintf:
  4438                           
  4439                           	psect	text14
  4440  0BC9                     __ptext14:	
  4441 ;; *************** function _vfprintf *****************
  4442 ;; Defined at:
  4443 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  fp              1    wreg     PTR struct _IO_FILE
  4446 ;;		 -> sprintf@f(6), 
  4447 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  4448 ;;		 -> STR_6(12), STR_5(15), STR_4(17), STR_3(18), 
  4449 ;;		 -> STR_2(18), STR_1(18), 
  4450 ;;  ap              1   69[BANK0 ] PTR PTR void 
  4451 ;;		 -> sprintf@ap(1), 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
  4454 ;;		 -> sprintf@f(6), 
  4455 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
  4456 ;;		 -> STR_6(12), STR_5(15), STR_4(17), STR_3(18), 
  4457 ;;		 -> STR_2(18), STR_1(18), 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  2   67[BANK0 ] int 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4467 ;;      Params:         0       3       0       0       0       0
  4468 ;;      Locals:         0       3       0       0       0       0
  4469 ;;      Temps:          0       2       0       0       0       0
  4470 ;;      Totals:         0       8       0       0       0       0
  4471 ;;Total ram usage:        8 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    6
  4474 ;; This function calls:
  4475 ;;		_vfpfcnvrt
  4476 ;; This function is called by:
  4477 ;;		_sprintf
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _vfprintf
  4483  0BC9                     _vfprintf:
  4484                           
  4485                           ;incstack = 0
  4486                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4487                           ;vfprintf@fp stored from wreg
  4488  0BC9  0020               	movlb	0	; select bank0
  4489  0BCA  00E8               	movwf	vfprintf@fp
  4490  0BCB                     l2466:
  4491                           
  4492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4493  0BCB  0864               	movf	vfprintf@fmt+1,w
  4494  0BCC  00EA               	movwf	vfprintf@cfmt+1
  4495  0BCD  0863               	movf	vfprintf@fmt,w
  4496  0BCE  00E9               	movwf	vfprintf@cfmt
  4497  0BCF                     l2468:
  4498                           
  4499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4500  0BCF  0021               	movlb	1	; select bank1
  4501  0BD0  01CC               	clrf	_nout^(0+128)
  4502  0BD1  01CD               	clrf	(_nout+1)^(0+128)
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4505  0BD2  2BE7               	goto	l2472
  4506  0BD3                     l2470:
  4507                           
  4508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4509  0BD3  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4510  0BD4  00E6               	movwf	??_vfprintf
  4511  0BD5  0866               	movf	??_vfprintf,w
  4512  0BD6  00CE               	movwf	vfpfcnvrt@fmt
  4513  0BD7  0865               	movf	vfprintf@ap,w
  4514  0BD8  00E7               	movwf	??_vfprintf+1
  4515  0BD9  0867               	movf	??_vfprintf+1,w
  4516  0BDA  00CF               	movwf	vfpfcnvrt@ap
  4517  0BDB  0868               	movf	vfprintf@fp,w
  4518  0BDC  3186  2631  318B   	fcall	_vfpfcnvrt
  4519  0BDF  0020               	movlb	0	; select bank0
  4520  0BE0  084E               	movf	?_vfpfcnvrt,w
  4521  0BE1  0021               	movlb	1	; select bank1
  4522  0BE2  07CC               	addwf	_nout^(0+128),f
  4523  0BE3  0020               	movlb	0	; select bank0
  4524  0BE4  084F               	movf	?_vfpfcnvrt+1,w
  4525  0BE5  0021               	movlb	1	; select bank1
  4526  0BE6  3DCD               	addwfc	(_nout+1)^(0+128),f
  4527  0BE7                     l2472:
  4528                           
  4529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4530  0BE7  0020               	movlb	0	; select bank0
  4531  0BE8  0869               	movf	vfprintf@cfmt,w
  4532  0BE9  0084               	movwf	4
  4533  0BEA  086A               	movf	vfprintf@cfmt+1,w
  4534  0BEB  0085               	movwf	5
  4535  0BEC  0012               	moviw fsr0++
  4536  0BED  1D03               	btfss	3,2
  4537  0BEE  2BF0               	goto	u2211
  4538  0BEF  2BF1               	goto	u2210
  4539  0BF0                     u2211:
  4540  0BF0  2BD3               	goto	l2470
  4541  0BF1                     u2210:
  4542  0BF1                     l2474:
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4545  0BF1  0021               	movlb	1	; select bank1
  4546  0BF2  084D               	movf	(_nout+1)^(0+128),w
  4547  0BF3  0020               	movlb	0	; select bank0
  4548  0BF4  00E4               	movwf	?_vfprintf+1
  4549  0BF5  0021               	movlb	1	; select bank1
  4550  0BF6  084C               	movf	_nout^(0+128),w
  4551  0BF7  0020               	movlb	0	; select bank0
  4552  0BF8  00E3               	movwf	?_vfprintf
  4553  0BF9                     l977:
  4554  0BF9  0008               	return
  4555  0BFA                     __end_of_vfprintf:
  4556                           
  4557                           	psect	text15
  4558  0631                     __ptext15:	
  4559 ;; *************** function _vfpfcnvrt *****************
  4560 ;; Defined at:
  4561 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  fp              1    wreg     PTR struct _IO_FILE
  4564 ;;		 -> sprintf@f(6), 
  4565 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4566 ;;		 -> vfprintf@cfmt(2), 
  4567 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4568 ;;		 -> sprintf@ap(1), 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
  4571 ;;		 -> sprintf@f(6), 
  4572 ;;  ll              8   54[BANK0 ] long long 
  4573 ;;  llu             8    0        unsigned long long 
  4574 ;;  f               4    0        unsigned long long 
  4575 ;;  ct              3    0        unsigned char [3]
  4576 ;;  done            2   62[BANK0 ] int 
  4577 ;;  vp              2    0        PTR void 
  4578 ;;  i               2    0        int 
  4579 ;;  cp              2    0        PTR unsigned char 
  4580 ;;  c               1    0        unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  2   46[BANK0 ] int 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4590 ;;      Params:         0       2       0       0       0       0
  4591 ;;      Locals:         0      13       0       0       0       0
  4592 ;;      Temps:          0       6       0       0       0       0
  4593 ;;      Totals:         0      21       0       0       0       0
  4594 ;;Total ram usage:       21 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    5
  4597 ;; This function calls:
  4598 ;;		_atoi
  4599 ;;		_dtoa
  4600 ;;		_fputc
  4601 ;;		_isdigit
  4602 ;; This function is called by:
  4603 ;;		_vfprintf
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _vfpfcnvrt
  4609  0631                     _vfpfcnvrt:
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4613                           ;vfpfcnvrt@fp stored from wreg
  4614  0631  0020               	movlb	0	; select bank0
  4615  0632  00E2               	movwf	vfpfcnvrt@fp
  4616  0633                     l2254:
  4617                           
  4618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4619  0633  084E               	movf	vfpfcnvrt@fmt,w
  4620  0634  0086               	movwf	6
  4621  0635  0187               	clrf	7
  4622  0636  3F40               	moviw [0]fsr1
  4623  0637  00D0               	movwf	??_vfpfcnvrt
  4624  0638  3F41               	moviw [1]fsr1
  4625  0639  00D1               	movwf	??_vfpfcnvrt+1
  4626  063A  0850               	movf	??_vfpfcnvrt,w
  4627  063B  0084               	movwf	4
  4628  063C  0851               	movf	??_vfpfcnvrt+1,w
  4629  063D  0085               	movwf	5
  4630  063E  0012               	moviw fsr0++
  4631  063F  3A25               	xorlw	37
  4632  0640  1D03               	btfss	3,2
  4633  0641  2E43               	goto	u1871
  4634  0642  2E44               	goto	u1870
  4635  0643                     u1871:
  4636  0643  2FB0               	goto	l2334
  4637  0644                     u1870:
  4638  0644                     l2256:
  4639                           
  4640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4641  0644  084E               	movf	vfpfcnvrt@fmt,w
  4642  0645  0086               	movwf	6
  4643  0646  0187               	clrf	7
  4644  0647  3001               	movlw	1
  4645  0648  0781               	addwf	1,f
  4646  0649  3141               	addfsr 1,1
  4647  064A  1803               	skipnc
  4648  064B  0A81               	incf	1,f
  4649  064C                     l2258:
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4652  064C  0021               	movlb	1	; select bank1
  4653  064D  01CE               	clrf	_width^(0+128)
  4654  064E  01CF               	clrf	(_width+1)^(0+128)
  4655  064F  01D2               	clrf	_flags^(0+128)
  4656  0650  01D3               	clrf	(_flags+1)^(0+128)
  4657  0651                     l2260:
  4658                           
  4659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4660  0651  30FF               	movlw	255
  4661  0652  00D0               	movwf	_prec^(0+128)
  4662  0653  30FF               	movlw	255
  4663  0654  00D1               	movwf	(_prec^(0+128)+1)
  4664  0655                     l2262:
  4665                           
  4666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4667  0655  0020               	movlb	0	; select bank0
  4668  0656  01DE               	clrf	vfpfcnvrt@done
  4669  0657  01DF               	clrf	vfpfcnvrt@done+1
  4670                           
  4671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4672  0658  2E9A               	goto	l2280
  4673  0659                     l948:	
  4674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  4675                           
  4676                           
  4677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4678  0659  0021               	movlb	1	; select bank1
  4679  065A  1452               	bsf	_flags^(0+128),0
  4680  065B                     l2264:
  4681                           
  4682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4683  065B  0020               	movlb	0	; select bank0
  4684  065C  084E               	movf	vfpfcnvrt@fmt,w
  4685  065D  0086               	movwf	6
  4686  065E  0187               	clrf	7
  4687  065F  3001               	movlw	1
  4688  0660  0781               	addwf	1,f
  4689  0661  3141               	addfsr 1,1
  4690  0662  1803               	skipnc
  4691  0663  0A81               	incf	1,f
  4692                           
  4693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4694  0664  2E9A               	goto	l2280
  4695  0665                     l950:	
  4696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  4697                           
  4698                           
  4699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4700  0665  0021               	movlb	1	; select bank1
  4701  0666  14D2               	bsf	_flags^(0+128),1
  4702  0667  2E5B               	goto	l2264
  4703  0668                     l951:	
  4704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  4705                           
  4706                           
  4707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4708  0668  0021               	movlb	1	; select bank1
  4709  0669  1552               	bsf	_flags^(0+128),2
  4710  066A  2E5B               	goto	l2264
  4711  066B                     l952:	
  4712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  4713                           
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4716  066B  0021               	movlb	1	; select bank1
  4717  066C  15D2               	bsf	_flags^(0+128),3
  4718  066D  2E5B               	goto	l2264
  4719  066E                     l953:	
  4720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  4721                           
  4722                           
  4723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4724  066E  0021               	movlb	1	; select bank1
  4725  066F  1652               	bsf	_flags^(0+128),4
  4726  0670  2E5B               	goto	l2264
  4727  0671                     l2274:
  4728                           
  4729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4730  0671  3001               	movlw	1
  4731  0672  00DE               	movwf	vfpfcnvrt@done
  4732  0673  3000               	movlw	0
  4733  0674  00DF               	movwf	vfpfcnvrt@done+1
  4734                           
  4735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4736  0675  2E9A               	goto	l2280
  4737  0676                     l2278:
  4738  0676  084E               	movf	vfpfcnvrt@fmt,w
  4739  0677  0086               	movwf	6
  4740  0678  0187               	clrf	7
  4741  0679  3F40               	moviw [0]fsr1
  4742  067A  00D0               	movwf	??_vfpfcnvrt
  4743  067B  3F41               	moviw [1]fsr1
  4744  067C  00D1               	movwf	??_vfpfcnvrt+1
  4745  067D  0850               	movf	??_vfpfcnvrt,w
  4746  067E  0084               	movwf	4
  4747  067F  0851               	movf	??_vfpfcnvrt+1,w
  4748  0680  0085               	movwf	5
  4749  0681  0800               	movf	0,w	;code access
  4750  0682  00D2               	movwf	??_vfpfcnvrt+2
  4751  0683  01D3               	clrf	??_vfpfcnvrt+3
  4752                           
  4753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4754                           ; Switch size 1, requested type "simple"
  4755                           ; Number of cases is 1, Range of values is 0 to 0
  4756                           ; switch strategies available:
  4757                           ; Name         Instructions Cycles
  4758                           ; simple_byte            4     3 (average)
  4759                           ; direct_byte            8     6 (fixed)
  4760                           ; jumptable            260     6 (fixed)
  4761                           ;	Chosen strategy is simple_byte
  4762  0684  0853               	movf	??_vfpfcnvrt+3,w
  4763  0685  3A00               	xorlw	0	; case 0
  4764  0686  1903               	skipnz
  4765  0687  2E89               	goto	l3012
  4766  0688  2E71               	goto	l2274
  4767  0689                     l3012:
  4768                           
  4769                           ; Switch size 1, requested type "simple"
  4770                           ; Number of cases is 5, Range of values is 32 to 48
  4771                           ; switch strategies available:
  4772                           ; Name         Instructions Cycles
  4773                           ; simple_byte           16     9 (average)
  4774                           ; direct_byte           43     9 (fixed)
  4775                           ; jumptable            263     9 (fixed)
  4776                           ;	Chosen strategy is simple_byte
  4777  0689  0852               	movf	??_vfpfcnvrt+2,w
  4778  068A  3A20               	xorlw	32	; case 32
  4779  068B  1903               	skipnz
  4780  068C  2E6B               	goto	l952
  4781  068D  3A03               	xorlw	3	; case 35
  4782  068E  1903               	skipnz
  4783  068F  2E6E               	goto	l953
  4784  0690  3A08               	xorlw	8	; case 43
  4785  0691  1903               	skipnz
  4786  0692  2E68               	goto	l951
  4787  0693  3A06               	xorlw	6	; case 45
  4788  0694  1903               	skipnz
  4789  0695  2E59               	goto	l948
  4790  0696  3A1D               	xorlw	29	; case 48
  4791  0697  1903               	skipnz
  4792  0698  2E65               	goto	l950
  4793  0699  2E71               	goto	l2274
  4794  069A                     l2280:
  4795                           
  4796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4797  069A  085E               	movf	vfpfcnvrt@done,w
  4798  069B  045F               	iorwf	vfpfcnvrt@done+1,w
  4799  069C  1903               	btfsc	3,2
  4800  069D  2E9F               	goto	u1881
  4801  069E  2EA0               	goto	u1880
  4802  069F                     u1881:
  4803  069F  2E76               	goto	l2278
  4804  06A0                     u1880:
  4805  06A0                     l955:
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4808  06A0  0021               	movlb	1	; select bank1
  4809  06A1  1C52               	btfss	_flags^(0+128),0
  4810  06A2  2EA4               	goto	u1891
  4811  06A3  2EA5               	goto	u1890
  4812  06A4                     u1891:
  4813  06A4  2EA9               	goto	l2284
  4814  06A5                     u1890:
  4815  06A5                     l2282:
  4816                           
  4817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4818  06A5  30FD               	movlw	253
  4819  06A6  05D2               	andwf	_flags^(0+128),f
  4820  06A7  30FF               	movlw	255
  4821  06A8  05D3               	andwf	(_flags+1)^(0+128),f
  4822  06A9                     l2284:
  4823                           
  4824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4825  06A9  0020               	movlb	0	; select bank0
  4826  06AA  084E               	movf	vfpfcnvrt@fmt,w
  4827  06AB  0086               	movwf	6
  4828  06AC  0187               	clrf	7
  4829  06AD  3F40               	moviw [0]fsr1
  4830  06AE  00D0               	movwf	??_vfpfcnvrt
  4831  06AF  3F41               	moviw [1]fsr1
  4832  06B0  00D1               	movwf	??_vfpfcnvrt+1
  4833  06B1  0850               	movf	??_vfpfcnvrt,w
  4834  06B2  0084               	movwf	4
  4835  06B3  0851               	movf	??_vfpfcnvrt+1,w
  4836  06B4  0085               	movwf	5
  4837  06B5  0012               	moviw fsr0++
  4838  06B6  3A2A               	xorlw	42
  4839  06B7  1D03               	btfss	3,2
  4840  06B8  2EBA               	goto	u1901
  4841  06B9  2EBB               	goto	u1900
  4842  06BA                     u1901:
  4843  06BA  2EDB               	goto	l2296
  4844  06BB                     u1900:
  4845  06BB                     l2286:
  4846                           
  4847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4848  06BB  084E               	movf	vfpfcnvrt@fmt,w
  4849  06BC  0086               	movwf	6
  4850  06BD  0187               	clrf	7
  4851  06BE  3001               	movlw	1
  4852  06BF  0781               	addwf	1,f
  4853  06C0  3141               	addfsr 1,1
  4854  06C1  1803               	skipnc
  4855  06C2  0A81               	incf	1,f
  4856  06C3                     l2288:
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4859  06C3  084F               	movf	vfpfcnvrt@ap,w
  4860  06C4  0086               	movwf	6
  4861  06C5  0187               	clrf	7
  4862  06C6  0801               	movf	1,w
  4863  06C7  0084               	movwf	4
  4864  06C8  0185               	clrf	5
  4865  06C9  3002               	movlw	2
  4866  06CA  0781               	addwf	1,f
  4867  06CB  3F00               	moviw [0]fsr0
  4868  06CC  0021               	movlb	1	; select bank1
  4869  06CD  00CE               	movwf	_width^(0+128)
  4870  06CE  3F01               	moviw [1]fsr0
  4871  06CF  00CF               	movwf	(_width+1)^(0+128)
  4872  06D0                     l2290:
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4875  06D0  1FCF               	btfss	(_width+1)^(0+128),7
  4876  06D1  2ED3               	goto	u1911
  4877  06D2  2ED4               	goto	u1910
  4878  06D3                     u1911:
  4879  06D3  2F1D               	goto	l2306
  4880  06D4                     u1910:
  4881  06D4                     l2292:
  4882                           
  4883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4884  06D4  1452               	bsf	_flags^(0+128),0
  4885  06D5                     l2294:
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4888  06D5  09CE               	comf	_width^(0+128),f
  4889  06D6  09CF               	comf	(_width+1)^(0+128),f
  4890  06D7  0ACE               	incf	_width^(0+128),f
  4891  06D8  1903               	skipnz
  4892  06D9  0ACF               	incf	(_width+1)^(0+128),f
  4893  06DA  2F1D               	goto	l2306
  4894  06DB                     l2296:
  4895                           
  4896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4897  06DB  084E               	movf	vfpfcnvrt@fmt,w
  4898  06DC  0086               	movwf	6
  4899  06DD  0187               	clrf	7
  4900  06DE  3F40               	moviw [0]fsr1
  4901  06DF  00FA               	movwf	atoi@s
  4902  06E0  3F41               	moviw [1]fsr1
  4903  06E1  00FB               	movwf	atoi@s+1
  4904  06E2  3180  2061  3186   	fcall	_atoi
  4905  06E5  087B               	movf	?_atoi+1,w
  4906  06E6  0021               	movlb	1	; select bank1
  4907  06E7  00CF               	movwf	(_width+1)^(0+128)
  4908  06E8  087A               	movf	?_atoi,w
  4909  06E9  00CE               	movwf	_width^(0+128)
  4910                           
  4911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4912  06EA  2EF3               	goto	l2300
  4913  06EB                     l2298:
  4914                           
  4915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  4916  06EB  084E               	movf	vfpfcnvrt@fmt,w
  4917  06EC  0086               	movwf	6
  4918  06ED  0187               	clrf	7
  4919  06EE  3001               	movlw	1
  4920  06EF  0781               	addwf	1,f
  4921  06F0  3141               	addfsr 1,1
  4922  06F1  1803               	skipnc
  4923  06F2  0A81               	incf	1,f
  4924  06F3                     l2300:
  4925  06F3  0020               	movlb	0	; select bank0
  4926  06F4  084E               	movf	vfpfcnvrt@fmt,w
  4927  06F5  0086               	movwf	6
  4928  06F6  0187               	clrf	7
  4929  06F7  3F40               	moviw [0]fsr1
  4930  06F8  00D0               	movwf	??_vfpfcnvrt
  4931  06F9  3F41               	moviw [1]fsr1
  4932  06FA  00D1               	movwf	??_vfpfcnvrt+1
  4933  06FB  0850               	movf	??_vfpfcnvrt,w
  4934  06FC  0084               	movwf	4
  4935  06FD  0851               	movf	??_vfpfcnvrt+1,w
  4936  06FE  0085               	movwf	5
  4937  06FF  0800               	movf	0,w	;code access
  4938  0700  3ED0               	addlw	208
  4939  0701  00D2               	movwf	??_vfpfcnvrt+2
  4940  0702  30FF               	movlw	255
  4941  0703  1803               	skipnc
  4942  0704  3000               	movlw	0
  4943  0705  00D3               	movwf	??_vfpfcnvrt+3
  4944  0706  3000               	movlw	0
  4945  0707  0253               	subwf	??_vfpfcnvrt+3,w
  4946  0708  300A               	movlw	10
  4947  0709  1903               	skipnz
  4948  070A  0252               	subwf	??_vfpfcnvrt+2,w
  4949  070B  1C03               	skipc
  4950  070C  2F0E               	goto	u1921
  4951  070D  2F10               	goto	u1920
  4952  070E                     u1921:
  4953  070E  3001               	movlw	1
  4954  070F  2F11               	goto	u1930
  4955  0710                     u1920:
  4956  0710  3000               	movlw	0
  4957  0711                     u1930:
  4958  0711  00D4               	movwf	??_vfpfcnvrt+4
  4959  0712  01D5               	clrf	??_vfpfcnvrt+5
  4960  0713  0854               	movf	??_vfpfcnvrt+4,w
  4961  0714  00E0               	movwf	_vfpfcnvrt$1055
  4962  0715  0855               	movf	??_vfpfcnvrt+5,w
  4963  0716  00E1               	movwf	_vfpfcnvrt$1055+1
  4964  0717                     l2304:
  4965  0717  0860               	movf	_vfpfcnvrt$1055,w
  4966  0718  0461               	iorwf	_vfpfcnvrt$1055+1,w
  4967  0719  1D03               	btfss	3,2
  4968  071A  2F1C               	goto	u1941
  4969  071B  2F1D               	goto	u1940
  4970  071C                     u1941:
  4971  071C  2EEB               	goto	l2298
  4972  071D                     u1940:
  4973  071D                     l2306:
  4974                           
  4975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4976  071D  0020               	movlb	0	; select bank0
  4977  071E  084E               	movf	vfpfcnvrt@fmt,w
  4978  071F  0086               	movwf	6
  4979  0720  0187               	clrf	7
  4980  0721  3F40               	moviw [0]fsr1
  4981  0722  00D0               	movwf	??_vfpfcnvrt
  4982  0723  3F41               	moviw [1]fsr1
  4983  0724  00D1               	movwf	??_vfpfcnvrt+1
  4984  0725  0850               	movf	??_vfpfcnvrt,w
  4985  0726  0084               	movwf	4
  4986  0727  0851               	movf	??_vfpfcnvrt+1,w
  4987  0728  0085               	movwf	5
  4988  0729  0012               	moviw fsr0++
  4989  072A  3A64               	xorlw	100
  4990  072B  1903               	btfsc	3,2
  4991  072C  2F2E               	goto	u1951
  4992  072D  2F2F               	goto	u1950
  4993  072E                     u1951:
  4994  072E  2F40               	goto	l2310
  4995  072F                     u1950:
  4996  072F                     l2308:
  4997  072F  084E               	movf	vfpfcnvrt@fmt,w
  4998  0730  0086               	movwf	6
  4999  0731  0187               	clrf	7
  5000  0732  3F40               	moviw [0]fsr1
  5001  0733  00D0               	movwf	??_vfpfcnvrt
  5002  0734  3F41               	moviw [1]fsr1
  5003  0735  00D1               	movwf	??_vfpfcnvrt+1
  5004  0736  0850               	movf	??_vfpfcnvrt,w
  5005  0737  0084               	movwf	4
  5006  0738  0851               	movf	??_vfpfcnvrt+1,w
  5007  0739  0085               	movwf	5
  5008  073A  0012               	moviw fsr0++
  5009  073B  3A69               	xorlw	105
  5010  073C  1D03               	btfss	3,2
  5011  073D  2F3F               	goto	u1961
  5012  073E  2F40               	goto	u1960
  5013  073F                     u1961:
  5014  073F  2F7B               	goto	l2318
  5015  0740                     u1960:
  5016  0740                     l2310:
  5017                           
  5018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5019  0740  084E               	movf	vfpfcnvrt@fmt,w
  5020  0741  0086               	movwf	6
  5021  0742  0187               	clrf	7
  5022  0743  3001               	movlw	1
  5023  0744  0781               	addwf	1,f
  5024  0745  3141               	addfsr 1,1
  5025  0746  1803               	skipnc
  5026  0747  0A81               	incf	1,f
  5027  0748                     l2312:
  5028                           
  5029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5030  0748  084F               	movf	vfpfcnvrt@ap,w
  5031  0749  0086               	movwf	6
  5032  074A  0187               	clrf	7
  5033  074B  0801               	movf	1,w
  5034  074C  0084               	movwf	4
  5035  074D  0185               	clrf	5
  5036  074E  3002               	movlw	2
  5037  074F  0781               	addwf	1,f
  5038  0750  3F00               	moviw [0]fsr0
  5039  0751  00D0               	movwf	??_vfpfcnvrt
  5040  0752  3F01               	moviw [1]fsr0
  5041  0753  00D1               	movwf	??_vfpfcnvrt+1
  5042  0754  0850               	movf	??_vfpfcnvrt,w
  5043  0755  00D6               	movwf	vfpfcnvrt@ll
  5044  0756  0851               	movf	??_vfpfcnvrt+1,w
  5045  0757  00D7               	movwf	vfpfcnvrt@ll+1
  5046  0758  0D89               	rlf	9,f
  5047  0759  3B89               	subwfb	9,f
  5048  075A  0989               	comf	9,f
  5049  075B  00D8               	movwf	vfpfcnvrt@ll+2
  5050  075C  00D9               	movwf	vfpfcnvrt@ll+3
  5051  075D  00DA               	movwf	vfpfcnvrt@ll+4
  5052  075E  00DB               	movwf	vfpfcnvrt@ll+5
  5053  075F  00DC               	movwf	vfpfcnvrt@ll+6
  5054  0760  00DD               	movwf	vfpfcnvrt@ll+7
  5055  0761                     l2314:
  5056                           
  5057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5058  0761  0856               	movf	vfpfcnvrt@ll,w
  5059  0762  00B0               	movwf	dtoa@d
  5060  0763  0857               	movf	vfpfcnvrt@ll+1,w
  5061  0764  00B1               	movwf	dtoa@d+1
  5062  0765  0858               	movf	vfpfcnvrt@ll+2,w
  5063  0766  00B2               	movwf	dtoa@d+2
  5064  0767  0859               	movf	vfpfcnvrt@ll+3,w
  5065  0768  00B3               	movwf	dtoa@d+3
  5066  0769  085A               	movf	vfpfcnvrt@ll+4,w
  5067  076A  00B4               	movwf	dtoa@d+4
  5068  076B  085B               	movf	vfpfcnvrt@ll+5,w
  5069  076C  00B5               	movwf	dtoa@d+5
  5070  076D  085C               	movf	vfpfcnvrt@ll+6,w
  5071  076E  00B6               	movwf	dtoa@d+6
  5072  076F  085D               	movf	vfpfcnvrt@ll+7,w
  5073  0770  00B7               	movwf	dtoa@d+7
  5074  0771  0862               	movf	vfpfcnvrt@fp,w
  5075  0772  3184  24C1  3186   	fcall	_dtoa
  5076  0775  0020               	movlb	0	; select bank0
  5077  0776  0831               	movf	?_dtoa+1,w
  5078  0777  00CF               	movwf	?_vfpfcnvrt+1
  5079  0778  0830               	movf	?_dtoa,w
  5080  0779  00CE               	movwf	?_vfpfcnvrt
  5081  077A  2FD3               	goto	l970
  5082  077B                     l2318:
  5083                           
  5084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5085  077B  084E               	movf	vfpfcnvrt@fmt,w
  5086  077C  0086               	movwf	6
  5087  077D  0187               	clrf	7
  5088  077E  3F40               	moviw [0]fsr1
  5089  077F  00D0               	movwf	??_vfpfcnvrt
  5090  0780  3F41               	moviw [1]fsr1
  5091  0781  00D1               	movwf	??_vfpfcnvrt+1
  5092  0782  0850               	movf	??_vfpfcnvrt,w
  5093  0783  0084               	movwf	4
  5094  0784  0851               	movf	??_vfpfcnvrt+1,w
  5095  0785  0085               	movwf	5
  5096  0786  0012               	moviw fsr0++
  5097  0787  3A25               	xorlw	37
  5098  0788  1D03               	btfss	3,2
  5099  0789  2F8B               	goto	u1971
  5100  078A  2F8C               	goto	u1970
  5101  078B                     u1971:
  5102  078B  2FA5               	goto	l2328
  5103  078C                     u1970:
  5104  078C                     l2320:
  5105                           
  5106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5107  078C  084E               	movf	vfpfcnvrt@fmt,w
  5108  078D  0086               	movwf	6
  5109  078E  0187               	clrf	7
  5110  078F  3001               	movlw	1
  5111  0790  0781               	addwf	1,f
  5112  0791  3141               	addfsr 1,1
  5113  0792  1803               	skipnc
  5114  0793  0A81               	incf	1,f
  5115  0794                     l2322:
  5116                           
  5117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5118  0794  3025               	movlw	37
  5119  0795  00F0               	movwf	fputc@c
  5120  0796  3000               	movlw	0
  5121  0797  00F1               	movwf	fputc@c+1
  5122  0798  0862               	movf	vfpfcnvrt@fp,w
  5123  0799  00D0               	movwf	??_vfpfcnvrt
  5124  079A  0850               	movf	??_vfpfcnvrt,w
  5125  079B  00F2               	movwf	fputc@fp
  5126  079C  318D  2560  3186   	fcall	_fputc
  5127  079F                     l2324:
  5128                           
  5129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5130  079F  3001               	movlw	1
  5131  07A0  0020               	movlb	0	; select bank0
  5132  07A1  00CE               	movwf	?_vfpfcnvrt
  5133  07A2  3000               	movlw	0
  5134  07A3  00CF               	movwf	?_vfpfcnvrt+1
  5135  07A4  2FD3               	goto	l970
  5136  07A5                     l2328:
  5137                           
  5138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5139  07A5  084E               	movf	vfpfcnvrt@fmt,w
  5140  07A6  0086               	movwf	6
  5141  07A7  0187               	clrf	7
  5142  07A8  3001               	movlw	1
  5143  07A9  0781               	addwf	1,f
  5144  07AA  3141               	addfsr 1,1
  5145  07AB  1803               	skipnc
  5146  07AC  0A81               	incf	1,f
  5147  07AD                     l2330:
  5148                           
  5149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5150  07AD  01CE               	clrf	?_vfpfcnvrt
  5151  07AE  01CF               	clrf	?_vfpfcnvrt+1
  5152  07AF  2FD3               	goto	l970
  5153  07B0                     l2334:
  5154                           
  5155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5156  07B0  084E               	movf	vfpfcnvrt@fmt,w
  5157  07B1  0086               	movwf	6
  5158  07B2  0187               	clrf	7
  5159  07B3  3F40               	moviw [0]fsr1
  5160  07B4  00D0               	movwf	??_vfpfcnvrt
  5161  07B5  3F41               	moviw [1]fsr1
  5162  07B6  00D1               	movwf	??_vfpfcnvrt+1
  5163  07B7  0850               	movf	??_vfpfcnvrt,w
  5164  07B8  0084               	movwf	4
  5165  07B9  0851               	movf	??_vfpfcnvrt+1,w
  5166  07BA  0085               	movwf	5
  5167  07BB  0800               	movf	0,w	;code access
  5168  07BC  00D2               	movwf	??_vfpfcnvrt+2
  5169  07BD  01D3               	clrf	??_vfpfcnvrt+3
  5170  07BE  0852               	movf	??_vfpfcnvrt+2,w
  5171  07BF  00F0               	movwf	fputc@c
  5172  07C0  0853               	movf	??_vfpfcnvrt+3,w
  5173  07C1  00F1               	movwf	fputc@c+1
  5174  07C2  0862               	movf	vfpfcnvrt@fp,w
  5175  07C3  00D4               	movwf	??_vfpfcnvrt+4
  5176  07C4  0854               	movf	??_vfpfcnvrt+4,w
  5177  07C5  00F2               	movwf	fputc@fp
  5178  07C6  318D  2560  3186   	fcall	_fputc
  5179  07C9                     l2336:
  5180                           
  5181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5182  07C9  0020               	movlb	0	; select bank0
  5183  07CA  084E               	movf	vfpfcnvrt@fmt,w
  5184  07CB  0086               	movwf	6
  5185  07CC  0187               	clrf	7
  5186  07CD  3001               	movlw	1
  5187  07CE  0781               	addwf	1,f
  5188  07CF  3141               	addfsr 1,1
  5189  07D0  1803               	skipnc
  5190  07D1  0A81               	incf	1,f
  5191  07D2  2F9F               	goto	l2324
  5192  07D3                     l970:
  5193  07D3  0008               	return
  5194  07D4                     __end_of_vfpfcnvrt:
  5195                           
  5196                           	psect	text16
  5197  04C1                     __ptext16:	
  5198 ;; *************** function _dtoa *****************
  5199 ;; Defined at:
  5200 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  fp              1    wreg     PTR struct _IO_FILE
  5203 ;;		 -> sprintf@f(6), 
  5204 ;;  d               8   16[BANK0 ] long long 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5207 ;;		 -> sprintf@f(6), 
  5208 ;;  n               8   36[BANK0 ] long long 
  5209 ;;  i               2   44[BANK0 ] int 
  5210 ;;  s               2   34[BANK0 ] int 
  5211 ;;  w               2   32[BANK0 ] int 
  5212 ;;  p               2   30[BANK0 ] int 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  2   16[BANK0 ] int 
  5215 ;; Registers used:
  5216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5222 ;;      Params:         0       8       0       0       0       0
  5223 ;;      Locals:         0      19       0       0       0       0
  5224 ;;      Temps:          0       3       0       0       0       0
  5225 ;;      Totals:         0      30       0       0       0       0
  5226 ;;Total ram usage:       30 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    4
  5229 ;; This function calls:
  5230 ;;		___aodiv
  5231 ;;		___aomod
  5232 ;;		_abs
  5233 ;;		_pad
  5234 ;; This function is called by:
  5235 ;;		_vfpfcnvrt
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function _dtoa
  5241  04C1                     _dtoa:
  5242                           
  5243                           ;incstack = 0
  5244                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5245                           ;dtoa@fp stored from wreg
  5246  04C1  0020               	movlb	0	; select bank0
  5247  04C2  00BD               	movwf	dtoa@fp
  5248  04C3                     l2132:
  5249                           
  5250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5251  04C3  0830               	movf	dtoa@d,w
  5252  04C4  00C4               	movwf	dtoa@n
  5253  04C5  0831               	movf	dtoa@d+1,w
  5254  04C6  00C5               	movwf	dtoa@n+1
  5255  04C7  0832               	movf	dtoa@d+2,w
  5256  04C8  00C6               	movwf	dtoa@n+2
  5257  04C9  0833               	movf	dtoa@d+3,w
  5258  04CA  00C7               	movwf	dtoa@n+3
  5259  04CB  0834               	movf	dtoa@d+4,w
  5260  04CC  00C8               	movwf	dtoa@n+4
  5261  04CD  0835               	movf	dtoa@d+5,w
  5262  04CE  00C9               	movwf	dtoa@n+5
  5263  04CF  0836               	movf	dtoa@d+6,w
  5264  04D0  00CA               	movwf	dtoa@n+6
  5265  04D1  0837               	movf	dtoa@d+7,w
  5266  04D2  00CB               	movwf	dtoa@n+7
  5267  04D3                     l2134:
  5268                           
  5269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5270  04D3  3044               	movlw	low dtoa@n
  5271  04D4  0086               	movwf	6
  5272  04D5  3000               	movlw	high dtoa@n
  5273  04D6  0087               	movwf	7
  5274  04D7  3F47               	moviw [7]fsr1
  5275  04D8  00B8               	movwf	??_dtoa
  5276  04D9  1BB8               	btfsc	??_dtoa,7
  5277  04DA  2CDC               	goto	u1621
  5278  04DB  2CDE               	goto	u1620
  5279  04DC                     u1621:
  5280  04DC  3001               	movlw	1
  5281  04DD  2CDF               	goto	u1630
  5282  04DE                     u1620:
  5283  04DE  3000               	movlw	0
  5284  04DF                     u1630:
  5285  04DF  0020               	movlb	0	; select bank0
  5286  04E0  00B9               	movwf	??_dtoa+1
  5287  04E1  01BA               	clrf	??_dtoa+2
  5288  04E2  0839               	movf	??_dtoa+1,w
  5289  04E3  00C2               	movwf	dtoa@s
  5290  04E4  083A               	movf	??_dtoa+2,w
  5291  04E5  00C3               	movwf	dtoa@s+1
  5292  04E6                     l2136:
  5293                           
  5294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5295  04E6  0842               	movf	dtoa@s,w
  5296  04E7  0443               	iorwf	dtoa@s+1,w
  5297  04E8  1903               	btfsc	3,2
  5298  04E9  2CEB               	goto	u1641
  5299  04EA  2CEC               	goto	u1640
  5300  04EB                     u1641:
  5301  04EB  2D0A               	goto	l918
  5302  04EC                     u1640:
  5303  04EC                     l2138:
  5304                           
  5305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5306  04EC  09C4               	comf	dtoa@n,f
  5307  04ED  09C5               	comf	dtoa@n+1,f
  5308  04EE  09C6               	comf	dtoa@n+2,f
  5309  04EF  09C7               	comf	dtoa@n+3,f
  5310  04F0  09C8               	comf	dtoa@n+4,f
  5311  04F1  09C9               	comf	dtoa@n+5,f
  5312  04F2  09CA               	comf	dtoa@n+6,f
  5313  04F3  09CB               	comf	dtoa@n+7,f
  5314  04F4  0AC4               	incf	dtoa@n,f
  5315  04F5  1D03               	skipz
  5316  04F6  2D0A               	goto	u165lld
  5317  04F7  0AC5               	incf	dtoa@n+1,f
  5318  04F8  1D03               	skipz
  5319  04F9  2D0A               	goto	u165lld
  5320  04FA  0AC6               	incf	dtoa@n+2,f
  5321  04FB  1D03               	skipz
  5322  04FC  2D0A               	goto	u165lld
  5323  04FD  0AC7               	incf	dtoa@n+3,f
  5324  04FE  1D03               	skipz
  5325  04FF  2D0A               	goto	u165lld
  5326  0500  0AC8               	incf	dtoa@n+4,f
  5327  0501  1D03               	skipz
  5328  0502  2D0A               	goto	u165lld
  5329  0503  0AC9               	incf	dtoa@n+5,f
  5330  0504  1D03               	skipz
  5331  0505  2D0A               	goto	u165lld
  5332  0506  0ACA               	incf	dtoa@n+6,f
  5333  0507  1D03               	skipz
  5334  0508  2D0A               	goto	u165lld
  5335  0509  0ACB               	incf	dtoa@n+7,f
  5336  050A                     u165lld:
  5337  050A                     l918:	
  5338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  5339                           
  5340                           
  5341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5342  050A  0021               	movlb	1	; select bank1
  5343  050B  1BD1               	btfsc	(_prec+1)^(0+128),7
  5344  050C  2D0E               	goto	u1661
  5345  050D  2D0F               	goto	u1660
  5346  050E                     u1661:
  5347  050E  2D13               	goto	l919
  5348  050F                     u1660:
  5349  050F                     l2140:
  5350                           
  5351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5352  050F  30FD               	movlw	253
  5353  0510  05D2               	andwf	_flags^(0+128),f
  5354  0511  30FF               	movlw	255
  5355  0512  05D3               	andwf	(_flags+1)^(0+128),f
  5356  0513                     l919:	
  5357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  5358                           
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5361  0513  0851               	movf	(_prec+1)^(0+128),w
  5362  0514  3A80               	xorlw	128
  5363  0515  0020               	movlb	0	; select bank0
  5364  0516  00B8               	movwf	??_dtoa
  5365  0517  3080               	movlw	128
  5366  0518  0238               	subwf	??_dtoa,w
  5367  0519  1D03               	skipz
  5368  051A  2D1E               	goto	u1675
  5369  051B  3001               	movlw	1
  5370  051C  0021               	movlb	1	; select bank1
  5371  051D  0250               	subwf	_prec^(0+128),w
  5372  051E                     u1675:
  5373  051E  1803               	skipnc
  5374  051F  2D21               	goto	u1671
  5375  0520  2D22               	goto	u1670
  5376  0521                     u1671:
  5377  0521  2D28               	goto	l2144
  5378  0522                     u1670:
  5379  0522                     l2142:
  5380  0522  3001               	movlw	1
  5381  0523  0020               	movlb	0	; select bank0
  5382  0524  00BE               	movwf	dtoa@p
  5383  0525  3000               	movlw	0
  5384  0526  00BF               	movwf	dtoa@p+1
  5385  0527  2D30               	goto	l923
  5386  0528                     l2144:
  5387  0528  0021               	movlb	1	; select bank1
  5388  0529  0851               	movf	(_prec+1)^(0+128),w
  5389  052A  0020               	movlb	0	; select bank0
  5390  052B  00BF               	movwf	dtoa@p+1
  5391  052C  0021               	movlb	1	; select bank1
  5392  052D  0850               	movf	_prec^(0+128),w
  5393  052E  0020               	movlb	0	; select bank0
  5394  052F  00BE               	movwf	dtoa@p
  5395  0530                     l923:
  5396                           
  5397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5398  0530  0021               	movlb	1	; select bank1
  5399  0531  084F               	movf	(_width+1)^(0+128),w
  5400  0532  0020               	movlb	0	; select bank0
  5401  0533  00C1               	movwf	dtoa@w+1
  5402  0534  0021               	movlb	1	; select bank1
  5403  0535  084E               	movf	_width^(0+128),w
  5404  0536  0020               	movlb	0	; select bank0
  5405  0537  00C0               	movwf	dtoa@w
  5406  0538                     l2146:
  5407                           
  5408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5409  0538  0842               	movf	dtoa@s,w
  5410  0539  0443               	iorwf	dtoa@s+1,w
  5411  053A  1D03               	btfss	3,2
  5412  053B  2D3D               	goto	u1681
  5413  053C  2D3E               	goto	u1680
  5414  053D                     u1681:
  5415  053D  2D43               	goto	l2150
  5416  053E                     u1680:
  5417  053E                     l2148:
  5418  053E  0021               	movlb	1	; select bank1
  5419  053F  1D52               	btfss	_flags^(0+128),2
  5420  0540  2D42               	goto	u1691
  5421  0541  2D43               	goto	u1690
  5422  0542                     u1691:
  5423  0542  2D48               	goto	l924
  5424  0543                     u1690:
  5425  0543                     l2150:
  5426                           
  5427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5428  0543  30FF               	movlw	255
  5429  0544  0020               	movlb	0	; select bank0
  5430  0545  07C0               	addwf	dtoa@w,f
  5431  0546  30FF               	movlw	255
  5432  0547  3DC1               	addwfc	dtoa@w+1,f
  5433  0548                     l924:	
  5434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  5435                           
  5436                           
  5437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5438  0548  301F               	movlw	31
  5439  0549  0020               	movlb	0	; select bank0
  5440  054A  00CC               	movwf	dtoa@i
  5441  054B  3000               	movlw	0
  5442  054C  00CD               	movwf	dtoa@i+1
  5443  054D                     l2152:
  5444                           
  5445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5446  054D  0022               	movlb	2	; select bank2
  5447  054E  01BF               	clrf	(_dbuf^(0+256)+31)
  5448                           
  5449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5450  054F  2DB9               	goto	l927
  5451  0550                     l2154:
  5452                           
  5453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5454  0550  30FF               	movlw	255
  5455  0551  0020               	movlb	0	; select bank0
  5456  0552  07CC               	addwf	dtoa@i,f
  5457  0553  30FF               	movlw	255
  5458  0554  3DCD               	addwfc	dtoa@i+1,f
  5459  0555                     l2156:
  5460                           
  5461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5462  0555  300A               	movlw	10
  5463  0556  00A0               	movwf	___aomod@divisor
  5464  0557  01A1               	clrf	___aomod@divisor+1
  5465  0558  01A2               	clrf	___aomod@divisor+2
  5466  0559  01A3               	clrf	___aomod@divisor+3
  5467  055A  01A4               	clrf	___aomod@divisor+4
  5468  055B  01A5               	clrf	___aomod@divisor+5
  5469  055C  01A6               	clrf	___aomod@divisor+6
  5470  055D  01A7               	clrf	___aomod@divisor+7
  5471  055E  0844               	movf	dtoa@n,w
  5472  055F  00A8               	movwf	___aomod@dividend
  5473  0560  0845               	movf	dtoa@n+1,w
  5474  0561  00A9               	movwf	___aomod@dividend+1
  5475  0562  0846               	movf	dtoa@n+2,w
  5476  0563  00AA               	movwf	___aomod@dividend+2
  5477  0564  0847               	movf	dtoa@n+3,w
  5478  0565  00AB               	movwf	___aomod@dividend+3
  5479  0566  0848               	movf	dtoa@n+4,w
  5480  0567  00AC               	movwf	___aomod@dividend+4
  5481  0568  0849               	movf	dtoa@n+5,w
  5482  0569  00AD               	movwf	___aomod@dividend+5
  5483  056A  084A               	movf	dtoa@n+6,w
  5484  056B  00AE               	movwf	___aomod@dividend+6
  5485  056C  084B               	movf	dtoa@n+7,w
  5486  056D  00AF               	movwf	___aomod@dividend+7
  5487  056E  3181  21EA  3184   	fcall	___aomod
  5488  0571  0020               	movlb	0	; select bank0
  5489  0572  0821               	movf	?___aomod+1,w
  5490  0573  00F4               	movwf	abs@a+1
  5491  0574  0820               	movf	?___aomod,w
  5492  0575  00F3               	movwf	abs@a
  5493  0576  318A  2218  3184   	fcall	_abs
  5494  0579  0873               	movf	?_abs,w
  5495  057A  3E30               	addlw	48
  5496  057B  0020               	movlb	0	; select bank0
  5497  057C  00B8               	movwf	??_dtoa
  5498  057D  084C               	movf	dtoa@i,w
  5499  057E  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5500  057F  0086               	movwf	6
  5501  0580  3001               	movlw	1	; select bank2/3
  5502  0581  0087               	movwf	7
  5503  0582  0838               	movf	??_dtoa,w
  5504  0583  0081               	movwf	1
  5505  0584                     l2158:
  5506                           
  5507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5508  0584  30FF               	movlw	255
  5509  0585  07BE               	addwf	dtoa@p,f
  5510  0586  30FF               	movlw	255
  5511  0587  3DBF               	addwfc	dtoa@p+1,f
  5512  0588                     l2160:
  5513                           
  5514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5515  0588  30FF               	movlw	255
  5516  0589  07C0               	addwf	dtoa@w,f
  5517  058A  30FF               	movlw	255
  5518  058B  3DC1               	addwfc	dtoa@w+1,f
  5519  058C                     l2162:
  5520                           
  5521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5522  058C  300A               	movlw	10
  5523  058D  00A0               	movwf	___aodiv@divisor
  5524  058E  01A1               	clrf	___aodiv@divisor+1
  5525  058F  01A2               	clrf	___aodiv@divisor+2
  5526  0590  01A3               	clrf	___aodiv@divisor+3
  5527  0591  01A4               	clrf	___aodiv@divisor+4
  5528  0592  01A5               	clrf	___aodiv@divisor+5
  5529  0593  01A6               	clrf	___aodiv@divisor+6
  5530  0594  01A7               	clrf	___aodiv@divisor+7
  5531  0595  0844               	movf	dtoa@n,w
  5532  0596  00A8               	movwf	___aodiv@dividend
  5533  0597  0845               	movf	dtoa@n+1,w
  5534  0598  00A9               	movwf	___aodiv@dividend+1
  5535  0599  0846               	movf	dtoa@n+2,w
  5536  059A  00AA               	movwf	___aodiv@dividend+2
  5537  059B  0847               	movf	dtoa@n+3,w
  5538  059C  00AB               	movwf	___aodiv@dividend+3
  5539  059D  0848               	movf	dtoa@n+4,w
  5540  059E  00AC               	movwf	___aodiv@dividend+4
  5541  059F  0849               	movf	dtoa@n+5,w
  5542  05A0  00AD               	movwf	___aodiv@dividend+5
  5543  05A1  084A               	movf	dtoa@n+6,w
  5544  05A2  00AE               	movwf	___aodiv@dividend+6
  5545  05A3  084B               	movf	dtoa@n+7,w
  5546  05A4  00AF               	movwf	___aodiv@dividend+7
  5547  05A5  3183  23C0  3184   	fcall	___aodiv
  5548  05A8  0020               	movlb	0	; select bank0
  5549  05A9  0820               	movf	?___aodiv,w
  5550  05AA  00C4               	movwf	dtoa@n
  5551  05AB  0821               	movf	?___aodiv+1,w
  5552  05AC  00C5               	movwf	dtoa@n+1
  5553  05AD  0822               	movf	?___aodiv+2,w
  5554  05AE  00C6               	movwf	dtoa@n+2
  5555  05AF  0823               	movf	?___aodiv+3,w
  5556  05B0  00C7               	movwf	dtoa@n+3
  5557  05B1  0824               	movf	?___aodiv+4,w
  5558  05B2  00C8               	movwf	dtoa@n+4
  5559  05B3  0825               	movf	?___aodiv+5,w
  5560  05B4  00C9               	movwf	dtoa@n+5
  5561  05B5  0826               	movf	?___aodiv+6,w
  5562  05B6  00CA               	movwf	dtoa@n+6
  5563  05B7  0827               	movf	?___aodiv+7,w
  5564  05B8  00CB               	movwf	dtoa@n+7
  5565  05B9                     l927:	
  5566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  5567                           
  5568                           
  5569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5570  05B9  0020               	movlb	0	; select bank0
  5571  05BA  084D               	movf	dtoa@i+1,w
  5572  05BB  3A80               	xorlw	128
  5573  05BC  00B8               	movwf	??_dtoa
  5574  05BD  3080               	movlw	128
  5575  05BE  0238               	subwf	??_dtoa,w
  5576  05BF  1D03               	skipz
  5577  05C0  2DC3               	goto	u1705
  5578  05C1  3001               	movlw	1
  5579  05C2  024C               	subwf	dtoa@i,w
  5580  05C3                     u1705:
  5581  05C3  1C03               	skipc
  5582  05C4  2DC6               	goto	u1701
  5583  05C5  2DC7               	goto	u1700
  5584  05C6                     u1701:
  5585  05C6  2DF4               	goto	l2172
  5586  05C7                     u1700:
  5587  05C7                     l2164:
  5588  05C7  0020               	movlb	0	; select bank0
  5589  05C8  0844               	movf	dtoa@n,w
  5590  05C9  0445               	iorwf	dtoa@n+1,w
  5591  05CA  0446               	iorwf	dtoa@n+2,w
  5592  05CB  0447               	iorwf	dtoa@n+3,w
  5593  05CC  0448               	iorwf	dtoa@n+4,w
  5594  05CD  0449               	iorwf	dtoa@n+5,w
  5595  05CE  044A               	iorwf	dtoa@n+6,w
  5596  05CF  044B               	iorwf	dtoa@n+7,w
  5597  05D0  1D03               	skipz
  5598  05D1  2DD3               	goto	u1711
  5599  05D2  2DD4               	goto	u1710
  5600  05D3                     u1711:
  5601  05D3  2D50               	goto	l2154
  5602  05D4                     u1710:
  5603  05D4                     l2166:
  5604  05D4  083F               	movf	dtoa@p+1,w
  5605  05D5  3A80               	xorlw	128
  5606  05D6  00B8               	movwf	??_dtoa
  5607  05D7  3080               	movlw	128
  5608  05D8  0238               	subwf	??_dtoa,w
  5609  05D9  1D03               	skipz
  5610  05DA  2DDD               	goto	u1725
  5611  05DB  3001               	movlw	1
  5612  05DC  023E               	subwf	dtoa@p,w
  5613  05DD                     u1725:
  5614  05DD  1803               	skipnc
  5615  05DE  2DE0               	goto	u1721
  5616  05DF  2DE1               	goto	u1720
  5617  05E0                     u1721:
  5618  05E0  2D50               	goto	l2154
  5619  05E1                     u1720:
  5620  05E1                     l2168:
  5621  05E1  0020               	movlb	0	; select bank0
  5622  05E2  0841               	movf	dtoa@w+1,w
  5623  05E3  3A80               	xorlw	128
  5624  05E4  00B8               	movwf	??_dtoa
  5625  05E5  3080               	movlw	128
  5626  05E6  0238               	subwf	??_dtoa,w
  5627  05E7  1D03               	skipz
  5628  05E8  2DEB               	goto	u1735
  5629  05E9  3001               	movlw	1
  5630  05EA  0240               	subwf	dtoa@w,w
  5631  05EB                     u1735:
  5632  05EB  1C03               	skipc
  5633  05EC  2DEE               	goto	u1731
  5634  05ED  2DEF               	goto	u1730
  5635  05EE                     u1731:
  5636  05EE  2DF4               	goto	l2172
  5637  05EF                     u1730:
  5638  05EF                     l2170:
  5639  05EF  0021               	movlb	1	; select bank1
  5640  05F0  18D2               	btfsc	_flags^(0+128),1
  5641  05F1  2DF3               	goto	u1741
  5642  05F2  2DF4               	goto	u1740
  5643  05F3                     u1741:
  5644  05F3  2D50               	goto	l2154
  5645  05F4                     u1740:
  5646  05F4                     l2172:
  5647                           
  5648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5649  05F4  0020               	movlb	0	; select bank0
  5650  05F5  0842               	movf	dtoa@s,w
  5651  05F6  0443               	iorwf	dtoa@s+1,w
  5652  05F7  1D03               	btfss	3,2
  5653  05F8  2DFA               	goto	u1751
  5654  05F9  2DFB               	goto	u1750
  5655  05FA                     u1751:
  5656  05FA  2E00               	goto	l2176
  5657  05FB                     u1750:
  5658  05FB                     l2174:
  5659  05FB  0021               	movlb	1	; select bank1
  5660  05FC  1D52               	btfss	_flags^(0+128),2
  5661  05FD  2DFF               	goto	u1761
  5662  05FE  2E00               	goto	u1760
  5663  05FF                     u1761:
  5664  05FF  2E1D               	goto	l2186
  5665  0600                     u1760:
  5666  0600                     l2176:
  5667                           
  5668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5669  0600  30FF               	movlw	255
  5670  0601  0020               	movlb	0	; select bank0
  5671  0602  07CC               	addwf	dtoa@i,f
  5672  0603  30FF               	movlw	255
  5673  0604  3DCD               	addwfc	dtoa@i+1,f
  5674  0605                     l2178:
  5675                           
  5676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5677  0605  0842               	movf	dtoa@s,w
  5678  0606  0443               	iorwf	dtoa@s+1,w
  5679  0607  1D03               	btfss	3,2
  5680  0608  2E0A               	goto	u1771
  5681  0609  2E0B               	goto	u1770
  5682  060A                     u1771:
  5683  060A  2E10               	goto	l2182
  5684  060B                     u1770:
  5685  060B                     l2180:
  5686  060B  302B               	movlw	43
  5687  060C  00BB               	movwf	_dtoa$1040
  5688  060D  3000               	movlw	0
  5689  060E  00BC               	movwf	_dtoa$1040+1
  5690  060F  2E14               	goto	l2184
  5691  0610                     l2182:
  5692  0610  302D               	movlw	45
  5693  0611  00BB               	movwf	_dtoa$1040
  5694  0612  3000               	movlw	0
  5695  0613  00BC               	movwf	_dtoa$1040+1
  5696  0614                     l2184:
  5697  0614  083B               	movf	_dtoa$1040,w
  5698  0615  00B8               	movwf	??_dtoa
  5699  0616  084C               	movf	dtoa@i,w
  5700  0617  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5701  0618  0086               	movwf	6
  5702  0619  3001               	movlw	1	; select bank2/3
  5703  061A  0087               	movwf	7
  5704  061B  0838               	movf	??_dtoa,w
  5705  061C  0081               	movwf	1
  5706  061D                     l2186:
  5707                           
  5708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5709  061D  0020               	movlb	0	; select bank0
  5710  061E  084C               	movf	dtoa@i,w
  5711  061F  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5712  0620  00B8               	movwf	??_dtoa
  5713  0621  0838               	movf	??_dtoa,w
  5714  0622  00A4               	movwf	pad@buf
  5715  0623  0841               	movf	dtoa@w+1,w
  5716  0624  00A6               	movwf	pad@p+1
  5717  0625  0840               	movf	dtoa@w,w
  5718  0626  00A5               	movwf	pad@p
  5719  0627  083D               	movf	dtoa@fp,w
  5720  0628  3180  2008  3184   	fcall	_pad
  5721  062B  0020               	movlb	0	; select bank0
  5722  062C  0825               	movf	?_pad+1,w
  5723  062D  00B1               	movwf	?_dtoa+1
  5724  062E  0824               	movf	?_pad,w
  5725  062F  00B0               	movwf	?_dtoa
  5726  0630                     l941:
  5727  0630  0008               	return
  5728  0631                     __end_of_dtoa:
  5729                           
  5730                           	psect	text17
  5731  0008                     __ptext17:	
  5732 ;; *************** function _pad *****************
  5733 ;; Defined at:
  5734 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  fp              1    wreg     PTR struct _IO_FILE
  5737 ;;		 -> sprintf@f(6), 
  5738 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5739 ;;		 -> dbuf(32), 
  5740 ;;  p               2    5[BANK0 ] int 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5743 ;;		 -> sprintf@f(6), 
  5744 ;;  w               2    9[BANK0 ] int 
  5745 ;;  i               2    7[BANK0 ] int 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  2    4[BANK0 ] int 
  5748 ;; Registers used:
  5749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5755 ;;      Params:         0       3       0       0       0       0
  5756 ;;      Locals:         0       5       0       0       0       0
  5757 ;;      Temps:          1       0       0       0       0       0
  5758 ;;      Totals:         1       8       0       0       0       0
  5759 ;;Total ram usage:        9 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:    3
  5762 ;; This function calls:
  5763 ;;		_fputc
  5764 ;;		_fputs
  5765 ;;		_strlen
  5766 ;; This function is called by:
  5767 ;;		_dtoa
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           
  5772                           ;psect for function _pad
  5773  0008                     _pad:
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5777                           ;pad@fp stored from wreg
  5778  0008  0020               	movlb	0	; select bank0
  5779  0009  00AB               	movwf	pad@fp
  5780  000A                     l2080:
  5781                           
  5782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5783  000A  0021               	movlb	1	; select bank1
  5784  000B  1C52               	btfss	_flags^(0+128),0
  5785  000C  280E               	goto	u1491
  5786  000D  280F               	goto	u1490
  5787  000E                     u1491:
  5788  000E  2818               	goto	l2084
  5789  000F                     u1490:
  5790  000F                     l2082:
  5791                           
  5792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5793  000F  0020               	movlb	0	; select bank0
  5794  0010  082B               	movf	pad@fp,w
  5795  0011  00FC               	movwf	??_pad
  5796  0012  087C               	movf	??_pad,w
  5797  0013  00F8               	movwf	fputs@fp
  5798  0014  0824               	movf	pad@buf,w
  5799  0015  318A  22EF  3180   	fcall	_fputs
  5800  0018                     l2084:
  5801                           
  5802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5803  0018  0020               	movlb	0	; select bank0
  5804  0019  1BA6               	btfsc	pad@p+1,7
  5805  001A  281C               	goto	u1501
  5806  001B  281D               	goto	u1500
  5807  001C                     u1501:
  5808  001C  2822               	goto	l2088
  5809  001D                     u1500:
  5810  001D                     l2086:
  5811  001D  0826               	movf	pad@p+1,w
  5812  001E  00AA               	movwf	pad@w+1
  5813  001F  0825               	movf	pad@p,w
  5814  0020  00A9               	movwf	pad@w
  5815  0021  2824               	goto	l910
  5816  0022                     l2088:
  5817  0022  01A9               	clrf	pad@w
  5818  0023  01AA               	clrf	pad@w+1
  5819  0024                     l910:
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5822  0024  01A7               	clrf	pad@i
  5823  0025  01A8               	clrf	pad@i+1
  5824                           
  5825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5826  0026  2838               	goto	l2094
  5827  0027                     l2090:
  5828                           
  5829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5830  0027  3020               	movlw	32
  5831  0028  00F0               	movwf	fputc@c
  5832  0029  3000               	movlw	0
  5833  002A  00F1               	movwf	fputc@c+1
  5834  002B  0020               	movlb	0	; select bank0
  5835  002C  082B               	movf	pad@fp,w
  5836  002D  00FC               	movwf	??_pad
  5837  002E  087C               	movf	??_pad,w
  5838  002F  00F2               	movwf	fputc@fp
  5839  0030  318D  2560  3180   	fcall	_fputc
  5840  0033                     l2092:
  5841                           
  5842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5843  0033  3001               	movlw	1
  5844  0034  0020               	movlb	0	; select bank0
  5845  0035  07A7               	addwf	pad@i,f
  5846  0036  3000               	movlw	0
  5847  0037  3DA8               	addwfc	pad@i+1,f
  5848  0038                     l2094:
  5849                           
  5850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5851  0038  0828               	movf	pad@i+1,w
  5852  0039  3A80               	xorlw	128
  5853  003A  00FC               	movwf	??_pad
  5854  003B  082A               	movf	pad@w+1,w
  5855  003C  3A80               	xorlw	128
  5856  003D  027C               	subwf	??_pad,w
  5857  003E  1D03               	skipz
  5858  003F  2842               	goto	u1515
  5859  0040  0829               	movf	pad@w,w
  5860  0041  0227               	subwf	pad@i,w
  5861  0042                     u1515:
  5862  0042  1C03               	skipc
  5863  0043  2845               	goto	u1511
  5864  0044  2846               	goto	u1510
  5865  0045                     u1511:
  5866  0045  2827               	goto	l2090
  5867  0046                     u1510:
  5868  0046                     l913:
  5869                           
  5870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5871  0046  0021               	movlb	1	; select bank1
  5872  0047  1852               	btfsc	_flags^(0+128),0
  5873  0048  284A               	goto	u1521
  5874  0049  284B               	goto	u1520
  5875  004A                     u1521:
  5876  004A  2854               	goto	l2098
  5877  004B                     u1520:
  5878  004B                     l2096:
  5879                           
  5880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5881  004B  0020               	movlb	0	; select bank0
  5882  004C  082B               	movf	pad@fp,w
  5883  004D  00FC               	movwf	??_pad
  5884  004E  087C               	movf	??_pad,w
  5885  004F  00F8               	movwf	fputs@fp
  5886  0050  0824               	movf	pad@buf,w
  5887  0051  318A  22EF  3180   	fcall	_fputs
  5888  0054                     l2098:
  5889                           
  5890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5891  0054  0020               	movlb	0	; select bank0
  5892  0055  0824               	movf	pad@buf,w
  5893  0056  318A  2232  3180   	fcall	_strlen
  5894  0059  0020               	movlb	0	; select bank0
  5895  005A  0829               	movf	pad@w,w
  5896  005B  0770               	addwf	?_strlen,w
  5897  005C  00A4               	movwf	?_pad
  5898  005D  082A               	movf	pad@w+1,w
  5899  005E  3D71               	addwfc	?_strlen+1,w
  5900  005F  00A5               	movwf	?_pad+1
  5901  0060                     l915:
  5902  0060  0008               	return
  5903  0061                     __end_of_pad:
  5904                           
  5905                           	psect	text18
  5906  0A32                     __ptext18:	
  5907 ;; *************** function _strlen *****************
  5908 ;; Defined at:
  5909 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  s               1    wreg     PTR const unsigned char 
  5912 ;;		 -> dbuf(32), 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  s               1    4[COMMON] PTR const unsigned char 
  5915 ;;		 -> dbuf(32), 
  5916 ;;  a               1    3[COMMON] PTR const unsigned char 
  5917 ;;		 -> dbuf(32), 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  2    0[COMMON] unsigned int 
  5920 ;; Registers used:
  5921 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5927 ;;      Params:         2       0       0       0       0       0
  5928 ;;      Locals:         2       0       0       0       0       0
  5929 ;;      Temps:          1       0       0       0       0       0
  5930 ;;      Totals:         5       0       0       0       0       0
  5931 ;;Total ram usage:        5 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_pad
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           
  5941                           ;psect for function _strlen
  5942  0A32                     _strlen:
  5943                           
  5944                           ;incstack = 0
  5945                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5946                           ;strlen@s stored from wreg
  5947  0A32  00F4               	movwf	strlen@s
  5948  0A33                     l1982:
  5949  0A33  0874               	movf	strlen@s,w
  5950  0A34  00F2               	movwf	??_strlen
  5951  0A35  0872               	movf	??_strlen,w
  5952  0A36  00F3               	movwf	strlen@a
  5953  0A37  2A3C               	goto	l1986
  5954  0A38                     l1984:
  5955  0A38  3001               	movlw	1
  5956  0A39  00F2               	movwf	??_strlen
  5957  0A3A  0872               	movf	??_strlen,w
  5958  0A3B  07F4               	addwf	strlen@s,f
  5959  0A3C                     l1986:
  5960  0A3C  0874               	movf	strlen@s,w
  5961  0A3D  0086               	movwf	6
  5962  0A3E  3001               	movlw	1	; select bank2/3
  5963  0A3F  0087               	movwf	7
  5964  0A40  0801               	movf	1,w
  5965  0A41  1D03               	btfss	3,2
  5966  0A42  2A44               	goto	u1211
  5967  0A43  2A45               	goto	u1210
  5968  0A44                     u1211:
  5969  0A44  2A38               	goto	l1984
  5970  0A45                     u1210:
  5971  0A45                     l1988:
  5972  0A45  0873               	movf	strlen@a,w
  5973  0A46  0274               	subwf	strlen@s,w
  5974  0A47  00F0               	movwf	?_strlen
  5975  0A48  01F1               	clrf	?_strlen+1
  5976  0A49  1BF0               	btfsc	?_strlen,7
  5977  0A4A  03F1               	decf	?_strlen+1,f
  5978  0A4B                     l1058:
  5979  0A4B  0008               	return
  5980  0A4C                     __end_of_strlen:
  5981                           
  5982                           	psect	text19
  5983  0AEF                     __ptext19:	
  5984 ;; *************** function _fputs *****************
  5985 ;; Defined at:
  5986 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  s               1    wreg     PTR const unsigned char 
  5989 ;;		 -> dbuf(32), 
  5990 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  5991 ;;		 -> sprintf@f(6), 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5994 ;;		 -> dbuf(32), 
  5995 ;;  i               2    1[BANK0 ] int 
  5996 ;;  c               1    0[BANK0 ] unsigned char 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  2    8[COMMON] int 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6006 ;;      Params:         1       0       0       0       0       0
  6007 ;;      Locals:         0       4       0       0       0       0
  6008 ;;      Temps:          3       0       0       0       0       0
  6009 ;;      Totals:         4       4       0       0       0       0
  6010 ;;Total ram usage:        8 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    2
  6013 ;; This function calls:
  6014 ;;		_fputc
  6015 ;; This function is called by:
  6016 ;;		_pad
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function _fputs
  6022  0AEF                     _fputs:
  6023                           
  6024                           ;incstack = 0
  6025                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6026                           ;fputs@s stored from wreg
  6027  0AEF  0020               	movlb	0	; select bank0
  6028  0AF0  00A3               	movwf	fputs@s
  6029  0AF1                     l1974:
  6030  0AF1  01A1               	clrf	fputs@i
  6031  0AF2  01A2               	clrf	fputs@i+1
  6032  0AF3  2B07               	goto	l1980
  6033  0AF4                     l1976:
  6034  0AF4  0820               	movf	fputs@c,w
  6035  0AF5  00F9               	movwf	??_fputs
  6036  0AF6  01FA               	clrf	??_fputs+1
  6037  0AF7  0879               	movf	??_fputs,w
  6038  0AF8  00F0               	movwf	fputc@c
  6039  0AF9  087A               	movf	??_fputs+1,w
  6040  0AFA  00F1               	movwf	fputc@c+1
  6041  0AFB  0878               	movf	fputs@fp,w
  6042  0AFC  00FB               	movwf	??_fputs+2
  6043  0AFD  087B               	movf	??_fputs+2,w
  6044  0AFE  00F2               	movwf	fputc@fp
  6045  0AFF  318D  2560  318A   	fcall	_fputc
  6046  0B02                     l1978:
  6047  0B02  3001               	movlw	1
  6048  0B03  0020               	movlb	0	; select bank0
  6049  0B04  07A1               	addwf	fputs@i,f
  6050  0B05  3000               	movlw	0
  6051  0B06  3DA2               	addwfc	fputs@i+1,f
  6052  0B07                     l1980:
  6053  0B07  0821               	movf	fputs@i,w
  6054  0B08  0723               	addwf	fputs@s,w
  6055  0B09  00F9               	movwf	??_fputs
  6056  0B0A  0879               	movf	??_fputs,w
  6057  0B0B  0086               	movwf	6
  6058  0B0C  3001               	movlw	1	; select bank2/3
  6059  0B0D  0087               	movwf	7
  6060  0B0E  0801               	movf	1,w
  6061  0B0F  00FA               	movwf	??_fputs+1
  6062  0B10  087A               	movf	??_fputs+1,w
  6063  0B11  00A0               	movwf	fputs@c
  6064  0B12  0820               	movf	fputs@c,w
  6065  0B13  1D03               	btfss	3,2
  6066  0B14  2B16               	goto	u1201
  6067  0B15  2B17               	goto	u1200
  6068  0B16                     u1201:
  6069  0B16  2AF4               	goto	l1976
  6070  0B17                     u1200:
  6071  0B17                     l1049:
  6072  0B17  0008               	return
  6073  0B18                     __end_of_fputs:
  6074                           
  6075                           	psect	text20
  6076  0D60                     __ptext20:	
  6077 ;; *************** function _fputc *****************
  6078 ;; Defined at:
  6079 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  c               2    0[COMMON] int 
  6082 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6083 ;;		 -> sprintf@f(6), 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  2    0[COMMON] int 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6095 ;;      Params:         3       0       0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0
  6097 ;;      Temps:          5       0       0       0       0       0
  6098 ;;      Totals:         8       0       0       0       0       0
  6099 ;;Total ram usage:        8 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    1
  6102 ;; This function calls:
  6103 ;;		_putch
  6104 ;; This function is called by:
  6105 ;;		_pad
  6106 ;;		_vfpfcnvrt
  6107 ;;		_fputs
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           
  6112                           ;psect for function _fputc
  6113  0D60                     _fputc:
  6114  0D60                     l1958:	
  6115                           ;incstack = 0
  6116                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6117                           
  6118  0D60  0872               	movf	fputc@fp,w
  6119  0D61  1903               	btfsc	3,2
  6120  0D62  2D64               	goto	u1161
  6121  0D63  2D65               	goto	u1160
  6122  0D64                     u1161:
  6123  0D64  2D6A               	goto	l1962
  6124  0D65                     u1160:
  6125  0D65                     l1960:
  6126  0D65  0872               	movf	fputc@fp,w
  6127  0D66  1D03               	btfss	3,2
  6128  0D67  2D69               	goto	u1171
  6129  0D68  2D6A               	goto	u1170
  6130  0D69                     u1171:
  6131  0D69  2D6F               	goto	l1964
  6132  0D6A                     u1170:
  6133  0D6A                     l1962:
  6134  0D6A  0870               	movf	fputc@c,w
  6135  0D6B  3189  212F  318D   	fcall	_putch
  6136  0D6E  2DB4               	goto	l1041
  6137  0D6F                     l1964:
  6138  0D6F  0872               	movf	fputc@fp,w
  6139  0D70  3E04               	addlw	4
  6140  0D71  0086               	movwf	6
  6141  0D72  0187               	clrf	7
  6142  0D73  0016               	moviw fsr1++
  6143  0D74  0401               	iorwf	1,w
  6144  0D75  1903               	btfsc	3,2
  6145  0D76  2D78               	goto	u1181
  6146  0D77  2D79               	goto	u1180
  6147  0D78                     u1181:
  6148  0D78  2D97               	goto	l1968
  6149  0D79                     u1180:
  6150  0D79                     l1966:
  6151  0D79  0872               	movf	fputc@fp,w
  6152  0D7A  3E04               	addlw	4
  6153  0D7B  0086               	movwf	6
  6154  0D7C  0187               	clrf	7
  6155  0D7D  3F40               	moviw [0]fsr1
  6156  0D7E  00F3               	movwf	??_fputc
  6157  0D7F  3F41               	moviw [1]fsr1
  6158  0D80  00F4               	movwf	??_fputc+1
  6159  0D81  0872               	movf	fputc@fp,w
  6160  0D82  3E02               	addlw	2
  6161  0D83  0086               	movwf	6
  6162  0D84  0187               	clrf	7
  6163  0D85  3F40               	moviw [0]fsr1
  6164  0D86  00F5               	movwf	??_fputc+2
  6165  0D87  3F41               	moviw [1]fsr1
  6166  0D88  00F6               	movwf	??_fputc+3
  6167  0D89  0876               	movf	??_fputc+3,w
  6168  0D8A  3A80               	xorlw	128
  6169  0D8B  00F7               	movwf	??_fputc+4
  6170  0D8C  0874               	movf	??_fputc+1,w
  6171  0D8D  3A80               	xorlw	128
  6172  0D8E  0277               	subwf	??_fputc+4,w
  6173  0D8F  1D03               	skipz
  6174  0D90  2D93               	goto	u1195
  6175  0D91  0873               	movf	??_fputc,w
  6176  0D92  0275               	subwf	??_fputc+2,w
  6177  0D93                     u1195:
  6178  0D93  1803               	skipnc
  6179  0D94  2D96               	goto	u1191
  6180  0D95  2D97               	goto	u1190
  6181  0D96                     u1191:
  6182  0D96  2DB4               	goto	l1041
  6183  0D97                     u1190:
  6184  0D97                     l1968:
  6185  0D97  0872               	movf	fputc@fp,w
  6186  0D98  3E02               	addlw	2
  6187  0D99  0086               	movwf	6
  6188  0D9A  0187               	clrf	7
  6189  0D9B  0872               	movf	fputc@fp,w
  6190  0D9C  0084               	movwf	4
  6191  0D9D  0185               	clrf	5
  6192  0D9E  3F40               	moviw [0]fsr1
  6193  0D9F  0700               	addwf	0,w
  6194  0DA0  00F3               	movwf	??_fputc
  6195  0DA1  3101               	addfsr 0,1
  6196  0DA2  3F41               	moviw [1]fsr1
  6197  0DA3  3D00               	addwfc	0,w
  6198  0DA4  00F4               	movwf	??_fputc+1
  6199  0DA5  0873               	movf	??_fputc,w
  6200  0DA6  0086               	movwf	6
  6201  0DA7  0874               	movf	??_fputc+1,w
  6202  0DA8  0087               	movwf	7
  6203  0DA9  0870               	movf	fputc@c,w
  6204  0DAA  0081               	movwf	1
  6205  0DAB                     l1970:
  6206  0DAB  0872               	movf	fputc@fp,w
  6207  0DAC  3E02               	addlw	2
  6208  0DAD  0086               	movwf	6
  6209  0DAE  0187               	clrf	7
  6210  0DAF  3001               	movlw	1
  6211  0DB0  0781               	addwf	1,f
  6212  0DB1  3141               	addfsr 1,1
  6213  0DB2  1803               	skipnc
  6214  0DB3  0A81               	incf	1,f
  6215  0DB4                     l1041:
  6216  0DB4  0008               	return
  6217  0DB5                     __end_of_fputc:
  6218                           
  6219                           	psect	text21
  6220  092F                     __ptext21:	
  6221 ;; *************** function _putch *****************
  6222 ;; Defined at:
  6223 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  c               1    wreg     unsigned char 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  c               1    0[COMMON] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6237 ;;      Params:         0       0       0       0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0
  6240 ;;      Totals:         0       0       0       0       0       0
  6241 ;;Total ram usage:        0 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_fputc
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           
  6251                           ;psect for function _putch
  6252  092F                     _putch:
  6253  092F                     l1052:	
  6254                           ;incstack = 0
  6255                           ; Regs used in _putch: [wreg]
  6256                           
  6257  092F  0008               	return
  6258  0930                     __end_of_putch:
  6259                           
  6260                           	psect	text22
  6261  0A18                     __ptext22:	
  6262 ;; *************** function _abs *****************
  6263 ;; Defined at:
  6264 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  a               2    3[COMMON] int 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  2    3[COMMON] int 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6278 ;;      Params:         2       0       0       0       0       0
  6279 ;;      Locals:         0       0       0       0       0       0
  6280 ;;      Temps:          2       0       0       0       0       0
  6281 ;;      Totals:         4       0       0       0       0       0
  6282 ;;Total ram usage:        4 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_dtoa
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function _abs
  6293  0A18                     _abs:
  6294  0A18                     l2102:	
  6295                           ;incstack = 0
  6296                           ; Regs used in _abs: [wreg+status,2+status,0]
  6297                           
  6298  0A18  0874               	movf	abs@a+1,w
  6299  0A19  3A80               	xorlw	128
  6300  0A1A  00F5               	movwf	??_abs
  6301  0A1B  3080               	movlw	128
  6302  0A1C  0275               	subwf	??_abs,w
  6303  0A1D  1D03               	skipz
  6304  0A1E  2A21               	goto	u1535
  6305  0A1F  3001               	movlw	1
  6306  0A20  0273               	subwf	abs@a,w
  6307  0A21                     u1535:
  6308  0A21  1803               	skipnc
  6309  0A22  2A24               	goto	u1531
  6310  0A23  2A25               	goto	u1530
  6311  0A24                     u1531:
  6312  0A24  2A31               	goto	l981
  6313  0A25                     u1530:
  6314  0A25                     l2104:
  6315  0A25  0973               	comf	abs@a,w
  6316  0A26  00F5               	movwf	??_abs
  6317  0A27  0974               	comf	abs@a+1,w
  6318  0A28  00F6               	movwf	??_abs+1
  6319  0A29  0AF5               	incf	??_abs,f
  6320  0A2A  1903               	skipnz
  6321  0A2B  0AF6               	incf	??_abs+1,f
  6322  0A2C  0875               	movf	??_abs,w
  6323  0A2D  00F3               	movwf	?_abs
  6324  0A2E  0876               	movf	??_abs+1,w
  6325  0A2F  00F4               	movwf	?_abs+1
  6326  0A30  2A31               	goto	l984
  6327  0A31                     l981:
  6328  0A31                     l984:
  6329  0A31  0008               	return
  6330  0A32                     __end_of_abs:
  6331                           
  6332                           	psect	text23
  6333  01EA                     __ptext23:	
  6334 ;; *************** function ___aomod *****************
  6335 ;; Defined at:
  6336 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  divisor         8    0[BANK0 ] long long 
  6339 ;;  dividend        8    8[BANK0 ] long long 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  sign            1    2[COMMON] unsigned char 
  6342 ;;  counter         1    1[COMMON] unsigned char 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  8    0[BANK0 ] long long 
  6345 ;; Registers used:
  6346 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6352 ;;      Params:         0      16       0       0       0       0
  6353 ;;      Locals:         2       0       0       0       0       0
  6354 ;;      Temps:          1       0       0       0       0       0
  6355 ;;      Totals:         3      16       0       0       0       0
  6356 ;;Total ram usage:       19 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_dtoa
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           
  6366                           ;psect for function ___aomod
  6367  01EA                     ___aomod:
  6368  01EA                     l2050:	
  6369                           ;incstack = 0
  6370                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6371                           
  6372  01EA  01F2               	clrf	___aomod@sign
  6373  01EB                     l2052:
  6374  01EB  3028               	movlw	low ___aomod@dividend
  6375  01EC  0086               	movwf	6
  6376  01ED  3000               	movlw	high ___aomod@dividend
  6377  01EE  0087               	movwf	7
  6378  01EF  3F47               	moviw [7]fsr1
  6379  01F0  00F0               	movwf	??___aomod
  6380  01F1  1FF0               	btfss	??___aomod,7
  6381  01F2  29F4               	goto	u1391
  6382  01F3  29F5               	goto	u1390
  6383  01F4                     u1391:
  6384  01F4  2A16               	goto	l2056
  6385  01F5                     u1390:
  6386  01F5                     l2054:
  6387  01F5  0020               	movlb	0	; select bank0
  6388  01F6  09A8               	comf	___aomod@dividend,f
  6389  01F7  09A9               	comf	___aomod@dividend+1,f
  6390  01F8  09AA               	comf	___aomod@dividend+2,f
  6391  01F9  09AB               	comf	___aomod@dividend+3,f
  6392  01FA  09AC               	comf	___aomod@dividend+4,f
  6393  01FB  09AD               	comf	___aomod@dividend+5,f
  6394  01FC  09AE               	comf	___aomod@dividend+6,f
  6395  01FD  09AF               	comf	___aomod@dividend+7,f
  6396  01FE  0AA8               	incf	___aomod@dividend,f
  6397  01FF  1D03               	skipz
  6398  0200  2A14               	goto	u140lld
  6399  0201  0AA9               	incf	___aomod@dividend+1,f
  6400  0202  1D03               	skipz
  6401  0203  2A14               	goto	u140lld
  6402  0204  0AAA               	incf	___aomod@dividend+2,f
  6403  0205  1D03               	skipz
  6404  0206  2A14               	goto	u140lld
  6405  0207  0AAB               	incf	___aomod@dividend+3,f
  6406  0208  1D03               	skipz
  6407  0209  2A14               	goto	u140lld
  6408  020A  0AAC               	incf	___aomod@dividend+4,f
  6409  020B  1D03               	skipz
  6410  020C  2A14               	goto	u140lld
  6411  020D  0AAD               	incf	___aomod@dividend+5,f
  6412  020E  1D03               	skipz
  6413  020F  2A14               	goto	u140lld
  6414  0210  0AAE               	incf	___aomod@dividend+6,f
  6415  0211  1D03               	skipz
  6416  0212  2A14               	goto	u140lld
  6417  0213  0AAF               	incf	___aomod@dividend+7,f
  6418  0214                     u140lld:
  6419  0214  01F2               	clrf	___aomod@sign
  6420  0215  0AF2               	incf	___aomod@sign,f
  6421  0216                     l2056:
  6422  0216  3020               	movlw	low ___aomod@divisor
  6423  0217  0086               	movwf	6
  6424  0218  3000               	movlw	high ___aomod@divisor
  6425  0219  0087               	movwf	7
  6426  021A  3F47               	moviw [7]fsr1
  6427  021B  00F0               	movwf	??___aomod
  6428  021C  1FF0               	btfss	??___aomod,7
  6429  021D  2A1F               	goto	u1411
  6430  021E  2A20               	goto	u1410
  6431  021F                     u1411:
  6432  021F  2A3F               	goto	l2060
  6433  0220                     u1410:
  6434  0220                     l2058:
  6435  0220  0020               	movlb	0	; select bank0
  6436  0221  09A0               	comf	___aomod@divisor,f
  6437  0222  09A1               	comf	___aomod@divisor+1,f
  6438  0223  09A2               	comf	___aomod@divisor+2,f
  6439  0224  09A3               	comf	___aomod@divisor+3,f
  6440  0225  09A4               	comf	___aomod@divisor+4,f
  6441  0226  09A5               	comf	___aomod@divisor+5,f
  6442  0227  09A6               	comf	___aomod@divisor+6,f
  6443  0228  09A7               	comf	___aomod@divisor+7,f
  6444  0229  0AA0               	incf	___aomod@divisor,f
  6445  022A  1D03               	skipz
  6446  022B  2A3F               	goto	u142lld
  6447  022C  0AA1               	incf	___aomod@divisor+1,f
  6448  022D  1D03               	skipz
  6449  022E  2A3F               	goto	u142lld
  6450  022F  0AA2               	incf	___aomod@divisor+2,f
  6451  0230  1D03               	skipz
  6452  0231  2A3F               	goto	u142lld
  6453  0232  0AA3               	incf	___aomod@divisor+3,f
  6454  0233  1D03               	skipz
  6455  0234  2A3F               	goto	u142lld
  6456  0235  0AA4               	incf	___aomod@divisor+4,f
  6457  0236  1D03               	skipz
  6458  0237  2A3F               	goto	u142lld
  6459  0238  0AA5               	incf	___aomod@divisor+5,f
  6460  0239  1D03               	skipz
  6461  023A  2A3F               	goto	u142lld
  6462  023B  0AA6               	incf	___aomod@divisor+6,f
  6463  023C  1D03               	skipz
  6464  023D  2A3F               	goto	u142lld
  6465  023E  0AA7               	incf	___aomod@divisor+7,f
  6466  023F                     u142lld:
  6467  023F                     l2060:
  6468  023F  0020               	movlb	0	; select bank0
  6469  0240  0820               	movf	___aomod@divisor,w
  6470  0241  0421               	iorwf	___aomod@divisor+1,w
  6471  0242  0422               	iorwf	___aomod@divisor+2,w
  6472  0243  0423               	iorwf	___aomod@divisor+3,w
  6473  0244  0424               	iorwf	___aomod@divisor+4,w
  6474  0245  0425               	iorwf	___aomod@divisor+5,w
  6475  0246  0426               	iorwf	___aomod@divisor+6,w
  6476  0247  0427               	iorwf	___aomod@divisor+7,w
  6477  0248  1903               	skipnz
  6478  0249  2A4B               	goto	u1431
  6479  024A  2A4C               	goto	u1430
  6480  024B                     u1431:
  6481  024B  2A9F               	goto	l2076
  6482  024C                     u1430:
  6483  024C                     l2062:
  6484  024C  01F1               	clrf	___aomod@counter
  6485  024D  0AF1               	incf	___aomod@counter,f
  6486  024E  2A5B               	goto	l2068
  6487  024F                     l2064:
  6488  024F  35A0               	lslf	___aomod@divisor,f
  6489  0250  0DA1               	rlf	___aomod@divisor+1,f
  6490  0251  0DA2               	rlf	___aomod@divisor+2,f
  6491  0252  0DA3               	rlf	___aomod@divisor+3,f
  6492  0253  0DA4               	rlf	___aomod@divisor+4,f
  6493  0254  0DA5               	rlf	___aomod@divisor+5,f
  6494  0255  0DA6               	rlf	___aomod@divisor+6,f
  6495  0256  0DA7               	rlf	___aomod@divisor+7,f
  6496  0257                     l2066:
  6497  0257  3001               	movlw	1
  6498  0258  00F0               	movwf	??___aomod
  6499  0259  0870               	movf	??___aomod,w
  6500  025A  07F1               	addwf	___aomod@counter,f
  6501  025B                     l2068:
  6502  025B  1FA7               	btfss	___aomod@divisor+7,7
  6503  025C  2A5E               	goto	u1441
  6504  025D  2A5F               	goto	u1440
  6505  025E                     u1441:
  6506  025E  2A4F               	goto	l2064
  6507  025F                     u1440:
  6508  025F                     l2070:
  6509  025F  0827               	movf	___aomod@divisor+7,w
  6510  0260  022F               	subwf	___aomod@dividend+7,w
  6511  0261  1D03               	skipz
  6512  0262  2A7D               	goto	u1455
  6513  0263  0826               	movf	___aomod@divisor+6,w
  6514  0264  022E               	subwf	___aomod@dividend+6,w
  6515  0265  1D03               	skipz
  6516  0266  2A7D               	goto	u1455
  6517  0267  0825               	movf	___aomod@divisor+5,w
  6518  0268  022D               	subwf	___aomod@dividend+5,w
  6519  0269  1D03               	skipz
  6520  026A  2A7D               	goto	u1455
  6521  026B  0824               	movf	___aomod@divisor+4,w
  6522  026C  022C               	subwf	___aomod@dividend+4,w
  6523  026D  1D03               	skipz
  6524  026E  2A7D               	goto	u1455
  6525  026F  0823               	movf	___aomod@divisor+3,w
  6526  0270  022B               	subwf	___aomod@dividend+3,w
  6527  0271  1D03               	skipz
  6528  0272  2A7D               	goto	u1455
  6529  0273  0822               	movf	___aomod@divisor+2,w
  6530  0274  022A               	subwf	___aomod@dividend+2,w
  6531  0275  1D03               	skipz
  6532  0276  2A7D               	goto	u1455
  6533  0277  0821               	movf	___aomod@divisor+1,w
  6534  0278  0229               	subwf	___aomod@dividend+1,w
  6535  0279  1D03               	skipz
  6536  027A  2A7D               	goto	u1455
  6537  027B  0820               	movf	___aomod@divisor,w
  6538  027C  0228               	subwf	___aomod@dividend,w
  6539  027D                     u1455:
  6540  027D  1C03               	skipc
  6541  027E  2A80               	goto	u1451
  6542  027F  2A81               	goto	u1450
  6543  0280                     u1451:
  6544  0280  2A91               	goto	l2074
  6545  0281                     u1450:
  6546  0281                     l2072:
  6547  0281  0820               	movf	___aomod@divisor,w
  6548  0282  02A8               	subwf	___aomod@dividend,f
  6549  0283  0821               	movf	___aomod@divisor+1,w
  6550  0284  3BA9               	subwfb	___aomod@dividend+1,f
  6551  0285  0822               	movf	___aomod@divisor+2,w
  6552  0286  3BAA               	subwfb	___aomod@dividend+2,f
  6553  0287  0823               	movf	___aomod@divisor+3,w
  6554  0288  3BAB               	subwfb	___aomod@dividend+3,f
  6555  0289  0824               	movf	___aomod@divisor+4,w
  6556  028A  3BAC               	subwfb	___aomod@dividend+4,f
  6557  028B  0825               	movf	___aomod@divisor+5,w
  6558  028C  3BAD               	subwfb	___aomod@dividend+5,f
  6559  028D  0826               	movf	___aomod@divisor+6,w
  6560  028E  3BAE               	subwfb	___aomod@dividend+6,f
  6561  028F  0827               	movf	___aomod@divisor+7,w
  6562  0290  3BAF               	subwfb	___aomod@dividend+7,f
  6563  0291                     l2074:
  6564  0291  36A7               	lsrf	___aomod@divisor+7,f
  6565  0292  0CA6               	rrf	___aomod@divisor+6,f
  6566  0293  0CA5               	rrf	___aomod@divisor+5,f
  6567  0294  0CA4               	rrf	___aomod@divisor+4,f
  6568  0295  0CA3               	rrf	___aomod@divisor+3,f
  6569  0296  0CA2               	rrf	___aomod@divisor+2,f
  6570  0297  0CA1               	rrf	___aomod@divisor+1,f
  6571  0298  0CA0               	rrf	___aomod@divisor,f
  6572  0299  3001               	movlw	1
  6573  029A  02F1               	subwf	___aomod@counter,f
  6574  029B  1D03               	btfss	3,2
  6575  029C  2A9E               	goto	u1461
  6576  029D  2A9F               	goto	u1460
  6577  029E                     u1461:
  6578  029E  2A5F               	goto	l2070
  6579  029F                     u1460:
  6580  029F                     l2076:
  6581  029F  0872               	movf	___aomod@sign,w
  6582  02A0  1903               	btfsc	3,2
  6583  02A1  2AA3               	goto	u1471
  6584  02A2  2AA4               	goto	u1470
  6585  02A3                     u1471:
  6586  02A3  2AC2               	goto	l529
  6587  02A4                     u1470:
  6588  02A4                     l2078:
  6589  02A4  09A8               	comf	___aomod@dividend,f
  6590  02A5  09A9               	comf	___aomod@dividend+1,f
  6591  02A6  09AA               	comf	___aomod@dividend+2,f
  6592  02A7  09AB               	comf	___aomod@dividend+3,f
  6593  02A8  09AC               	comf	___aomod@dividend+4,f
  6594  02A9  09AD               	comf	___aomod@dividend+5,f
  6595  02AA  09AE               	comf	___aomod@dividend+6,f
  6596  02AB  09AF               	comf	___aomod@dividend+7,f
  6597  02AC  0AA8               	incf	___aomod@dividend,f
  6598  02AD  1D03               	skipz
  6599  02AE  2AC2               	goto	u148lld
  6600  02AF  0AA9               	incf	___aomod@dividend+1,f
  6601  02B0  1D03               	skipz
  6602  02B1  2AC2               	goto	u148lld
  6603  02B2  0AAA               	incf	___aomod@dividend+2,f
  6604  02B3  1D03               	skipz
  6605  02B4  2AC2               	goto	u148lld
  6606  02B5  0AAB               	incf	___aomod@dividend+3,f
  6607  02B6  1D03               	skipz
  6608  02B7  2AC2               	goto	u148lld
  6609  02B8  0AAC               	incf	___aomod@dividend+4,f
  6610  02B9  1D03               	skipz
  6611  02BA  2AC2               	goto	u148lld
  6612  02BB  0AAD               	incf	___aomod@dividend+5,f
  6613  02BC  1D03               	skipz
  6614  02BD  2AC2               	goto	u148lld
  6615  02BE  0AAE               	incf	___aomod@dividend+6,f
  6616  02BF  1D03               	skipz
  6617  02C0  2AC2               	goto	u148lld
  6618  02C1  0AAF               	incf	___aomod@dividend+7,f
  6619  02C2                     u148lld:
  6620  02C2                     l529:
  6621  02C2  0020               	movlb	0	; select bank0
  6622  02C3  0828               	movf	___aomod@dividend,w
  6623  02C4  00A0               	movwf	?___aomod
  6624  02C5  0829               	movf	___aomod@dividend+1,w
  6625  02C6  00A1               	movwf	?___aomod+1
  6626  02C7  082A               	movf	___aomod@dividend+2,w
  6627  02C8  00A2               	movwf	?___aomod+2
  6628  02C9  082B               	movf	___aomod@dividend+3,w
  6629  02CA  00A3               	movwf	?___aomod+3
  6630  02CB  082C               	movf	___aomod@dividend+4,w
  6631  02CC  00A4               	movwf	?___aomod+4
  6632  02CD  082D               	movf	___aomod@dividend+5,w
  6633  02CE  00A5               	movwf	?___aomod+5
  6634  02CF  082E               	movf	___aomod@dividend+6,w
  6635  02D0  00A6               	movwf	?___aomod+6
  6636  02D1  082F               	movf	___aomod@dividend+7,w
  6637  02D2  00A7               	movwf	?___aomod+7
  6638  02D3                     l530:
  6639  02D3  0008               	return
  6640  02D4                     __end_of___aomod:
  6641                           
  6642                           	psect	text24
  6643  03C0                     __ptext24:	
  6644 ;; *************** function ___aodiv *****************
  6645 ;; Defined at:
  6646 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  divisor         8    0[BANK0 ] long long 
  6649 ;;  dividend        8    8[BANK0 ] long long 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  quotient        8    3[COMMON] long long 
  6652 ;;  sign            1    2[COMMON] unsigned char 
  6653 ;;  counter         1    1[COMMON] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  8    0[BANK0 ] long long 
  6656 ;; Registers used:
  6657 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6663 ;;      Params:         0      16       0       0       0       0
  6664 ;;      Locals:        10       0       0       0       0       0
  6665 ;;      Temps:          1       0       0       0       0       0
  6666 ;;      Totals:        11      16       0       0       0       0
  6667 ;;Total ram usage:       27 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_dtoa
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           
  6677                           ;psect for function ___aodiv
  6678  03C0                     ___aodiv:
  6679  03C0                     l2012:	
  6680                           ;incstack = 0
  6681                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6682                           
  6683  03C0  01F2               	clrf	___aodiv@sign
  6684  03C1                     l2014:
  6685  03C1  3020               	movlw	low ___aodiv@divisor
  6686  03C2  0086               	movwf	6
  6687  03C3  3000               	movlw	high ___aodiv@divisor
  6688  03C4  0087               	movwf	7
  6689  03C5  3F47               	moviw [7]fsr1
  6690  03C6  00F0               	movwf	??___aodiv
  6691  03C7  1FF0               	btfss	??___aodiv,7
  6692  03C8  2BCA               	goto	u1281
  6693  03C9  2BCB               	goto	u1280
  6694  03CA                     u1281:
  6695  03CA  2BEC               	goto	l2018
  6696  03CB                     u1280:
  6697  03CB                     l2016:
  6698  03CB  0020               	movlb	0	; select bank0
  6699  03CC  09A0               	comf	___aodiv@divisor,f
  6700  03CD  09A1               	comf	___aodiv@divisor+1,f
  6701  03CE  09A2               	comf	___aodiv@divisor+2,f
  6702  03CF  09A3               	comf	___aodiv@divisor+3,f
  6703  03D0  09A4               	comf	___aodiv@divisor+4,f
  6704  03D1  09A5               	comf	___aodiv@divisor+5,f
  6705  03D2  09A6               	comf	___aodiv@divisor+6,f
  6706  03D3  09A7               	comf	___aodiv@divisor+7,f
  6707  03D4  0AA0               	incf	___aodiv@divisor,f
  6708  03D5  1D03               	skipz
  6709  03D6  2BEA               	goto	u129lld
  6710  03D7  0AA1               	incf	___aodiv@divisor+1,f
  6711  03D8  1D03               	skipz
  6712  03D9  2BEA               	goto	u129lld
  6713  03DA  0AA2               	incf	___aodiv@divisor+2,f
  6714  03DB  1D03               	skipz
  6715  03DC  2BEA               	goto	u129lld
  6716  03DD  0AA3               	incf	___aodiv@divisor+3,f
  6717  03DE  1D03               	skipz
  6718  03DF  2BEA               	goto	u129lld
  6719  03E0  0AA4               	incf	___aodiv@divisor+4,f
  6720  03E1  1D03               	skipz
  6721  03E2  2BEA               	goto	u129lld
  6722  03E3  0AA5               	incf	___aodiv@divisor+5,f
  6723  03E4  1D03               	skipz
  6724  03E5  2BEA               	goto	u129lld
  6725  03E6  0AA6               	incf	___aodiv@divisor+6,f
  6726  03E7  1D03               	skipz
  6727  03E8  2BEA               	goto	u129lld
  6728  03E9  0AA7               	incf	___aodiv@divisor+7,f
  6729  03EA                     u129lld:
  6730  03EA  01F2               	clrf	___aodiv@sign
  6731  03EB  0AF2               	incf	___aodiv@sign,f
  6732  03EC                     l2018:
  6733  03EC  3028               	movlw	low ___aodiv@dividend
  6734  03ED  0086               	movwf	6
  6735  03EE  3000               	movlw	high ___aodiv@dividend
  6736  03EF  0087               	movwf	7
  6737  03F0  3F47               	moviw [7]fsr1
  6738  03F1  00F0               	movwf	??___aodiv
  6739  03F2  1FF0               	btfss	??___aodiv,7
  6740  03F3  2BF5               	goto	u1301
  6741  03F4  2BF6               	goto	u1300
  6742  03F5                     u1301:
  6743  03F5  2C19               	goto	l2024
  6744  03F6                     u1300:
  6745  03F6                     l2020:
  6746  03F6  0020               	movlb	0	; select bank0
  6747  03F7  09A8               	comf	___aodiv@dividend,f
  6748  03F8  09A9               	comf	___aodiv@dividend+1,f
  6749  03F9  09AA               	comf	___aodiv@dividend+2,f
  6750  03FA  09AB               	comf	___aodiv@dividend+3,f
  6751  03FB  09AC               	comf	___aodiv@dividend+4,f
  6752  03FC  09AD               	comf	___aodiv@dividend+5,f
  6753  03FD  09AE               	comf	___aodiv@dividend+6,f
  6754  03FE  09AF               	comf	___aodiv@dividend+7,f
  6755  03FF  0AA8               	incf	___aodiv@dividend,f
  6756  0400  1D03               	skipz
  6757  0401  2C15               	goto	u131lld
  6758  0402  0AA9               	incf	___aodiv@dividend+1,f
  6759  0403  1D03               	skipz
  6760  0404  2C15               	goto	u131lld
  6761  0405  0AAA               	incf	___aodiv@dividend+2,f
  6762  0406  1D03               	skipz
  6763  0407  2C15               	goto	u131lld
  6764  0408  0AAB               	incf	___aodiv@dividend+3,f
  6765  0409  1D03               	skipz
  6766  040A  2C15               	goto	u131lld
  6767  040B  0AAC               	incf	___aodiv@dividend+4,f
  6768  040C  1D03               	skipz
  6769  040D  2C15               	goto	u131lld
  6770  040E  0AAD               	incf	___aodiv@dividend+5,f
  6771  040F  1D03               	skipz
  6772  0410  2C15               	goto	u131lld
  6773  0411  0AAE               	incf	___aodiv@dividend+6,f
  6774  0412  1D03               	skipz
  6775  0413  2C15               	goto	u131lld
  6776  0414  0AAF               	incf	___aodiv@dividend+7,f
  6777  0415                     u131lld:
  6778  0415                     l2022:
  6779  0415  3001               	movlw	1
  6780  0416  00F0               	movwf	??___aodiv
  6781  0417  0870               	movf	??___aodiv,w
  6782  0418  06F2               	xorwf	___aodiv@sign,f
  6783  0419                     l2024:
  6784  0419  3073               	movlw	low ___aodiv@quotient
  6785  041A  0086               	movwf	6
  6786  041B  3000               	movlw	high ___aodiv@quotient
  6787  041C  0087               	movwf	7
  6788  041D  3008               	movlw	8
  6789  041E  00F0               	movwf	??___aodiv
  6790  041F  3000               	movlw	0
  6791  0420                     u1320:
  6792  0420  001E               	movwi fsr1++
  6793  0421  0BF0               	decfsz	??___aodiv,f
  6794  0422  2C20               	goto	u1320
  6795  0423                     l2026:
  6796  0423  0020               	movlb	0	; select bank0
  6797  0424  0820               	movf	___aodiv@divisor,w
  6798  0425  0421               	iorwf	___aodiv@divisor+1,w
  6799  0426  0422               	iorwf	___aodiv@divisor+2,w
  6800  0427  0423               	iorwf	___aodiv@divisor+3,w
  6801  0428  0424               	iorwf	___aodiv@divisor+4,w
  6802  0429  0425               	iorwf	___aodiv@divisor+5,w
  6803  042A  0426               	iorwf	___aodiv@divisor+6,w
  6804  042B  0427               	iorwf	___aodiv@divisor+7,w
  6805  042C  1903               	skipnz
  6806  042D  2C2F               	goto	u1331
  6807  042E  2C30               	goto	u1330
  6808  042F                     u1331:
  6809  042F  2C8C               	goto	l2046
  6810  0430                     u1330:
  6811  0430                     l2028:
  6812  0430  01F1               	clrf	___aodiv@counter
  6813  0431  0AF1               	incf	___aodiv@counter,f
  6814  0432  2C3F               	goto	l2034
  6815  0433                     l2030:
  6816  0433  35A0               	lslf	___aodiv@divisor,f
  6817  0434  0DA1               	rlf	___aodiv@divisor+1,f
  6818  0435  0DA2               	rlf	___aodiv@divisor+2,f
  6819  0436  0DA3               	rlf	___aodiv@divisor+3,f
  6820  0437  0DA4               	rlf	___aodiv@divisor+4,f
  6821  0438  0DA5               	rlf	___aodiv@divisor+5,f
  6822  0439  0DA6               	rlf	___aodiv@divisor+6,f
  6823  043A  0DA7               	rlf	___aodiv@divisor+7,f
  6824  043B                     l2032:
  6825  043B  3001               	movlw	1
  6826  043C  00F0               	movwf	??___aodiv
  6827  043D  0870               	movf	??___aodiv,w
  6828  043E  07F1               	addwf	___aodiv@counter,f
  6829  043F                     l2034:
  6830  043F  1FA7               	btfss	___aodiv@divisor+7,7
  6831  0440  2C42               	goto	u1341
  6832  0441  2C43               	goto	u1340
  6833  0442                     u1341:
  6834  0442  2C33               	goto	l2030
  6835  0443                     u1340:
  6836  0443                     l2036:
  6837  0443  35F3               	lslf	___aodiv@quotient,f
  6838  0444  0DF4               	rlf	___aodiv@quotient+1,f
  6839  0445  0DF5               	rlf	___aodiv@quotient+2,f
  6840  0446  0DF6               	rlf	___aodiv@quotient+3,f
  6841  0447  0DF7               	rlf	___aodiv@quotient+4,f
  6842  0448  0DF8               	rlf	___aodiv@quotient+5,f
  6843  0449  0DF9               	rlf	___aodiv@quotient+6,f
  6844  044A  0DFA               	rlf	___aodiv@quotient+7,f
  6845  044B                     l2038:
  6846  044B  0827               	movf	___aodiv@divisor+7,w
  6847  044C  022F               	subwf	___aodiv@dividend+7,w
  6848  044D  1D03               	skipz
  6849  044E  2C69               	goto	u1355
  6850  044F  0826               	movf	___aodiv@divisor+6,w
  6851  0450  022E               	subwf	___aodiv@dividend+6,w
  6852  0451  1D03               	skipz
  6853  0452  2C69               	goto	u1355
  6854  0453  0825               	movf	___aodiv@divisor+5,w
  6855  0454  022D               	subwf	___aodiv@dividend+5,w
  6856  0455  1D03               	skipz
  6857  0456  2C69               	goto	u1355
  6858  0457  0824               	movf	___aodiv@divisor+4,w
  6859  0458  022C               	subwf	___aodiv@dividend+4,w
  6860  0459  1D03               	skipz
  6861  045A  2C69               	goto	u1355
  6862  045B  0823               	movf	___aodiv@divisor+3,w
  6863  045C  022B               	subwf	___aodiv@dividend+3,w
  6864  045D  1D03               	skipz
  6865  045E  2C69               	goto	u1355
  6866  045F  0822               	movf	___aodiv@divisor+2,w
  6867  0460  022A               	subwf	___aodiv@dividend+2,w
  6868  0461  1D03               	skipz
  6869  0462  2C69               	goto	u1355
  6870  0463  0821               	movf	___aodiv@divisor+1,w
  6871  0464  0229               	subwf	___aodiv@dividend+1,w
  6872  0465  1D03               	skipz
  6873  0466  2C69               	goto	u1355
  6874  0467  0820               	movf	___aodiv@divisor,w
  6875  0468  0228               	subwf	___aodiv@dividend,w
  6876  0469                     u1355:
  6877  0469  1C03               	skipc
  6878  046A  2C6C               	goto	u1351
  6879  046B  2C6D               	goto	u1350
  6880  046C                     u1351:
  6881  046C  2C7E               	goto	l2044
  6882  046D                     u1350:
  6883  046D                     l2040:
  6884  046D  0820               	movf	___aodiv@divisor,w
  6885  046E  02A8               	subwf	___aodiv@dividend,f
  6886  046F  0821               	movf	___aodiv@divisor+1,w
  6887  0470  3BA9               	subwfb	___aodiv@dividend+1,f
  6888  0471  0822               	movf	___aodiv@divisor+2,w
  6889  0472  3BAA               	subwfb	___aodiv@dividend+2,f
  6890  0473  0823               	movf	___aodiv@divisor+3,w
  6891  0474  3BAB               	subwfb	___aodiv@dividend+3,f
  6892  0475  0824               	movf	___aodiv@divisor+4,w
  6893  0476  3BAC               	subwfb	___aodiv@dividend+4,f
  6894  0477  0825               	movf	___aodiv@divisor+5,w
  6895  0478  3BAD               	subwfb	___aodiv@dividend+5,f
  6896  0479  0826               	movf	___aodiv@divisor+6,w
  6897  047A  3BAE               	subwfb	___aodiv@dividend+6,f
  6898  047B  0827               	movf	___aodiv@divisor+7,w
  6899  047C  3BAF               	subwfb	___aodiv@dividend+7,f
  6900  047D                     l2042:
  6901  047D  1473               	bsf	___aodiv@quotient,0
  6902  047E                     l2044:
  6903  047E  36A7               	lsrf	___aodiv@divisor+7,f
  6904  047F  0CA6               	rrf	___aodiv@divisor+6,f
  6905  0480  0CA5               	rrf	___aodiv@divisor+5,f
  6906  0481  0CA4               	rrf	___aodiv@divisor+4,f
  6907  0482  0CA3               	rrf	___aodiv@divisor+3,f
  6908  0483  0CA2               	rrf	___aodiv@divisor+2,f
  6909  0484  0CA1               	rrf	___aodiv@divisor+1,f
  6910  0485  0CA0               	rrf	___aodiv@divisor,f
  6911  0486  3001               	movlw	1
  6912  0487  02F1               	subwf	___aodiv@counter,f
  6913  0488  1D03               	btfss	3,2
  6914  0489  2C8B               	goto	u1361
  6915  048A  2C8C               	goto	u1360
  6916  048B                     u1361:
  6917  048B  2C43               	goto	l2036
  6918  048C                     u1360:
  6919  048C                     l2046:
  6920  048C  0872               	movf	___aodiv@sign,w
  6921  048D  1903               	btfsc	3,2
  6922  048E  2C90               	goto	u1371
  6923  048F  2C91               	goto	u1370
  6924  0490                     u1371:
  6925  0490  2CAF               	goto	l516
  6926  0491                     u1370:
  6927  0491                     l2048:
  6928  0491  09F3               	comf	___aodiv@quotient,f
  6929  0492  09F4               	comf	___aodiv@quotient+1,f
  6930  0493  09F5               	comf	___aodiv@quotient+2,f
  6931  0494  09F6               	comf	___aodiv@quotient+3,f
  6932  0495  09F7               	comf	___aodiv@quotient+4,f
  6933  0496  09F8               	comf	___aodiv@quotient+5,f
  6934  0497  09F9               	comf	___aodiv@quotient+6,f
  6935  0498  09FA               	comf	___aodiv@quotient+7,f
  6936  0499  0AF3               	incf	___aodiv@quotient,f
  6937  049A  1D03               	skipz
  6938  049B  2CAF               	goto	u138lld
  6939  049C  0AF4               	incf	___aodiv@quotient+1,f
  6940  049D  1D03               	skipz
  6941  049E  2CAF               	goto	u138lld
  6942  049F  0AF5               	incf	___aodiv@quotient+2,f
  6943  04A0  1D03               	skipz
  6944  04A1  2CAF               	goto	u138lld
  6945  04A2  0AF6               	incf	___aodiv@quotient+3,f
  6946  04A3  1D03               	skipz
  6947  04A4  2CAF               	goto	u138lld
  6948  04A5  0AF7               	incf	___aodiv@quotient+4,f
  6949  04A6  1D03               	skipz
  6950  04A7  2CAF               	goto	u138lld
  6951  04A8  0AF8               	incf	___aodiv@quotient+5,f
  6952  04A9  1D03               	skipz
  6953  04AA  2CAF               	goto	u138lld
  6954  04AB  0AF9               	incf	___aodiv@quotient+6,f
  6955  04AC  1D03               	skipz
  6956  04AD  2CAF               	goto	u138lld
  6957  04AE  0AFA               	incf	___aodiv@quotient+7,f
  6958  04AF                     u138lld:
  6959  04AF                     l516:
  6960  04AF  0873               	movf	___aodiv@quotient,w
  6961  04B0  0020               	movlb	0	; select bank0
  6962  04B1  00A0               	movwf	?___aodiv
  6963  04B2  0874               	movf	___aodiv@quotient+1,w
  6964  04B3  00A1               	movwf	?___aodiv+1
  6965  04B4  0875               	movf	___aodiv@quotient+2,w
  6966  04B5  00A2               	movwf	?___aodiv+2
  6967  04B6  0876               	movf	___aodiv@quotient+3,w
  6968  04B7  00A3               	movwf	?___aodiv+3
  6969  04B8  0877               	movf	___aodiv@quotient+4,w
  6970  04B9  00A4               	movwf	?___aodiv+4
  6971  04BA  0878               	movf	___aodiv@quotient+5,w
  6972  04BB  00A5               	movwf	?___aodiv+5
  6973  04BC  0879               	movf	___aodiv@quotient+6,w
  6974  04BD  00A6               	movwf	?___aodiv+6
  6975  04BE  087A               	movf	___aodiv@quotient+7,w
  6976  04BF  00A7               	movwf	?___aodiv+7
  6977  04C0                     l517:
  6978  04C0  0008               	return
  6979  04C1                     __end_of___aodiv:
  6980                           
  6981                           	psect	text25
  6982  0061                     __ptext25:	
  6983 ;; *************** function _atoi *****************
  6984 ;; Defined at:
  6985 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  s               2   10[COMMON] PTR const unsigned char 
  6988 ;;		 -> STR_6(12), STR_5(15), STR_4(17), STR_3(18), 
  6989 ;;		 -> STR_2(18), STR_1(18), 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  n               2   11[BANK0 ] int 
  6992 ;;  neg             2    4[BANK0 ] int 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  2   10[COMMON] int 
  6995 ;; Registers used:
  6996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7002 ;;      Params:         2       0       0       0       0       0
  7003 ;;      Locals:         0       9       0       0       0       0
  7004 ;;      Temps:          0       4       0       0       0       0
  7005 ;;      Totals:         2      13       0       0       0       0
  7006 ;;Total ram usage:       15 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    1
  7009 ;; This function calls:
  7010 ;;		___wmul
  7011 ;;		_isdigit
  7012 ;;		_isspace
  7013 ;; This function is called by:
  7014 ;;		_vfpfcnvrt
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _atoi
  7020  0061                     _atoi:
  7021  0061                     l2190:	
  7022                           ;incstack = 0
  7023                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7024                           
  7025  0061  0020               	movlb	0	; select bank0
  7026  0062  01AB               	clrf	atoi@n
  7027  0063  01AC               	clrf	atoi@n+1
  7028  0064  01A4               	clrf	atoi@neg
  7029  0065  01A5               	clrf	atoi@neg+1
  7030  0066  286B               	goto	l2194
  7031  0067                     l2192:
  7032  0067  3001               	movlw	1
  7033  0068  07FA               	addwf	atoi@s,f
  7034  0069  3000               	movlw	0
  7035  006A  3DFB               	addwfc	atoi@s+1,f
  7036  006B                     l2194:
  7037  006B  01AA               	clrf	_atoi$1076
  7038  006C  0AAA               	incf	_atoi$1076,f
  7039  006D                     l2196:
  7040  006D  087A               	movf	atoi@s,w
  7041  006E  0084               	movwf	4
  7042  006F  087B               	movf	atoi@s+1,w
  7043  0070  0085               	movwf	5
  7044  0071  0012               	moviw fsr0++
  7045  0072  3A20               	xorlw	32
  7046  0073  1903               	btfsc	3,2
  7047  0074  2876               	goto	u1781
  7048  0075  2877               	goto	u1780
  7049  0076                     u1781:
  7050  0076  288C               	goto	l2202
  7051  0077                     u1780:
  7052  0077                     l2198:
  7053  0077  087A               	movf	atoi@s,w
  7054  0078  0084               	movwf	4
  7055  0079  087B               	movf	atoi@s+1,w
  7056  007A  0085               	movwf	5
  7057  007B  0800               	movf	0,w	;code access
  7058  007C  3EF7               	addlw	247
  7059  007D  00A0               	movwf	??_atoi
  7060  007E  30FF               	movlw	255
  7061  007F  1803               	skipnc
  7062  0080  3000               	movlw	0
  7063  0081  00A1               	movwf	??_atoi+1
  7064  0082  3000               	movlw	0
  7065  0083  0221               	subwf	??_atoi+1,w
  7066  0084  3005               	movlw	5
  7067  0085  1903               	skipnz
  7068  0086  0220               	subwf	??_atoi,w
  7069  0087  1C03               	skipc
  7070  0088  288A               	goto	u1791
  7071  0089  288B               	goto	u1790
  7072  008A                     u1791:
  7073  008A  288C               	goto	l2202
  7074  008B                     u1790:
  7075  008B                     l2200:
  7076  008B  01AA               	clrf	_atoi$1076
  7077  008C                     l2202:
  7078  008C  082A               	movf	_atoi$1076,w
  7079  008D  00A0               	movwf	??_atoi
  7080  008E  01A1               	clrf	??_atoi+1
  7081  008F  0820               	movf	??_atoi,w
  7082  0090  00A6               	movwf	_atoi$1075
  7083  0091  0821               	movf	??_atoi+1,w
  7084  0092  00A7               	movwf	_atoi$1075+1
  7085  0093                     l2206:
  7086  0093  0826               	movf	_atoi$1075,w
  7087  0094  0427               	iorwf	_atoi$1075+1,w
  7088  0095  1D03               	btfss	3,2
  7089  0096  2898               	goto	u1801
  7090  0097  2899               	goto	u1800
  7091  0098                     u1801:
  7092  0098  2867               	goto	l2192
  7093  0099                     u1800:
  7094  0099  28A3               	goto	l2210
  7095  009A                     l2208:
  7096  009A  3001               	movlw	1
  7097  009B  00A4               	movwf	atoi@neg
  7098  009C  3000               	movlw	0
  7099  009D  00A5               	movwf	atoi@neg+1
  7100  009E                     l1002:
  7101  009E  3001               	movlw	1
  7102  009F  07FA               	addwf	atoi@s,f
  7103  00A0  3000               	movlw	0
  7104  00A1  3DFB               	addwfc	atoi@s+1,f
  7105  00A2  28D7               	goto	l2216
  7106  00A3                     l2210:
  7107  00A3  087A               	movf	atoi@s,w
  7108  00A4  0084               	movwf	4
  7109  00A5  087B               	movf	atoi@s+1,w
  7110  00A6  0085               	movwf	5
  7111  00A7  0800               	movf	0,w	;code access
  7112  00A8  00A0               	movwf	??_atoi
  7113  00A9  01A1               	clrf	??_atoi+1
  7114                           
  7115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7116                           ; Switch size 1, requested type "simple"
  7117                           ; Number of cases is 1, Range of values is 0 to 0
  7118                           ; switch strategies available:
  7119                           ; Name         Instructions Cycles
  7120                           ; simple_byte            4     3 (average)
  7121                           ; direct_byte            8     6 (fixed)
  7122                           ; jumptable            260     6 (fixed)
  7123                           ;	Chosen strategy is simple_byte
  7124  00AA  0821               	movf	??_atoi+1,w
  7125  00AB  3A00               	xorlw	0	; case 0
  7126  00AC  1903               	skipnz
  7127  00AD  28AF               	goto	l3014
  7128  00AE  28D7               	goto	l2216
  7129  00AF                     l3014:
  7130                           
  7131                           ; Switch size 1, requested type "simple"
  7132                           ; Number of cases is 2, Range of values is 43 to 45
  7133                           ; switch strategies available:
  7134                           ; Name         Instructions Cycles
  7135                           ; simple_byte            7     4 (average)
  7136                           ; direct_byte           15     9 (fixed)
  7137                           ; jumptable            263     9 (fixed)
  7138                           ;	Chosen strategy is simple_byte
  7139  00AF  0820               	movf	??_atoi,w
  7140  00B0  3A2B               	xorlw	43	; case 43
  7141  00B1  1903               	skipnz
  7142  00B2  289E               	goto	l1002
  7143  00B3  3A06               	xorlw	6	; case 45
  7144  00B4  1903               	skipnz
  7145  00B5  289A               	goto	l2208
  7146  00B6  28D7               	goto	l2216
  7147  00B7                     l2212:
  7148  00B7  087A               	movf	atoi@s,w
  7149  00B8  0084               	movwf	4
  7150  00B9  087B               	movf	atoi@s+1,w
  7151  00BA  0085               	movwf	5
  7152  00BB  0800               	movf	0,w	;code access
  7153  00BC  00A0               	movwf	??_atoi
  7154  00BD  082C               	movf	atoi@n+1,w
  7155  00BE  00F5               	movwf	___wmul@multiplier+1
  7156  00BF  082B               	movf	atoi@n,w
  7157  00C0  00F4               	movwf	___wmul@multiplier
  7158  00C1  300A               	movlw	10
  7159  00C2  00F6               	movwf	___wmul@multiplicand
  7160  00C3  3000               	movlw	0
  7161  00C4  00F7               	movwf	___wmul@multiplicand+1
  7162  00C5  318A  2269  3180   	fcall	___wmul
  7163  00C8  0875               	movf	?___wmul+1,w
  7164  00C9  0020               	movlb	0	; select bank0
  7165  00CA  00A2               	movwf	??_atoi+2
  7166  00CB  0820               	movf	??_atoi,w
  7167  00CC  0274               	subwf	?___wmul,w
  7168  00CD  00A1               	movwf	??_atoi+1
  7169  00CE  1C03               	skipc
  7170  00CF  03A2               	decf	??_atoi+2,f
  7171  00D0  0821               	movf	??_atoi+1,w
  7172  00D1  3E30               	addlw	48
  7173  00D2  00AB               	movwf	atoi@n
  7174  00D3  3000               	movlw	0
  7175  00D4  3D22               	addwfc	??_atoi+2,w
  7176  00D5  00AC               	movwf	atoi@n+1
  7177  00D6  289E               	goto	l1002
  7178  00D7                     l2216:
  7179  00D7  087A               	movf	atoi@s,w
  7180  00D8  0084               	movwf	4
  7181  00D9  087B               	movf	atoi@s+1,w
  7182  00DA  0085               	movwf	5
  7183  00DB  0800               	movf	0,w	;code access
  7184  00DC  3ED0               	addlw	208
  7185  00DD  00A0               	movwf	??_atoi
  7186  00DE  30FF               	movlw	255
  7187  00DF  1803               	skipnc
  7188  00E0  3000               	movlw	0
  7189  00E1  00A1               	movwf	??_atoi+1
  7190  00E2  3000               	movlw	0
  7191  00E3  0221               	subwf	??_atoi+1,w
  7192  00E4  300A               	movlw	10
  7193  00E5  1903               	skipnz
  7194  00E6  0220               	subwf	??_atoi,w
  7195  00E7  1C03               	skipc
  7196  00E8  28EA               	goto	u1811
  7197  00E9  28EC               	goto	u1810
  7198  00EA                     u1811:
  7199  00EA  3001               	movlw	1
  7200  00EB  28ED               	goto	u1820
  7201  00EC                     u1810:
  7202  00EC  3000               	movlw	0
  7203  00ED                     u1820:
  7204  00ED  00A2               	movwf	??_atoi+2
  7205  00EE  01A3               	clrf	??_atoi+3
  7206  00EF  0822               	movf	??_atoi+2,w
  7207  00F0  00A8               	movwf	_atoi$1077
  7208  00F1  0823               	movf	??_atoi+3,w
  7209  00F2  00A9               	movwf	_atoi$1077+1
  7210  00F3                     l2220:
  7211  00F3  0828               	movf	_atoi$1077,w
  7212  00F4  0429               	iorwf	_atoi$1077+1,w
  7213  00F5  1D03               	btfss	3,2
  7214  00F6  28F8               	goto	u1831
  7215  00F7  28F9               	goto	u1830
  7216  00F8                     u1831:
  7217  00F8  28B7               	goto	l2212
  7218  00F9                     u1830:
  7219  00F9                     l2222:
  7220  00F9  0824               	movf	atoi@neg,w
  7221  00FA  0425               	iorwf	atoi@neg+1,w
  7222  00FB  1D03               	btfss	3,2
  7223  00FC  28FE               	goto	u1841
  7224  00FD  28FF               	goto	u1840
  7225  00FE                     u1841:
  7226  00FE  290B               	goto	l2226
  7227  00FF                     u1840:
  7228  00FF                     l2224:
  7229  00FF  092B               	comf	atoi@n,w
  7230  0100  00A0               	movwf	??_atoi
  7231  0101  092C               	comf	atoi@n+1,w
  7232  0102  00A1               	movwf	??_atoi+1
  7233  0103  0AA0               	incf	??_atoi,f
  7234  0104  1903               	skipnz
  7235  0105  0AA1               	incf	??_atoi+1,f
  7236  0106  0820               	movf	??_atoi,w
  7237  0107  00FA               	movwf	?_atoi
  7238  0108  0821               	movf	??_atoi+1,w
  7239  0109  00FB               	movwf	?_atoi+1
  7240  010A  290F               	goto	l1015
  7241  010B                     l2226:
  7242  010B  082C               	movf	atoi@n+1,w
  7243  010C  00FB               	movwf	?_atoi+1
  7244  010D  082B               	movf	atoi@n,w
  7245  010E  00FA               	movwf	?_atoi
  7246  010F                     l1015:
  7247  010F  0008               	return
  7248  0110                     __end_of_atoi:
  7249                           
  7250                           	psect	text26
  7251  0A88                     __ptext26:	
  7252 ;; *************** function _isspace *****************
  7253 ;; Defined at:
  7254 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  c               2    0[COMMON] int 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  2    0[COMMON] int 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7268 ;;      Params:         2       0       0       0       0       0
  7269 ;;      Locals:         1       0       0       0       0       0
  7270 ;;      Temps:          2       0       0       0       0       0
  7271 ;;      Totals:         5       0       0       0       0       0
  7272 ;;Total ram usage:        5 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_atoi
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           
  7282                           ;psect for function _isspace
  7283  0A88                     _isspace:
  7284  0A88                     l2110:	
  7285                           ;incstack = 0
  7286                           ; Regs used in _isspace: [wreg+status,2+status,0]
  7287                           
  7288  0A88  01F4               	clrf	_isspace$1093
  7289  0A89  0AF4               	incf	_isspace$1093,f
  7290  0A8A                     l2112:
  7291  0A8A  3020               	movlw	32
  7292  0A8B  0670               	xorwf	isspace@c,w
  7293  0A8C  0471               	iorwf	isspace@c+1,w
  7294  0A8D  1903               	btfsc	3,2
  7295  0A8E  2A90               	goto	u1561
  7296  0A8F  2A91               	goto	u1560
  7297  0A90                     u1561:
  7298  0A90  2AA1               	goto	l2118
  7299  0A91                     u1560:
  7300  0A91                     l2114:
  7301  0A91  0870               	movf	isspace@c,w
  7302  0A92  3EF7               	addlw	247
  7303  0A93  00F2               	movwf	??_isspace
  7304  0A94  30FF               	movlw	255
  7305  0A95  3D71               	addwfc	isspace@c+1,w
  7306  0A96  00F3               	movwf	??_isspace+1
  7307  0A97  3000               	movlw	0
  7308  0A98  0273               	subwf	??_isspace+1,w
  7309  0A99  3005               	movlw	5
  7310  0A9A  1903               	skipnz
  7311  0A9B  0272               	subwf	??_isspace,w
  7312  0A9C  1C03               	skipc
  7313  0A9D  2A9F               	goto	u1571
  7314  0A9E  2AA0               	goto	u1570
  7315  0A9F                     u1571:
  7316  0A9F  2AA1               	goto	l2118
  7317  0AA0                     u1570:
  7318  0AA0                     l2116:
  7319  0AA0  01F4               	clrf	_isspace$1093
  7320  0AA1                     l2118:
  7321  0AA1  0874               	movf	_isspace$1093,w
  7322  0AA2  00F2               	movwf	??_isspace
  7323  0AA3  01F3               	clrf	??_isspace+1
  7324  0AA4  0872               	movf	??_isspace,w
  7325  0AA5  00F0               	movwf	?_isspace
  7326  0AA6  0873               	movf	??_isspace+1,w
  7327  0AA7  00F1               	movwf	?_isspace+1
  7328  0AA8                     l1026:
  7329  0AA8  0008               	return
  7330  0AA9                     __end_of_isspace:
  7331                           
  7332                           	psect	text27
  7333  0A00                     __ptext27:	
  7334 ;; *************** function _isdigit *****************
  7335 ;; Defined at:
  7336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  c               2    0[COMMON] int 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  2    0[COMMON] int 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7350 ;;      Params:         2       0       0       0       0       0
  7351 ;;      Locals:         0       0       0       0       0       0
  7352 ;;      Temps:          4       0       0       0       0       0
  7353 ;;      Totals:         6       0       0       0       0       0
  7354 ;;Total ram usage:        6 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_vfpfcnvrt
  7360 ;;		_atoi
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           
  7365                           ;psect for function _isdigit
  7366  0A00                     _isdigit:
  7367  0A00                     l2106:	
  7368                           ;incstack = 0
  7369                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7370                           
  7371  0A00  0870               	movf	isdigit@c,w
  7372  0A01  3ED0               	addlw	208
  7373  0A02  00F2               	movwf	??_isdigit
  7374  0A03  30FF               	movlw	255
  7375  0A04  3D71               	addwfc	isdigit@c+1,w
  7376  0A05  00F3               	movwf	??_isdigit+1
  7377  0A06  3000               	movlw	0
  7378  0A07  0273               	subwf	??_isdigit+1,w
  7379  0A08  300A               	movlw	10
  7380  0A09  1903               	skipnz
  7381  0A0A  0272               	subwf	??_isdigit,w
  7382  0A0B  1C03               	skipc
  7383  0A0C  2A0E               	goto	u1541
  7384  0A0D  2A10               	goto	u1540
  7385  0A0E                     u1541:
  7386  0A0E  3001               	movlw	1
  7387  0A0F  2A11               	goto	u1550
  7388  0A10                     u1540:
  7389  0A10  3000               	movlw	0
  7390  0A11                     u1550:
  7391  0A11  00F4               	movwf	??_isdigit+2
  7392  0A12  01F5               	clrf	??_isdigit+3
  7393  0A13  0874               	movf	??_isdigit+2,w
  7394  0A14  00F0               	movwf	?_isdigit
  7395  0A15  0875               	movf	??_isdigit+3,w
  7396  0A16  00F1               	movwf	?_isdigit+1
  7397  0A17                     l1018:
  7398  0A17  0008               	return
  7399  0A18                     __end_of_isdigit:
  7400                           
  7401                           	psect	text28
  7402  0B41                     __ptext28:	
  7403 ;; *************** function _lcd_set_cursor *****************
  7404 ;; Defined at:
  7405 ;;		line 133 in file "lcd_lib.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  col             1    wreg     unsigned char 
  7408 ;;  row             1    8[COMMON] unsigned char 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  col             1    4[BANK0 ] unsigned char 
  7411 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  7412 ;;  cmd             1    5[BANK0 ] unsigned char 
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  1    wreg      void 
  7415 ;; Registers used:
  7416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7422 ;;      Params:         1       0       0       0       0       0
  7423 ;;      Locals:         0       6       0       0       0       0
  7424 ;;      Temps:          1       0       0       0       0       0
  7425 ;;      Totals:         2       6       0       0       0       0
  7426 ;;Total ram usage:        8 bytes
  7427 ;; Hardware stack levels used:    1
  7428 ;; Hardware stack levels required when called:    4
  7429 ;; This function calls:
  7430 ;;		_command
  7431 ;; This function is called by:
  7432 ;;		_main
  7433 ;;		_print_train
  7434 ;;		_print_remaing
  7435 ;;		_print_money
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           
  7440                           ;psect for function _lcd_set_cursor
  7441  0B41                     _lcd_set_cursor:
  7442                           
  7443                           ;incstack = 0
  7444                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7445                           ;lcd_set_cursor@col stored from wreg
  7446  0B41  0020               	movlb	0	; select bank0
  7447  0B42  00A4               	movwf	lcd_set_cursor@col
  7448  0B43                     l2498:
  7449                           
  7450                           ;lcd_lib.c: 134:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  7451  0B43  0021               	movlb	1	; select bank1
  7452  0B44  0869               	movf	(lcd_set_cursor@F2500+3)^(0+128),w
  7453  0B45  0020               	movlb	0	; select bank0
  7454  0B46  00A3               	movwf	lcd_set_cursor@row_offsets+3
  7455  0B47  0021               	movlb	1	; select bank1
  7456  0B48  0868               	movf	(lcd_set_cursor@F2500+2)^(0+128),w
  7457  0B49  0020               	movlb	0	; select bank0
  7458  0B4A  00A2               	movwf	lcd_set_cursor@row_offsets+2
  7459  0B4B  0021               	movlb	1	; select bank1
  7460  0B4C  0867               	movf	(lcd_set_cursor@F2500+1)^(0+128),w
  7461  0B4D  0020               	movlb	0	; select bank0
  7462  0B4E  00A1               	movwf	lcd_set_cursor@row_offsets+1
  7463  0B4F  0021               	movlb	1	; select bank1
  7464  0B50  0866               	movf	lcd_set_cursor@F2500^(0+128),w
  7465  0B51  0020               	movlb	0	; select bank0
  7466  0B52  00A0               	movwf	lcd_set_cursor@row_offsets
  7467                           
  7468                           ;lcd_lib.c: 135:     if(row > 2){
  7469  0B53  3003               	movlw	3
  7470  0B54  0278               	subwf	lcd_set_cursor@row,w
  7471  0B55  1C03               	skipc
  7472  0B56  2B58               	goto	u2221
  7473  0B57  2B59               	goto	u2220
  7474  0B58                     u2221:
  7475  0B58  2B5B               	goto	l2502
  7476  0B59                     u2220:
  7477  0B59                     l2500:
  7478                           
  7479                           ;lcd_lib.c: 136:         row = 2 - 1;
  7480  0B59  01F8               	clrf	lcd_set_cursor@row
  7481  0B5A  0AF8               	incf	lcd_set_cursor@row,f
  7482  0B5B                     l2502:
  7483                           
  7484                           ;lcd_lib.c: 138:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
  7485  0B5B  0878               	movf	lcd_set_cursor@row,w
  7486  0B5C  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  7487  0B5D  0086               	movwf	6
  7488  0B5E  0187               	clrf	7
  7489  0B5F  0801               	movf	1,w
  7490  0B60  0724               	addwf	lcd_set_cursor@col,w
  7491  0B61  3880               	iorlw	128
  7492  0B62  00F9               	movwf	??_lcd_set_cursor
  7493  0B63  0879               	movf	??_lcd_set_cursor,w
  7494  0B64  00A5               	movwf	lcd_set_cursor@cmd
  7495  0B65                     l2504:
  7496                           
  7497                           ;lcd_lib.c: 139:     command(cmd, 0);
  7498  0B65  01F2               	clrf	command@mode
  7499  0B66  0825               	movf	lcd_set_cursor@cmd,w
  7500  0B67  318B  23FA  318B   	fcall	_command
  7501  0B6A                     l211:
  7502  0B6A  0008               	return
  7503  0B6B                     __end_of_lcd_set_cursor:
  7504                           
  7505                           	psect	text29
  7506  0A4C                     __ptext29:	
  7507 ;; *************** function _lcd_print *****************
  7508 ;; Defined at:
  7509 ;;		line 142 in file "lcd_lib.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  str             2    8[COMMON] PTR unsigned char 
  7512 ;;		 -> line2(16), line1(16), 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  cmd             1   11[COMMON] unsigned char 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      void 
  7517 ;; Registers used:
  7518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7524 ;;      Params:         2       0       0       0       0       0
  7525 ;;      Locals:         1       0       0       0       0       0
  7526 ;;      Temps:          1       0       0       0       0       0
  7527 ;;      Totals:         4       0       0       0       0       0
  7528 ;;Total ram usage:        4 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    4
  7531 ;; This function calls:
  7532 ;;		_command
  7533 ;; This function is called by:
  7534 ;;		_print_train
  7535 ;;		_print_remaing
  7536 ;;		_print_money
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           
  7541                           ;psect for function _lcd_print
  7542  0A4C                     _lcd_print:
  7543  0A4C                     l2844:	
  7544                           ;incstack = 0
  7545                           ; Regs used in _lcd_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7546                           
  7547                           
  7548                           ;lcd_lib.c: 143:     while (*str) {
  7549  0A4C  2A5F               	goto	l2852
  7550  0A4D                     l2846:
  7551                           
  7552                           ;lcd_lib.c: 144:         uint8_t cmd = *str++;
  7553  0A4D  0878               	movf	lcd_print@str,w
  7554  0A4E  0086               	movwf	6
  7555  0A4F  0879               	movf	lcd_print@str+1,w
  7556  0A50  0087               	movwf	7
  7557  0A51  0801               	movf	1,w
  7558  0A52  00FA               	movwf	??_lcd_print
  7559  0A53  087A               	movf	??_lcd_print,w
  7560  0A54  00FB               	movwf	lcd_print@cmd
  7561  0A55                     l2848:
  7562  0A55  3001               	movlw	1
  7563  0A56  07F8               	addwf	lcd_print@str,f
  7564  0A57  3000               	movlw	0
  7565  0A58  3DF9               	addwfc	lcd_print@str+1,f
  7566  0A59                     l2850:
  7567                           
  7568                           ;lcd_lib.c: 145:         command(cmd, 0b00000001);
  7569  0A59  01F2               	clrf	command@mode
  7570  0A5A  0AF2               	incf	command@mode,f
  7571  0A5B  087B               	movf	lcd_print@cmd,w
  7572  0A5C  318B  23FA  318A   	fcall	_command
  7573  0A5F                     l2852:
  7574                           
  7575                           ;lcd_lib.c: 143:     while (*str) {
  7576  0A5F  0878               	movf	lcd_print@str,w
  7577  0A60  0086               	movwf	6
  7578  0A61  0879               	movf	lcd_print@str+1,w
  7579  0A62  0087               	movwf	7
  7580  0A63  0801               	movf	1,w
  7581  0A64  1D03               	btfss	3,2
  7582  0A65  2A67               	goto	u2311
  7583  0A66  2A68               	goto	u2310
  7584  0A67                     u2311:
  7585  0A67  2A4D               	goto	l2846
  7586  0A68                     u2310:
  7587  0A68                     l217:
  7588  0A68  0008               	return
  7589  0A69                     __end_of_lcd_print:
  7590                           
  7591                           	psect	text30
  7592  0BFA                     __ptext30:	
  7593 ;; *************** function _command *****************
  7594 ;; Defined at:
  7595 ;;		line 149 in file "lcd_lib.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  val             1    wreg     unsigned char 
  7598 ;;  mode            1    2[COMMON] unsigned char 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  val             1    5[COMMON] unsigned char 
  7601 ;;  lownib          1    7[COMMON] unsigned char 
  7602 ;;  highnib         1    6[COMMON] unsigned char 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0, pclath, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7612 ;;      Params:         1       0       0       0       0       0
  7613 ;;      Locals:         3       0       0       0       0       0
  7614 ;;      Temps:          2       0       0       0       0       0
  7615 ;;      Totals:         6       0       0       0       0       0
  7616 ;;Total ram usage:        6 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    3
  7619 ;; This function calls:
  7620 ;;		_lcd_cmd
  7621 ;; This function is called by:
  7622 ;;		_lcd_set_cursor
  7623 ;;		_lcd_print
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           
  7628                           ;psect for function _command
  7629  0BFA                     _command:
  7630                           
  7631                           ;incstack = 0
  7632                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  7633                           ;command@val stored from wreg
  7634  0BFA  00F5               	movwf	command@val
  7635  0BFB                     l2364:
  7636                           
  7637                           ;lcd_lib.c: 150:     uint8_t highnib = (val & 0xf0) | _backlightval | mode;
  7638  0BFB  0875               	movf	command@val,w
  7639  0BFC  39F0               	andlw	240
  7640  0BFD  0020               	movlb	0	; select bank0
  7641  0BFE  046F               	iorwf	__backlightval,w
  7642  0BFF  0472               	iorwf	command@mode,w
  7643  0C00  00F3               	movwf	??_command
  7644  0C01  0873               	movf	??_command,w
  7645  0C02  00F6               	movwf	command@highnib
  7646                           
  7647                           ;lcd_lib.c: 151:  uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
  7648  0C03  0875               	movf	command@val,w
  7649  0C04  00F3               	movwf	??_command
  7650  0C05  3003               	movlw	3
  7651  0C06                     u2005:
  7652  0C06  35F3               	lslf	??_command,f
  7653  0C07  3EFF               	addlw	-1
  7654  0C08  1D03               	skipz
  7655  0C09  2C06               	goto	u2005
  7656  0C0A  3573               	lslf	??_command,w
  7657  0C0B  39F0               	andlw	240
  7658  0C0C  046F               	iorwf	__backlightval,w
  7659  0C0D  0472               	iorwf	command@mode,w
  7660  0C0E  00F4               	movwf	??_command+1
  7661  0C0F  0874               	movf	??_command+1,w
  7662  0C10  00F7               	movwf	command@lownib
  7663  0C11                     l2366:
  7664                           
  7665                           ;lcd_lib.c: 153:  lcd_cmd(highnib);
  7666  0C11  0876               	movf	command@highnib,w
  7667  0C12  3189  2196  318B   	fcall	_lcd_cmd
  7668  0C15                     l2368:
  7669                           
  7670                           ;lcd_lib.c: 154:     lcd_cmd(highnib | 0b00000100);
  7671  0C15  0876               	movf	command@highnib,w
  7672  0C16  3804               	iorlw	4
  7673  0C17  3189  2196  318B   	fcall	_lcd_cmd
  7674  0C1A                     l2370:
  7675                           
  7676                           ;lcd_lib.c: 155:     lcd_cmd(highnib & ~0b00000100);
  7677  0C1A  0876               	movf	command@highnib,w
  7678  0C1B  39FB               	andlw	251
  7679  0C1C  3189  2196  318B   	fcall	_lcd_cmd
  7680  0C1F                     l2372:
  7681                           
  7682                           ;lcd_lib.c: 157:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7683  0C1F  3042               	movlw	66
  7684  0C20                     u2377:
  7685  0C20  0B89               	decfsz	9,f
  7686  0C21  2C20               	goto	u2377
  7687  0C22  3200               	nop2
  7688  0C23                     l2374:
  7689                           
  7690                           ;lcd_lib.c: 159:  lcd_cmd(lownib);
  7691  0C23  0877               	movf	command@lownib,w
  7692  0C24  3189  2196  318B   	fcall	_lcd_cmd
  7693  0C27                     l2376:
  7694                           
  7695                           ;lcd_lib.c: 160:     lcd_cmd(lownib | 0b00000100);
  7696  0C27  0877               	movf	command@lownib,w
  7697  0C28  3804               	iorlw	4
  7698  0C29  3189  2196  318B   	fcall	_lcd_cmd
  7699  0C2C                     l2378:
  7700                           
  7701                           ;lcd_lib.c: 161:     lcd_cmd(lownib & ~0b00000100);
  7702  0C2C  0877               	movf	command@lownib,w
  7703  0C2D  39FB               	andlw	251
  7704  0C2E  3189  2196  318B   	fcall	_lcd_cmd
  7705  0C31                     l220:
  7706  0C31  0008               	return
  7707  0C32                     __end_of_command:
  7708                           
  7709                           	psect	text31
  7710  0ACB                     __ptext31:	
  7711 ;; *************** function _lcd_clear *****************
  7712 ;; Defined at:
  7713 ;;		line 119 in file "lcd_lib.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;		None
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;		None
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1    wreg      void 
  7720 ;; Registers used:
  7721 ;;		wreg, status,2, status,0, pclath, cstack
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7727 ;;      Params:         0       0       0       0       0       0
  7728 ;;      Locals:         0       0       0       0       0       0
  7729 ;;      Temps:          1       0       0       0       0       0
  7730 ;;      Totals:         1       0       0       0       0       0
  7731 ;;Total ram usage:        1 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    3
  7734 ;; This function calls:
  7735 ;;		_lcd_cmd
  7736 ;; This function is called by:
  7737 ;;		_print_train
  7738 ;;		_print_remaing
  7739 ;;		_print_money
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743                           
  7744                           ;psect for function _lcd_clear
  7745  0ACB                     _lcd_clear:
  7746  0ACB                     l2518:	
  7747                           ;incstack = 0
  7748                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  7749                           
  7750                           
  7751                           ;lcd_lib.c: 120:     lcd_cmd(0x00);
  7752  0ACB  3000               	movlw	0
  7753  0ACC  3189  2196  318A   	fcall	_lcd_cmd
  7754                           
  7755                           ;lcd_lib.c: 121:     lcd_cmd(0x04);
  7756  0ACF  3004               	movlw	4
  7757  0AD0  3189  2196  318A   	fcall	_lcd_cmd
  7758                           
  7759                           ;lcd_lib.c: 122:     lcd_cmd(0x00);
  7760  0AD3  3000               	movlw	0
  7761  0AD4  3189  2196  318A   	fcall	_lcd_cmd
  7762  0AD7                     l2520:
  7763                           
  7764                           ;lcd_lib.c: 124:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7765  0AD7  3042               	movlw	66
  7766  0AD8                     u2387:
  7767  0AD8  0B89               	decfsz	9,f
  7768  0AD9  2AD8               	goto	u2387
  7769  0ADA  3200               	nop2
  7770  0ADB                     l2522:
  7771                           
  7772                           ;lcd_lib.c: 126:     lcd_cmd(0x10);
  7773  0ADB  3010               	movlw	16
  7774  0ADC  3189  2196  318A   	fcall	_lcd_cmd
  7775  0ADF                     l2524:
  7776                           
  7777                           ;lcd_lib.c: 127:     lcd_cmd(0x14);
  7778  0ADF  3014               	movlw	20
  7779  0AE0  3189  2196  318A   	fcall	_lcd_cmd
  7780  0AE3                     l2526:
  7781                           
  7782                           ;lcd_lib.c: 128:     lcd_cmd(0x10);
  7783  0AE3  3010               	movlw	16
  7784  0AE4  3189  2196  318A   	fcall	_lcd_cmd
  7785                           
  7786                           ;lcd_lib.c: 130:     _delay((unsigned long)((50)*(8000000/4000.0)));
  7787  0AE7  3082               	movlw	130
  7788  0AE8  00F2               	movwf	??_lcd_clear
  7789  0AE9  30DE               	movlw	222
  7790  0AEA                     u2397:
  7791  0AEA  0B89               	decfsz	9,f
  7792  0AEB  2AEA               	goto	u2397
  7793  0AEC  0BF2               	decfsz	??_lcd_clear,f
  7794  0AED  2AEA               	goto	u2397
  7795  0AEE                     l205:
  7796  0AEE  0008               	return
  7797  0AEF                     __end_of_lcd_clear:
  7798                           
  7799                           	psect	text32
  7800  092E                     __ptext32:	
  7801 ;; *************** function _init_char *****************
  7802 ;; Defined at:
  7803 ;;		line 78 in file "main.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;		None
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;		None
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		None
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7817 ;;      Params:         0       0       0       0       0       0
  7818 ;;      Locals:         0       0       0       0       0       0
  7819 ;;      Temps:          0       0       0       0       0       0
  7820 ;;      Totals:         0       0       0       0       0       0
  7821 ;;Total ram usage:        0 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; This function calls:
  7824 ;;		Nothing
  7825 ;; This function is called by:
  7826 ;;		_print_train
  7827 ;;		_print_remaing
  7828 ;;		_print_money
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           
  7833                           ;psect for function _init_char
  7834  092E                     _init_char:
  7835  092E                     l121:	
  7836                           ;incstack = 0
  7837                           ; Regs used in _init_char: []
  7838                           
  7839  092E  0008               	return
  7840  092F                     __end_of_init_char:
  7841                           
  7842                           	psect	text33
  7843  02D4                     __ptext33:	
  7844 ;; *************** function _lcd_init *****************
  7845 ;; Defined at:
  7846 ;;		line 27 in file "lcd_lib.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;		None
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      void 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0, pclath, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7860 ;;      Params:         0       0       0       0       0       0
  7861 ;;      Locals:         0       0       0       0       0       0
  7862 ;;      Temps:          2       0       0       0       0       0
  7863 ;;      Totals:         2       0       0       0       0       0
  7864 ;;Total ram usage:        2 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    3
  7867 ;; This function calls:
  7868 ;;		_lcd_cmd
  7869 ;; This function is called by:
  7870 ;;		_main
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function _lcd_init
  7876  02D4                     _lcd_init:
  7877  02D4                     l2550:	
  7878                           ;incstack = 0
  7879                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7880                           
  7881                           
  7882                           ;lcd_lib.c: 28:     _delay((unsigned long)((400)*(8000000/4000.0)));
  7883  02D4  3005               	movlw	5
  7884  02D5  00F3               	movwf	??_lcd_init+1
  7885  02D6  300F               	movlw	15
  7886  02D7  00F2               	movwf	??_lcd_init
  7887  02D8  30F1               	movlw	241
  7888  02D9                     u2407:
  7889  02D9  0B89               	decfsz	9,f
  7890  02DA  2AD9               	goto	u2407
  7891  02DB  0BF2               	decfsz	??_lcd_init,f
  7892  02DC  2AD9               	goto	u2407
  7893  02DD  0BF3               	decfsz	??_lcd_init+1,f
  7894  02DE  2AD9               	goto	u2407
  7895  02DF  0000               	nop
  7896  02E0                     l2552:
  7897                           
  7898                           ;lcd_lib.c: 30:     lcd_cmd(0x30);
  7899  02E0  3030               	movlw	48
  7900  02E1  3189  2196  3182   	fcall	_lcd_cmd
  7901  02E4                     l2554:
  7902                           
  7903                           ;lcd_lib.c: 31:     lcd_cmd(0x34);
  7904  02E4  3034               	movlw	52
  7905  02E5  3189  2196  3182   	fcall	_lcd_cmd
  7906  02E8                     l2556:
  7907                           
  7908                           ;lcd_lib.c: 32:     lcd_cmd(0x30);
  7909  02E8  3030               	movlw	48
  7910  02E9  3189  2196  3182   	fcall	_lcd_cmd
  7911  02EC                     l2558:
  7912                           
  7913                           ;lcd_lib.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7914  02EC  300D               	movlw	13
  7915  02ED  00F2               	movwf	??_lcd_init
  7916  02EE  30FC               	movlw	252
  7917  02EF                     u2417:
  7918  02EF  0B89               	decfsz	9,f
  7919  02F0  2AEF               	goto	u2417
  7920  02F1  0BF2               	decfsz	??_lcd_init,f
  7921  02F2  2AEF               	goto	u2417
  7922                           
  7923                           ;lcd_lib.c: 35:     lcd_cmd(0x30);
  7924  02F3  3030               	movlw	48
  7925  02F4  3189  2196  3182   	fcall	_lcd_cmd
  7926                           
  7927                           ;lcd_lib.c: 36:     lcd_cmd(0x34);
  7928  02F7  3034               	movlw	52
  7929  02F8  3189  2196  3182   	fcall	_lcd_cmd
  7930                           
  7931                           ;lcd_lib.c: 37:     lcd_cmd(0x30);
  7932  02FB  3030               	movlw	48
  7933  02FC  3189  2196  3182   	fcall	_lcd_cmd
  7934  02FF                     l2560:
  7935                           
  7936                           ;lcd_lib.c: 38:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7937  02FF  300D               	movlw	13
  7938  0300  00F2               	movwf	??_lcd_init
  7939  0301  30FC               	movlw	252
  7940  0302                     u2427:
  7941  0302  0B89               	decfsz	9,f
  7942  0303  2B02               	goto	u2427
  7943  0304  0BF2               	decfsz	??_lcd_init,f
  7944  0305  2B02               	goto	u2427
  7945  0306                     l2562:
  7946                           
  7947                           ;lcd_lib.c: 40:     lcd_cmd(0x30);
  7948  0306  3030               	movlw	48
  7949  0307  3189  2196  3182   	fcall	_lcd_cmd
  7950  030A                     l2564:
  7951                           
  7952                           ;lcd_lib.c: 41:     lcd_cmd(0x34);
  7953  030A  3034               	movlw	52
  7954  030B  3189  2196  3182   	fcall	_lcd_cmd
  7955  030E                     l2566:
  7956                           
  7957                           ;lcd_lib.c: 42:     lcd_cmd(0x30);
  7958  030E  3030               	movlw	48
  7959  030F  3189  2196  3182   	fcall	_lcd_cmd
  7960                           
  7961                           ;lcd_lib.c: 43:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  7962  0312  30C8               	movlw	200
  7963  0313                     u2437:
  7964  0313  0B89               	decfsz	9,f
  7965  0314  2B13               	goto	u2437
  7966  0315                     l2568:
  7967                           
  7968                           ;lcd_lib.c: 45:     lcd_cmd(0x20);
  7969  0315  3020               	movlw	32
  7970  0316  3189  2196  3182   	fcall	_lcd_cmd
  7971  0319                     l2570:
  7972                           
  7973                           ;lcd_lib.c: 46:     lcd_cmd(0x24);
  7974  0319  3024               	movlw	36
  7975  031A  3189  2196  3182   	fcall	_lcd_cmd
  7976  031D                     l2572:
  7977                           
  7978                           ;lcd_lib.c: 47:     lcd_cmd(0x20);
  7979  031D  3020               	movlw	32
  7980  031E  3189  2196  3182   	fcall	_lcd_cmd
  7981  0321                     l2574:
  7982                           
  7983                           ;lcd_lib.c: 48:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7984  0321  3006               	movlw	6
  7985  0322                     u2447:
  7986  0322  0B89               	decfsz	9,f
  7987  0323  2B22               	goto	u2447
  7988  0324  3200               	nop2
  7989                           
  7990                           ;lcd_lib.c: 51:     lcd_cmd(0x20);
  7991  0325  3020               	movlw	32
  7992  0326  3189  2196  3182   	fcall	_lcd_cmd
  7993                           
  7994                           ;lcd_lib.c: 52:     lcd_cmd(0x24);
  7995  0329  3024               	movlw	36
  7996  032A  3189  2196  3182   	fcall	_lcd_cmd
  7997                           
  7998                           ;lcd_lib.c: 53:     lcd_cmd(0x20);
  7999  032D  3020               	movlw	32
  8000  032E  3189  2196  3182   	fcall	_lcd_cmd
  8001  0331                     l2576:
  8002                           
  8003                           ;lcd_lib.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8004  0331  3042               	movlw	66
  8005  0332                     u2457:
  8006  0332  0B89               	decfsz	9,f
  8007  0333  2B32               	goto	u2457
  8008  0334  3200               	nop2
  8009  0335                     l2578:
  8010                           
  8011                           ;lcd_lib.c: 57:     lcd_cmd(0x80);
  8012  0335  3080               	movlw	128
  8013  0336  3189  2196  3182   	fcall	_lcd_cmd
  8014  0339                     l2580:
  8015                           
  8016                           ;lcd_lib.c: 58:     lcd_cmd(0x84);
  8017  0339  3084               	movlw	132
  8018  033A  3189  2196  3182   	fcall	_lcd_cmd
  8019  033D                     l2582:
  8020                           
  8021                           ;lcd_lib.c: 59:     lcd_cmd(0x80);
  8022  033D  3080               	movlw	128
  8023  033E  3189  2196  3182   	fcall	_lcd_cmd
  8024  0341                     l2584:
  8025                           
  8026                           ;lcd_lib.c: 63:     lcd_cmd(0x00);
  8027  0341  3000               	movlw	0
  8028  0342  3189  2196  3182   	fcall	_lcd_cmd
  8029  0345                     l2586:
  8030                           
  8031                           ;lcd_lib.c: 64:     lcd_cmd(0x04);
  8032  0345  3004               	movlw	4
  8033  0346  3189  2196  3182   	fcall	_lcd_cmd
  8034  0349                     l2588:
  8035                           
  8036                           ;lcd_lib.c: 65:     lcd_cmd(0x00);
  8037  0349  3000               	movlw	0
  8038  034A  3189  2196  3182   	fcall	_lcd_cmd
  8039  034D                     l2590:
  8040                           
  8041                           ;lcd_lib.c: 67:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8042  034D  3042               	movlw	66
  8043  034E                     u2467:
  8044  034E  0B89               	decfsz	9,f
  8045  034F  2B4E               	goto	u2467
  8046  0350  3200               	nop2
  8047                           
  8048                           ;lcd_lib.c: 69:     lcd_cmd(0xC0);
  8049  0351  30C0               	movlw	192
  8050  0352  3189  2196  3182   	fcall	_lcd_cmd
  8051                           
  8052                           ;lcd_lib.c: 70:     lcd_cmd(0xC4);
  8053  0355  30C4               	movlw	196
  8054  0356  3189  2196  3182   	fcall	_lcd_cmd
  8055                           
  8056                           ;lcd_lib.c: 71:     lcd_cmd(0xC0);
  8057  0359  30C0               	movlw	192
  8058  035A  3189  2196  3182   	fcall	_lcd_cmd
  8059                           
  8060                           ;lcd_lib.c: 75:     lcd_cmd(0x00);
  8061  035D  3000               	movlw	0
  8062  035E  3189  2196  3182   	fcall	_lcd_cmd
  8063                           
  8064                           ;lcd_lib.c: 76:     lcd_cmd(0x04);
  8065  0361  3004               	movlw	4
  8066  0362  3189  2196  3182   	fcall	_lcd_cmd
  8067                           
  8068                           ;lcd_lib.c: 77:     lcd_cmd(0x00);
  8069  0365  3000               	movlw	0
  8070  0366  3189  2196  3182   	fcall	_lcd_cmd
  8071  0369                     l2592:
  8072                           
  8073                           ;lcd_lib.c: 79:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8074  0369  3042               	movlw	66
  8075  036A                     u2477:
  8076  036A  0B89               	decfsz	9,f
  8077  036B  2B6A               	goto	u2477
  8078  036C  3200               	nop2
  8079  036D                     l2594:
  8080                           
  8081                           ;lcd_lib.c: 81:     lcd_cmd(0x10);
  8082  036D  3010               	movlw	16
  8083  036E  3189  2196  3182   	fcall	_lcd_cmd
  8084  0371                     l2596:
  8085                           
  8086                           ;lcd_lib.c: 82:     lcd_cmd(0x14);
  8087  0371  3014               	movlw	20
  8088  0372  3189  2196  3182   	fcall	_lcd_cmd
  8089  0375                     l2598:
  8090                           
  8091                           ;lcd_lib.c: 83:     lcd_cmd(0x10);
  8092  0375  3010               	movlw	16
  8093  0376  3189  2196  3182   	fcall	_lcd_cmd
  8094                           
  8095                           ;lcd_lib.c: 85:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8096  0379  300D               	movlw	13
  8097  037A  00F2               	movwf	??_lcd_init
  8098  037B  30FC               	movlw	252
  8099  037C                     u2487:
  8100  037C  0B89               	decfsz	9,f
  8101  037D  2B7C               	goto	u2487
  8102  037E  0BF2               	decfsz	??_lcd_init,f
  8103  037F  2B7C               	goto	u2487
  8104  0380                     l2600:
  8105                           
  8106                           ;lcd_lib.c: 88:     lcd_cmd(0x00);
  8107  0380  3000               	movlw	0
  8108  0381  3189  2196  3182   	fcall	_lcd_cmd
  8109  0384                     l2602:
  8110                           
  8111                           ;lcd_lib.c: 89:     lcd_cmd(0x04);
  8112  0384  3004               	movlw	4
  8113  0385  3189  2196  3182   	fcall	_lcd_cmd
  8114  0388                     l2604:
  8115                           
  8116                           ;lcd_lib.c: 90:     lcd_cmd(0x00);
  8117  0388  3000               	movlw	0
  8118  0389  3189  2196  3182   	fcall	_lcd_cmd
  8119  038C                     l2606:
  8120                           
  8121                           ;lcd_lib.c: 92:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8122  038C  3042               	movlw	66
  8123  038D                     u2497:
  8124  038D  0B89               	decfsz	9,f
  8125  038E  2B8D               	goto	u2497
  8126  038F  3200               	nop2
  8127                           
  8128                           ;lcd_lib.c: 94:     lcd_cmd(0x60);
  8129  0390  3060               	movlw	96
  8130  0391  3189  2196  3182   	fcall	_lcd_cmd
  8131                           
  8132                           ;lcd_lib.c: 95:     lcd_cmd(0x64);
  8133  0394  3064               	movlw	100
  8134  0395  3189  2196  3182   	fcall	_lcd_cmd
  8135                           
  8136                           ;lcd_lib.c: 96:     lcd_cmd(0x60);
  8137  0398  3060               	movlw	96
  8138  0399  3189  2196  3182   	fcall	_lcd_cmd
  8139                           
  8140                           ;lcd_lib.c: 100:     lcd_cmd(0x00);
  8141  039C  3000               	movlw	0
  8142  039D  3189  2196  3182   	fcall	_lcd_cmd
  8143                           
  8144                           ;lcd_lib.c: 101:     lcd_cmd(0x04);
  8145  03A0  3004               	movlw	4
  8146  03A1  3189  2196  3182   	fcall	_lcd_cmd
  8147                           
  8148                           ;lcd_lib.c: 102:     lcd_cmd(0x00);
  8149  03A4  3000               	movlw	0
  8150  03A5  3189  2196  3182   	fcall	_lcd_cmd
  8151  03A8                     l2608:
  8152                           
  8153                           ;lcd_lib.c: 104:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8154  03A8  3042               	movlw	66
  8155  03A9                     u2507:
  8156  03A9  0B89               	decfsz	9,f
  8157  03AA  2BA9               	goto	u2507
  8158  03AB  3200               	nop2
  8159  03AC                     l2610:
  8160                           
  8161                           ;lcd_lib.c: 106:     lcd_cmd(0x20);
  8162  03AC  3020               	movlw	32
  8163  03AD  3189  2196  3182   	fcall	_lcd_cmd
  8164  03B0                     l2612:
  8165                           
  8166                           ;lcd_lib.c: 107:     lcd_cmd(0x24);
  8167  03B0  3024               	movlw	36
  8168  03B1  3189  2196  3182   	fcall	_lcd_cmd
  8169  03B4                     l2614:
  8170                           
  8171                           ;lcd_lib.c: 108:     lcd_cmd(0x20);
  8172  03B4  3020               	movlw	32
  8173  03B5  3189  2196  3182   	fcall	_lcd_cmd
  8174                           
  8175                           ;lcd_lib.c: 110:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8176  03B8  3008               	movlw	8
  8177  03B9  00F2               	movwf	??_lcd_init
  8178  03BA  30CA               	movlw	202
  8179  03BB                     u2517:
  8180  03BB  0B89               	decfsz	9,f
  8181  03BC  2BBB               	goto	u2517
  8182  03BD  0BF2               	decfsz	??_lcd_init,f
  8183  03BE  2BBB               	goto	u2517
  8184  03BF                     l199:
  8185  03BF  0008               	return
  8186  03C0                     __end_of_lcd_init:
  8187                           
  8188                           	psect	text34
  8189  0978                     __ptext34:	
  8190 ;; *************** function _lcd_backlight *****************
  8191 ;; Defined at:
  8192 ;;		line 113 in file "lcd_lib.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;		None
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;		None
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  1    wreg      void 
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0, pclath, cstack
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8206 ;;      Params:         0       0       0       0       0       0
  8207 ;;      Locals:         0       0       0       0       0       0
  8208 ;;      Temps:          1       0       0       0       0       0
  8209 ;;      Totals:         1       0       0       0       0       0
  8210 ;;Total ram usage:        1 bytes
  8211 ;; Hardware stack levels used:    1
  8212 ;; Hardware stack levels required when called:    3
  8213 ;; This function calls:
  8214 ;;		_lcd_cmd
  8215 ;; This function is called by:
  8216 ;;		_main
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           
  8221                           ;psect for function _lcd_backlight
  8222  0978                     _lcd_backlight:
  8223  0978                     l2616:	
  8224                           ;incstack = 0
  8225                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  8226                           
  8227                           
  8228                           ;lcd_lib.c: 114:     lcd_cmd(0x08);
  8229  0978  3008               	movlw	8
  8230  0979  3189  2196  3189   	fcall	_lcd_cmd
  8231  097C                     l2618:
  8232                           
  8233                           ;lcd_lib.c: 115:     _backlightval = 0x08;
  8234  097C  3008               	movlw	8
  8235  097D  00F2               	movwf	??_lcd_backlight
  8236  097E  0872               	movf	??_lcd_backlight,w
  8237  097F  0020               	movlb	0	; select bank0
  8238  0980  00EF               	movwf	__backlightval
  8239  0981                     l2620:
  8240                           
  8241                           ;lcd_lib.c: 116:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8242  0981  3006               	movlw	6
  8243  0982                     u2527:
  8244  0982  0B89               	decfsz	9,f
  8245  0983  2982               	goto	u2527
  8246  0984  3200               	nop2
  8247  0985                     l202:
  8248  0985  0008               	return
  8249  0986                     __end_of_lcd_backlight:
  8250                           
  8251                           	psect	text35
  8252  0996                     __ptext35:	
  8253 ;; *************** function _lcd_cmd *****************
  8254 ;; Defined at:
  8255 ;;		line 19 in file "lcd_lib.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  cmd             1    wreg     unsigned char 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  cmd             1    1[COMMON] unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      void 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0, pclath, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8269 ;;      Params:         0       0       0       0       0       0
  8270 ;;      Locals:         1       0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0
  8272 ;;      Totals:         1       0       0       0       0       0
  8273 ;;Total ram usage:        1 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    2
  8276 ;; This function calls:
  8277 ;;		_i2c_start
  8278 ;;		_i2c_stop
  8279 ;;		_i2c_write
  8280 ;; This function is called by:
  8281 ;;		_lcd_init
  8282 ;;		_lcd_backlight
  8283 ;;		_lcd_clear
  8284 ;;		_command
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           
  8289                           ;psect for function _lcd_cmd
  8290  0996                     _lcd_cmd:
  8291                           
  8292                           ;incstack = 0
  8293                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  8294                           ;lcd_cmd@cmd stored from wreg
  8295  0996  00F1               	movwf	lcd_cmd@cmd
  8296  0997                     l2236:
  8297                           
  8298                           ;lcd_lib.c: 20:     i2c_start();
  8299  0997  3189  2158  3189   	fcall	_i2c_start
  8300                           
  8301                           ;lcd_lib.c: 21:     i2c_write(0x3F << 1);
  8302  099A  307E               	movlw	126
  8303  099B  3189  2186  3189   	fcall	_i2c_write
  8304                           
  8305                           ;lcd_lib.c: 22:     i2c_write(cmd);
  8306  099E  0871               	movf	lcd_cmd@cmd,w
  8307  099F  3189  2186  3189   	fcall	_i2c_write
  8308  09A2                     l2238:
  8309                           
  8310                           ;lcd_lib.c: 23:     i2c_stop();
  8311  09A2  3189  2147  3189   	fcall	_i2c_stop
  8312                           
  8313                           ;lcd_lib.c: 24:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8314  09A5  3006               	movlw	6
  8315  09A6                     u2537:
  8316  09A6  0B89               	decfsz	9,f
  8317  09A7  29A6               	goto	u2537
  8318  09A8  3200               	nop2
  8319  09A9                     l196:
  8320  09A9  0008               	return
  8321  09AA                     __end_of_lcd_cmd:
  8322                           
  8323                           	psect	text36
  8324  0986                     __ptext36:	
  8325 ;; *************** function _i2c_write *****************
  8326 ;; Defined at:
  8327 ;;		line 26 in file "i2c.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  data            1    wreg     unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  data            1    0[COMMON] unsigned char 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      void 
  8334 ;; Registers used:
  8335 ;;		wreg, status,2, status,0, pclath, cstack
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8341 ;;      Params:         0       0       0       0       0       0
  8342 ;;      Locals:         1       0       0       0       0       0
  8343 ;;      Temps:          0       0       0       0       0       0
  8344 ;;      Totals:         1       0       0       0       0       0
  8345 ;;Total ram usage:        1 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:    1
  8348 ;; This function calls:
  8349 ;;		_i2c_wait
  8350 ;; This function is called by:
  8351 ;;		_lcd_cmd
  8352 ;;		_write_date
  8353 ;;		__read
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           
  8358                           ;psect for function _i2c_write
  8359  0986                     _i2c_write:
  8360                           
  8361                           ;incstack = 0
  8362                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  8363                           ;i2c_write@data stored from wreg
  8364  0986  00F0               	movwf	i2c_write@data
  8365  0987                     l2128:
  8366                           
  8367                           ;i2c.c: 27:     SSP2BUF = data;
  8368  0987  0870               	movf	i2c_write@data,w
  8369  0988  0024               	movlb	4	; select bank4
  8370  0989  0099               	movwf	25	;volatile
  8371  098A                     l169:	
  8372                           ;i2c.c: 28:     while(SSP2STATbits.BF);
  8373                           
  8374  098A  181C               	btfsc	28,0	;volatile
  8375  098B  298D               	goto	u1601
  8376  098C  298E               	goto	u1600
  8377  098D                     u1601:
  8378  098D  298A               	goto	l169
  8379  098E                     u1600:
  8380  098E                     l172:
  8381  098E  1B1E               	btfsc	30,6	;volatile
  8382  098F  2991               	goto	u1611
  8383  0990  2992               	goto	u1610
  8384  0991                     u1611:
  8385  0991  298E               	goto	l172
  8386  0992                     u1610:
  8387  0992                     l2130:
  8388                           
  8389                           ;i2c.c: 30:     i2c_wait();
  8390  0992  3189  216C  3189   	fcall	_i2c_wait
  8391  0995                     l175:
  8392  0995  0008               	return
  8393  0996                     __end_of_i2c_write:
  8394                           
  8395                           	psect	text37
  8396  0947                     __ptext37:	
  8397 ;; *************** function _i2c_stop *****************
  8398 ;; Defined at:
  8399 ;;		line 15 in file "i2c.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;		None
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;		None
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1    wreg      void 
  8406 ;; Registers used:
  8407 ;;		None
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8413 ;;      Params:         0       0       0       0       0       0
  8414 ;;      Locals:         0       0       0       0       0       0
  8415 ;;      Temps:          0       0       0       0       0       0
  8416 ;;      Totals:         0       0       0       0       0       0
  8417 ;;Total ram usage:        0 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; This function calls:
  8420 ;;		Nothing
  8421 ;; This function is called by:
  8422 ;;		_lcd_cmd
  8423 ;;		_write_date
  8424 ;;		__read
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           
  8429                           ;psect for function _i2c_stop
  8430  0947                     _i2c_stop:
  8431  0947                     l2126:	
  8432                           ;incstack = 0
  8433                           ; Regs used in _i2c_stop: []
  8434                           
  8435                           
  8436                           ;i2c.c: 16:     SSP2CON2bits.PEN = 1;
  8437  0947  0024               	movlb	4	; select bank4
  8438  0948  151E               	bsf	30,2	;volatile
  8439  0949                     l157:	
  8440                           ;i2c.c: 17:     while(SSP2CON2bits.PEN);
  8441                           
  8442  0949  191E               	btfsc	30,2	;volatile
  8443  094A  294C               	goto	u1591
  8444  094B  294D               	goto	u1590
  8445  094C                     u1591:
  8446  094C  2949               	goto	l157
  8447  094D                     u1590:
  8448  094D                     l160:
  8449  094D  0008               	return
  8450  094E                     __end_of_i2c_stop:
  8451                           
  8452                           	psect	text38
  8453  0958                     __ptext38:	
  8454 ;; *************** function _i2c_start *****************
  8455 ;; Defined at:
  8456 ;;		line 9 in file "i2c.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;		None
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;		None
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0, pclath, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8470 ;;      Params:         0       0       0       0       0       0
  8471 ;;      Locals:         0       0       0       0       0       0
  8472 ;;      Temps:          0       0       0       0       0       0
  8473 ;;      Totals:         0       0       0       0       0       0
  8474 ;;Total ram usage:        0 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:    1
  8477 ;; This function calls:
  8478 ;;		_i2c_wait
  8479 ;; This function is called by:
  8480 ;;		_lcd_cmd
  8481 ;;		_write_date
  8482 ;;		__read
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           
  8487                           ;psect for function _i2c_start
  8488  0958                     _i2c_start:
  8489  0958                     l2122:	
  8490                           ;incstack = 0
  8491                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  8492                           
  8493                           
  8494                           ;i2c.c: 10:     i2c_wait();
  8495  0958  3189  216C  3189   	fcall	_i2c_wait
  8496  095B                     l2124:
  8497                           
  8498                           ;i2c.c: 11:     SSP2CON2bits.SEN = 1;
  8499  095B  0024               	movlb	4	; select bank4
  8500  095C  141E               	bsf	30,0	;volatile
  8501  095D                     l151:	
  8502                           ;i2c.c: 12:     while(SSP2CON2bits.SEN);
  8503                           
  8504  095D  181E               	btfsc	30,0	;volatile
  8505  095E  2960               	goto	u1581
  8506  095F  2961               	goto	u1580
  8507  0960                     u1581:
  8508  0960  295D               	goto	l151
  8509  0961                     u1580:
  8510  0961                     l154:
  8511  0961  0008               	return
  8512  0962                     __end_of_i2c_start:
  8513                           
  8514                           	psect	text39
  8515  096C                     __ptext39:	
  8516 ;; *************** function _i2c_wait *****************
  8517 ;; Defined at:
  8518 ;;		line 5 in file "i2c.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, status,2
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8532 ;;      Params:         0       0       0       0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0
  8535 ;;      Totals:         0       0       0       0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; This function calls:
  8539 ;;		Nothing
  8540 ;; This function is called by:
  8541 ;;		_i2c_start
  8542 ;;		_i2c_repeated_start
  8543 ;;		_i2c_write
  8544 ;;		_i2c_read
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           
  8549                           ;psect for function _i2c_wait
  8550  096C                     _i2c_wait:
  8551  096C                     l1992:	
  8552                           ;incstack = 0
  8553                           ; Regs used in _i2c_wait: [wreg+status,2]
  8554                           
  8555  096C                     l1994:	
  8556                           ;i2c.c: 6:     while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  8557                           
  8558  096C  0024               	movlb	4	; select bank4
  8559  096D  081E               	movf	30,w	;volatile
  8560  096E  391F               	andlw	31
  8561  096F  1D03               	btfss	3,2
  8562  0970  2972               	goto	u1221
  8563  0971  2973               	goto	u1220
  8564  0972                     u1221:
  8565  0972  296C               	goto	l1994
  8566  0973                     u1220:
  8567  0973                     l1996:
  8568  0973  191C               	btfsc	28,2	;volatile
  8569  0974  2976               	goto	u1231
  8570  0975  2977               	goto	u1230
  8571  0976                     u1231:
  8572  0976  296C               	goto	l1994
  8573  0977                     u1230:
  8574  0977                     l148:
  8575  0977  0008               	return
  8576  0978                     __end_of_i2c_wait:
  8577                           
  8578                           	psect	text40
  8579  0F68                     __ptext40:	
  8580 ;; *************** function _get_next *****************
  8581 ;; Defined at:
  8582 ;;		line 13 in file "train_lib.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  next            1    wreg     PTR struct train
  8585 ;;		 -> main@next1(3), main@next(3), 
  8586 ;;  hour            1   10[COMMON] unsigned char 
  8587 ;;  min             1   11[COMMON] unsigned char 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  next            1   11[BANK0 ] PTR struct train
  8590 ;;		 -> main@next1(3), main@next(3), 
  8591 ;;  t_min           2    8[BANK0 ] unsigned short 
  8592 ;;  i               1   12[BANK0 ] unsigned char 
  8593 ;;  now_min         2    6[BANK0 ] unsigned short 
  8594 ;;  idx             1   10[BANK0 ] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8604 ;;      Params:         2       0       0       0       0       0
  8605 ;;      Locals:         0       7       0       0       0       0
  8606 ;;      Temps:          0       6       0       0       0       0
  8607 ;;      Totals:         2      13       0       0       0       0
  8608 ;;Total ram usage:       15 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    1
  8611 ;; This function calls:
  8612 ;;		___bmul
  8613 ;;		___wmul
  8614 ;; This function is called by:
  8615 ;;		_main
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           
  8620                           ;psect for function _get_next
  8621  0F68                     _get_next:
  8622                           
  8623                           ;incstack = 0
  8624                           ; Regs used in _get_next: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8625                           ;get_next@next stored from wreg
  8626  0F68  0020               	movlb	0	; select bank0
  8627  0F69  00AB               	movwf	get_next@next
  8628  0F6A                     l2646:
  8629                           
  8630                           ;train_lib.c: 14:     uint8_t idx = 0;
  8631  0F6A  01AA               	clrf	get_next@idx
  8632  0F6B                     l2648:
  8633                           
  8634                           ;train_lib.c: 15:     uint16_t now_min = ((uint16_t)hour * 60) + min;
  8635  0F6B  087B               	movf	get_next@min,w
  8636  0F6C  00A0               	movwf	??_get_next
  8637  0F6D  01A1               	clrf	??_get_next+1
  8638  0F6E  087A               	movf	get_next@hour,w
  8639  0F6F  00A2               	movwf	??_get_next+2
  8640  0F70  01A3               	clrf	??_get_next+3
  8641  0F71  0822               	movf	??_get_next+2,w
  8642  0F72  00F4               	movwf	___wmul@multiplier
  8643  0F73  0823               	movf	??_get_next+3,w
  8644  0F74  00F5               	movwf	___wmul@multiplier+1
  8645  0F75  303C               	movlw	60
  8646  0F76  00F6               	movwf	___wmul@multiplicand
  8647  0F77  3000               	movlw	0
  8648  0F78  00F7               	movwf	___wmul@multiplicand+1
  8649  0F79  318A  2269  318F   	fcall	___wmul
  8650  0F7C  0020               	movlb	0	; select bank0
  8651  0F7D  0820               	movf	??_get_next,w
  8652  0F7E  0774               	addwf	?___wmul,w
  8653  0F7F  00A6               	movwf	get_next@now_min
  8654  0F80  0821               	movf	??_get_next+1,w
  8655  0F81  3D75               	addwfc	?___wmul+1,w
  8656  0F82  00A7               	movwf	get_next@now_min+1
  8657  0F83                     l2650:
  8658                           
  8659                           ;train_lib.c: 17:     for(uint8_t i = 0; i < (sizeof(trains)/sizeof(trains[0])); i++){
  8660  0F83  01AC               	clrf	get_next@i
  8661  0F84                     l2656:
  8662                           
  8663                           ;train_lib.c: 18:         uint16_t t_min = ((uint16_t)trains[i].hour * 60) + trains[i].m
      +                          in;
  8664  0F84  3003               	movlw	3
  8665  0F85  00A0               	movwf	??_get_next
  8666  0F86  0820               	movf	??_get_next,w
  8667  0F87  00F0               	movwf	___bmul@multiplicand
  8668  0F88  082C               	movf	get_next@i,w
  8669  0F89  3189  21BE  318F   	fcall	___bmul
  8670  0F8C  3EA2               	addlw	(low ((_trains| (0+256)+2)))& (0+255)
  8671  0F8D  0086               	movwf	6
  8672  0F8E  3001               	movlw	1	; select bank3/4
  8673  0F8F  0087               	movwf	7
  8674  0F90  0801               	movf	1,w
  8675  0F91  0020               	movlb	0	; select bank0
  8676  0F92  00A1               	movwf	??_get_next+1
  8677  0F93  01A2               	clrf	??_get_next+2
  8678  0F94  3003               	movlw	3
  8679  0F95  00A3               	movwf	??_get_next+3
  8680  0F96  0823               	movf	??_get_next+3,w
  8681  0F97  00F0               	movwf	___bmul@multiplicand
  8682  0F98  082C               	movf	get_next@i,w
  8683  0F99  3189  21BE  318F   	fcall	___bmul
  8684  0F9C  3EA1               	addlw	(low ((_trains| (0+256)+1)))& (0+255)
  8685  0F9D  0086               	movwf	6
  8686  0F9E  3001               	movlw	1	; select bank3/4
  8687  0F9F  0087               	movwf	7
  8688  0FA0  0801               	movf	1,w
  8689  0FA1  0020               	movlb	0	; select bank0
  8690  0FA2  00A4               	movwf	??_get_next+4
  8691  0FA3  01A5               	clrf	??_get_next+5
  8692  0FA4  0824               	movf	??_get_next+4,w
  8693  0FA5  00F4               	movwf	___wmul@multiplier
  8694  0FA6  0825               	movf	??_get_next+5,w
  8695  0FA7  00F5               	movwf	___wmul@multiplier+1
  8696  0FA8  303C               	movlw	60
  8697  0FA9  00F6               	movwf	___wmul@multiplicand
  8698  0FAA  3000               	movlw	0
  8699  0FAB  00F7               	movwf	___wmul@multiplicand+1
  8700  0FAC  318A  2269  318F   	fcall	___wmul
  8701  0FAF  0020               	movlb	0	; select bank0
  8702  0FB0  0821               	movf	??_get_next+1,w
  8703  0FB1  0774               	addwf	?___wmul,w
  8704  0FB2  00A8               	movwf	get_next@t_min
  8705  0FB3  0822               	movf	??_get_next+2,w
  8706  0FB4  3D75               	addwfc	?___wmul+1,w
  8707  0FB5  00A9               	movwf	get_next@t_min+1
  8708  0FB6                     l2658:
  8709                           
  8710                           ;train_lib.c: 20:         if(now_min < t_min){
  8711  0FB6  0829               	movf	get_next@t_min+1,w
  8712  0FB7  0227               	subwf	get_next@now_min+1,w
  8713  0FB8  1D03               	skipz
  8714  0FB9  2FBC               	goto	u2255
  8715  0FBA  0828               	movf	get_next@t_min,w
  8716  0FBB  0226               	subwf	get_next@now_min,w
  8717  0FBC                     u2255:
  8718  0FBC  1803               	skipnc
  8719  0FBD  2FBF               	goto	u2251
  8720  0FBE  2FC0               	goto	u2250
  8721  0FBF                     u2251:
  8722  0FBF  2FC5               	goto	l2662
  8723  0FC0                     u2250:
  8724  0FC0                     l2660:
  8725                           
  8726                           ;train_lib.c: 21:             idx = i;
  8727  0FC0  082C               	movf	get_next@i,w
  8728  0FC1  00A0               	movwf	??_get_next
  8729  0FC2  0820               	movf	??_get_next,w
  8730  0FC3  00AA               	movwf	get_next@idx
  8731                           
  8732                           ;train_lib.c: 22:             break;
  8733  0FC4  2FCF               	goto	l2666
  8734  0FC5                     l2662:
  8735                           
  8736                           ;train_lib.c: 24:     }
  8737  0FC5  3001               	movlw	1
  8738  0FC6  00A0               	movwf	??_get_next
  8739  0FC7  0820               	movf	??_get_next,w
  8740  0FC8  07AC               	addwf	get_next@i,f
  8741  0FC9                     l2664:
  8742  0FC9  3010               	movlw	16
  8743  0FCA  022C               	subwf	get_next@i,w
  8744  0FCB  1C03               	skipc
  8745  0FCC  2FCE               	goto	u2261
  8746  0FCD  2FCF               	goto	u2260
  8747  0FCE                     u2261:
  8748  0FCE  2F84               	goto	l2656
  8749  0FCF                     u2260:
  8750  0FCF                     l2666:
  8751                           
  8752                           ;train_lib.c: 26:     next->idx = idx;
  8753  0FCF  082A               	movf	get_next@idx,w
  8754  0FD0  00A0               	movwf	??_get_next
  8755  0FD1  082B               	movf	get_next@next,w
  8756  0FD2  0086               	movwf	6
  8757  0FD3  0187               	clrf	7
  8758  0FD4  0820               	movf	??_get_next,w
  8759  0FD5  0081               	movwf	1
  8760  0FD6                     l2668:
  8761                           
  8762                           ;train_lib.c: 27:     next->hour = trains[idx].hour;
  8763  0FD6  3003               	movlw	3
  8764  0FD7  00A0               	movwf	??_get_next
  8765  0FD8  0820               	movf	??_get_next,w
  8766  0FD9  00F0               	movwf	___bmul@multiplicand
  8767  0FDA  082A               	movf	get_next@idx,w
  8768  0FDB  3189  21BE  318F   	fcall	___bmul
  8769  0FDE  3EA1               	addlw	(low ((_trains| (0+256)+1)))& (0+255)
  8770  0FDF  0086               	movwf	6
  8771  0FE0  3001               	movlw	1	; select bank3/4
  8772  0FE1  0087               	movwf	7
  8773  0FE2  0801               	movf	1,w
  8774  0FE3  0020               	movlb	0	; select bank0
  8775  0FE4  00A1               	movwf	??_get_next+1
  8776  0FE5  0A2B               	incf	get_next@next,w
  8777  0FE6  0086               	movwf	6
  8778  0FE7  0187               	clrf	7
  8779  0FE8  0821               	movf	??_get_next+1,w
  8780  0FE9  0081               	movwf	1
  8781  0FEA                     l2670:
  8782                           
  8783                           ;train_lib.c: 28:     next->min = trains[idx].min;
  8784  0FEA  3003               	movlw	3
  8785  0FEB  00A0               	movwf	??_get_next
  8786  0FEC  0820               	movf	??_get_next,w
  8787  0FED  00F0               	movwf	___bmul@multiplicand
  8788  0FEE  082A               	movf	get_next@idx,w
  8789  0FEF  3189  21BE  318F   	fcall	___bmul
  8790  0FF2  3EA2               	addlw	(low ((_trains| (0+256)+2)))& (0+255)
  8791  0FF3  0086               	movwf	6
  8792  0FF4  3001               	movlw	1	; select bank3/4
  8793  0FF5  0087               	movwf	7
  8794  0FF6  0801               	movf	1,w
  8795  0FF7  0020               	movlb	0	; select bank0
  8796  0FF8  00A1               	movwf	??_get_next+1
  8797  0FF9  082B               	movf	get_next@next,w
  8798  0FFA  3E02               	addlw	2
  8799  0FFB  0086               	movwf	6
  8800  0FFC  0187               	clrf	7
  8801  0FFD  0821               	movf	??_get_next+1,w
  8802  0FFE  0081               	movwf	1
  8803  0FFF                     l228:
  8804  0FFF  0008               	return
  8805  1000                     __end_of_get_next:
  8806                           
  8807                           	psect	text41
  8808  09BE                     __ptext41:	
  8809 ;; *************** function ___bmul *****************
  8810 ;; Defined at:
  8811 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;  multiplier      1    wreg     unsigned char 
  8814 ;;  multiplicand    1    0[COMMON] unsigned char 
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;  multiplier      1    3[COMMON] unsigned char 
  8817 ;;  product         1    2[COMMON] unsigned char 
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1    wreg      unsigned char 
  8820 ;; Registers used:
  8821 ;;		wreg, status,2, status,0
  8822 ;; Tracked objects:
  8823 ;;		On entry : 0/0
  8824 ;;		On exit  : 0/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8827 ;;      Params:         1       0       0       0       0       0
  8828 ;;      Locals:         2       0       0       0       0       0
  8829 ;;      Temps:          1       0       0       0       0       0
  8830 ;;      Totals:         4       0       0       0       0       0
  8831 ;;Total ram usage:        4 bytes
  8832 ;; Hardware stack levels used:    1
  8833 ;; This function calls:
  8834 ;;		Nothing
  8835 ;; This function is called by:
  8836 ;;		_get_next
  8837 ;;		_bcd_2_decimal
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           
  8842                           ;psect for function ___bmul
  8843  09BE                     ___bmul:
  8844                           
  8845                           ;incstack = 0
  8846                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8847                           ;___bmul@multiplier stored from wreg
  8848  09BE  00F3               	movwf	___bmul@multiplier
  8849  09BF                     l2240:
  8850  09BF  01F2               	clrf	___bmul@product
  8851  09C0                     l2242:
  8852  09C0  1C73               	btfss	___bmul@multiplier,0
  8853  09C1  29C3               	goto	u1851
  8854  09C2  29C4               	goto	u1850
  8855  09C3                     u1851:
  8856  09C3  29C8               	goto	l2246
  8857  09C4                     u1850:
  8858  09C4                     l2244:
  8859  09C4  0870               	movf	___bmul@multiplicand,w
  8860  09C5  00F1               	movwf	??___bmul
  8861  09C6  0871               	movf	??___bmul,w
  8862  09C7  07F2               	addwf	___bmul@product,f
  8863  09C8                     l2246:
  8864  09C8  1003               	clrc
  8865  09C9  0DF0               	rlf	___bmul@multiplicand,f
  8866  09CA                     l2248:
  8867  09CA  1003               	clrc
  8868  09CB  0CF3               	rrf	___bmul@multiplier,f
  8869  09CC  0873               	movf	___bmul@multiplier,w
  8870  09CD  1D03               	btfss	3,2
  8871  09CE  29D0               	goto	u1861
  8872  09CF  29D1               	goto	u1860
  8873  09D0                     u1861:
  8874  09D0  29C0               	goto	l2242
  8875  09D1                     u1860:
  8876  09D1                     l2250:
  8877  09D1  0872               	movf	___bmul@product,w
  8878  09D2                     l442:
  8879  09D2  0008               	return
  8880  09D3                     __end_of___bmul:
  8881                           
  8882                           	psect	text42
  8883  0C32                     __ptext42:	
  8884 ;; *************** function _calc_money *****************
  8885 ;; Defined at:
  8886 ;;		line 12 in file "money_lib.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  date            6    0[BANK0 ] struct Date
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  min             2    8[BANK0 ] unsigned short 
  8891 ;;  hour            2    6[BANK0 ] unsigned short 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  2    0[BANK0 ] unsigned short 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0, pclath, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8901 ;;      Params:         0       6       0       0       0       0
  8902 ;;      Locals:         0       4       0       0       0       0
  8903 ;;      Temps:          4       0       0       0       0       0
  8904 ;;      Totals:         4      10       0       0       0       0
  8905 ;;Total ram usage:       14 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    1
  8908 ;; This function calls:
  8909 ;;		___wmul
  8910 ;; This function is called by:
  8911 ;;		_main
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           
  8916                           ;psect for function _calc_money
  8917  0C32                     _calc_money:
  8918  0C32                     l2708:	
  8919                           ;incstack = 0
  8920                           ; Regs used in _calc_money: [wreg+status,2+status,0+pclath+cstack]
  8921                           
  8922  0C32  3012               	movlw	18
  8923  0C33  0020               	movlb	0	; select bank0
  8924  0C34  0223               	subwf	calc_money@date+3,w
  8925  0C35  1C03               	skipc
  8926  0C36  2C38               	goto	u2271
  8927  0C37  2C39               	goto	u2270
  8928  0C38                     u2271:
  8929  0C38  2C70               	goto	l2718
  8930  0C39                     u2270:
  8931  0C39                     l2710:
  8932                           
  8933                           ;money_lib.c: 15:         uint16_t hour = (uint16_t)date.hour;
  8934  0C39  0823               	movf	calc_money@date+3,w
  8935  0C3A  00FA               	movwf	??_calc_money
  8936  0C3B  01FB               	clrf	??_calc_money+1
  8937  0C3C  087A               	movf	??_calc_money,w
  8938  0C3D  00A6               	movwf	calc_money@hour
  8939  0C3E  087B               	movf	??_calc_money+1,w
  8940  0C3F  00A7               	movwf	calc_money@hour+1
  8941                           
  8942                           ;money_lib.c: 16:         uint16_t min = (uint16_t)date.min;
  8943  0C40  0824               	movf	calc_money@date+4,w
  8944  0C41  00FA               	movwf	??_calc_money
  8945  0C42  01FB               	clrf	??_calc_money+1
  8946  0C43  087A               	movf	??_calc_money,w
  8947  0C44  00A8               	movwf	calc_money@min
  8948  0C45  087B               	movf	??_calc_money+1,w
  8949  0C46  00A9               	movwf	calc_money@min+1
  8950  0C47                     l2712:
  8951  0C47  0827               	movf	calc_money@hour+1,w
  8952  0C48  00F5               	movwf	___wmul@multiplier+1
  8953  0C49  0826               	movf	calc_money@hour,w
  8954  0C4A  00F4               	movwf	___wmul@multiplier
  8955  0C4B  3054               	movlw	84
  8956  0C4C  00F6               	movwf	___wmul@multiplicand
  8957  0C4D  3006               	movlw	6
  8958  0C4E  00F7               	movwf	___wmul@multiplicand+1
  8959  0C4F  318A  2269  318C   	fcall	___wmul
  8960  0C52  0874               	movf	?___wmul,w
  8961  0C53  00FA               	movwf	??_calc_money
  8962  0C54  0875               	movf	?___wmul+1,w
  8963  0C55  00FB               	movwf	??_calc_money+1
  8964  0C56  0020               	movlb	0	; select bank0
  8965  0C57  0829               	movf	calc_money@min+1,w
  8966  0C58  00F5               	movwf	___wmul@multiplier+1
  8967  0C59  0828               	movf	calc_money@min,w
  8968  0C5A  00F4               	movwf	___wmul@multiplier
  8969  0C5B  301B               	movlw	27
  8970  0C5C  00F6               	movwf	___wmul@multiplicand
  8971  0C5D  3000               	movlw	0
  8972  0C5E  00F7               	movwf	___wmul@multiplicand+1
  8973  0C5F  318A  2269  318C   	fcall	___wmul
  8974  0C62  0874               	movf	?___wmul,w
  8975  0C63  077A               	addwf	??_calc_money,w
  8976  0C64  00FC               	movwf	??_calc_money+2
  8977  0C65  0875               	movf	?___wmul+1,w
  8978  0C66  3D7B               	addwfc	??_calc_money+1,w
  8979  0C67  00FD               	movwf	??_calc_money+3
  8980  0C68  087C               	movf	??_calc_money+2,w
  8981  0C69  3E50               	addlw	80
  8982  0C6A  0020               	movlb	0	; select bank0
  8983  0C6B  00A0               	movwf	?_calc_money
  8984  0C6C  3092               	movlw	146
  8985  0C6D  3D7D               	addwfc	??_calc_money+3,w
  8986  0C6E  00A1               	movwf	?_calc_money+1
  8987  0C6F  2C74               	goto	l265
  8988  0C70                     l2718:
  8989                           
  8990                           ;money_lib.c: 19:         return 777777770;
  8991  0C70  306A               	movlw	106
  8992  0C71  00A0               	movwf	?_calc_money
  8993  0C72  30F2               	movlw	242
  8994  0C73  00A1               	movwf	?_calc_money+1
  8995  0C74                     l265:
  8996  0C74  0008               	return
  8997  0C75                     __end_of_calc_money:
  8998                           
  8999                           	psect	text43
  9000  0A69                     __ptext43:	
  9001 ;; *************** function ___wmul *****************
  9002 ;; Defined at:
  9003 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  multiplier      2    4[COMMON] unsigned int 
  9006 ;;  multiplicand    2    6[COMMON] unsigned int 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;  product         2    8[COMMON] unsigned int 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  2    4[COMMON] unsigned int 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9018 ;;      Params:         4       0       0       0       0       0
  9019 ;;      Locals:         2       0       0       0       0       0
  9020 ;;      Temps:          0       0       0       0       0       0
  9021 ;;      Totals:         6       0       0       0       0       0
  9022 ;;Total ram usage:        6 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_print_remaing
  9028 ;;		_get_next
  9029 ;;		_calc_money
  9030 ;;		_atoi
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           
  9035                           ;psect for function ___wmul
  9036  0A69                     ___wmul:
  9037  0A69                     l1998:	
  9038                           ;incstack = 0
  9039                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9040                           
  9041  0A69  01F8               	clrf	___wmul@product
  9042  0A6A  01F9               	clrf	___wmul@product+1
  9043  0A6B                     l2000:
  9044  0A6B  1C74               	btfss	___wmul@multiplier,0
  9045  0A6C  2A6E               	goto	u1241
  9046  0A6D  2A6F               	goto	u1240
  9047  0A6E                     u1241:
  9048  0A6E  2A73               	goto	l416
  9049  0A6F                     u1240:
  9050  0A6F                     l2002:
  9051  0A6F  0876               	movf	___wmul@multiplicand,w
  9052  0A70  07F8               	addwf	___wmul@product,f
  9053  0A71  0877               	movf	___wmul@multiplicand+1,w
  9054  0A72  3DF9               	addwfc	___wmul@product+1,f
  9055  0A73                     l416:
  9056  0A73  3001               	movlw	1
  9057  0A74                     u1255:
  9058  0A74  35F6               	lslf	___wmul@multiplicand,f
  9059  0A75  0DF7               	rlf	___wmul@multiplicand+1,f
  9060  0A76  0B89               	decfsz	9,f
  9061  0A77  2A74               	goto	u1255
  9062  0A78                     l2004:
  9063  0A78  3001               	movlw	1
  9064  0A79                     u1265:
  9065  0A79  36F5               	lsrf	___wmul@multiplier+1,f
  9066  0A7A  0CF4               	rrf	___wmul@multiplier,f
  9067  0A7B  0B89               	decfsz	9,f
  9068  0A7C  2A79               	goto	u1265
  9069  0A7D                     l2006:
  9070  0A7D  0874               	movf	___wmul@multiplier,w
  9071  0A7E  0475               	iorwf	___wmul@multiplier+1,w
  9072  0A7F  1D03               	btfss	3,2
  9073  0A80  2A82               	goto	u1271
  9074  0A81  2A83               	goto	u1270
  9075  0A82                     u1271:
  9076  0A82  2A6B               	goto	l2000
  9077  0A83                     u1270:
  9078  0A83                     l2008:
  9079  0A83  0879               	movf	___wmul@product+1,w
  9080  0A84  00F5               	movwf	?___wmul+1
  9081  0A85  0878               	movf	___wmul@product,w
  9082  0A86  00F4               	movwf	?___wmul
  9083  0A87                     l418:
  9084  0A87  0008               	return
  9085  0A88                     __end_of___wmul:
  9086                           
  9087                           	psect	text44
  9088  094E                     __ptext44:	
  9089 ;; *************** function _SYSTEM_Initialize *****************
  9090 ;; Defined at:
  9091 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;		None
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      void 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0, pclath, cstack
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9105 ;;      Params:         0       0       0       0       0       0
  9106 ;;      Locals:         0       0       0       0       0       0
  9107 ;;      Temps:          0       0       0       0       0       0
  9108 ;;      Totals:         0       0       0       0       0       0
  9109 ;;Total ram usage:        0 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; Hardware stack levels required when called:    1
  9112 ;; This function calls:
  9113 ;;		_OSCILLATOR_Initialize
  9114 ;;		_PIN_MANAGER_Initialize
  9115 ;;		_WDT_Initialize
  9116 ;; This function is called by:
  9117 ;;		_main
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121                           
  9122                           ;psect for function _SYSTEM_Initialize
  9123  094E                     _SYSTEM_Initialize:
  9124  094E                     l2548:	
  9125                           ;incstack = 0
  9126                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9127                           
  9128                           
  9129                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  9130  094E  3189  21D3  3189   	fcall	_PIN_MANAGER_Initialize
  9131                           
  9132                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  9133  0951  3189  2140  3189   	fcall	_OSCILLATOR_Initialize
  9134                           
  9135                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  9136  0954  3189  2130  3189   	fcall	_WDT_Initialize
  9137  0957                     l17:
  9138  0957  0008               	return
  9139  0958                     __end_of_SYSTEM_Initialize:
  9140                           
  9141                           	psect	text45
  9142  0930                     __ptext45:	
  9143 ;; *************** function _WDT_Initialize *****************
  9144 ;; Defined at:
  9145 ;;		line 68 in file "mcc_generated_files/mcc.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;		None
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      void 
  9152 ;; Registers used:
  9153 ;;		wreg
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9159 ;;      Params:         0       0       0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0
  9162 ;;      Totals:         0       0       0       0       0       0
  9163 ;;Total ram usage:        0 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_SYSTEM_Initialize
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           
  9173                           ;psect for function _WDT_Initialize
  9174  0930                     _WDT_Initialize:
  9175  0930                     l2496:	
  9176                           ;incstack = 0
  9177                           ; Regs used in _WDT_Initialize: [wreg]
  9178                           
  9179                           
  9180                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  9181  0930  3016               	movlw	22
  9182  0931  0021               	movlb	1	; select bank1
  9183  0932  0097               	movwf	23	;volatile
  9184  0933                     l23:
  9185  0933  0008               	return
  9186  0934                     __end_of_WDT_Initialize:
  9187                           
  9188                           	psect	text46
  9189  09D3                     __ptext46:	
  9190 ;; *************** function _PIN_MANAGER_Initialize *****************
  9191 ;; Defined at:
  9192 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      void 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9206 ;;      Params:         0       0       0       0       0       0
  9207 ;;      Locals:         0       0       0       0       0       0
  9208 ;;      Temps:          0       0       0       0       0       0
  9209 ;;      Totals:         0       0       0       0       0       0
  9210 ;;Total ram usage:        0 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_SYSTEM_Initialize
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           
  9220                           ;psect for function _PIN_MANAGER_Initialize
  9221  09D3                     _PIN_MANAGER_Initialize:
  9222  09D3                     l2478:	
  9223                           ;incstack = 0
  9224                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9225                           
  9226                           
  9227                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9228  09D3  0022               	movlb	2	; select bank2
  9229  09D4  018C               	clrf	12	;volatile
  9230                           
  9231                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  9232  09D5  018D               	clrf	13	;volatile
  9233  09D6                     l2480:
  9234                           
  9235                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  9236  09D6  30FF               	movlw	255
  9237  09D7  0021               	movlb	1	; select bank1
  9238  09D8  008C               	movwf	12	;volatile
  9239  09D9                     l2482:
  9240                           
  9241                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  9242  09D9  30FF               	movlw	255
  9243  09DA  008D               	movwf	13	;volatile
  9244  09DB                     l2484:
  9245                           
  9246                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  9247  09DB  30FE               	movlw	254
  9248  09DC  0023               	movlb	3	; select bank3
  9249  09DD  008D               	movwf	13	;volatile
  9250  09DE                     l2486:
  9251                           
  9252                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  9253  09DE  301F               	movlw	31
  9254  09DF  008C               	movwf	12	;volatile
  9255                           
  9256                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  9257  09E0  0024               	movlb	4	; select bank4
  9258  09E1  018D               	clrf	13	;volatile
  9259                           
  9260                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  9261  09E2  018C               	clrf	12	;volatile
  9262  09E3                     l2488:
  9263                           
  9264                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  9265  09E3  0021               	movlb	1	; select bank1
  9266  09E4  1795               	bsf	21,7	;volatile
  9267                           
  9268                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  9269  09E5  0022               	movlb	2	; select bank2
  9270  09E6  019D               	clrf	29	;volatile
  9271                           
  9272                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  9273  09E7  019E               	clrf	30	;volatile
  9274  09E8                     l48:
  9275  09E8  0008               	return
  9276  09E9                     __end_of_PIN_MANAGER_Initialize:
  9277                           
  9278                           	psect	text47
  9279  0940                     __ptext47:	
  9280 ;; *************** function _OSCILLATOR_Initialize *****************
  9281 ;; Defined at:
  9282 ;;		line 58 in file "mcc_generated_files/mcc.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, status,2
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9296 ;;      Params:         0       0       0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; This function calls:
  9303 ;;		Nothing
  9304 ;; This function is called by:
  9305 ;;		_SYSTEM_Initialize
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           
  9310                           ;psect for function _OSCILLATOR_Initialize
  9311  0940                     _OSCILLATOR_Initialize:
  9312  0940                     l2490:	
  9313                           ;incstack = 0
  9314                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9315                           
  9316                           
  9317                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  9318  0940  3070               	movlw	112
  9319  0941  0021               	movlb	1	; select bank1
  9320  0942  0099               	movwf	25	;volatile
  9321  0943                     l2492:
  9322                           
  9323                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  9324  0943  0198               	clrf	24	;volatile
  9325  0944                     l2494:
  9326                           
  9327                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  9328  0944  0022               	movlb	2	; select bank2
  9329  0945  0196               	clrf	22	;volatile
  9330  0946                     l20:
  9331  0946  0008               	return
  9332  0947                     __end_of_OSCILLATOR_Initialize:
  9333  007E                     btemp	set	126	;btemp
  9334  007E                     wtemp0	set	126
  9335                           
  9336                           	psect	config
  9337                           
  9338                           ;Config register CONFIG1 @ 0x8007
  9339                           ;	Oscillator Selection
  9340                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9341                           ;	Watchdog Timer Enable
  9342                           ;	WDTE = OFF, WDT disabled
  9343                           ;	Power-up Timer Enable
  9344                           ;	PWRTE = OFF, PWRT disabled
  9345                           ;	MCLR Pin Function Select
  9346                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9347                           ;	Flash Program Memory Code Protection
  9348                           ;	CP = OFF, Program memory code protection is disabled
  9349                           ;	Data Memory Code Protection
  9350                           ;	CPD = OFF, Data memory code protection is disabled
  9351                           ;	Brown-out Reset Enable
  9352                           ;	BOREN = ON, Brown-out Reset enabled
  9353                           ;	Clock Out Enable
  9354                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9355                           ;	Internal/External Switchover
  9356                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9357                           ;	Fail-Safe Clock Monitor Enable
  9358                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9359  8007                     	org	32775
  9360  8007  3FE4               	dw	16356
  9361                           
  9362                           ;Config register CONFIG2 @ 0x8008
  9363                           ;	Flash Memory Self-Write Protection
  9364                           ;	WRT = OFF, Write protection off
  9365                           ;	PLL Enable
  9366                           ;	PLLEN = OFF, 4x PLL disabled
  9367                           ;	Stack Overflow/Underflow Reset Enable
  9368                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9369                           ;	Brown-out Reset Voltage Selection
  9370                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9371                           ;	Low-Voltage Programming Enable
  9372                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  9373  8008                     	org	32776
  9374  8008  1EFF               	dw	7935

Data Sizes:
    Strings     62
    Constant    6
    Data        52
    BSS         75
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     44      74
    BANK2            80      0      48
    BANK3            80      0      48
    BANK4            48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> line2(BANK2[16]), line1(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> line2(BANK2[16]), line1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S957_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> line2(BANK2[16]), line1(BANK1[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> line2(BANK2[16]), line1(BANK1[16]), 

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK1[6]), 

    write_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK1[6]), 

    get_next@next	PTR struct train size(1) Largest target is 3
		 -> main@next1(BANK1[3]), main@next(BANK1[3]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> line2(BANK2[16]), line1(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->_calc_money
    _write_date->_decimal_2_bcd
    _decimal_2_bcd->___awdiv
    _read_date->__read
    __read->_bcd_2_decimal
    _bcd_2_decimal->___bmul
    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_next->___wmul
    _calc_money->___wmul
    ___wmul->___bmul

Critical Paths under _main in BANK0

    _main->_print_money
    _main->_print_remaing
    _main->_print_train
    _write_date->_decimal_2_bcd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_print_remaing
    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   45137
                                             30 BANK1     14    14      0
                  _SYSTEM_Initialize
                         _calc_money
                           _get_next
                      _lcd_backlight
                           _lcd_init
                     _lcd_set_cursor
                        _print_money
                      _print_remaing
                        _print_train
                          _read_date
                         _write_date
 ---------------------------------------------------------------------------------
 (1) _write_date                                           3     3      0    1131
                                             10 COMMON     3     3      0
                      _decimal_2_bcd
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _decimal_2_bcd                                        8     8      0     944
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     593
                                             11 COMMON     2     2      0
                              __read
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     428
                                              8 COMMON     3     3      0
                      _bcd_2_decimal
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _bcd_2_decimal                                        4     4      0     316
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _print_train                                         10     4      6   11833
                                             75 BANK0      4     4      0
                                             17 BANK1      6     0      6
                          _init_char
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_remaing                                       17     8      9   13525
                                             75 BANK0      4     4      0
                                             17 BANK1     13     4      9
                             ___wmul
                          _init_char
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_money                                         12     4      8   11796
                                             75 BANK0      4     4      0
                                             17 BANK1      8     0      8
                          _init_char
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    9652
                                             13 COMMON     1     1      0
                                              0 BANK1     17     9      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    8791
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    41      2    8461
                                             46 BANK0     21    19      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2397
                                             10 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       8     7      1    1064
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            4     2      2     757
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (3) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _init_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_next                                            15    13      2    2534
                                             10 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     272
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _calc_money                                          14     8      6    1747
                                             10 COMMON     4     4      0
                                              0 BANK0     10     4      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1556
                                              4 COMMON     6     2      4
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_money
     ___wmul
       ___bmul (ARG)
   _get_next
     ___bmul
     ___wmul
       ___bmul (ARG)
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_init
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_set_cursor
     _command
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
   _print_money
     _init_char
     _lcd_clear
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_print
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _lcd_set_cursor
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___bmul (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _print_remaing
     ___wmul
       ___bmul (ARG)
     _init_char
     _lcd_clear
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_print
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _lcd_set_cursor
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___bmul (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _print_train
     _init_char
     _lcd_clear
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
     _lcd_print
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _lcd_set_cursor
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___bmul (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _read_date
     __read
       _bcd_2_decimal
         ___bmul
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _write_date
     _decimal_2_bcd
       ___awdiv
       ___awmod
     _i2c_start
       _i2c_wait
     _i2c_stop
     _i2c_write
       _i2c_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     108       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2C      4A       8       92.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      30      10       60.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      30      12       60.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0     108      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 20:28:38 2021

                 ___bmul@product 0072                               l20 0946                               l23 0933  
                             l17 0957                               l48 09E8                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0076            __end_of_decimal_2_bcd 0B99                              l121 092E  
                            l202 0985                              l130 0D0C                              l211 0B6A  
                            l220 0C31                              l124 0ED7                              l205 0AEE  
                            l151 095D                              l127 0F67                              l160 094D  
                            l217 0A68                              l154 0961                              l243 09BD  
                            l163 0967                              l228 0FFF                              l148 0977  
                            l172 098E                              l180 09F5                              l252 0ACA  
                            l157 0949                              l181 09FF                              l166 096B  
                            l246 0B98                              l175 0995                              l255 0CBA  
                            l416 0A73                              l265 0C74                              l169 098A  
                            l249 0E73                              l418 0A87                              l442 09D2  
                            l530 02D3                              l178 09F1                              l196 09A9  
                            l516 04AF                              l517 04C0                              l199 03BF  
                            l529 02C2                              l910 0024                              l582 0D5F  
                            l913 0046                              l569 0E13                              l915 0060  
                            l923 0530                              l924 0548                              l941 0630  
                            l918 050A                              l950 0665                              l927 05B9  
                            l919 0513                              l951 0668                              l952 066B  
                            l953 066E                              l970 07D3                              l955 06A0  
                            l948 0659                              l981 0A31                              l879 0B40  
                            l984 0A31                              l977 0BF9                              _abs 0A18  
                            _pad 0008                     ___awmod@sign 0076                              wreg 0009  
                  calc_money@min 0028              bcd_2_decimal@number 0077                      command@mode 0072  
                    get_next@idx 002A                      get_next@min 007B                   ?_bcd_2_decimal 0070  
                ?_lcd_set_cursor 0078                             l1002 009E                             l1015 010F  
                           l2000 0A6B                             l1041 0DB4                             l2002 0A6F  
                           l1018 0A17                             l1026 0AA8                             ?_abs 0073  
                           l2004 0A78                             l2020 03F6                             l2012 03C0  
                           l1052 092F                             l2006 0A7D                             l2110 0A88  
                           l2030 0433                             l2022 0415                             l2014 03C1  
                           l2102 0A18                             l2008 0A83                             l2112 0A8A  
                           l2200 008B                             l2040 046D                             l2032 043B  
                           l2024 0419                             l2016 03CB                             l2104 0A25  
                           l1049 0B17                             l2122 0958                             l2130 0992  
                           l2106 0A00                             l2114 0A91                             l2210 00A3  
                           l2202 008C                             l2042 047D                             l2034 043F  
                           l2026 0423                             l2018 03EC                             l2050 01EA  
                           l1058 0A4B                             l2124 095B                             l2116 0AA0  
                           l2220 00F3                             l2212 00B7                             l2044 047E  
                           l2036 0443                             l2028 0430                             l2060 023F  
                           l2052 01EB                             l2140 050F                             l2132 04C3  
                           l2300 06F3                             l3012 0689                             l2126 0947  
                           l2118 0AA1                             l2222 00F9                             l3014 00AF  
                           l2206 0093                             l2038 044B                             l2046 048C  
                           l2070 025F                             l2062 024C                             l2054 01F5  
                           l2150 0543                             l2142 0522                             l2134 04D3  
                           l2310 0740                             l2240 09BF                             l2128 0987  
                           l2224 00FF                             l2216 00D7                             l2208 009A  
                           l2048 0491                             l2072 0281                             l2064 024F  
                           l2056 0216                             l2080 000A                             l2160 0588  
                           l2152 054D                             l2144 0528                             l2136 04E6  
                           l2320 078C                             l2312 0748                             l2304 0717  
                           l2400 0DD0                             l2250 09D1                             l2242 09C0  
                           l2226 010B                             l2074 0291                             l2066 0257  
                           l2058 0220                             l2090 0027                             l2082 000F  
                           l2170 05EF                             l2162 058C                             l2154 0550  
                           l2146 0538                             l2138 04EC                             l2330 07AD  
                           l2322 0794                             l2314 0761                             l2306 071D  
                           l2410 0DE6                             l2402 0DD6                             l2244 09C4  
                           l2236 0997                             l2500 0B59                             l2068 025B  
                           l2076 029F                             l2092 0033                             l2084 0018  
                           l2180 060B                             l2164 05C7                             l2172 05F4  
                           l2156 0555                             l2148 053E                             l2324 079F  
                           l2308 072F                             l2260 0651                             l2412 0DF5  
                           l2404 0DD9                             l2420 0E05                             l2246 09C8  
                           l2238 09A2                             l2502 0B5B                             l2190 0061  
                           l2078 02A4                             l2094 0038                             l2086 001D  
                           l2182 0610                             l2174 05FB                             l2166 05D4  
                           l2158 0584                             l2318 077B                             l2262 0655  
                           l2334 07B0                             l2254 0633                             l2510 0B23  
                           l2350 09EA                             l2422 0E0A                             l2414 0DF9  
                           l2406 0DDE                             l2430 0D0E                             l2248 09CA  
                           l2600 0380                             l2520 0AD7                             l2504 0B65  
                           l2192 0067                             l2096 004B                             l2088 0022  
                           l2184 0614                             l2176 0600                             l2168 05E1  
                           l2336 07C9                             l2328 07A5                             l2264 065B  
                           l2280 069A                             l2256 0644                             l2512 0B25  
                           l2360 09FE                             l2352 09F0                             l2424 0E0F  
                           l2416 0DFA                             l2408 0DE2                             l2440 0D22  
                           l2432 0D12                             l2610 03AC                             l2602 0384  
                           l2522 0ADB                             l2370 0C1A                             l2194 006B  
                           l2098 0054                             l2178 0605                             l2186 061D  
                           l2290 06D0                             l2282 06A5                             l2274 0671  
                           l2258 064C                             l2514 0B34                             l2506 0B18  
                           l2354 09F6                             l2346 0962                             l2418 0DFF  
                           l2450 0D38                             l2442 0D28                             l2434 0D17  
                           l2620 0981                             l2612 03B0                             l2604 0388  
                           l2524 0ADF                             l2372 0C1F                             l2364 0BFB  
                           l2196 006D                             l2292 06D4                             l2284 06A9  
                           l2508 0B21                             l2380 09AB                             l2356 09FA  
                           l2348 0965                             l2460 0D56                             l2452 0D42  
                           l2444 0D2B                             l2436 0D19                             l2428 0D0D  
                           l2710 0C39                             l2614 03B4                             l2606 038C  
                           l2550 02D4                             l2526 0AE3                             l2518 0ACB  
                           l2374 0C23                             l2366 0C11                             l2198 0077  
                           l2294 06D5                             l2286 06BB                             l2278 0676  
                           l2470 0BD3                             l2358 09FB                             l2542 0AAA  
                           l2390 0DBF                             l2462 0D5B                             l2454 0D46  
                           l2446 0D30                             l2438 0D1D                             l2630 0E41  
                           l2622 0E15                             l2480 09D6                             l2712 0C47  
                           l2616 0978                             l2608 03A8                             l2560 02FF  
                           l2552 02E0                             l2376 0C27                             l2368 0C15  
                           l2288 06C3                             l2296 06DB                             l2472 0BE7  
                           l2544 0AC6                             l2640 0C99                             l2392 0DC1  
                           l2384 0DB5                             l2456 0D4B                             l2448 0D34  
                           l2632 0E64                             l2624 0E20                             l2490 0940  
                           l2482 09D9                             l2650 0F83                             l2618 097C  
                           l2570 0319                             l2562 0306                             l2554 02E4  
                           l2378 0C2C                             l2298 06EB                             l2474 0BF1  
                           l2466 0BCB                             l2642 0CA4                             l2394 0DC5  
                           l2386 0DB6                             l2458 0D51                             l2538 0B6C  
                           l2634 0E67                             l2626 0E2B                             l2492 0943  
                           l2484 09DB                             l2548 094E                             l2708 0C32  
                           l2660 0FC0                             l2580 0339                             l2572 031D  
                           l2564 030A                             l2556 02E8                             l2468 0BCF  
                           l2900 0CF8                             l2644 0CAF                             l2636 0C76  
                           l2396 0DCA                             l2388 0DBA                             l2628 0E36  
                           l2494 0944                             l2486 09DE                             l2478 09D3  
                           l2718 0C70                             l2670 0FEA                             l2662 0FC5  
                           l2646 0F6A                             l2590 034D                             l2582 033D  
                           l2574 0321                             l2566 030E                             l2558 02EC  
                           l2902 0CFF                             l2638 0C95                             l2398 0DCE  
                           l2910 0116                             l2488 09E3                             l2496 0930  
                           l2664 0FC9                             l2656 0F84                             l2648 0F6B  
                           l2592 0369                             l2584 0341                             l2576 0331  
                           l2568 0315                             l1960 0D65                             l2904 0D05  
                           l2920 011F                             l2912 0118                             l2666 0FCF  
                           l2658 0FB6                             l2594 036D                             l2586 0345  
                           l2578 0335                             l2850 0A59                             l2498 0B43  
                           l1970 0DAB                             l1962 0D6A                             l2930 0133  
                           l2922 0122                             l2914 011B                             l2906 0110  
                           l2668 0FD6                             l2596 0371                             l2588 0349  
                           l2852 0A5F                             l2844 0A4C                             l1964 0D6F  
                           l1980 0B07                             l2860 0EBB                             l2940 0142  
                           l2932 0137                             l2924 0125                             l2916 011D  
                           l2908 0113                             l2598 0375                             l2846 0A4D  
                           l1966 0D79                             l1958 0D60                             l1974 0AF1  
                           l1982 0A33                             l2870 0ED8                             l2862 0EBE  
                           l2854 0E74                             l2950 016D                             l2942 0146  
                           l2934 013B                             l2926 012A                             l2918 011E  
                           ?_pad 0024                             l1992 096C                             l2848 0A55  
                           l1968 0D97                             l1976 0AF4                             l1984 0A38  
                           l2880 0F4B                             l2872 0EDB                             l2864 0EC3  
                           l2856 0E77                             l2960 01AD                             l2952 0173  
                           l2944 014A                             l2936 013F                             l2928 012F  
                           l1994 096C                             l1978 0B02                             l1986 0A3C  
                           l2890 0CBB                             l2882 0F4E                             l2874 0EFA  
                           l2866 0ECA                             l2858 0E99                             l2954 0183  
                           l2946 0153                             l2938 0140                             l1996 0973  
                           l1988 0A45                             l2892 0CBE                             l2884 0F53  
                           l2876 0F18                             l2868 0ED0                             l2956 0189  
                           l2948 0160                             l1998 0A69                             l2894 0CE0  
                           l2886 0F5A                             l2878 0F39                             l2958 01A7  
                           l2896 0CF0                             l2888 0F60                             l2898 0CF3  
                           STR_1 0802                             STR_2 0802                             STR_3 0802  
                           STR_4 0814                             STR_5 0825                             STR_6 0834  
                           u1200 0B17                             u1201 0B16                             u1210 0A45  
                           u1211 0A44                             u1220 0973                             u1300 03F6  
                           u2100 0E05                             u2020 0DBA                             u1221 0972  
                           u2005 0C06                             u1301 03F5                             u2101 0E04  
                           u2021 0DB9                             u1230 0977                             u2110 0E0A  
                           u2030 0DC5                             u1231 0976                             u2015 09B5  
                           u2111 0E09                             u2031 0DC4                             u1240 0A6F  
                           u1320 0420                             u1160 0D65                             u2040 0DD6  
                           u2200 0D56                             u2120 0D12                             u1241 0A6E  
                           u1161 0D64                             u2041 0DD5                             u2201 0D55  
                           u2121 0D11                             u1330 0430                             u1410 0220  
                           u1170 0D6A                             u2210 0BF1                             u2130 0D1D  
                           u1331 042F                             u1411 021F                             u1171 0D69  
                           u2211 0BF0                             u2131 0D1C                             u2220 0B59  
                           u1340 0443                             u1180 0D79                             u1500 001D  
                           u2060 0DE6                             u2140 0D28                             u2221 0B58  
                           u1341 0442                             u1181 0D78                             u1501 001C  
                           u2061 0DE5                             u2141 0D27                             _LATA 010C  
                           u1270 0A83                             u2310 0A68                             u1350 046D  
                           u1430 024C                             u1190 0D97                             u1510 0046  
                           _LATB 010D                             u1271 0A82                             u1255 0A74  
                           u2311 0A67                             u1351 046C                             u1431 024B  
                           u1191 0D96                             u1511 0045                             u2055 0DDA  
                           u1600 098E                             u1360 048C                             u1280 03CB  
                           u1440 025F                             u1520 004B                             u2080 0DF5  
                           u2160 0D38                             u2320 0173                             u1265 0A79  
                           u1601 098D                             u1361 048B                             u1281 03CA  
                           u1441 025E                             u1521 004A                             u2081 0DF4  
                           u2161 0D37                             u2321 0172                             u2250 0FC0  
                           u1610 0992                             u1370 0491                             u1450 0281  
                           u1530 0A25                             u2170 0D42                             u2330 0189  
                           u2251 0FBF                             u1611 0991                             u1371 0490  
                           u1355 0469                             u1451 0280                             u1531 0A24  
                           u1195 0D93                             u1515 0042                             u2075 0DE7  
                           u2171 0D41                             u2155 0D2C                             u2331 0188  
                           u2260 0FCF                             u1540 0A10                             u1460 029F  
                           u1700 05C7                             u1620 04DE                             u2340 01AD  
                           u2261 0FCE                             u1541 0A0E                             u1461 029E  
                           u1701 05C6                             u1621 04DC                             u2085 0DF1  
                           u2245 0B92                             u2341 01AC                             u2270 0C39  
                           u1550 0A11                             u1470 02A4                             u1390 01F5  
                           u1710 05D4                             u1630 04DF                             u2190 0D51  
                           u2271 0C38                             u2255 0FBC                             u2407 02D9  
                           u1471 02A3                             u1455 027D                             u1391 01F4  
                           u1535 0A21                             u1711 05D3                             u2095 0DFB  
                           u2191 0D50                             u2175 0D3E                             u1560 0A91  
                           u1800 0099                             u1720 05E1                             u1640 04EC  
                           u2417 02EF                             u1561 0A90                             u1801 0098  
                           u1721 05E0                             u1705 05C3                             u1641 04EB  
                           u2185 0D47                             u1570 0AA0                             u1810 00EC  
                           u1490 000F                             u1730 05EF                             u2507 03A9  
                           u2427 0302                             u1571 0A9F                             u1811 00EA  
                           u1491 000E                             u1731 05EE                             u1580 0961  
                           u1820 00ED                             u1740 05F4                             u1660 050F  
                           u1900 06BB                             u1581 0960                             u2517 03BB  
                           u2437 0313                             u1741 05F3                             u1725 05DD  
                           u1661 050E                             u1901 06BA                             u2357 014E  
                           u1590 094D                             u1830 00F9                             u1750 05FB  
                           u1670 0522                             u1910 06D4                             u1591 094C  
                           u2527 0982                             u2447 0322                             u1831 00F8  
                           u1751 05FA                             u1735 05EB                             u1671 0521  
                           u1911 06D3                             u2367 0E6C                             u1840 00FF  
                           u1760 0600                             u1680 053E                             u1920 0710  
                           u2537 09A6                             u2457 0332                             u2377 0C20  
                           u1841 00FE                             u1761 05FF                             u1681 053D  
                           u1921 070E                             u1850 09C4                             u1770 060B  
                           u1690 0543                             u1930 0711                             u1851 09C3  
                           u2467 034E                             u2387 0AD8                             u1771 060A  
                           u1691 0542                             u1675 051E                             u1860 09D1  
                           u1780 0077                             u1940 071D                             u1861 09D0  
                           u2477 036A                             u2397 0AEA                             u1781 0076  
                           u1941 071C                             u1790 008B                             u1950 072F  
                           u1870 0644                             u2487 037C                             u1791 008A  
                           u1951 072E                             u1871 0643                             u1960 0740  
                           u1880 06A0                             u2497 038D                             u1961 073F  
                           u1881 069F                             u1970 078C                             u1890 06A5  
                           u1971 078B                             u1891 06A4                             u1980 096B  
                           u1981 096A                             u1990 09F5                             u1991 09F4  
                           _WPUA 020C                             _WPUB 020D                             abs@a 0073  
                           _dbuf 0120                             _atoi 0061                  ??_lcd_backlight 0072  
                           _main 0110                             _dtoa 04C1                             _prec 00D0  
                           _nout 00CC                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                             start 0002  
                 calc_money@date 0020                   calc_money@hour 0026                ___bmul@multiplier 0073  
                 write_date@date 007C                     get_next@hour 007A                     get_next@next 002B  
                          ??_abs 0075                            ??_pad 007C   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 0947                  __end_of___aodiv 04C1                            ?_atoi 007A  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 02D4  
                __end_of___awdiv 0E14                  __end_of___awmod 0D60                      i2c_read@ack 0071  
                ___awdiv@divisor 0070                  ___awdiv@counter 0075                     vfpfcnvrt@fmt 004E  
                          _TRISA 008C                            _TRISB 008D                     lcd_print@cmd 007B  
                   lcd_print@str 0078                  __end_of_lcd_cmd 09AA                  __end_of_command 0C32  
                          __read 0AA9                            _flags 00D2                            _line1 00D6  
                          _line2 0140                   _WDT_Initialize 0930                            _fputc 0D60  
                          _fputs 0AEF                  __end_of_isdigit 0A18                            _money 00D4  
                          atoi@n 002B                            pad@fp 002B                            atoi@s 007A  
                          _width 00CE                            _putch 092F                            dtoa@d 0030  
                          dtoa@i 004C                            dtoa@n 0044                            dtoa@p 003E  
                          dtoa@s 0042                            dtoa@w 0040                  __end_of_isspace 0AA9  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0B41  
                ??_print_remaing 006B                  __initialization 07D4                     __end_of_atoi 0110  
                   __end_of_main 01EA                     __end_of_dtoa 0631                    command@lownib 0077  
               __end_of_i2c_read 0A00                 __end_of_i2c_wait 0978                 __end_of_i2c_stop 094E  
                  get_next@t_min 0028                           ??_atoi 0020                           ??_main 00BE  
                         ??_dtoa 0038                  ??_bcd_2_decimal 0074           __end_of_WDT_Initialize 0934  
                         ?__read 0070                           ?_fputc 0070                           ?_fputs 0078  
               ___awdiv@dividend 0072                           _ANSELA 018C                           ?_putch 0070  
                         _ANSELB 018D                           _BORCON 0116                 print_money@money 00B7  
                   i2c_read@data 0072                           _OSCCON 0099                           u131lld 0415  
                         u140lld 0214                    vfpfcnvrt@done 005E                           u142lld 023F  
                         u129lld 03EA                           u138lld 04AF                           u148lld 02C2  
                         u165lld 050A                           _WDTCON 0097               __size_of_i2c_start 000A  
             __size_of_i2c_write 0010                     vfprintf@cfmt 0069                 __end_of_lcd_init 03C0  
               __end_of_get_next 1000                           ___bmul 09BE                        ??___aodiv 0070  
                      ??___aomod 0070                           ___wmul 0A69                        ??___awdiv 0074  
                      ??___awmod 0074                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                           pad@buf 0024                           _trains 01A0  
                      ??_lcd_cmd 0071                           dtoa@fp 003D                        ??_command 0073  
                         _strlen 0A32                           fputc@c 0070                           fputs@c 0020  
                         fputs@i 0021                           fputs@s 0023                        ??_isdigit 0072  
             _i2c_repeated_start 0962                        ??_isspace 0072                  ?_WDT_Initialize 0070  
                         putch@c 0070                 __end_of_vfprintf 0BFA                        ??_sprintf 007D  
            ?_i2c_repeated_start 0070                _SYSTEM_Initialize 094E                     ?_print_money 00B1  
        __end_of__initialization 07FD                     ?_print_train 00B1               ?_SYSTEM_Initialize 0070  
          print_remaing@next_min 00BC                 print_train@next1 00B4              ___bmul@multiplicand 0070  
                 command@highnib 0076                   __pcstackCOMMON 0070                     __pidataBANK1 0004  
                   __pidataBANK3 0B99              ??_SYSTEM_Initialize 0070                    __end_of__read 0ACB  
                  __end_of_fputc 0DB5                    __end_of_fputs 0B18             ??_i2c_repeated_start 0070  
                  __end_of_putch 0930                __end_of_i2c_start 0962                 ??_lcd_set_cursor 0079  
              __end_of_i2c_write 0996                   _OPTION_REGbits 0095                       _calc_money 0C32  
             __size_of_lcd_clear 0024                          ??__read 0078               __size_of_lcd_print 001D  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 0958                          ??_fputs 0079  
                     __read@data 007A                          ??_putch 0070                       __pbssBANK0 006F  
                     __pbssBANK1 00CC                       __pbssBANK2 0120                        ?_i2c_read 0070  
                      ?_i2c_wait 0070                        ?_i2c_stop 0070               __size_of_init_char 0001  
             __size_of_read_date 0046                print_remaing@date 00B1                print_remaing@next 00B7  
                     __pmaintext 0110                          ?___bmul 0070                          ?___wmul 0074  
                        _APFCON0 011D                          _APFCON1 011E                          ?_strlen 0070  
             __size_of_vfpfcnvrt 01A3                          _OSCTUNE 0098                          _SSP2ADD 021A  
                        _SSP2BUF 0219                        ?_lcd_init 0070                        ?_get_next 007A  
                     ??_i2c_read 0070                       ??_i2c_wait 0070                       ??_i2c_stop 0070  
           __end_of_HOUR_4_MONEY 0842           __size_of_decimal_2_bcd 002E            __end_of_lcd_backlight 0986  
              __end_of_lcd_clear 0AEF                  __size_of___bmul 0015                          ___aodiv 03C0  
              __end_of_lcd_print 0A69                          ___aomod 01EA                          ___awdiv 0DB5  
                        ___awmod 0D0D                  __size_of___wmul 001F                        ?_vfprintf 0063  
                        __ptext1 0E14                          __ptext2 0B6B                          __ptext3 0D0D  
                        __ptext4 0DB5                          __ptext5 0C75                          __ptext6 0AA9  
                        __ptext7 0962                          __ptext8 09E9                          __ptext9 09AA  
                        _lcd_cmd 0996             __end_of_REGULAR_HOUR 0802                          _command 0BFA  
                __size_of_strlen 001A            _OSCILLATOR_Initialize 0940                __end_of_init_char 092F  
                   __size_of_abs 001A                     __size_of_pad 0059                          _isdigit 0A00  
              __end_of_read_date 0CBB                 ___awmod@dividend 0072                      ?_calc_money 0020  
       ??_PIN_MANAGER_Initialize 0070                          _isspace 0A88                          atoi@neg 0024  
     __size_of_SYSTEM_Initialize 000A                          _sprintf 0B18                          clrloop0 0935  
                     ??_lcd_init 0072                       ??_get_next 0020             end_of_initialization 07FD  
                        fputc@fp 0072                          init_ram 093A                          fputs@fp 0078  
                        initloop 093B                    __read@address 0079             __size_of_print_money 0052  
           __size_of_print_train 0064            __end_of_print_remaing 0F68                __end_of_vfpfcnvrt 07D4  
                     ??_vfprintf 0066                          strlen@a 0073                          strlen@s 0074  
               ??_WDT_Initialize 0070                    _decimal_2_bcd 0B6B                    i2c_write@data 0070  
      lcd_set_cursor@row_offsets 0020                       lcd_cmd@cmd 0071            __end_of_bcd_2_decimal 09BE  
                     command@val 0075              __size_of_calc_money 0043                   __end_of___bmul 09D3  
                    vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 0062                      vfpfcnvrt@ll 0056  
                 __end_of___wmul 0A88                       _write_date 0E14                   ?_decimal_2_bcd 0070  
         ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 0A4C              start_initialization 07D4  
__size_of_PIN_MANAGER_Initialize 0016                      __end_of_abs 0A32                        _i2c_start 0958  
                    __end_of_pad 0061                        _i2c_write 0986                  print_money@date 00B1  
              __size_of_i2c_read 0017                __size_of_i2c_wait 000C                __size_of_i2c_stop 0007  
                get_next@now_min 0026                      vfprintf@fmt 0063                         ??___bmul 0071  
                       ??___wmul 0078                      __pdataBANK1 00E6                      __pdataBANK3 01A0  
    __size_of_i2c_repeated_start 000A                         ??_strlen 0072                     _HOUR_4_MONEY 0840  
            lcd_set_cursor@F2500 00E6                        ___latbits 0001                  print_train@next 00B1  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                 ___aodiv@dividend 0028  
           print_remaing@now_min 00BA                       ?_i2c_start 0070                       ?_i2c_write 0070  
              __size_of_lcd_init 00EC                __size_of_get_next 0098                     _REGULAR_HOUR 0800  
                      _atoi$1075 0026                        _atoi$1076 002A                        _atoi$1077 0028  
         _PIN_MANAGER_Initialize 09D3                        _dtoa$1040 003B                         ?___aodiv 0020  
                       ?___aomod 0020                         ?___awdiv 0070                 ___aodiv@quotient 0073  
                       ?___awmod 0070                  ??_decimal_2_bcd 0020                        _lcd_clear 0ACB  
                    ?_write_date 0070                        _lcd_print 0A4C                         ?_lcd_cmd 0070  
              __size_of_vfprintf 0031                         ?_command 0072                         ?_isdigit 0070  
                   ??_calc_money 007A              __end_of_MIN_4_MONEY 0844                         ?_isspace 0070  
                 __size_of__read 0022                        _init_char 092E                         ?_sprintf 00A0  
                      _read_date 0C75                   __size_of_fputc 0055                   __size_of_fputs 0029  
                 __size_of_putch 0001          __size_of_lcd_set_cursor 002A                   ___wmul@product 0078  
                      clear_ram0 0934               __end_of_calc_money 0C75                         _SSP2CON1 021D  
                       _SSP2CON2 021E                         _SSP2STAT 021C                       ?_lcd_clear 0070  
                      _vfpfcnvrt 0631                       ?_lcd_print 0078                ___wmul@multiplier 0074  
                      get_next@i 002C                        main@next1 00C0           __size_of_lcd_backlight 000E  
                    ??_i2c_start 0070                     _isspace$1093 0074                      ??_i2c_write 0070  
                     ?_init_char 0070                       ?_read_date 0070                    ??_print_money 006B  
                       _i2c_read 09E9                    ??_print_train 006B                         _i2c_wait 096C  
                       _i2c_stop 0947              __size_of_write_date 0060                       vfprintf@ap 0065  
                     vfprintf@fp 0068          ??_OSCILLATOR_Initialize 0070                 __size_of___aodiv 0101  
               __size_of___aomod 00EA                 __size_of___awdiv 005F                 __size_of___awmod 0053  
                     ?_vfpfcnvrt 004E                      _MIN_4_MONEY 0842                  ___aodiv@divisor 0020  
                ___aodiv@counter 0071                 __size_of_lcd_cmd 0014                 __size_of_command 0038  
                     sprintf@fmt 00A2                 __size_of_isdigit 0018                 __size_of_isspace 0021  
                       __ptext10 0E74                         __ptext11 0ED8                         __ptext20 0D60  
                       __ptext12 0CBB                         __ptext21 092F                         __ptext13 0B18  
                       __ptext30 0BFA                         __ptext22 0A18                         __ptext14 0BC9  
                       __ptext31 0ACB                         __ptext23 01EA                         __ptext15 0631  
                       __ptext40 0F68                         __ptext32 092E                         __ptext24 03C0  
                       __ptext16 04C1                         __ptext41 09BE                         __ptext33 02D4  
                       __ptext25 0061                         __ptext17 0008                         __ptext42 0C32  
                       __ptext34 0978                         __ptext26 0A88                         __ptext18 0A32  
                       __ptext43 0A69                         __ptext35 0996                         __ptext27 0A00  
                       __ptext19 0AEF                         __ptext44 094E                         __ptext36 0986  
                       __ptext28 0B41                         __ptext45 0930                         __ptext37 0947  
                       __ptext29 0A4C                         __ptext46 09D3                         __ptext38 0958  
                       __ptext47 0940                         __ptext39 096C           __size_of_print_remaing 0090  
                       _lcd_init 02D4                         _get_next 0F68                     _SSP2CON1bits 021D  
                   _SSP2CON2bits 021E                 __size_of_sprintf 0029                    __size_of_atoi 00AF  
                  __size_of_main 00DA                    __size_of_dtoa 0170                    _lcd_backlight 0978  
            __end_of_print_money 0D0D              __end_of_print_train 0ED8           __size_of_bcd_2_decimal 0014  
                       _vfprintf 0BC9                         main@date 00C6                      ??_lcd_clear 0072  
                       main@next 00C3                     _SSP2STATbits 021C                      ??_lcd_print 007A  
               ___aomod@dividend 0028                   _vfpfcnvrt$1055 0060                         isdigit@c 0070  
                    ??_init_char 0070                    read_date@date 007C                      ??_read_date 007B  
        __size_of_WDT_Initialize 0004                   _lcd_set_cursor 0B41                lcd_set_cursor@cmd 0025  
              lcd_set_cursor@col 0024                        sprintf@ap 00AA                lcd_set_cursor@row 0078  
                       isspace@c 0070          ?_PIN_MANAGER_Initialize 0070                   ?_lcd_backlight 0070  
     __end_of_i2c_repeated_start 096C                    _print_remaing 0ED8                  ___aomod@divisor 0020  
                   ??_write_date 007A                      ??_vfpfcnvrt 0050                  ___aomod@counter 0071  
            decimal_2_bcd@number 0079                    __pstringtext1 0840                    __pstringtext2 0842  
                  __pstringtext3 0800                    __pstringtext4 0814                    __pstringtext5 0825  
                  __pstringtext6 0834                    __pstringtext7 0000                         sprintf@f 00AB  
                       sprintf@s 00A0           __end_of_lcd_set_cursor 0B6B                    _bcd_2_decimal 09AA  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 09E9                      _print_money 0CBB  
                    _print_train 0E74               __end_of_write_date 0E74                     ___aomod@sign 0072  
                  __backlightval 006F                   ?_print_remaing 00B1  
