

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Feb 21 22:51:38 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x220,48
    73                           	dabs	1,0x1CA,38
    74                           	dabs	1,0x211A,0,_trains
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.30
    78                           ; Generated 26/08/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F1827 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0118                     	;# 
   168  0119                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011D                     	;# 
   172  011E                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0191                     	;# 
   176  0191                     	;# 
   177  0192                     	;# 
   178  0193                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0194                     	;# 
   182  0195                     	;# 
   183  0196                     	;# 
   184  0199                     	;# 
   185  019A                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019C                     	;# 
   191  019C                     	;# 
   192  019D                     	;# 
   193  019E                     	;# 
   194  019F                     	;# 
   195  020C                     	;# 
   196  020D                     	;# 
   197  0211                     	;# 
   198  0211                     	;# 
   199  0212                     	;# 
   200  0212                     	;# 
   201  0213                     	;# 
   202  0213                     	;# 
   203  0214                     	;# 
   204  0214                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0216                     	;# 
   209  0216                     	;# 
   210  0217                     	;# 
   211  0217                     	;# 
   212  0219                     	;# 
   213  021A                     	;# 
   214  021B                     	;# 
   215  021C                     	;# 
   216  021D                     	;# 
   217  021E                     	;# 
   218  021F                     	;# 
   219  0291                     	;# 
   220  0291                     	;# 
   221  0292                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0295                     	;# 
   226  0296                     	;# 
   227  0298                     	;# 
   228  0298                     	;# 
   229  0299                     	;# 
   230  029A                     	;# 
   231  029B                     	;# 
   232  029C                     	;# 
   233  029C                     	;# 
   234  029D                     	;# 
   235  029E                     	;# 
   236  029E                     	;# 
   237  0311                     	;# 
   238  0311                     	;# 
   239  0312                     	;# 
   240  0313                     	;# 
   241  0318                     	;# 
   242  0318                     	;# 
   243  0319                     	;# 
   244  031A                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  039A                     	;# 
   249  039C                     	;# 
   250  039D                     	;# 
   251  039E                     	;# 
   252  039F                     	;# 
   253  0415                     	;# 
   254  0416                     	;# 
   255  0417                     	;# 
   256  041C                     	;# 
   257  041D                     	;# 
   258  041E                     	;# 
   259  0FE4                     	;# 
   260  0FE5                     	;# 
   261  0FE6                     	;# 
   262  0FE7                     	;# 
   263  0FE8                     	;# 
   264  0FE9                     	;# 
   265  0FEA                     	;# 
   266  0FEB                     	;# 
   267  0FED                     	;# 
   268  0FEE                     	;# 
   269  0FEF                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0008                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0016                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001C                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  0091                     	;# 
   302  0092                     	;# 
   303  0093                     	;# 
   304  0094                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009B                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  0111                     	;# 
   319  0112                     	;# 
   320  0113                     	;# 
   321  0114                     	;# 
   322  0115                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  0118                     	;# 
   326  0119                     	;# 
   327  011A                     	;# 
   328  011B                     	;# 
   329  011D                     	;# 
   330  011E                     	;# 
   331  018C                     	;# 
   332  018D                     	;# 
   333  0191                     	;# 
   334  0191                     	;# 
   335  0192                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0194                     	;# 
   340  0195                     	;# 
   341  0196                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019C                     	;# 
   349  019C                     	;# 
   350  019D                     	;# 
   351  019E                     	;# 
   352  019F                     	;# 
   353  020C                     	;# 
   354  020D                     	;# 
   355  0211                     	;# 
   356  0211                     	;# 
   357  0212                     	;# 
   358  0212                     	;# 
   359  0213                     	;# 
   360  0213                     	;# 
   361  0214                     	;# 
   362  0214                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0215                     	;# 
   366  0216                     	;# 
   367  0216                     	;# 
   368  0217                     	;# 
   369  0217                     	;# 
   370  0219                     	;# 
   371  021A                     	;# 
   372  021B                     	;# 
   373  021C                     	;# 
   374  021D                     	;# 
   375  021E                     	;# 
   376  021F                     	;# 
   377  0291                     	;# 
   378  0291                     	;# 
   379  0292                     	;# 
   380  0293                     	;# 
   381  0294                     	;# 
   382  0295                     	;# 
   383  0295                     	;# 
   384  0296                     	;# 
   385  0298                     	;# 
   386  0298                     	;# 
   387  0299                     	;# 
   388  029A                     	;# 
   389  029B                     	;# 
   390  029C                     	;# 
   391  029C                     	;# 
   392  029D                     	;# 
   393  029E                     	;# 
   394  029E                     	;# 
   395  0311                     	;# 
   396  0311                     	;# 
   397  0312                     	;# 
   398  0313                     	;# 
   399  0318                     	;# 
   400  0318                     	;# 
   401  0319                     	;# 
   402  031A                     	;# 
   403  0394                     	;# 
   404  0395                     	;# 
   405  0396                     	;# 
   406  039A                     	;# 
   407  039C                     	;# 
   408  039D                     	;# 
   409  039E                     	;# 
   410  039F                     	;# 
   411  0415                     	;# 
   412  0416                     	;# 
   413  0417                     	;# 
   414  041C                     	;# 
   415  041D                     	;# 
   416  041E                     	;# 
   417  0FE4                     	;# 
   418  0FE5                     	;# 
   419  0FE6                     	;# 
   420  0FE7                     	;# 
   421  0FE8                     	;# 
   422  0FE9                     	;# 
   423  0FEA                     	;# 
   424  0FEB                     	;# 
   425  0FED                     	;# 
   426  0FEE                     	;# 
   427  0FEF                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  0008                     	;# 
   437  0009                     	;# 
   438  000A                     	;# 
   439  000B                     	;# 
   440  000C                     	;# 
   441  000D                     	;# 
   442  0011                     	;# 
   443  0012                     	;# 
   444  0013                     	;# 
   445  0014                     	;# 
   446  0015                     	;# 
   447  0016                     	;# 
   448  0016                     	;# 
   449  0017                     	;# 
   450  0018                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001C                     	;# 
   455  001E                     	;# 
   456  001F                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0094                     	;# 
   463  0095                     	;# 
   464  0096                     	;# 
   465  0097                     	;# 
   466  0098                     	;# 
   467  0099                     	;# 
   468  009A                     	;# 
   469  009B                     	;# 
   470  009B                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  0111                     	;# 
   477  0112                     	;# 
   478  0113                     	;# 
   479  0114                     	;# 
   480  0115                     	;# 
   481  0116                     	;# 
   482  0117                     	;# 
   483  0118                     	;# 
   484  0119                     	;# 
   485  011A                     	;# 
   486  011B                     	;# 
   487  011D                     	;# 
   488  011E                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0191                     	;# 
   492  0191                     	;# 
   493  0192                     	;# 
   494  0193                     	;# 
   495  0193                     	;# 
   496  0193                     	;# 
   497  0194                     	;# 
   498  0195                     	;# 
   499  0196                     	;# 
   500  0199                     	;# 
   501  019A                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019C                     	;# 
   507  019C                     	;# 
   508  019D                     	;# 
   509  019E                     	;# 
   510  019F                     	;# 
   511  020C                     	;# 
   512  020D                     	;# 
   513  0211                     	;# 
   514  0211                     	;# 
   515  0212                     	;# 
   516  0212                     	;# 
   517  0213                     	;# 
   518  0213                     	;# 
   519  0214                     	;# 
   520  0214                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0215                     	;# 
   524  0216                     	;# 
   525  0216                     	;# 
   526  0217                     	;# 
   527  0217                     	;# 
   528  0219                     	;# 
   529  021A                     	;# 
   530  021B                     	;# 
   531  021C                     	;# 
   532  021D                     	;# 
   533  021E                     	;# 
   534  021F                     	;# 
   535  0291                     	;# 
   536  0291                     	;# 
   537  0292                     	;# 
   538  0293                     	;# 
   539  0294                     	;# 
   540  0295                     	;# 
   541  0295                     	;# 
   542  0296                     	;# 
   543  0298                     	;# 
   544  0298                     	;# 
   545  0299                     	;# 
   546  029A                     	;# 
   547  029B                     	;# 
   548  029C                     	;# 
   549  029C                     	;# 
   550  029D                     	;# 
   551  029E                     	;# 
   552  029E                     	;# 
   553  0311                     	;# 
   554  0311                     	;# 
   555  0312                     	;# 
   556  0313                     	;# 
   557  0318                     	;# 
   558  0318                     	;# 
   559  0319                     	;# 
   560  031A                     	;# 
   561  0394                     	;# 
   562  0395                     	;# 
   563  0396                     	;# 
   564  039A                     	;# 
   565  039C                     	;# 
   566  039D                     	;# 
   567  039E                     	;# 
   568  039F                     	;# 
   569  0415                     	;# 
   570  0416                     	;# 
   571  0417                     	;# 
   572  041C                     	;# 
   573  041D                     	;# 
   574  041E                     	;# 
   575  0FE4                     	;# 
   576  0FE5                     	;# 
   577  0FE6                     	;# 
   578  0FE7                     	;# 
   579  0FE8                     	;# 
   580  0FE9                     	;# 
   581  0FEA                     	;# 
   582  0FEB                     	;# 
   583  0FED                     	;# 
   584  0FEE                     	;# 
   585  0FEF                     	;# 
   586  0000                     	;# 
   587  0001                     	;# 
   588  0002                     	;# 
   589  0003                     	;# 
   590  0004                     	;# 
   591  0005                     	;# 
   592  0006                     	;# 
   593  0007                     	;# 
   594  0008                     	;# 
   595  0009                     	;# 
   596  000A                     	;# 
   597  000B                     	;# 
   598  000C                     	;# 
   599  000D                     	;# 
   600  0011                     	;# 
   601  0012                     	;# 
   602  0013                     	;# 
   603  0014                     	;# 
   604  0015                     	;# 
   605  0016                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  0019                     	;# 
   610  001A                     	;# 
   611  001B                     	;# 
   612  001C                     	;# 
   613  001E                     	;# 
   614  001F                     	;# 
   615  008C                     	;# 
   616  008D                     	;# 
   617  0091                     	;# 
   618  0092                     	;# 
   619  0093                     	;# 
   620  0094                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009B                     	;# 
   629  009C                     	;# 
   630  009D                     	;# 
   631  009E                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0113                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0118                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011D                     	;# 
   646  011E                     	;# 
   647  018C                     	;# 
   648  018D                     	;# 
   649  0191                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0193                     	;# 
   655  0194                     	;# 
   656  0195                     	;# 
   657  0196                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019C                     	;# 
   665  019C                     	;# 
   666  019D                     	;# 
   667  019E                     	;# 
   668  019F                     	;# 
   669  020C                     	;# 
   670  020D                     	;# 
   671  0211                     	;# 
   672  0211                     	;# 
   673  0212                     	;# 
   674  0212                     	;# 
   675  0213                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0214                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0216                     	;# 
   683  0216                     	;# 
   684  0217                     	;# 
   685  0217                     	;# 
   686  0219                     	;# 
   687  021A                     	;# 
   688  021B                     	;# 
   689  021C                     	;# 
   690  021D                     	;# 
   691  021E                     	;# 
   692  021F                     	;# 
   693  0291                     	;# 
   694  0291                     	;# 
   695  0292                     	;# 
   696  0293                     	;# 
   697  0294                     	;# 
   698  0295                     	;# 
   699  0295                     	;# 
   700  0296                     	;# 
   701  0298                     	;# 
   702  0298                     	;# 
   703  0299                     	;# 
   704  029A                     	;# 
   705  029B                     	;# 
   706  029C                     	;# 
   707  029C                     	;# 
   708  029D                     	;# 
   709  029E                     	;# 
   710  029E                     	;# 
   711  0311                     	;# 
   712  0311                     	;# 
   713  0312                     	;# 
   714  0313                     	;# 
   715  0318                     	;# 
   716  0318                     	;# 
   717  0319                     	;# 
   718  031A                     	;# 
   719  0394                     	;# 
   720  0395                     	;# 
   721  0396                     	;# 
   722  039A                     	;# 
   723  039C                     	;# 
   724  039D                     	;# 
   725  039E                     	;# 
   726  039F                     	;# 
   727  0415                     	;# 
   728  0416                     	;# 
   729  0417                     	;# 
   730  041C                     	;# 
   731  041D                     	;# 
   732  041E                     	;# 
   733  0FE4                     	;# 
   734  0FE5                     	;# 
   735  0FE6                     	;# 
   736  0FE7                     	;# 
   737  0FE8                     	;# 
   738  0FE9                     	;# 
   739  0FEA                     	;# 
   740  0FEB                     	;# 
   741  0FED                     	;# 
   742  0FEE                     	;# 
   743  0FEF                     	;# 
   744  0000                     	;# 
   745  0001                     	;# 
   746  0002                     	;# 
   747  0003                     	;# 
   748  0004                     	;# 
   749  0005                     	;# 
   750  0006                     	;# 
   751  0007                     	;# 
   752  0008                     	;# 
   753  0009                     	;# 
   754  000A                     	;# 
   755  000B                     	;# 
   756  000C                     	;# 
   757  000D                     	;# 
   758  0011                     	;# 
   759  0012                     	;# 
   760  0013                     	;# 
   761  0014                     	;# 
   762  0015                     	;# 
   763  0016                     	;# 
   764  0016                     	;# 
   765  0017                     	;# 
   766  0018                     	;# 
   767  0019                     	;# 
   768  001A                     	;# 
   769  001B                     	;# 
   770  001C                     	;# 
   771  001E                     	;# 
   772  001F                     	;# 
   773  008C                     	;# 
   774  008D                     	;# 
   775  0091                     	;# 
   776  0092                     	;# 
   777  0093                     	;# 
   778  0094                     	;# 
   779  0095                     	;# 
   780  0096                     	;# 
   781  0097                     	;# 
   782  0098                     	;# 
   783  0099                     	;# 
   784  009A                     	;# 
   785  009B                     	;# 
   786  009B                     	;# 
   787  009C                     	;# 
   788  009D                     	;# 
   789  009E                     	;# 
   790  010C                     	;# 
   791  010D                     	;# 
   792  0111                     	;# 
   793  0112                     	;# 
   794  0113                     	;# 
   795  0114                     	;# 
   796  0115                     	;# 
   797  0116                     	;# 
   798  0117                     	;# 
   799  0118                     	;# 
   800  0119                     	;# 
   801  011A                     	;# 
   802  011B                     	;# 
   803  011D                     	;# 
   804  011E                     	;# 
   805  018C                     	;# 
   806  018D                     	;# 
   807  0191                     	;# 
   808  0191                     	;# 
   809  0192                     	;# 
   810  0193                     	;# 
   811  0193                     	;# 
   812  0193                     	;# 
   813  0194                     	;# 
   814  0195                     	;# 
   815  0196                     	;# 
   816  0199                     	;# 
   817  019A                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019C                     	;# 
   823  019C                     	;# 
   824  019D                     	;# 
   825  019E                     	;# 
   826  019F                     	;# 
   827  020C                     	;# 
   828  020D                     	;# 
   829  0211                     	;# 
   830  0211                     	;# 
   831  0212                     	;# 
   832  0212                     	;# 
   833  0213                     	;# 
   834  0213                     	;# 
   835  0214                     	;# 
   836  0214                     	;# 
   837  0215                     	;# 
   838  0215                     	;# 
   839  0215                     	;# 
   840  0216                     	;# 
   841  0216                     	;# 
   842  0217                     	;# 
   843  0217                     	;# 
   844  0219                     	;# 
   845  021A                     	;# 
   846  021B                     	;# 
   847  021C                     	;# 
   848  021D                     	;# 
   849  021E                     	;# 
   850  021F                     	;# 
   851  0291                     	;# 
   852  0291                     	;# 
   853  0292                     	;# 
   854  0293                     	;# 
   855  0294                     	;# 
   856  0295                     	;# 
   857  0295                     	;# 
   858  0296                     	;# 
   859  0298                     	;# 
   860  0298                     	;# 
   861  0299                     	;# 
   862  029A                     	;# 
   863  029B                     	;# 
   864  029C                     	;# 
   865  029C                     	;# 
   866  029D                     	;# 
   867  029E                     	;# 
   868  029E                     	;# 
   869  0311                     	;# 
   870  0311                     	;# 
   871  0312                     	;# 
   872  0313                     	;# 
   873  0318                     	;# 
   874  0318                     	;# 
   875  0319                     	;# 
   876  031A                     	;# 
   877  0394                     	;# 
   878  0395                     	;# 
   879  0396                     	;# 
   880  039A                     	;# 
   881  039C                     	;# 
   882  039D                     	;# 
   883  039E                     	;# 
   884  039F                     	;# 
   885  0415                     	;# 
   886  0416                     	;# 
   887  0417                     	;# 
   888  041C                     	;# 
   889  041D                     	;# 
   890  041E                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE9                     	;# 
   897  0FEA                     	;# 
   898  0FEB                     	;# 
   899  0FED                     	;# 
   900  0FEE                     	;# 
   901  0FEF                     	;# 
   902  0000                     	;# 
   903  0001                     	;# 
   904  0002                     	;# 
   905  0003                     	;# 
   906  0004                     	;# 
   907  0005                     	;# 
   908  0006                     	;# 
   909  0007                     	;# 
   910  0008                     	;# 
   911  0009                     	;# 
   912  000A                     	;# 
   913  000B                     	;# 
   914  000C                     	;# 
   915  000D                     	;# 
   916  0011                     	;# 
   917  0012                     	;# 
   918  0013                     	;# 
   919  0014                     	;# 
   920  0015                     	;# 
   921  0016                     	;# 
   922  0016                     	;# 
   923  0017                     	;# 
   924  0018                     	;# 
   925  0019                     	;# 
   926  001A                     	;# 
   927  001B                     	;# 
   928  001C                     	;# 
   929  001E                     	;# 
   930  001F                     	;# 
   931  008C                     	;# 
   932  008D                     	;# 
   933  0091                     	;# 
   934  0092                     	;# 
   935  0093                     	;# 
   936  0094                     	;# 
   937  0095                     	;# 
   938  0096                     	;# 
   939  0097                     	;# 
   940  0098                     	;# 
   941  0099                     	;# 
   942  009A                     	;# 
   943  009B                     	;# 
   944  009B                     	;# 
   945  009C                     	;# 
   946  009D                     	;# 
   947  009E                     	;# 
   948  010C                     	;# 
   949  010D                     	;# 
   950  0111                     	;# 
   951  0112                     	;# 
   952  0113                     	;# 
   953  0114                     	;# 
   954  0115                     	;# 
   955  0116                     	;# 
   956  0117                     	;# 
   957  0118                     	;# 
   958  0119                     	;# 
   959  011A                     	;# 
   960  011B                     	;# 
   961  011D                     	;# 
   962  011E                     	;# 
   963  018C                     	;# 
   964  018D                     	;# 
   965  0191                     	;# 
   966  0191                     	;# 
   967  0192                     	;# 
   968  0193                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0194                     	;# 
   972  0195                     	;# 
   973  0196                     	;# 
   974  0199                     	;# 
   975  019A                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019C                     	;# 
   981  019C                     	;# 
   982  019D                     	;# 
   983  019E                     	;# 
   984  019F                     	;# 
   985  020C                     	;# 
   986  020D                     	;# 
   987  0211                     	;# 
   988  0211                     	;# 
   989  0212                     	;# 
   990  0212                     	;# 
   991  0213                     	;# 
   992  0213                     	;# 
   993  0214                     	;# 
   994  0214                     	;# 
   995  0215                     	;# 
   996  0215                     	;# 
   997  0215                     	;# 
   998  0216                     	;# 
   999  0216                     	;# 
  1000  0217                     	;# 
  1001  0217                     	;# 
  1002  0219                     	;# 
  1003  021A                     	;# 
  1004  021B                     	;# 
  1005  021C                     	;# 
  1006  021D                     	;# 
  1007  021E                     	;# 
  1008  021F                     	;# 
  1009  0291                     	;# 
  1010  0291                     	;# 
  1011  0292                     	;# 
  1012  0293                     	;# 
  1013  0294                     	;# 
  1014  0295                     	;# 
  1015  0295                     	;# 
  1016  0296                     	;# 
  1017  0298                     	;# 
  1018  0298                     	;# 
  1019  0299                     	;# 
  1020  029A                     	;# 
  1021  029B                     	;# 
  1022  029C                     	;# 
  1023  029C                     	;# 
  1024  029D                     	;# 
  1025  029E                     	;# 
  1026  029E                     	;# 
  1027  0311                     	;# 
  1028  0311                     	;# 
  1029  0312                     	;# 
  1030  0313                     	;# 
  1031  0318                     	;# 
  1032  0318                     	;# 
  1033  0319                     	;# 
  1034  031A                     	;# 
  1035  0394                     	;# 
  1036  0395                     	;# 
  1037  0396                     	;# 
  1038  039A                     	;# 
  1039  039C                     	;# 
  1040  039D                     	;# 
  1041  039E                     	;# 
  1042  039F                     	;# 
  1043  0415                     	;# 
  1044  0416                     	;# 
  1045  0417                     	;# 
  1046  041C                     	;# 
  1047  041D                     	;# 
  1048  041E                     	;# 
  1049  0FE4                     	;# 
  1050  0FE5                     	;# 
  1051  0FE6                     	;# 
  1052  0FE7                     	;# 
  1053  0FE8                     	;# 
  1054  0FE9                     	;# 
  1055  0FEA                     	;# 
  1056  0FEB                     	;# 
  1057  0FED                     	;# 
  1058  0FEE                     	;# 
  1059  0FEF                     	;# 
  1060  0000                     	;# 
  1061  0001                     	;# 
  1062  0002                     	;# 
  1063  0003                     	;# 
  1064  0004                     	;# 
  1065  0005                     	;# 
  1066  0006                     	;# 
  1067  0007                     	;# 
  1068  0008                     	;# 
  1069  0009                     	;# 
  1070  000A                     	;# 
  1071  000B                     	;# 
  1072  000C                     	;# 
  1073  000D                     	;# 
  1074  0011                     	;# 
  1075  0012                     	;# 
  1076  0013                     	;# 
  1077  0014                     	;# 
  1078  0015                     	;# 
  1079  0016                     	;# 
  1080  0016                     	;# 
  1081  0017                     	;# 
  1082  0018                     	;# 
  1083  0019                     	;# 
  1084  001A                     	;# 
  1085  001B                     	;# 
  1086  001C                     	;# 
  1087  001E                     	;# 
  1088  001F                     	;# 
  1089  008C                     	;# 
  1090  008D                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0094                     	;# 
  1095  0095                     	;# 
  1096  0096                     	;# 
  1097  0097                     	;# 
  1098  0098                     	;# 
  1099  0099                     	;# 
  1100  009A                     	;# 
  1101  009B                     	;# 
  1102  009B                     	;# 
  1103  009C                     	;# 
  1104  009D                     	;# 
  1105  009E                     	;# 
  1106  010C                     	;# 
  1107  010D                     	;# 
  1108  0111                     	;# 
  1109  0112                     	;# 
  1110  0113                     	;# 
  1111  0114                     	;# 
  1112  0115                     	;# 
  1113  0116                     	;# 
  1114  0117                     	;# 
  1115  0118                     	;# 
  1116  0119                     	;# 
  1117  011A                     	;# 
  1118  011B                     	;# 
  1119  011D                     	;# 
  1120  011E                     	;# 
  1121  018C                     	;# 
  1122  018D                     	;# 
  1123  0191                     	;# 
  1124  0191                     	;# 
  1125  0192                     	;# 
  1126  0193                     	;# 
  1127  0193                     	;# 
  1128  0193                     	;# 
  1129  0194                     	;# 
  1130  0195                     	;# 
  1131  0196                     	;# 
  1132  0199                     	;# 
  1133  019A                     	;# 
  1134  019B                     	;# 
  1135  019B                     	;# 
  1136  019B                     	;# 
  1137  019B                     	;# 
  1138  019C                     	;# 
  1139  019C                     	;# 
  1140  019D                     	;# 
  1141  019E                     	;# 
  1142  019F                     	;# 
  1143  020C                     	;# 
  1144  020D                     	;# 
  1145  0211                     	;# 
  1146  0211                     	;# 
  1147  0212                     	;# 
  1148  0212                     	;# 
  1149  0213                     	;# 
  1150  0213                     	;# 
  1151  0214                     	;# 
  1152  0214                     	;# 
  1153  0215                     	;# 
  1154  0215                     	;# 
  1155  0215                     	;# 
  1156  0216                     	;# 
  1157  0216                     	;# 
  1158  0217                     	;# 
  1159  0217                     	;# 
  1160  0219                     	;# 
  1161  021A                     	;# 
  1162  021B                     	;# 
  1163  021C                     	;# 
  1164  021D                     	;# 
  1165  021E                     	;# 
  1166  021F                     	;# 
  1167  0291                     	;# 
  1168  0291                     	;# 
  1169  0292                     	;# 
  1170  0293                     	;# 
  1171  0294                     	;# 
  1172  0295                     	;# 
  1173  0295                     	;# 
  1174  0296                     	;# 
  1175  0298                     	;# 
  1176  0298                     	;# 
  1177  0299                     	;# 
  1178  029A                     	;# 
  1179  029B                     	;# 
  1180  029C                     	;# 
  1181  029C                     	;# 
  1182  029D                     	;# 
  1183  029E                     	;# 
  1184  029E                     	;# 
  1185  0311                     	;# 
  1186  0311                     	;# 
  1187  0312                     	;# 
  1188  0313                     	;# 
  1189  0318                     	;# 
  1190  0318                     	;# 
  1191  0319                     	;# 
  1192  031A                     	;# 
  1193  0394                     	;# 
  1194  0395                     	;# 
  1195  0396                     	;# 
  1196  039A                     	;# 
  1197  039C                     	;# 
  1198  039D                     	;# 
  1199  039E                     	;# 
  1200  039F                     	;# 
  1201  0415                     	;# 
  1202  0416                     	;# 
  1203  0417                     	;# 
  1204  041C                     	;# 
  1205  041D                     	;# 
  1206  041E                     	;# 
  1207  0FE4                     	;# 
  1208  0FE5                     	;# 
  1209  0FE6                     	;# 
  1210  0FE7                     	;# 
  1211  0FE8                     	;# 
  1212  0FE9                     	;# 
  1213  0FEA                     	;# 
  1214  0FEB                     	;# 
  1215  0FED                     	;# 
  1216  0FEE                     	;# 
  1217  0FEF                     	;# 
  1218  0000                     	;# 
  1219  0001                     	;# 
  1220  0002                     	;# 
  1221  0003                     	;# 
  1222  0004                     	;# 
  1223  0005                     	;# 
  1224  0006                     	;# 
  1225  0007                     	;# 
  1226  0008                     	;# 
  1227  0009                     	;# 
  1228  000A                     	;# 
  1229  000B                     	;# 
  1230  000C                     	;# 
  1231  000D                     	;# 
  1232  0011                     	;# 
  1233  0012                     	;# 
  1234  0013                     	;# 
  1235  0014                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001B                     	;# 
  1244  001C                     	;# 
  1245  001E                     	;# 
  1246  001F                     	;# 
  1247  008C                     	;# 
  1248  008D                     	;# 
  1249  0091                     	;# 
  1250  0092                     	;# 
  1251  0093                     	;# 
  1252  0094                     	;# 
  1253  0095                     	;# 
  1254  0096                     	;# 
  1255  0097                     	;# 
  1256  0098                     	;# 
  1257  0099                     	;# 
  1258  009A                     	;# 
  1259  009B                     	;# 
  1260  009B                     	;# 
  1261  009C                     	;# 
  1262  009D                     	;# 
  1263  009E                     	;# 
  1264  010C                     	;# 
  1265  010D                     	;# 
  1266  0111                     	;# 
  1267  0112                     	;# 
  1268  0113                     	;# 
  1269  0114                     	;# 
  1270  0115                     	;# 
  1271  0116                     	;# 
  1272  0117                     	;# 
  1273  0118                     	;# 
  1274  0119                     	;# 
  1275  011A                     	;# 
  1276  011B                     	;# 
  1277  011D                     	;# 
  1278  011E                     	;# 
  1279  018C                     	;# 
  1280  018D                     	;# 
  1281  0191                     	;# 
  1282  0191                     	;# 
  1283  0192                     	;# 
  1284  0193                     	;# 
  1285  0193                     	;# 
  1286  0193                     	;# 
  1287  0194                     	;# 
  1288  0195                     	;# 
  1289  0196                     	;# 
  1290  0199                     	;# 
  1291  019A                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019C                     	;# 
  1297  019C                     	;# 
  1298  019D                     	;# 
  1299  019E                     	;# 
  1300  019F                     	;# 
  1301  020C                     	;# 
  1302  020D                     	;# 
  1303  0211                     	;# 
  1304  0211                     	;# 
  1305  0212                     	;# 
  1306  0212                     	;# 
  1307  0213                     	;# 
  1308  0213                     	;# 
  1309  0214                     	;# 
  1310  0214                     	;# 
  1311  0215                     	;# 
  1312  0215                     	;# 
  1313  0215                     	;# 
  1314  0216                     	;# 
  1315  0216                     	;# 
  1316  0217                     	;# 
  1317  0217                     	;# 
  1318  0219                     	;# 
  1319  021A                     	;# 
  1320  021B                     	;# 
  1321  021C                     	;# 
  1322  021D                     	;# 
  1323  021E                     	;# 
  1324  021F                     	;# 
  1325  0291                     	;# 
  1326  0291                     	;# 
  1327  0292                     	;# 
  1328  0293                     	;# 
  1329  0294                     	;# 
  1330  0295                     	;# 
  1331  0295                     	;# 
  1332  0296                     	;# 
  1333  0298                     	;# 
  1334  0298                     	;# 
  1335  0299                     	;# 
  1336  029A                     	;# 
  1337  029B                     	;# 
  1338  029C                     	;# 
  1339  029C                     	;# 
  1340  029D                     	;# 
  1341  029E                     	;# 
  1342  029E                     	;# 
  1343  0311                     	;# 
  1344  0311                     	;# 
  1345  0312                     	;# 
  1346  0313                     	;# 
  1347  0318                     	;# 
  1348  0318                     	;# 
  1349  0319                     	;# 
  1350  031A                     	;# 
  1351  0394                     	;# 
  1352  0395                     	;# 
  1353  0396                     	;# 
  1354  039A                     	;# 
  1355  039C                     	;# 
  1356  039D                     	;# 
  1357  039E                     	;# 
  1358  039F                     	;# 
  1359  0415                     	;# 
  1360  0416                     	;# 
  1361  0417                     	;# 
  1362  041C                     	;# 
  1363  041D                     	;# 
  1364  041E                     	;# 
  1365  0FE4                     	;# 
  1366  0FE5                     	;# 
  1367  0FE6                     	;# 
  1368  0FE7                     	;# 
  1369  0FE8                     	;# 
  1370  0FE9                     	;# 
  1371  0FEA                     	;# 
  1372  0FEB                     	;# 
  1373  0FED                     	;# 
  1374  0FEE                     	;# 
  1375  0FEF                     	;# 
  1376  0000                     	;# 
  1377  0001                     	;# 
  1378  0002                     	;# 
  1379  0003                     	;# 
  1380  0004                     	;# 
  1381  0005                     	;# 
  1382  0006                     	;# 
  1383  0007                     	;# 
  1384  0008                     	;# 
  1385  0009                     	;# 
  1386  000A                     	;# 
  1387  000B                     	;# 
  1388  000C                     	;# 
  1389  000D                     	;# 
  1390  0011                     	;# 
  1391  0012                     	;# 
  1392  0013                     	;# 
  1393  0014                     	;# 
  1394  0015                     	;# 
  1395  0016                     	;# 
  1396  0016                     	;# 
  1397  0017                     	;# 
  1398  0018                     	;# 
  1399  0019                     	;# 
  1400  001A                     	;# 
  1401  001B                     	;# 
  1402  001C                     	;# 
  1403  001E                     	;# 
  1404  001F                     	;# 
  1405  008C                     	;# 
  1406  008D                     	;# 
  1407  0091                     	;# 
  1408  0092                     	;# 
  1409  0093                     	;# 
  1410  0094                     	;# 
  1411  0095                     	;# 
  1412  0096                     	;# 
  1413  0097                     	;# 
  1414  0098                     	;# 
  1415  0099                     	;# 
  1416  009A                     	;# 
  1417  009B                     	;# 
  1418  009B                     	;# 
  1419  009C                     	;# 
  1420  009D                     	;# 
  1421  009E                     	;# 
  1422  010C                     	;# 
  1423  010D                     	;# 
  1424  0111                     	;# 
  1425  0112                     	;# 
  1426  0113                     	;# 
  1427  0114                     	;# 
  1428  0115                     	;# 
  1429  0116                     	;# 
  1430  0117                     	;# 
  1431  0118                     	;# 
  1432  0119                     	;# 
  1433  011A                     	;# 
  1434  011B                     	;# 
  1435  011D                     	;# 
  1436  011E                     	;# 
  1437  018C                     	;# 
  1438  018D                     	;# 
  1439  0191                     	;# 
  1440  0191                     	;# 
  1441  0192                     	;# 
  1442  0193                     	;# 
  1443  0193                     	;# 
  1444  0193                     	;# 
  1445  0194                     	;# 
  1446  0195                     	;# 
  1447  0196                     	;# 
  1448  0199                     	;# 
  1449  019A                     	;# 
  1450  019B                     	;# 
  1451  019B                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019C                     	;# 
  1455  019C                     	;# 
  1456  019D                     	;# 
  1457  019E                     	;# 
  1458  019F                     	;# 
  1459  020C                     	;# 
  1460  020D                     	;# 
  1461  0211                     	;# 
  1462  0211                     	;# 
  1463  0212                     	;# 
  1464  0212                     	;# 
  1465  0213                     	;# 
  1466  0213                     	;# 
  1467  0214                     	;# 
  1468  0214                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0215                     	;# 
  1472  0216                     	;# 
  1473  0216                     	;# 
  1474  0217                     	;# 
  1475  0217                     	;# 
  1476  0219                     	;# 
  1477  021A                     	;# 
  1478  021B                     	;# 
  1479  021C                     	;# 
  1480  021D                     	;# 
  1481  021E                     	;# 
  1482  021F                     	;# 
  1483  0291                     	;# 
  1484  0291                     	;# 
  1485  0292                     	;# 
  1486  0293                     	;# 
  1487  0294                     	;# 
  1488  0295                     	;# 
  1489  0295                     	;# 
  1490  0296                     	;# 
  1491  0298                     	;# 
  1492  0298                     	;# 
  1493  0299                     	;# 
  1494  029A                     	;# 
  1495  029B                     	;# 
  1496  029C                     	;# 
  1497  029C                     	;# 
  1498  029D                     	;# 
  1499  029E                     	;# 
  1500  029E                     	;# 
  1501  0311                     	;# 
  1502  0311                     	;# 
  1503  0312                     	;# 
  1504  0313                     	;# 
  1505  0318                     	;# 
  1506  0318                     	;# 
  1507  0319                     	;# 
  1508  031A                     	;# 
  1509  0394                     	;# 
  1510  0395                     	;# 
  1511  0396                     	;# 
  1512  039A                     	;# 
  1513  039C                     	;# 
  1514  039D                     	;# 
  1515  039E                     	;# 
  1516  039F                     	;# 
  1517  0415                     	;# 
  1518  0416                     	;# 
  1519  0417                     	;# 
  1520  041C                     	;# 
  1521  041D                     	;# 
  1522  041E                     	;# 
  1523  0FE4                     	;# 
  1524  0FE5                     	;# 
  1525  0FE6                     	;# 
  1526  0FE7                     	;# 
  1527  0FE8                     	;# 
  1528  0FE9                     	;# 
  1529  0FEA                     	;# 
  1530  0FEB                     	;# 
  1531  0FED                     	;# 
  1532  0FEE                     	;# 
  1533  0FEF                     	;_trains
  1534                           
  1535                           	psect	idataBIGRAM
  1536  0004                     __pidataBIGRAM:
  1537                           
  1538                           ;initializer for _trains
  1539  0004  3406               	retlw	6
  1540  0005  340F               	retlw	15
  1541  0006  3406               	retlw	6
  1542  0007  3431               	retlw	49
  1543  0008  3407               	retlw	7
  1544  0009  3419               	retlw	25
  1545  000A  3407               	retlw	7
  1546  000B  3431               	retlw	49
  1547  000C  3408               	retlw	8
  1548  000D  340D               	retlw	13
  1549  000E  3408               	retlw	8
  1550  000F  3425               	retlw	37
  1551  0010  3409               	retlw	9
  1552  0011  3401               	retlw	1
  1553  0012  3409               	retlw	9
  1554  0013  3419               	retlw	25
  1555  0014  3409               	retlw	9
  1556  0015  3431               	retlw	49
  1557  0016  340A               	retlw	10
  1558  0017  340D               	retlw	13
  1559  0018  340A               	retlw	10
  1560  0019  3425               	retlw	37
  1561  001A  340B               	retlw	11
  1562  001B  3401               	retlw	1
  1563  001C  340B               	retlw	11
  1564  001D  3419               	retlw	25
  1565  001E  340B               	retlw	11
  1566  001F  3431               	retlw	49
  1567  0020  340C               	retlw	12
  1568  0021  340D               	retlw	13
  1569  0022  340C               	retlw	12
  1570  0023  3425               	retlw	37
  1571  0024  340D               	retlw	13
  1572  0025  3401               	retlw	1
  1573  0026  340D               	retlw	13
  1574  0027  3419               	retlw	25
  1575  0028  340D               	retlw	13
  1576  0029  3431               	retlw	49
  1577  002A  340E               	retlw	14
  1578  002B  340D               	retlw	13
  1579  002C  340E               	retlw	14
  1580  002D  3425               	retlw	37
  1581  002E  340F               	retlw	15
  1582  002F  3401               	retlw	1
  1583  0030  340F               	retlw	15
  1584  0031  3419               	retlw	25
  1585  0032  340F               	retlw	15
  1586  0033  3431               	retlw	49
  1587  0034  3410               	retlw	16
  1588  0035  340D               	retlw	13
  1589  0036  3410               	retlw	16
  1590  0037  3425               	retlw	37
  1591  0038  3411               	retlw	17
  1592  0039  3401               	retlw	1
  1593  003A  3411               	retlw	17
  1594  003B  3419               	retlw	25
  1595  003C  3411               	retlw	17
  1596  003D  3425               	retlw	37
  1597  003E  3411               	retlw	17
  1598  003F  3431               	retlw	49
  1599  0040  3412               	retlw	18
  1600  0041  3401               	retlw	1
  1601  0042  3412               	retlw	18
  1602  0043  3425               	retlw	37
  1603  0044  3412               	retlw	18
  1604  0045  3431               	retlw	49
  1605  0046  3413               	retlw	19
  1606  0047  3401               	retlw	1
  1607  0048  3413               	retlw	19
  1608  0049  3419               	retlw	25
  1609  004A  3413               	retlw	19
  1610  004B  3425               	retlw	37
  1611  004C  3413               	retlw	19
  1612  004D  3431               	retlw	49
  1613  004E  3414               	retlw	20
  1614  004F  340D               	retlw	13
  1615  0050  3414               	retlw	20
  1616  0051  3425               	retlw	37
  1617  0052  3415               	retlw	21
  1618  0053  3401               	retlw	1
  1619  0054  3415               	retlw	21
  1620  0055  3418               	retlw	24
  1621  0056  3415               	retlw	21
  1622  0057  3430               	retlw	48
  1623  0058  3416               	retlw	22
  1624  0059  3412               	retlw	18
  1625                           
  1626                           	psect	idataBANK1
  1627  08F0                     __pidataBANK1:
  1628                           
  1629                           ;initializer for lcd_set_cursor@F2502
  1630  08F0  3400               	retlw	0
  1631  08F1  3440               	retlw	64
  1632  08F2  3414               	retlw	20
  1633  08F3  3454               	retlw	84
  1634                           
  1635                           	psect	stringtext1
  1636  083C                     __pstringtext1:
  1637  083C                     _HOUR_4_MONEY:
  1638  083C  3454               	retlw	84
  1639  083D  3406               	retlw	6
  1640  083E                     __end_of_HOUR_4_MONEY:
  1641                           
  1642                           	psect	stringtext2
  1643  083E                     __pstringtext2:
  1644  083E                     _MIN_4_MONEY:
  1645  083E  341B               	retlw	27
  1646  083F  3400               	retlw	0
  1647  0840                     __end_of_MIN_4_MONEY:
  1648                           
  1649                           	psect	stringtext3
  1650  0800                     __pstringtext3:
  1651  0800                     _REGULAR_HOUR:
  1652  0800  3411               	retlw	17
  1653  0801  3400               	retlw	0
  1654  0802                     __end_of_REGULAR_HOUR:
  1655  0095                     _OPTION_REGbits	set	149
  1656  008D                     _TRISB	set	141
  1657  008C                     _TRISA	set	140
  1658  0097                     _WDTCON	set	151
  1659  0098                     _OSCTUNE	set	152
  1660  0099                     _OSCCON	set	153
  1661  011E                     _APFCON1	set	286
  1662  011D                     _APFCON0	set	285
  1663  010D                     _LATB	set	269
  1664  010C                     _LATA	set	268
  1665  0116                     _BORCON	set	278
  1666  018C                     _ANSELA	set	396
  1667  018D                     _ANSELB	set	397
  1668  021D                     _SSP2CON1bits	set	541
  1669  021C                     _SSP2STATbits	set	540
  1670  0219                     _SSP2BUF	set	537
  1671  021E                     _SSP2CON2bits	set	542
  1672  021C                     _SSP2STAT	set	540
  1673  021E                     _SSP2CON2	set	542
  1674  021D                     _SSP2CON1	set	541
  1675  021A                     _SSP2ADD	set	538
  1676  020C                     _WPUA	set	524
  1677  020D                     _WPUB	set	525
  1678  0802                     STR_1:
  1679  0802  344B               	retlw	75	;'K'
  1680  0803  3457               	retlw	87	;'W'
  1681  0804  3420               	retlw	32	;' '
  1682  0805  343E               	retlw	62	;'>'
  1683  0806  3420               	retlw	32	;' '
  1684  0807  344D               	retlw	77	;'M'
  1685  0808  3454               	retlw	84	;'T'
  1686  0809  3420               	retlw	32	;' '
  1687  080A  3425               	retlw	37	;'%'
  1688  080B  3430               	retlw	48	;'0'
  1689  080C  3432               	retlw	50	;'2'
  1690  080D  3464               	retlw	100	;'d'
  1691  080E  343A               	retlw	58	;':'
  1692  080F  3425               	retlw	37	;'%'
  1693  0810  3430               	retlw	48	;'0'
  1694  0811  3432               	retlw	50	;'2'
  1695  0812  3464               	retlw	100	;'d'
  1696  0813  3400               	retlw	0
  1697                           
  1698                           	psect	stringtext4
  1699  0814                     __pstringtext4:
  1700  0814                     STR_5:
  1701  0814  3454               	retlw	84	;'T'
  1702  0815  3469               	retlw	105	;'i'
  1703  0816  346D               	retlw	109	;'m'
  1704  0817  3465               	retlw	101	;'e'
  1705  0818  3420               	retlw	32	;' '
  1706  0819  343A               	retlw	58	;':'
  1707  081A  3425               	retlw	37	;'%'
  1708  081B  3430               	retlw	48	;'0'
  1709  081C  3432               	retlw	50	;'2'
  1710  081D  3464               	retlw	100	;'d'
  1711  081E  343A               	retlw	58	;':'
  1712  081F  3425               	retlw	37	;'%'
  1713  0820  3430               	retlw	48	;'0'
  1714  0821  3432               	retlw	50	;'2'
  1715  0822  3464               	retlw	100	;'d'
  1716  0823  3400               	retlw	0
  1717                           
  1718                           	psect	stringtext5
  1719  0824                     __pstringtext5:
  1720  0824                     STR_6:
  1721  0824  344D               	retlw	77	;'M'
  1722  0825  346F               	retlw	111	;'o'
  1723  0826  346E               	retlw	110	;'n'
  1724  0827  3465               	retlw	101	;'e'
  1725  0828  3479               	retlw	121	;'y'
  1726  0829  343A               	retlw	58	;':'
  1727  082A  3425               	retlw	37	;'%'
  1728  082B  3464               	retlw	100	;'d'
  1729  082C  3459               	retlw	89	;'Y'
  1730  082D  3445               	retlw	69	;'E'
  1731  082E  344E               	retlw	78	;'N'
  1732  082F  3400               	retlw	0
  1733                           
  1734                           	psect	stringtext6
  1735  0830                     __pstringtext6:
  1736  0830                     STR_4:
  1737  0830  3425               	retlw	37	;'%'
  1738  0831  3464               	retlw	100	;'d'
  1739  0832  3420               	retlw	32	;' '
  1740  0833  346D               	retlw	109	;'m'
  1741  0834  3469               	retlw	105	;'i'
  1742  0835  346E               	retlw	110	;'n'
  1743  0836  3420               	retlw	32	;' '
  1744  0837  346C               	retlw	108	;'l'
  1745  0838  3465               	retlw	101	;'e'
  1746  0839  3466               	retlw	102	;'f'
  1747  083A  3474               	retlw	116	;'t'
  1748  083B  3400               	retlw	0
  1749                           
  1750                           	psect	stringtext7
  1751  0840                     __pstringtext7:
  1752  0840                     STR_7:
  1753  0840  3420               	retlw	32	;' '
  1754  0841  3400               	retlw	0
  1755                           
  1756                           	psect	stringtext8
  1757  0000                     __pstringtext8:
  1758  0802                     
  1759                           	psect	cinit
  1760  07CA                     start_initialization:	
  1761                           ; #config settings
  1762                           
  1763  07CA                     __initialization:	;BIGRAM
  1764                           
  1765                           ; Initialize objects allocated to BIGRAM
  1766  07CA  3004               	movlw	low __pidataBIGRAM
  1767  07CB  0084               	movwf	4
  1768  07CC  3080               	movlw	(high __pidataBIGRAM)| (0+128)
  1769  07CD  0085               	movwf	5
  1770  07CE  301A               	movlw	low (0+8474)
  1771  07CF  0086               	movwf	6
  1772  07D0  3021               	movlw	high (0+8474)
  1773  07D1  0087               	movwf	7
  1774  07D2  3000               	movlw	0
  1775  07D3  00FF               	movwf	btemp+1
  1776  07D4  3056               	movlw	86
  1777  07D5  3189  2138  3187   	fcall	init_ram
  1778                           
  1779                           ; Initialize objects allocated to BANK1
  1780  07D8  30F0               	movlw	low __pidataBANK1
  1781  07D9  0084               	movwf	4
  1782  07DA  3088               	movlw	(high __pidataBANK1)| (0+128)
  1783  07DB  0085               	movwf	5
  1784  07DC  30E1               	movlw	low __pdataBANK1
  1785  07DD  0086               	movwf	6
  1786  07DE  3000               	movlw	high __pdataBANK1
  1787  07DF  0087               	movwf	7
  1788  07E0  3000               	movlw	0
  1789  07E1  00FF               	movwf	btemp+1
  1790  07E2  3004               	movlw	4
  1791  07E3  3189  2138  3187   	fcall	init_ram
  1792                           
  1793                           ; Clear objects allocated to BANK0
  1794  07E6  01EF               	clrf	__pbssBANK0& (0+127)
  1795                           
  1796                           ; Clear objects allocated to BANK1
  1797  07E7  30C7               	movlw	low __pbssBANK1
  1798  07E8  0084               	movwf	4
  1799  07E9  3000               	movlw	high __pbssBANK1
  1800  07EA  0085               	movwf	5
  1801  07EB  301A               	movlw	26
  1802  07EC  00FE               	movwf	btemp
  1803  07ED  3000               	movlw	0
  1804  07EE  00FF               	movwf	btemp+1
  1805  07EF  3189  212C  3187   	fcall	clear_ram0
  1806                           
  1807                           ; Clear objects allocated to BANK2
  1808  07F2  3020               	movlw	low __pbssBANK2
  1809  07F3  0084               	movwf	4
  1810  07F4  3001               	movlw	high __pbssBANK2
  1811  07F5  0085               	movwf	5
  1812  07F6  3020               	movlw	32
  1813  07F7  00FE               	movwf	btemp
  1814  07F8  3000               	movlw	0
  1815  07F9  00FF               	movwf	btemp+1
  1816  07FA  3189  212C  3187   	fcall	clear_ram0
  1817  07FD                     end_of_initialization:	
  1818                           ;End of C runtime variable initialization code
  1819                           
  1820  07FD                     __end_of__initialization:
  1821  07FD  0020               	movlb	0
  1822  07FE  3181  2909         	ljmp	_main	;jump to C main() function
  1823                           
  1824                           	psect	bssBANK0
  1825  006F                     __pbssBANK0:
  1826  006F                     __backlightval:
  1827  006F                     	ds	1
  1828                           
  1829                           	psect	bssBANK1
  1830  00C7                     __pbssBANK1:
  1831  00C7                     _nout:
  1832  00C7                     	ds	2
  1833  00C9                     _width:
  1834  00C9                     	ds	2
  1835  00CB                     _prec:
  1836  00CB                     	ds	2
  1837  00CD                     _flags:
  1838  00CD                     	ds	2
  1839  00CF                     _money:
  1840  00CF                     	ds	2
  1841  00D1                     _line:
  1842  00D1                     	ds	16
  1843                           
  1844                           	psect	dataBANK1
  1845  00E1                     __pdataBANK1:
  1846  00E1                     lcd_set_cursor@F2502:
  1847  00E1                     	ds	4
  1848                           
  1849                           	psect	bssBANK2
  1850  0120                     __pbssBANK2:
  1851  0120                     _dbuf:
  1852  0120                     	ds	32
  1853                           
  1854                           	psect	inittext
  1855  0938                     init_ram:
  1856  0938  00FE               	movwf	btemp
  1857  0939                     initloop:
  1858  0939  0012               	moviw fsr0++
  1859  093A  001E               	movwi fsr1++
  1860  093B  3001               	movlw	1
  1861  093C  02FE               	subwf	btemp,f
  1862  093D  3000               	movlw	0
  1863  093E  3BFF               	subwfb	btemp+1,f
  1864  093F  087F               	movf	btemp+1,w
  1865  0940  047E               	iorwf	btemp,w
  1866  0941  1D03               	skipz
  1867  0942  2939               	goto	initloop
  1868  0943  3400               	retlw	0
  1869                           
  1870                           	psect	clrtext
  1871  092C                     clear_ram0:	
  1872                           ;	Called with FSR0 containing the base address, and
  1873                           ;	btemp/btemp+1 has the size to clear
  1874                           
  1875  092C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1876  092D                     clrloop0:
  1877  092D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1878  092E  3101               	addfsr 0,1
  1879  092F  3001               	movlw	1
  1880  0930  02FE               	subwf	btemp,f
  1881  0931  3000               	movlw	0
  1882  0932  3BFF               	subwfb	btemp+1,f
  1883  0933  087F               	movf	btemp+1,w
  1884  0934  047E               	iorwf	btemp,w
  1885  0935  1D03               	skipz
  1886  0936  292D               	goto	clrloop0	;have we reached the end yet?
  1887  0937  3400               	retlw	0	;all done for this memory range, return
  1888                           
  1889                           	psect	cstackBANK1
  1890  00A0                     __pcstackBANK1:
  1891  00A0                     ?_sprintf:
  1892  00A0                     sprintf@fmt:	
  1893                           ; 2 bytes @ 0x0
  1894                           
  1895                           
  1896                           ; 2 bytes @ 0x0
  1897  00A0                     	ds	8
  1898  00A8                     sprintf@ap:
  1899                           
  1900                           ; 1 bytes @ 0x8
  1901  00A8                     	ds	1
  1902  00A9                     sprintf@s:
  1903                           
  1904                           ; 1 bytes @ 0x9
  1905  00A9                     	ds	1
  1906  00AA                     sprintf@f:
  1907                           
  1908                           ; 5 bytes @ 0xA
  1909  00AA                     	ds	5
  1910  00AF                     ?_print_train:
  1911  00AF                     ?_print_remaing:	
  1912                           ; 1 bytes @ 0xF
  1913                           
  1914  00AF                     ?_print_money:	
  1915                           ; 1 bytes @ 0xF
  1916                           
  1917  00AF                     print_train@next:	
  1918                           ; 1 bytes @ 0xF
  1919                           
  1920  00AF                     print_remaing@date:	
  1921                           ; 2 bytes @ 0xF
  1922                           
  1923  00AF                     print_money@date:	
  1924                           ; 6 bytes @ 0xF
  1925                           
  1926                           
  1927                           ; 6 bytes @ 0xF
  1928  00AF                     	ds	2
  1929  00B1                     print_train@next1:
  1930                           
  1931                           ; 2 bytes @ 0x11
  1932  00B1                     	ds	4
  1933  00B5                     print_remaing@next:
  1934  00B5                     print_money@money:	
  1935                           ; 2 bytes @ 0x15
  1936                           
  1937                           
  1938                           ; 2 bytes @ 0x15
  1939  00B5                     	ds	2
  1940  00B7                     print_remaing@now_min:
  1941                           
  1942                           ; 2 bytes @ 0x17
  1943  00B7                     	ds	2
  1944  00B9                     print_remaing@next_min:
  1945                           
  1946                           ; 2 bytes @ 0x19
  1947  00B9                     	ds	2
  1948  00BB                     ??_main:
  1949                           
  1950                           ; 1 bytes @ 0x1B
  1951  00BB                     	ds	2
  1952  00BD                     main@next1:
  1953                           
  1954                           ; 2 bytes @ 0x1D
  1955  00BD                     	ds	2
  1956  00BF                     main@next:
  1957                           
  1958                           ; 2 bytes @ 0x1F
  1959  00BF                     	ds	2
  1960  00C1                     main@date:
  1961                           
  1962                           ; 6 bytes @ 0x21
  1963  00C1                     	ds	6
  1964                           
  1965                           	psect	cstackCOMMON
  1966  0070                     __pcstackCOMMON:
  1967  0070                     ?_PIN_MANAGER_Initialize:
  1968  0070                     ??_PIN_MANAGER_Initialize:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971  0070                     ?_OSCILLATOR_Initialize:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974  0070                     ??_OSCILLATOR_Initialize:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977  0070                     ?_WDT_Initialize:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980  0070                     ??_WDT_Initialize:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983  0070                     ?_lcd_init:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986  0070                     ?_lcd_backlight:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989  0070                     ?_write_date:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992  0070                     ?_read_date:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995  0070                     ?_lcd_clear:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998  0070                     ?_putch:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001  0070                     ??_putch:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004  0070                     ?_SYSTEM_Initialize:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007  0070                     ??_SYSTEM_Initialize:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010  0070                     ?_main:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013  0070                     ?_i2c_wait:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016  0070                     ??_i2c_wait:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019  0070                     ?_i2c_start:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0070                     ??_i2c_start:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025  0070                     ?_i2c_stop:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028  0070                     ??_i2c_stop:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031  0070                     ?_i2c_repeated_start:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034  0070                     ??_i2c_repeated_start:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0070                     ?_i2c_write:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0070                     ??_i2c_write:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     ?_i2c_read:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ??_i2c_read:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ?_lcd_cmd:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ?_bcd_2_decimal:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ?_decimal_2_bcd:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ?__read:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ?___bmul:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ??___aodiv:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ??___aomod:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_fputc:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ?_strlen:	
  2074                           ; 2 bytes @ 0x0
  2075                           
  2076  0070                     ?_isdigit:	
  2077                           ; 2 bytes @ 0x0
  2078                           
  2079  0070                     ?_isspace:	
  2080                           ; 2 bytes @ 0x0
  2081                           
  2082  0070                     ?___wmul:	
  2083                           ; 2 bytes @ 0x0
  2084                           
  2085  0070                     ?___awdiv:	
  2086                           ; 2 bytes @ 0x0
  2087                           
  2088  0070                     ?___awmod:	
  2089                           ; 2 bytes @ 0x0
  2090                           
  2091  0070                     i2c_write@data:	
  2092                           ; 2 bytes @ 0x0
  2093                           
  2094  0070                     ___bmul@multiplicand:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     putch@c:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ___wmul@multiplier:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0070                     ___awdiv@divisor:	
  2104                           ; 2 bytes @ 0x0
  2105                           
  2106  0070                     ___awmod@divisor:	
  2107                           ; 2 bytes @ 0x0
  2108                           
  2109  0070                     isdigit@c:	
  2110                           ; 2 bytes @ 0x0
  2111                           
  2112  0070                     isspace@c:	
  2113                           ; 2 bytes @ 0x0
  2114                           
  2115  0070                     fputc@c:	
  2116                           ; 2 bytes @ 0x0
  2117                           
  2118                           
  2119                           ; 2 bytes @ 0x0
  2120  0070                     	ds	1
  2121  0071                     ??_lcd_cmd:
  2122  0071                     ??___bmul:	
  2123                           ; 1 bytes @ 0x1
  2124                           
  2125  0071                     i2c_read@ack:	
  2126                           ; 1 bytes @ 0x1
  2127                           
  2128  0071                     lcd_cmd@cmd:	
  2129                           ; 1 bytes @ 0x1
  2130                           
  2131  0071                     ___aodiv@counter:	
  2132                           ; 1 bytes @ 0x1
  2133                           
  2134  0071                     ___aomod@counter:	
  2135                           ; 1 bytes @ 0x1
  2136                           
  2137                           
  2138                           ; 1 bytes @ 0x1
  2139  0071                     	ds	1
  2140  0072                     ??_lcd_init:
  2141  0072                     ??_lcd_backlight:	
  2142                           ; 1 bytes @ 0x2
  2143                           
  2144  0072                     ?_command:	
  2145                           ; 1 bytes @ 0x2
  2146                           
  2147  0072                     ??_strlen:	
  2148                           ; 1 bytes @ 0x2
  2149                           
  2150  0072                     ??_isdigit:	
  2151                           ; 1 bytes @ 0x2
  2152                           
  2153  0072                     ??_isspace:	
  2154                           ; 1 bytes @ 0x2
  2155                           
  2156  0072                     i2c_read@data:	
  2157                           ; 1 bytes @ 0x2
  2158                           
  2159  0072                     command@mode:	
  2160                           ; 1 bytes @ 0x2
  2161                           
  2162  0072                     ___bmul@product:	
  2163                           ; 1 bytes @ 0x2
  2164                           
  2165  0072                     ___aodiv@sign:	
  2166                           ; 1 bytes @ 0x2
  2167                           
  2168  0072                     ___aomod@sign:	
  2169                           ; 1 bytes @ 0x2
  2170                           
  2171  0072                     fputc@fp:	
  2172                           ; 1 bytes @ 0x2
  2173                           
  2174  0072                     ___wmul@multiplicand:	
  2175                           ; 1 bytes @ 0x2
  2176                           
  2177  0072                     ___awdiv@dividend:	
  2178                           ; 2 bytes @ 0x2
  2179                           
  2180  0072                     ___awmod@dividend:	
  2181                           ; 2 bytes @ 0x2
  2182                           
  2183                           
  2184                           ; 2 bytes @ 0x2
  2185  0072                     	ds	1
  2186  0073                     ??_command:
  2187  0073                     ??_fputc:	
  2188                           ; 1 bytes @ 0x3
  2189                           
  2190  0073                     ?_abs:	
  2191                           ; 1 bytes @ 0x3
  2192                           
  2193  0073                     ___bmul@multiplier:	
  2194                           ; 2 bytes @ 0x3
  2195                           
  2196  0073                     strlen@a:	
  2197                           ; 1 bytes @ 0x3
  2198                           
  2199  0073                     abs@a:	
  2200                           ; 1 bytes @ 0x3
  2201                           
  2202  0073                     ___aodiv@quotient:	
  2203                           ; 2 bytes @ 0x3
  2204                           
  2205                           
  2206                           ; 8 bytes @ 0x3
  2207  0073                     	ds	1
  2208  0074                     ??_bcd_2_decimal:
  2209  0074                     ??___wmul:	
  2210                           ; 1 bytes @ 0x4
  2211                           
  2212  0074                     ??___awdiv:	
  2213                           ; 1 bytes @ 0x4
  2214                           
  2215  0074                     ??___awmod:	
  2216                           ; 1 bytes @ 0x4
  2217                           
  2218  0074                     _isspace$1086:	
  2219                           ; 1 bytes @ 0x4
  2220                           
  2221  0074                     strlen@s:	
  2222                           ; 1 bytes @ 0x4
  2223                           
  2224  0074                     ___wmul@product:	
  2225                           ; 1 bytes @ 0x4
  2226                           
  2227                           
  2228                           ; 2 bytes @ 0x4
  2229  0074                     	ds	1
  2230  0075                     ??_abs:
  2231  0075                     command@val:	
  2232                           ; 1 bytes @ 0x5
  2233                           
  2234  0075                     ___awdiv@counter:	
  2235                           ; 1 bytes @ 0x5
  2236                           
  2237  0075                     ___awmod@counter:	
  2238                           ; 1 bytes @ 0x5
  2239                           
  2240                           
  2241                           ; 1 bytes @ 0x5
  2242  0075                     	ds	1
  2243  0076                     ?_get_next:
  2244  0076                     ?_calc_money:	
  2245                           ; 1 bytes @ 0x6
  2246                           
  2247  0076                     ?_atoi:	
  2248                           ; 2 bytes @ 0x6
  2249                           
  2250  0076                     command@highnib:	
  2251                           ; 2 bytes @ 0x6
  2252                           
  2253  0076                     ___awdiv@sign:	
  2254                           ; 1 bytes @ 0x6
  2255                           
  2256  0076                     ___awmod@sign:	
  2257                           ; 1 bytes @ 0x6
  2258                           
  2259  0076                     get_next@next:	
  2260                           ; 1 bytes @ 0x6
  2261                           
  2262  0076                     atoi@s:	
  2263                           ; 2 bytes @ 0x6
  2264                           
  2265  0076                     calc_money@date:	
  2266                           ; 2 bytes @ 0x6
  2267                           
  2268                           
  2269                           ; 6 bytes @ 0x6
  2270  0076                     	ds	1
  2271  0077                     command@lownib:
  2272  0077                     bcd_2_decimal@number:	
  2273                           ; 1 bytes @ 0x7
  2274                           
  2275  0077                     ___awdiv@quotient:	
  2276                           ; 1 bytes @ 0x7
  2277                           
  2278                           
  2279                           ; 2 bytes @ 0x7
  2280  0077                     	ds	1
  2281  0078                     ?_lcd_set_cursor:
  2282  0078                     ?_lcd_print:	
  2283                           ; 1 bytes @ 0x8
  2284                           
  2285  0078                     ??_atoi:	
  2286                           ; 1 bytes @ 0x8
  2287                           
  2288  0078                     ??__read:	
  2289                           ; 1 bytes @ 0x8
  2290                           
  2291  0078                     ?_fputs:	
  2292                           ; 1 bytes @ 0x8
  2293                           
  2294  0078                     lcd_set_cursor@row:	
  2295                           ; 2 bytes @ 0x8
  2296                           
  2297  0078                     get_next@hour:	
  2298                           ; 1 bytes @ 0x8
  2299                           
  2300  0078                     fputs@fp:	
  2301                           ; 1 bytes @ 0x8
  2302                           
  2303  0078                     lcd_print@str:	
  2304                           ; 1 bytes @ 0x8
  2305                           
  2306                           
  2307                           ; 2 bytes @ 0x8
  2308  0078                     	ds	1
  2309  0079                     ??_lcd_set_cursor:
  2310  0079                     ??_fputs:	
  2311                           ; 1 bytes @ 0x9
  2312                           
  2313  0079                     get_next@min:	
  2314                           ; 1 bytes @ 0x9
  2315                           
  2316  0079                     decimal_2_bcd@number:	
  2317                           ; 1 bytes @ 0x9
  2318                           
  2319  0079                     __read@address:	
  2320                           ; 1 bytes @ 0x9
  2321                           
  2322                           
  2323                           ; 1 bytes @ 0x9
  2324  0079                     	ds	1
  2325  007A                     ??_write_date:
  2326  007A                     ??_lcd_print:	
  2327                           ; 1 bytes @ 0xA
  2328                           
  2329  007A                     __read@data:	
  2330                           ; 1 bytes @ 0xA
  2331                           
  2332                           
  2333                           ; 1 bytes @ 0xA
  2334  007A                     	ds	1
  2335  007B                     ??_read_date:
  2336  007B                     lcd_print@cmd:	
  2337                           ; 1 bytes @ 0xB
  2338                           
  2339                           
  2340                           ; 1 bytes @ 0xB
  2341  007B                     	ds	1
  2342  007C                     ??_lcd_clear:
  2343  007C                     ??_pad:	
  2344                           ; 1 bytes @ 0xC
  2345                           
  2346  007C                     write_date@date:	
  2347                           ; 1 bytes @ 0xC
  2348                           
  2349  007C                     read_date@date:	
  2350                           ; 1 bytes @ 0xC
  2351                           
  2352                           
  2353                           ; 1 bytes @ 0xC
  2354  007C                     	ds	1
  2355  007D                     ??_sprintf:
  2356                           
  2357                           ; 1 bytes @ 0xD
  2358  007D                     	ds	1
  2359                           
  2360                           	psect	cstackBANK0
  2361  0020                     __pcstackBANK0:
  2362  0020                     ??_get_next:
  2363  0020                     ??_calc_money:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0020                     ??_decimal_2_bcd:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0020                     ?___aodiv:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0020                     ?___aomod:	
  2373                           ; 8 bytes @ 0x0
  2374                           
  2375  0020                     fputs@c:	
  2376                           ; 8 bytes @ 0x0
  2377                           
  2378  0020                     atoi@neg:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0020                     lcd_set_cursor@row_offsets:	
  2382                           ; 2 bytes @ 0x0
  2383                           
  2384  0020                     ___aodiv@divisor:	
  2385                           ; 4 bytes @ 0x0
  2386                           
  2387  0020                     ___aomod@divisor:	
  2388                           ; 8 bytes @ 0x0
  2389                           
  2390                           
  2391                           ; 8 bytes @ 0x0
  2392  0020                     	ds	1
  2393  0021                     fputs@i:
  2394                           
  2395                           ; 2 bytes @ 0x1
  2396  0021                     	ds	1
  2397  0022                     _atoi$1068:
  2398                           
  2399                           ; 2 bytes @ 0x2
  2400  0022                     	ds	1
  2401  0023                     fputs@s:
  2402                           
  2403                           ; 1 bytes @ 0x3
  2404  0023                     	ds	1
  2405  0024                     ?_pad:
  2406  0024                     lcd_set_cursor@col:	
  2407                           ; 2 bytes @ 0x4
  2408                           
  2409  0024                     pad@buf:	
  2410                           ; 1 bytes @ 0x4
  2411                           
  2412  0024                     calc_money@hour:	
  2413                           ; 1 bytes @ 0x4
  2414                           
  2415  0024                     _atoi$1070:	
  2416                           ; 2 bytes @ 0x4
  2417                           
  2418                           
  2419                           ; 2 bytes @ 0x4
  2420  0024                     	ds	1
  2421  0025                     lcd_set_cursor@cmd:
  2422  0025                     pad@p:	
  2423                           ; 1 bytes @ 0x5
  2424                           
  2425                           
  2426                           ; 2 bytes @ 0x5
  2427  0025                     	ds	1
  2428  0026                     lcd_clear@row:
  2429  0026                     _atoi$1069:	
  2430                           ; 1 bytes @ 0x6
  2431                           
  2432  0026                     calc_money@min:	
  2433                           ; 1 bytes @ 0x6
  2434                           
  2435                           
  2436                           ; 2 bytes @ 0x6
  2437  0026                     	ds	1
  2438  0027                     lcd_clear@col:
  2439  0027                     pad@i:	
  2440                           ; 1 bytes @ 0x7
  2441                           
  2442  0027                     atoi@n:	
  2443                           ; 2 bytes @ 0x7
  2444                           
  2445                           
  2446                           ; 2 bytes @ 0x7
  2447  0027                     	ds	1
  2448  0028                     ___aodiv@dividend:
  2449  0028                     ___aomod@dividend:	
  2450                           ; 8 bytes @ 0x8
  2451                           
  2452                           
  2453                           ; 8 bytes @ 0x8
  2454  0028                     	ds	1
  2455  0029                     pad@w:
  2456                           
  2457                           ; 2 bytes @ 0x9
  2458  0029                     	ds	2
  2459  002B                     pad@fp:
  2460                           
  2461                           ; 1 bytes @ 0xB
  2462  002B                     	ds	1
  2463  002C                     get_next@now_min:
  2464                           
  2465                           ; 2 bytes @ 0xC
  2466  002C                     	ds	2
  2467  002E                     get_next@t_min:
  2468                           
  2469                           ; 2 bytes @ 0xE
  2470  002E                     	ds	2
  2471  0030                     ?_dtoa:
  2472  0030                     get_next@idx:	
  2473                           ; 2 bytes @ 0x10
  2474                           
  2475  0030                     dtoa@d:	
  2476                           ; 1 bytes @ 0x10
  2477                           
  2478                           
  2479                           ; 8 bytes @ 0x10
  2480  0030                     	ds	1
  2481  0031                     get_next@i:
  2482                           
  2483                           ; 1 bytes @ 0x11
  2484  0031                     	ds	7
  2485  0038                     ??_dtoa:
  2486                           
  2487                           ; 1 bytes @ 0x18
  2488  0038                     	ds	3
  2489  003B                     _dtoa$1033:
  2490                           
  2491                           ; 2 bytes @ 0x1B
  2492  003B                     	ds	2
  2493  003D                     dtoa@fp:
  2494                           
  2495                           ; 1 bytes @ 0x1D
  2496  003D                     	ds	1
  2497  003E                     dtoa@p:
  2498                           
  2499                           ; 2 bytes @ 0x1E
  2500  003E                     	ds	2
  2501  0040                     dtoa@w:
  2502                           
  2503                           ; 2 bytes @ 0x20
  2504  0040                     	ds	2
  2505  0042                     dtoa@s:
  2506                           
  2507                           ; 2 bytes @ 0x22
  2508  0042                     	ds	2
  2509  0044                     dtoa@n:
  2510                           
  2511                           ; 8 bytes @ 0x24
  2512  0044                     	ds	8
  2513  004C                     dtoa@i:
  2514                           
  2515                           ; 2 bytes @ 0x2C
  2516  004C                     	ds	2
  2517  004E                     ?_vfpfcnvrt:
  2518  004E                     vfpfcnvrt@fmt:	
  2519                           ; 2 bytes @ 0x2E
  2520                           
  2521                           
  2522                           ; 1 bytes @ 0x2E
  2523  004E                     	ds	1
  2524  004F                     vfpfcnvrt@ap:
  2525                           
  2526                           ; 1 bytes @ 0x2F
  2527  004F                     	ds	1
  2528  0050                     ??_vfpfcnvrt:
  2529                           
  2530                           ; 1 bytes @ 0x30
  2531  0050                     	ds	6
  2532  0056                     vfpfcnvrt@ll:
  2533                           
  2534                           ; 8 bytes @ 0x36
  2535  0056                     	ds	8
  2536  005E                     vfpfcnvrt@done:
  2537                           
  2538                           ; 2 bytes @ 0x3E
  2539  005E                     	ds	2
  2540  0060                     _vfpfcnvrt$1048:
  2541                           
  2542                           ; 2 bytes @ 0x40
  2543  0060                     	ds	2
  2544  0062                     vfpfcnvrt@fp:
  2545                           
  2546                           ; 1 bytes @ 0x42
  2547  0062                     	ds	1
  2548  0063                     ?_vfprintf:
  2549  0063                     vfprintf@fmt:	
  2550                           ; 2 bytes @ 0x43
  2551                           
  2552                           
  2553                           ; 2 bytes @ 0x43
  2554  0063                     	ds	2
  2555  0065                     vfprintf@ap:
  2556                           
  2557                           ; 1 bytes @ 0x45
  2558  0065                     	ds	1
  2559  0066                     ??_vfprintf:
  2560                           
  2561                           ; 1 bytes @ 0x46
  2562  0066                     	ds	2
  2563  0068                     vfprintf@fp:
  2564                           
  2565                           ; 1 bytes @ 0x48
  2566  0068                     	ds	1
  2567  0069                     vfprintf@cfmt:
  2568                           
  2569                           ; 2 bytes @ 0x49
  2570  0069                     	ds	2
  2571  006B                     ??_print_train:
  2572  006B                     ??_print_remaing:	
  2573                           ; 1 bytes @ 0x4B
  2574                           
  2575  006B                     ??_print_money:	
  2576                           ; 1 bytes @ 0x4B
  2577                           
  2578                           
  2579                           ; 1 bytes @ 0x4B
  2580  006B                     	ds	4
  2581                           
  2582                           	psect	maintext
  2583  0109                     __pmaintext:	
  2584 ;;
  2585 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2586 ;;
  2587 ;; *************** function _main *****************
  2588 ;; Defined at:
  2589 ;;		line 19 in file "main.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  date            6   33[BANK1 ] struct Date
  2594 ;;  next            2   31[BANK1 ] struct train
  2595 ;;  next1           2   29[BANK1 ] struct train
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : B1F/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2605 ;;      Params:         0       0       0       0       0       0
  2606 ;;      Locals:         0       0      10       0       0       0
  2607 ;;      Temps:          0       0       2       0       0       0
  2608 ;;      Totals:         0       0      12       0       0       0
  2609 ;;Total ram usage:       12 bytes
  2610 ;; Hardware stack levels required when called:    9
  2611 ;; This function calls:
  2612 ;;		_SYSTEM_Initialize
  2613 ;;		_calc_money
  2614 ;;		_get_next
  2615 ;;		_lcd_backlight
  2616 ;;		_lcd_init
  2617 ;;		_lcd_set_cursor
  2618 ;;		_print_money
  2619 ;;		_print_remaing
  2620 ;;		_print_train
  2621 ;;		_read_date
  2622 ;;		_write_date
  2623 ;; This function is called by:
  2624 ;;		Startup code after reset
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function _main
  2630  0109                     _main:
  2631  0109                     l2726:	
  2632                           ;incstack = 0
  2633                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2634                           
  2635                           
  2636                           ;main.c: 22:     SYSTEM_Initialize();
  2637  0109  3189  2102  3181   	fcall	_SYSTEM_Initialize
  2638  010C                     l2728:
  2639                           
  2640                           ;main.c: 24:     WPUB = 0x24;
  2641  010C  3024               	movlw	36
  2642  010D  0024               	movlb	4	; select bank4
  2643  010E  008D               	movwf	13	;volatile
  2644  010F                     l2730:
  2645                           
  2646                           ;main.c: 25:     OPTION_REGbits.nWPUEN = 0;
  2647  010F  0021               	movlb	1	; select bank1
  2648  0110  1395               	bcf	21,7	;volatile
  2649  0111                     l2732:
  2650                           
  2651                           ;main.c: 27:     SSP2ADD = 0x13;
  2652  0111  3013               	movlw	19
  2653  0112  0024               	movlb	4	; select bank4
  2654  0113  009A               	movwf	26	;volatile
  2655  0114                     l2734:
  2656                           
  2657                           ;main.c: 28:     SSP2CON1 = 0x28;
  2658  0114  3028               	movlw	40
  2659  0115  009D               	movwf	29	;volatile
  2660  0116                     l2736:
  2661                           
  2662                           ;main.c: 29:     SSP2CON2 = 0x0;
  2663  0116  019E               	clrf	30	;volatile
  2664  0117                     l2738:
  2665                           
  2666                           ;main.c: 30:     SSP2STAT = 0;
  2667  0117  019C               	clrf	28	;volatile
  2668  0118                     l2740:
  2669                           
  2670                           ;main.c: 32:     lcd_init();
  2671  0118  3182  22CA  3181   	fcall	_lcd_init
  2672  011B                     l2742:
  2673                           
  2674                           ;main.c: 33:     lcd_backlight();
  2675  011B  3189  2144  3181   	fcall	_lcd_backlight
  2676  011E                     l2744:
  2677                           
  2678                           ;main.c: 34:     lcd_set_cursor(0, 0);
  2679  011E  01F8               	clrf	lcd_set_cursor@row
  2680  011F  3000               	movlw	0
  2681  0120  318B  230E  3181   	fcall	_lcd_set_cursor
  2682  0123                     l2746:
  2683                           
  2684                           ;main.c: 36:     struct Date date;;main.c: 37:     date.year = 21;
  2685  0123  3015               	movlw	21
  2686  0124  0021               	movlb	1	; select bank1
  2687  0125  00BB               	movwf	??_main^(0+128)
  2688  0126  083B               	movf	??_main^(0+128),w
  2689  0127  00C1               	movwf	main@date^(0+128)
  2690  0128                     l2748:
  2691                           
  2692                           ;main.c: 38:     date.month = 2;
  2693  0128  3002               	movlw	2
  2694  0129  00BB               	movwf	??_main^(0+128)
  2695  012A  083B               	movf	??_main^(0+128),w
  2696  012B  00C2               	movwf	(main@date^(0+128)+1)
  2697  012C                     l2750:
  2698                           
  2699                           ;main.c: 39:     date.day = 22;
  2700  012C  3016               	movlw	22
  2701  012D  00BB               	movwf	??_main^(0+128)
  2702  012E  083B               	movf	??_main^(0+128),w
  2703  012F  00C3               	movwf	(main@date^(0+128)+2)
  2704  0130                     l2752:
  2705                           
  2706                           ;main.c: 40:     date.hour = 8;
  2707  0130  3008               	movlw	8
  2708  0131  00BB               	movwf	??_main^(0+128)
  2709  0132  083B               	movf	??_main^(0+128),w
  2710  0133  00C4               	movwf	(main@date^(0+128)+3)
  2711  0134                     l2754:
  2712                           
  2713                           ;main.c: 41:     date.min = 40;
  2714  0134  3028               	movlw	40
  2715  0135  00BB               	movwf	??_main^(0+128)
  2716  0136  083B               	movf	??_main^(0+128),w
  2717  0137  00C5               	movwf	(main@date^(0+128)+4)
  2718  0138                     l2756:
  2719                           
  2720                           ;main.c: 42:     date.sec = 0;
  2721  0138  01C6               	clrf	(main@date^(0+128)+5)
  2722  0139                     l2758:
  2723                           
  2724                           ;main.c: 44:     money = 0;
  2725  0139  01CF               	clrf	_money^(0+128)
  2726  013A  01D0               	clrf	(_money+1)^(0+128)
  2727  013B                     l2760:
  2728                           
  2729                           ;main.c: 46:     write_date(&date);
  2730  013B  30C1               	movlw	(low (main@date| 0))& (0+255)
  2731  013C  318E  2613  3181   	fcall	_write_date
  2732  013F                     l2762:
  2733                           
  2734                           ;main.c: 51:     {;main.c: 52:         read_date(&date);
  2735  013F  30C1               	movlw	(low (main@date| 0))& (0+255)
  2736  0140  318B  23CF  3181   	fcall	_read_date
  2737  0143                     l2764:
  2738                           
  2739                           ;main.c: 53:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2740  0143  301A               	movlw	26
  2741  0144  0021               	movlb	1	; select bank1
  2742  0145  00BB               	movwf	??_main^(0+128)
  2743  0146  30F8               	movlw	248
  2744  0147                     u2357:
  2745  0147  0B89               	decfsz	9,f
  2746  0148  2947               	goto	u2357
  2747  0149  0BBB               	decfsz	??_main^(0+128),f
  2748  014A  2947               	goto	u2357
  2749  014B  0000               	nop
  2750  014C                     l2766:
  2751                           
  2752                           ;main.c: 54:         get_next(&next, date.hour, date.min);
  2753  014C  30BF               	movlw	low main@next
  2754  014D  00F6               	movwf	get_next@next
  2755  014E  3000               	movlw	high main@next
  2756  014F  00F7               	movwf	get_next@next+1
  2757  0150  0021               	movlb	1	; select bank1
  2758  0151  0844               	movf	(main@date^(0+128)+3),w
  2759  0152  00BB               	movwf	??_main^(0+128)
  2760  0153  083B               	movf	??_main^(0+128),w
  2761  0154  00F8               	movwf	get_next@hour
  2762  0155  0845               	movf	(main@date^(0+128)+4),w
  2763  0156  00BC               	movwf	(??_main+1)^(0+128)
  2764  0157  083C               	movf	(??_main+1)^(0+128),w
  2765  0158  00F9               	movwf	get_next@min
  2766  0159  318F  2761  3181   	fcall	_get_next
  2767  015C                     l2768:
  2768                           
  2769                           ;main.c: 55:         get_next(&next1, next.hour, next.min);
  2770  015C  30BD               	movlw	low main@next1
  2771  015D  00F6               	movwf	get_next@next
  2772  015E  3000               	movlw	high main@next1
  2773  015F  00F7               	movwf	get_next@next+1
  2774  0160  0021               	movlb	1	; select bank1
  2775  0161  083F               	movf	main@next^(0+128),w
  2776  0162  00BB               	movwf	??_main^(0+128)
  2777  0163  083B               	movf	??_main^(0+128),w
  2778  0164  00F8               	movwf	get_next@hour
  2779  0165  0840               	movf	(main@next^(0+128)+1),w
  2780  0166  00BC               	movwf	(??_main+1)^(0+128)
  2781  0167  083C               	movf	(??_main+1)^(0+128),w
  2782  0168  00F9               	movwf	get_next@min
  2783  0169  318F  2761  3181   	fcall	_get_next
  2784  016C                     l2770:
  2785                           
  2786                           ;main.c: 57:         if(date.sec == 0){
  2787  016C  0021               	movlb	1	; select bank1
  2788  016D  0846               	movf	(main@date^(0+128)+5),w
  2789  016E  1D03               	btfss	3,2
  2790  016F  2971               	goto	u2321
  2791  0170  2972               	goto	u2320
  2792  0171                     u2321:
  2793  0171  297E               	goto	l2774
  2794  0172                     u2320:
  2795  0172                     l2772:
  2796                           
  2797                           ;main.c: 58:             print_train(next, next1);
  2798  0172  0840               	movf	(main@next+1)^(0+128),w
  2799  0173  00B0               	movwf	(print_train@next+1)^(0+128)
  2800  0174  083F               	movf	main@next^(0+128),w
  2801  0175  00AF               	movwf	print_train@next^(0+128)
  2802  0176  083E               	movf	(main@next1+1)^(0+128),w
  2803  0177  00B2               	movwf	(print_train@next1+1)^(0+128)
  2804  0178  083D               	movf	main@next1^(0+128),w
  2805  0179  00B1               	movwf	print_train@next1^(0+128)
  2806  017A  318D  2559  3181   	fcall	_print_train
  2807                           
  2808                           ;main.c: 59:             continue;
  2809  017D  293F               	goto	l2762
  2810  017E                     l2774:
  2811                           
  2812                           ;main.c: 62:         if(date.sec == 30){
  2813  017E  301E               	movlw	30
  2814  017F  0646               	xorwf	(main@date^(0+128)+5),w
  2815  0180  1D03               	btfss	3,2
  2816  0181  2983               	goto	u2331
  2817  0182  2984               	goto	u2330
  2818  0183                     u2331:
  2819  0183  29A0               	goto	l2778
  2820  0184                     u2330:
  2821  0184                     l2776:
  2822                           
  2823                           ;main.c: 63:             print_remaing(date, next);
  2824  0184  30C1               	movlw	low main@date
  2825  0185  0086               	movwf	6
  2826  0186  3000               	movlw	high main@date
  2827  0187  0087               	movwf	7
  2828  0188  30AF               	movlw	low print_remaing@date
  2829  0189  0084               	movwf	4
  2830  018A  3000               	movlw	high print_remaing@date
  2831  018B  0085               	movwf	5
  2832  018C  3F40               	moviw [0]fsr1
  2833  018D  3F80               	movwi [0]fsr0
  2834  018E  3F41               	moviw [1]fsr1
  2835  018F  3F81               	movwi [1]fsr0
  2836  0190  3F42               	moviw [2]fsr1
  2837  0191  3F82               	movwi [2]fsr0
  2838  0192  3F43               	moviw [3]fsr1
  2839  0193  3F83               	movwi [3]fsr0
  2840  0194  3F44               	moviw [4]fsr1
  2841  0195  3F84               	movwi [4]fsr0
  2842  0196  3F45               	moviw [5]fsr1
  2843  0197  3F85               	movwi [5]fsr0
  2844  0198  0840               	movf	(main@next+1)^(0+128),w
  2845  0199  00B6               	movwf	(print_remaing@next+1)^(0+128)
  2846  019A  083F               	movf	main@next^(0+128),w
  2847  019B  00B5               	movwf	print_remaing@next^(0+128)
  2848  019C  318E  26DA  3181   	fcall	_print_remaing
  2849                           
  2850                           ;main.c: 64:             continue;
  2851  019F  293F               	goto	l2762
  2852  01A0                     l2778:
  2853                           
  2854                           ;main.c: 67:         if(date.sec == 45){
  2855  01A0  302D               	movlw	45
  2856  01A1  0646               	xorwf	(main@date^(0+128)+5),w
  2857  01A2  1D03               	btfss	3,2
  2858  01A3  29A5               	goto	u2341
  2859  01A4  29A6               	goto	u2340
  2860  01A5                     u2341:
  2861  01A5  293F               	goto	l2762
  2862  01A6                     u2340:
  2863  01A6                     l2780:
  2864                           
  2865                           ;main.c: 68:             money = calc_money(date);
  2866  01A6  30C1               	movlw	low main@date
  2867  01A7  0086               	movwf	6
  2868  01A8  3000               	movlw	high main@date
  2869  01A9  0087               	movwf	7
  2870  01AA  3076               	movlw	low calc_money@date
  2871  01AB  0084               	movwf	4
  2872  01AC  3000               	movlw	high calc_money@date
  2873  01AD  0085               	movwf	5
  2874  01AE  3F40               	moviw [0]fsr1
  2875  01AF  3F80               	movwi [0]fsr0
  2876  01B0  3F41               	moviw [1]fsr1
  2877  01B1  3F81               	movwi [1]fsr0
  2878  01B2  3F42               	moviw [2]fsr1
  2879  01B3  3F82               	movwi [2]fsr0
  2880  01B4  3F43               	moviw [3]fsr1
  2881  01B5  3F83               	movwi [3]fsr0
  2882  01B6  3F44               	moviw [4]fsr1
  2883  01B7  3F84               	movwi [4]fsr0
  2884  01B8  3F45               	moviw [5]fsr1
  2885  01B9  3F85               	movwi [5]fsr0
  2886  01BA  318E  2673  3181   	fcall	_calc_money
  2887  01BD  0877               	movf	?_calc_money+1,w
  2888  01BE  0021               	movlb	1	; select bank1
  2889  01BF  00D0               	movwf	(_money+1)^(0+128)
  2890  01C0  0876               	movf	?_calc_money,w
  2891  01C1  00CF               	movwf	_money^(0+128)
  2892                           
  2893                           ;main.c: 69:             print_money(date, money);
  2894  01C2  30C1               	movlw	low main@date
  2895  01C3  0086               	movwf	6
  2896  01C4  3000               	movlw	high main@date
  2897  01C5  0087               	movwf	7
  2898  01C6  30AF               	movlw	low print_money@date
  2899  01C7  0084               	movwf	4
  2900  01C8  3000               	movlw	high print_money@date
  2901  01C9  0085               	movwf	5
  2902  01CA  3F40               	moviw [0]fsr1
  2903  01CB  3F80               	movwi [0]fsr0
  2904  01CC  3F41               	moviw [1]fsr1
  2905  01CD  3F81               	movwi [1]fsr0
  2906  01CE  3F42               	moviw [2]fsr1
  2907  01CF  3F82               	movwi [2]fsr0
  2908  01D0  3F43               	moviw [3]fsr1
  2909  01D1  3F83               	movwi [3]fsr0
  2910  01D2  3F44               	moviw [4]fsr1
  2911  01D3  3F84               	movwi [4]fsr0
  2912  01D4  3F45               	moviw [5]fsr1
  2913  01D5  3F85               	movwi [5]fsr0
  2914  01D6  0850               	movf	(_money+1)^(0+128),w
  2915  01D7  00B6               	movwf	(print_money@money+1)^(0+128)
  2916  01D8  084F               	movf	_money^(0+128),w
  2917  01D9  00B5               	movwf	print_money@money^(0+128)
  2918  01DA  318C  2415  3181   	fcall	_print_money
  2919                           
  2920                           ;main.c: 70:             continue;
  2921  01DD  293F               	goto	l2762
  2922  01DE  3180  2802         	ljmp	start
  2923  01E0                     __end_of_main:
  2924                           
  2925                           	psect	text1
  2926  0E13                     __ptext1:	
  2927 ;; *************** function _write_date *****************
  2928 ;; Defined at:
  2929 ;;		line 35 in file "DS3231.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  date            1    wreg     PTR struct Date
  2932 ;;		 -> main@date(6), 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  date            1   12[COMMON] PTR struct Date
  2935 ;;		 -> main@date(6), 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2945 ;;      Params:         0       0       0       0       0       0
  2946 ;;      Locals:         1       0       0       0       0       0
  2947 ;;      Temps:          2       0       0       0       0       0
  2948 ;;      Totals:         3       0       0       0       0       0
  2949 ;;Total ram usage:        3 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    2
  2952 ;; This function calls:
  2953 ;;		_decimal_2_bcd
  2954 ;;		_i2c_start
  2955 ;;		_i2c_stop
  2956 ;;		_i2c_write
  2957 ;; This function is called by:
  2958 ;;		_main
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _write_date
  2964  0E13                     _write_date:
  2965                           
  2966                           ;incstack = 0
  2967                           ; Regs used in _write_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2968                           ;write_date@date stored from wreg
  2969  0E13  00FC               	movwf	write_date@date
  2970  0E14                     l2632:
  2971                           
  2972                           ;DS3231.c: 36:     i2c_start();
  2973  0E14  3189  210C  318E   	fcall	_i2c_start
  2974                           
  2975                           ;DS3231.c: 37:     i2c_write(0xD0);
  2976  0E17  30D0               	movlw	208
  2977  0E18  3189  2152  318E   	fcall	_i2c_write
  2978                           
  2979                           ;DS3231.c: 38:     i2c_write(0x00);
  2980  0E1B  3000               	movlw	0
  2981  0E1C  3189  2152  318E   	fcall	_i2c_write
  2982  0E1F                     l2634:
  2983                           
  2984                           ;DS3231.c: 40:     i2c_write(decimal_2_bcd(date->sec));
  2985  0E1F  087C               	movf	write_date@date,w
  2986  0E20  3E05               	addlw	5
  2987  0E21  0086               	movwf	6
  2988  0E22  0187               	clrf	7
  2989  0E23  0801               	movf	1,w
  2990  0E24  318B  2338  318E   	fcall	_decimal_2_bcd
  2991  0E27  3189  2152  318E   	fcall	_i2c_write
  2992  0E2A                     l2636:
  2993                           
  2994                           ;DS3231.c: 41:     i2c_write(decimal_2_bcd(date->min));
  2995  0E2A  087C               	movf	write_date@date,w
  2996  0E2B  3E04               	addlw	4
  2997  0E2C  0086               	movwf	6
  2998  0E2D  0187               	clrf	7
  2999  0E2E  0801               	movf	1,w
  3000  0E2F  318B  2338  318E   	fcall	_decimal_2_bcd
  3001  0E32  3189  2152  318E   	fcall	_i2c_write
  3002  0E35                     l2638:
  3003                           
  3004                           ;DS3231.c: 42:     i2c_write(decimal_2_bcd(date->hour));
  3005  0E35  087C               	movf	write_date@date,w
  3006  0E36  3E03               	addlw	3
  3007  0E37  0086               	movwf	6
  3008  0E38  0187               	clrf	7
  3009  0E39  0801               	movf	1,w
  3010  0E3A  318B  2338  318E   	fcall	_decimal_2_bcd
  3011  0E3D  3189  2152  318E   	fcall	_i2c_write
  3012  0E40                     l2640:
  3013                           
  3014                           ;DS3231.c: 43:     i2c_write(1);
  3015  0E40  3001               	movlw	1
  3016  0E41  3189  2152  318E   	fcall	_i2c_write
  3017                           
  3018                           ;DS3231.c: 44:     i2c_write(decimal_2_bcd(date->day));
  3019  0E44  087C               	movf	write_date@date,w
  3020  0E45  3E02               	addlw	2
  3021  0E46  0086               	movwf	6
  3022  0E47  0187               	clrf	7
  3023  0E48  0801               	movf	1,w
  3024  0E49  318B  2338  318E   	fcall	_decimal_2_bcd
  3025  0E4C  3189  2152  318E   	fcall	_i2c_write
  3026                           
  3027                           ;DS3231.c: 45:     i2c_write(decimal_2_bcd(date->month));
  3028  0E4F  0A7C               	incf	write_date@date,w
  3029  0E50  0086               	movwf	6
  3030  0E51  0187               	clrf	7
  3031  0E52  0801               	movf	1,w
  3032  0E53  318B  2338  318E   	fcall	_decimal_2_bcd
  3033  0E56  3189  2152  318E   	fcall	_i2c_write
  3034                           
  3035                           ;DS3231.c: 46:     i2c_write(decimal_2_bcd(date->year));
  3036  0E59  087C               	movf	write_date@date,w
  3037  0E5A  0086               	movwf	6
  3038  0E5B  0187               	clrf	7
  3039  0E5C  0801               	movf	1,w
  3040  0E5D  318B  2338  318E   	fcall	_decimal_2_bcd
  3041  0E60  3189  2152  318E   	fcall	_i2c_write
  3042  0E63                     l2642:
  3043                           
  3044                           ;DS3231.c: 47:     i2c_stop();
  3045  0E63  3188  20FB  318E   	fcall	_i2c_stop
  3046  0E66                     l2644:
  3047                           
  3048                           ;DS3231.c: 49:     _delay((unsigned long)((200)*(8000000/4000.0)));
  3049  0E66  3003               	movlw	3
  3050  0E67  00FB               	movwf	??_write_date+1
  3051  0E68  3008               	movlw	8
  3052  0E69  00FA               	movwf	??_write_date
  3053  0E6A  3077               	movlw	119
  3054  0E6B                     u2367:
  3055  0E6B  0B89               	decfsz	9,f
  3056  0E6C  2E6B               	goto	u2367
  3057  0E6D  0BFA               	decfsz	??_write_date,f
  3058  0E6E  2E6B               	goto	u2367
  3059  0E6F  0BFB               	decfsz	??_write_date+1,f
  3060  0E70  2E6B               	goto	u2367
  3061  0E71  0000               	nop
  3062  0E72                     l253:
  3063  0E72  0008               	return
  3064  0E73                     __end_of_write_date:
  3065                           
  3066                           	psect	text2
  3067  0B38                     __ptext2:	
  3068 ;; *************** function _decimal_2_bcd *****************
  3069 ;; Defined at:
  3070 ;;		line 27 in file "DS3231.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  number          1    wreg     unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  number          1    9[COMMON] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      unsigned char 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3084 ;;      Params:         0       0       0       0       0       0
  3085 ;;      Locals:         1       0       0       0       0       0
  3086 ;;      Temps:          0       7       0       0       0       0
  3087 ;;      Totals:         1       7       0       0       0       0
  3088 ;;Total ram usage:        8 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    1
  3091 ;; This function calls:
  3092 ;;		___awdiv
  3093 ;;		___awmod
  3094 ;; This function is called by:
  3095 ;;		_write_date
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           
  3100                           ;psect for function _decimal_2_bcd
  3101  0B38                     _decimal_2_bcd:
  3102                           
  3103                           ;incstack = 0
  3104                           ; Regs used in _decimal_2_bcd: [wreg+status,2+status,0+pclath+cstack]
  3105                           ;decimal_2_bcd@number stored from wreg
  3106  0B38  00F9               	movwf	decimal_2_bcd@number
  3107  0B39                     l2548:
  3108                           
  3109                           ;DS3231.c: 28:     return (((number / 10) << 4) + (number % 10));
  3110  0B39  300A               	movlw	10
  3111  0B3A  00F0               	movwf	___awmod@divisor
  3112  0B3B  3000               	movlw	0
  3113  0B3C  00F1               	movwf	___awmod@divisor+1
  3114  0B3D  0879               	movf	decimal_2_bcd@number,w
  3115  0B3E  0020               	movlb	0	; select bank0
  3116  0B3F  00A0               	movwf	??_decimal_2_bcd
  3117  0B40  01A1               	clrf	??_decimal_2_bcd+1
  3118  0B41  0820               	movf	??_decimal_2_bcd,w
  3119  0B42  00F2               	movwf	___awmod@dividend
  3120  0B43  0821               	movf	??_decimal_2_bcd+1,w
  3121  0B44  00F3               	movwf	___awmod@dividend+1
  3122  0B45  318C  24AD  318B   	fcall	___awmod
  3123  0B48  0870               	movf	?___awmod,w
  3124  0B49  0020               	movlb	0	; select bank0
  3125  0B4A  00A2               	movwf	??_decimal_2_bcd+2
  3126  0B4B  0871               	movf	?___awmod+1,w
  3127  0B4C  00A3               	movwf	??_decimal_2_bcd+3
  3128  0B4D  300A               	movlw	10
  3129  0B4E  00F0               	movwf	___awdiv@divisor
  3130  0B4F  3000               	movlw	0
  3131  0B50  00F1               	movwf	___awdiv@divisor+1
  3132  0B51  0879               	movf	decimal_2_bcd@number,w
  3133  0B52  00A4               	movwf	??_decimal_2_bcd+4
  3134  0B53  01A5               	clrf	??_decimal_2_bcd+5
  3135  0B54  0824               	movf	??_decimal_2_bcd+4,w
  3136  0B55  00F2               	movwf	___awdiv@dividend
  3137  0B56  0825               	movf	??_decimal_2_bcd+5,w
  3138  0B57  00F3               	movwf	___awdiv@dividend+1
  3139  0B58  318D  25B4  318B   	fcall	___awdiv
  3140  0B5B  0870               	movf	?___awdiv,w
  3141  0B5C  0020               	movlb	0	; select bank0
  3142  0B5D  00A6               	movwf	??_decimal_2_bcd+6
  3143  0B5E  3003               	movlw	3
  3144  0B5F                     u2285:
  3145  0B5F  35A6               	lslf	??_decimal_2_bcd+6,f
  3146  0B60  3EFF               	addlw	-1
  3147  0B61  1D03               	skipz
  3148  0B62  2B5F               	goto	u2285
  3149  0B63  3526               	lslf	??_decimal_2_bcd+6,w
  3150  0B64  0722               	addwf	??_decimal_2_bcd+2,w
  3151  0B65                     l250:
  3152  0B65  0008               	return
  3153  0B66                     __end_of_decimal_2_bcd:
  3154                           
  3155                           	psect	text3
  3156  0CAD                     __ptext3:	
  3157 ;; *************** function ___awmod *****************
  3158 ;; Defined at:
  3159 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  divisor         2    0[COMMON] int 
  3162 ;;  dividend        2    2[COMMON] int 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  sign            1    6[COMMON] unsigned char 
  3165 ;;  counter         1    5[COMMON] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2    0[COMMON] int 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3175 ;;      Params:         4       0       0       0       0       0
  3176 ;;      Locals:         2       0       0       0       0       0
  3177 ;;      Temps:          1       0       0       0       0       0
  3178 ;;      Totals:         7       0       0       0       0       0
  3179 ;;Total ram usage:        7 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_decimal_2_bcd
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function ___awmod
  3190  0CAD                     ___awmod:
  3191  0CAD                     l2442:	
  3192                           ;incstack = 0
  3193                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3194                           
  3195  0CAD  01F6               	clrf	___awmod@sign
  3196  0CAE                     l2444:
  3197  0CAE  1FF3               	btfss	___awmod@dividend+1,7
  3198  0CAF  2CB1               	goto	u2161
  3199  0CB0  2CB2               	goto	u2160
  3200  0CB1                     u2161:
  3201  0CB1  2CB9               	goto	l2450
  3202  0CB2                     u2160:
  3203  0CB2                     l2446:
  3204  0CB2  09F2               	comf	___awmod@dividend,f
  3205  0CB3  09F3               	comf	___awmod@dividend+1,f
  3206  0CB4  0AF2               	incf	___awmod@dividend,f
  3207  0CB5  1903               	skipnz
  3208  0CB6  0AF3               	incf	___awmod@dividend+1,f
  3209  0CB7                     l2448:
  3210  0CB7  01F6               	clrf	___awmod@sign
  3211  0CB8  0AF6               	incf	___awmod@sign,f
  3212  0CB9                     l2450:
  3213  0CB9  1FF1               	btfss	___awmod@divisor+1,7
  3214  0CBA  2CBC               	goto	u2171
  3215  0CBB  2CBD               	goto	u2170
  3216  0CBC                     u2171:
  3217  0CBC  2CC2               	goto	l2454
  3218  0CBD                     u2170:
  3219  0CBD                     l2452:
  3220  0CBD  09F0               	comf	___awmod@divisor,f
  3221  0CBE  09F1               	comf	___awmod@divisor+1,f
  3222  0CBF  0AF0               	incf	___awmod@divisor,f
  3223  0CC0  1903               	skipnz
  3224  0CC1  0AF1               	incf	___awmod@divisor+1,f
  3225  0CC2                     l2454:
  3226  0CC2  0870               	movf	___awmod@divisor,w
  3227  0CC3  0471               	iorwf	___awmod@divisor+1,w
  3228  0CC4  1903               	btfsc	3,2
  3229  0CC5  2CC7               	goto	u2181
  3230  0CC6  2CC8               	goto	u2180
  3231  0CC7                     u2181:
  3232  0CC7  2CF1               	goto	l2472
  3233  0CC8                     u2180:
  3234  0CC8                     l2456:
  3235  0CC8  01F5               	clrf	___awmod@counter
  3236  0CC9  0AF5               	incf	___awmod@counter,f
  3237  0CCA  2CD4               	goto	l2462
  3238  0CCB                     l2458:
  3239  0CCB  3001               	movlw	1
  3240  0CCC                     u2195:
  3241  0CCC  35F0               	lslf	___awmod@divisor,f
  3242  0CCD  0DF1               	rlf	___awmod@divisor+1,f
  3243  0CCE  0B89               	decfsz	9,f
  3244  0CCF  2CCC               	goto	u2195
  3245  0CD0                     l2460:
  3246  0CD0  3001               	movlw	1
  3247  0CD1  00F4               	movwf	??___awmod
  3248  0CD2  0874               	movf	??___awmod,w
  3249  0CD3  07F5               	addwf	___awmod@counter,f
  3250  0CD4                     l2462:
  3251  0CD4  1FF1               	btfss	___awmod@divisor+1,7
  3252  0CD5  2CD7               	goto	u2201
  3253  0CD6  2CD8               	goto	u2200
  3254  0CD7                     u2201:
  3255  0CD7  2CCB               	goto	l2458
  3256  0CD8                     u2200:
  3257  0CD8                     l2464:
  3258  0CD8  0871               	movf	___awmod@divisor+1,w
  3259  0CD9  0273               	subwf	___awmod@dividend+1,w
  3260  0CDA  1D03               	skipz
  3261  0CDB  2CDE               	goto	u2215
  3262  0CDC  0870               	movf	___awmod@divisor,w
  3263  0CDD  0272               	subwf	___awmod@dividend,w
  3264  0CDE                     u2215:
  3265  0CDE  1C03               	skipc
  3266  0CDF  2CE1               	goto	u2211
  3267  0CE0  2CE2               	goto	u2210
  3268  0CE1                     u2211:
  3269  0CE1  2CE6               	goto	l2468
  3270  0CE2                     u2210:
  3271  0CE2                     l2466:
  3272  0CE2  0870               	movf	___awmod@divisor,w
  3273  0CE3  02F2               	subwf	___awmod@dividend,f
  3274  0CE4  0871               	movf	___awmod@divisor+1,w
  3275  0CE5  3BF3               	subwfb	___awmod@dividend+1,f
  3276  0CE6                     l2468:
  3277  0CE6  3001               	movlw	1
  3278  0CE7                     u2225:
  3279  0CE7  36F1               	lsrf	___awmod@divisor+1,f
  3280  0CE8  0CF0               	rrf	___awmod@divisor,f
  3281  0CE9  0B89               	decfsz	9,f
  3282  0CEA  2CE7               	goto	u2225
  3283  0CEB                     l2470:
  3284  0CEB  3001               	movlw	1
  3285  0CEC  02F5               	subwf	___awmod@counter,f
  3286  0CED  1D03               	btfss	3,2
  3287  0CEE  2CF0               	goto	u2231
  3288  0CEF  2CF1               	goto	u2230
  3289  0CF0                     u2231:
  3290  0CF0  2CD8               	goto	l2464
  3291  0CF1                     u2230:
  3292  0CF1                     l2472:
  3293  0CF1  0876               	movf	___awmod@sign,w
  3294  0CF2  1903               	btfsc	3,2
  3295  0CF3  2CF5               	goto	u2241
  3296  0CF4  2CF6               	goto	u2240
  3297  0CF5                     u2241:
  3298  0CF5  2CFB               	goto	l2476
  3299  0CF6                     u2240:
  3300  0CF6                     l2474:
  3301  0CF6  09F2               	comf	___awmod@dividend,f
  3302  0CF7  09F3               	comf	___awmod@dividend+1,f
  3303  0CF8  0AF2               	incf	___awmod@dividend,f
  3304  0CF9  1903               	skipnz
  3305  0CFA  0AF3               	incf	___awmod@dividend+1,f
  3306  0CFB                     l2476:
  3307  0CFB  0873               	movf	___awmod@dividend+1,w
  3308  0CFC  00F1               	movwf	?___awmod+1
  3309  0CFD  0872               	movf	___awmod@dividend,w
  3310  0CFE  00F0               	movwf	?___awmod
  3311  0CFF                     l586:
  3312  0CFF  0008               	return
  3313  0D00                     __end_of___awmod:
  3314                           
  3315                           	psect	text4
  3316  0DB4                     __ptext4:	
  3317 ;; *************** function ___awdiv *****************
  3318 ;; Defined at:
  3319 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  divisor         2    0[COMMON] int 
  3322 ;;  dividend        2    2[COMMON] int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  quotient        2    7[COMMON] int 
  3325 ;;  sign            1    6[COMMON] unsigned char 
  3326 ;;  counter         1    5[COMMON] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  2    0[COMMON] int 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3336 ;;      Params:         4       0       0       0       0       0
  3337 ;;      Locals:         4       0       0       0       0       0
  3338 ;;      Temps:          1       0       0       0       0       0
  3339 ;;      Totals:         9       0       0       0       0       0
  3340 ;;Total ram usage:        9 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_decimal_2_bcd
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           
  3350                           ;psect for function ___awdiv
  3351  0DB4                     ___awdiv:
  3352  0DB4                     l2398:	
  3353                           ;incstack = 0
  3354                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3355                           
  3356  0DB4  01F6               	clrf	___awdiv@sign
  3357  0DB5                     l2400:
  3358  0DB5  1FF1               	btfss	___awdiv@divisor+1,7
  3359  0DB6  2DB8               	goto	u2061
  3360  0DB7  2DB9               	goto	u2060
  3361  0DB8                     u2061:
  3362  0DB8  2DC0               	goto	l2406
  3363  0DB9                     u2060:
  3364  0DB9                     l2402:
  3365  0DB9  09F0               	comf	___awdiv@divisor,f
  3366  0DBA  09F1               	comf	___awdiv@divisor+1,f
  3367  0DBB  0AF0               	incf	___awdiv@divisor,f
  3368  0DBC  1903               	skipnz
  3369  0DBD  0AF1               	incf	___awdiv@divisor+1,f
  3370  0DBE                     l2404:
  3371  0DBE  01F6               	clrf	___awdiv@sign
  3372  0DBF  0AF6               	incf	___awdiv@sign,f
  3373  0DC0                     l2406:
  3374  0DC0  1FF3               	btfss	___awdiv@dividend+1,7
  3375  0DC1  2DC3               	goto	u2071
  3376  0DC2  2DC4               	goto	u2070
  3377  0DC3                     u2071:
  3378  0DC3  2DCD               	goto	l2412
  3379  0DC4                     u2070:
  3380  0DC4                     l2408:
  3381  0DC4  09F2               	comf	___awdiv@dividend,f
  3382  0DC5  09F3               	comf	___awdiv@dividend+1,f
  3383  0DC6  0AF2               	incf	___awdiv@dividend,f
  3384  0DC7  1903               	skipnz
  3385  0DC8  0AF3               	incf	___awdiv@dividend+1,f
  3386  0DC9                     l2410:
  3387  0DC9  3001               	movlw	1
  3388  0DCA  00F4               	movwf	??___awdiv
  3389  0DCB  0874               	movf	??___awdiv,w
  3390  0DCC  06F6               	xorwf	___awdiv@sign,f
  3391  0DCD                     l2412:
  3392  0DCD  01F7               	clrf	___awdiv@quotient
  3393  0DCE  01F8               	clrf	___awdiv@quotient+1
  3394  0DCF                     l2414:
  3395  0DCF  0870               	movf	___awdiv@divisor,w
  3396  0DD0  0471               	iorwf	___awdiv@divisor+1,w
  3397  0DD1  1903               	btfsc	3,2
  3398  0DD2  2DD4               	goto	u2081
  3399  0DD3  2DD5               	goto	u2080
  3400  0DD4                     u2081:
  3401  0DD4  2E04               	goto	l2434
  3402  0DD5                     u2080:
  3403  0DD5                     l2416:
  3404  0DD5  01F5               	clrf	___awdiv@counter
  3405  0DD6  0AF5               	incf	___awdiv@counter,f
  3406  0DD7  2DE1               	goto	l2422
  3407  0DD8                     l2418:
  3408  0DD8  3001               	movlw	1
  3409  0DD9                     u2095:
  3410  0DD9  35F0               	lslf	___awdiv@divisor,f
  3411  0DDA  0DF1               	rlf	___awdiv@divisor+1,f
  3412  0DDB  0B89               	decfsz	9,f
  3413  0DDC  2DD9               	goto	u2095
  3414  0DDD                     l2420:
  3415  0DDD  3001               	movlw	1
  3416  0DDE  00F4               	movwf	??___awdiv
  3417  0DDF  0874               	movf	??___awdiv,w
  3418  0DE0  07F5               	addwf	___awdiv@counter,f
  3419  0DE1                     l2422:
  3420  0DE1  1FF1               	btfss	___awdiv@divisor+1,7
  3421  0DE2  2DE4               	goto	u2101
  3422  0DE3  2DE5               	goto	u2100
  3423  0DE4                     u2101:
  3424  0DE4  2DD8               	goto	l2418
  3425  0DE5                     u2100:
  3426  0DE5                     l2424:
  3427  0DE5  3001               	movlw	1
  3428  0DE6                     u2115:
  3429  0DE6  35F7               	lslf	___awdiv@quotient,f
  3430  0DE7  0DF8               	rlf	___awdiv@quotient+1,f
  3431  0DE8  0B89               	decfsz	9,f
  3432  0DE9  2DE6               	goto	u2115
  3433  0DEA  0871               	movf	___awdiv@divisor+1,w
  3434  0DEB  0273               	subwf	___awdiv@dividend+1,w
  3435  0DEC  1D03               	skipz
  3436  0DED  2DF0               	goto	u2125
  3437  0DEE  0870               	movf	___awdiv@divisor,w
  3438  0DEF  0272               	subwf	___awdiv@dividend,w
  3439  0DF0                     u2125:
  3440  0DF0  1C03               	skipc
  3441  0DF1  2DF3               	goto	u2121
  3442  0DF2  2DF4               	goto	u2120
  3443  0DF3                     u2121:
  3444  0DF3  2DF9               	goto	l2430
  3445  0DF4                     u2120:
  3446  0DF4                     l2426:
  3447  0DF4  0870               	movf	___awdiv@divisor,w
  3448  0DF5  02F2               	subwf	___awdiv@dividend,f
  3449  0DF6  0871               	movf	___awdiv@divisor+1,w
  3450  0DF7  3BF3               	subwfb	___awdiv@dividend+1,f
  3451  0DF8                     l2428:
  3452  0DF8  1477               	bsf	___awdiv@quotient,0
  3453  0DF9                     l2430:
  3454  0DF9  3001               	movlw	1
  3455  0DFA                     u2135:
  3456  0DFA  36F1               	lsrf	___awdiv@divisor+1,f
  3457  0DFB  0CF0               	rrf	___awdiv@divisor,f
  3458  0DFC  0B89               	decfsz	9,f
  3459  0DFD  2DFA               	goto	u2135
  3460  0DFE                     l2432:
  3461  0DFE  3001               	movlw	1
  3462  0DFF  02F5               	subwf	___awdiv@counter,f
  3463  0E00  1D03               	btfss	3,2
  3464  0E01  2E03               	goto	u2141
  3465  0E02  2E04               	goto	u2140
  3466  0E03                     u2141:
  3467  0E03  2DE5               	goto	l2424
  3468  0E04                     u2140:
  3469  0E04                     l2434:
  3470  0E04  0876               	movf	___awdiv@sign,w
  3471  0E05  1903               	btfsc	3,2
  3472  0E06  2E08               	goto	u2151
  3473  0E07  2E09               	goto	u2150
  3474  0E08                     u2151:
  3475  0E08  2E0E               	goto	l2438
  3476  0E09                     u2150:
  3477  0E09                     l2436:
  3478  0E09  09F7               	comf	___awdiv@quotient,f
  3479  0E0A  09F8               	comf	___awdiv@quotient+1,f
  3480  0E0B  0AF7               	incf	___awdiv@quotient,f
  3481  0E0C  1903               	skipnz
  3482  0E0D  0AF8               	incf	___awdiv@quotient+1,f
  3483  0E0E                     l2438:
  3484  0E0E  0878               	movf	___awdiv@quotient+1,w
  3485  0E0F  00F1               	movwf	?___awdiv+1
  3486  0E10  0877               	movf	___awdiv@quotient,w
  3487  0E11  00F0               	movwf	?___awdiv
  3488  0E12                     l573:
  3489  0E12  0008               	return
  3490  0E13                     __end_of___awdiv:
  3491                           
  3492                           	psect	text5
  3493  0BCF                     __ptext5:	
  3494 ;; *************** function _read_date *****************
  3495 ;; Defined at:
  3496 ;;		line 77 in file "DS3231.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  date            1    wreg     PTR struct Date
  3499 ;;		 -> main@date(6), 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  date            1   12[COMMON] PTR struct Date
  3502 ;;		 -> main@date(6), 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3512 ;;      Params:         0       0       0       0       0       0
  3513 ;;      Locals:         1       0       0       0       0       0
  3514 ;;      Temps:          1       0       0       0       0       0
  3515 ;;      Totals:         2       0       0       0       0       0
  3516 ;;Total ram usage:        2 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    3
  3519 ;; This function calls:
  3520 ;;		__read
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _read_date
  3528  0BCF                     _read_date:
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _read_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3532                           ;read_date@date stored from wreg
  3533  0BCF  00FC               	movwf	read_date@date
  3534  0BD0                     l2646:
  3535                           
  3536                           ;DS3231.c: 78:     date->year = _read(6);
  3537  0BD0  3006               	movlw	6
  3538  0BD1  318A  2275  318B   	fcall	__read
  3539  0BD4  00FB               	movwf	??_read_date
  3540  0BD5  087C               	movf	read_date@date,w
  3541  0BD6  0086               	movwf	6
  3542  0BD7  0187               	clrf	7
  3543  0BD8  087B               	movf	??_read_date,w
  3544  0BD9  0081               	movwf	1
  3545                           
  3546                           ;DS3231.c: 79:     date->month = _read(5);
  3547  0BDA  3005               	movlw	5
  3548  0BDB  318A  2275  318B   	fcall	__read
  3549  0BDE  00FB               	movwf	??_read_date
  3550  0BDF  0A7C               	incf	read_date@date,w
  3551  0BE0  0086               	movwf	6
  3552  0BE1  0187               	clrf	7
  3553  0BE2  087B               	movf	??_read_date,w
  3554  0BE3  0081               	movwf	1
  3555                           
  3556                           ;DS3231.c: 80:     date->day = _read(4);
  3557  0BE4  3004               	movlw	4
  3558  0BE5  318A  2275  318B   	fcall	__read
  3559  0BE8  00FB               	movwf	??_read_date
  3560  0BE9  087C               	movf	read_date@date,w
  3561  0BEA  3E02               	addlw	2
  3562  0BEB  0086               	movwf	6
  3563  0BEC  0187               	clrf	7
  3564  0BED  087B               	movf	??_read_date,w
  3565  0BEE  0081               	movwf	1
  3566  0BEF                     l2648:
  3567                           
  3568                           ;DS3231.c: 81:     _read(3);
  3569  0BEF  3003               	movlw	3
  3570  0BF0  318A  2275  318B   	fcall	__read
  3571  0BF3                     l2650:
  3572                           
  3573                           ;DS3231.c: 82:     date->hour = _read(2);
  3574  0BF3  3002               	movlw	2
  3575  0BF4  318A  2275  318B   	fcall	__read
  3576  0BF7  00FB               	movwf	??_read_date
  3577  0BF8  087C               	movf	read_date@date,w
  3578  0BF9  3E03               	addlw	3
  3579  0BFA  0086               	movwf	6
  3580  0BFB  0187               	clrf	7
  3581  0BFC  087B               	movf	??_read_date,w
  3582  0BFD  0081               	movwf	1
  3583  0BFE                     l2652:
  3584                           
  3585                           ;DS3231.c: 83:     date->min = _read(1);
  3586  0BFE  3001               	movlw	1
  3587  0BFF  318A  2275  318B   	fcall	__read
  3588  0C02  00FB               	movwf	??_read_date
  3589  0C03  087C               	movf	read_date@date,w
  3590  0C04  3E04               	addlw	4
  3591  0C05  0086               	movwf	6
  3592  0C06  0187               	clrf	7
  3593  0C07  087B               	movf	??_read_date,w
  3594  0C08  0081               	movwf	1
  3595  0C09                     l2654:
  3596                           
  3597                           ;DS3231.c: 84:     date->sec = _read(0);
  3598  0C09  3000               	movlw	0
  3599  0C0A  318A  2275  318B   	fcall	__read
  3600  0C0D  00FB               	movwf	??_read_date
  3601  0C0E  087C               	movf	read_date@date,w
  3602  0C0F  3E05               	addlw	5
  3603  0C10  0086               	movwf	6
  3604  0C11  0187               	clrf	7
  3605  0C12  087B               	movf	??_read_date,w
  3606  0C13  0081               	movwf	1
  3607  0C14                     l259:
  3608  0C14  0008               	return
  3609  0C15                     __end_of_read_date:
  3610                           
  3611                           	psect	text6
  3612  0A75                     __ptext6:	
  3613 ;; *************** function __read *****************
  3614 ;; Defined at:
  3615 ;;		line 58 in file "DS3231.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  address         1    wreg     unsigned char 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  address         1    9[COMMON] unsigned char 
  3620 ;;  data            1   10[COMMON] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      unsigned char 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3630 ;;      Params:         0       0       0       0       0       0
  3631 ;;      Locals:         2       0       0       0       0       0
  3632 ;;      Temps:          1       0       0       0       0       0
  3633 ;;      Totals:         3       0       0       0       0       0
  3634 ;;Total ram usage:        3 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    2
  3637 ;; This function calls:
  3638 ;;		_bcd_2_decimal
  3639 ;;		_i2c_read
  3640 ;;		_i2c_repeated_start
  3641 ;;		_i2c_start
  3642 ;;		_i2c_stop
  3643 ;;		_i2c_write
  3644 ;; This function is called by:
  3645 ;;		_read_date
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function __read
  3651  0A75                     __read:
  3652                           
  3653                           ;incstack = 0
  3654                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  3655                           ;__read@address stored from wreg
  3656  0A75  00F9               	movwf	__read@address
  3657  0A76                     l2552:
  3658                           
  3659                           ;DS3231.c: 59:     uint8_t data;;DS3231.c: 60:     i2c_start();
  3660  0A76  3189  210C  318A   	fcall	_i2c_start
  3661                           
  3662                           ;DS3231.c: 61:     i2c_write(0xD0);
  3663  0A79  30D0               	movlw	208
  3664  0A7A  3189  2152  318A   	fcall	_i2c_write
  3665                           
  3666                           ;DS3231.c: 62:     i2c_write(address);
  3667  0A7D  0879               	movf	__read@address,w
  3668  0A7E  3189  2152  318A   	fcall	_i2c_write
  3669                           
  3670                           ;DS3231.c: 64:     i2c_repeated_start();
  3671  0A81  3189  2116  318A   	fcall	_i2c_repeated_start
  3672                           
  3673                           ;DS3231.c: 66:     i2c_write(0xD0 | 0x01);
  3674  0A84  30D1               	movlw	209
  3675  0A85  3189  2152  318A   	fcall	_i2c_write
  3676                           
  3677                           ;DS3231.c: 67:     data = bcd_2_decimal(i2c_read(1));
  3678  0A88  3001               	movlw	1
  3679  0A89  3189  21B5  318A   	fcall	_i2c_read
  3680  0A8C  3189  2176  318A   	fcall	_bcd_2_decimal
  3681  0A8F  00F8               	movwf	??__read
  3682  0A90  0878               	movf	??__read,w
  3683  0A91  00FA               	movwf	__read@data
  3684  0A92                     l2554:
  3685                           
  3686                           ;DS3231.c: 68:     i2c_stop();
  3687  0A92  3188  20FB  318A   	fcall	_i2c_stop
  3688                           
  3689                           ;DS3231.c: 70:     return data;
  3690  0A95  087A               	movf	__read@data,w
  3691  0A96                     l256:
  3692  0A96  0008               	return
  3693  0A97                     __end_of__read:
  3694                           
  3695                           	psect	text7
  3696  0916                     __ptext7:	
  3697 ;; *************** function _i2c_repeated_start *****************
  3698 ;; Defined at:
  3699 ;;		line 20 in file "i2c.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0, pclath, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3713 ;;      Params:         0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0
  3716 ;;      Totals:         0       0       0       0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    1
  3720 ;; This function calls:
  3721 ;;		_i2c_wait
  3722 ;; This function is called by:
  3723 ;;		__read
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _i2c_repeated_start
  3729  0916                     _i2c_repeated_start:
  3730  0916                     l2376:	
  3731                           ;incstack = 0
  3732                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  3733                           
  3734                           
  3735                           ;i2c.c: 21:     i2c_wait();
  3736  0916  3189  2120  3189   	fcall	_i2c_wait
  3737  0919                     l2378:
  3738                           
  3739                           ;i2c.c: 22:     SSP2CON2bits.RSEN = 1;
  3740  0919  0024               	movlb	4	; select bank4
  3741  091A  149E               	bsf	30,1	;volatile
  3742  091B                     l159:	
  3743                           ;i2c.c: 23:     while(SSP2CON2bits.RSEN);
  3744                           
  3745  091B  189E               	btfsc	30,1	;volatile
  3746  091C  291E               	goto	u2031
  3747  091D  291F               	goto	u2030
  3748  091E                     u2031:
  3749  091E  291B               	goto	l159
  3750  091F                     u2030:
  3751  091F                     l162:
  3752  091F  0008               	return
  3753  0920                     __end_of_i2c_repeated_start:
  3754                           
  3755                           	psect	text8
  3756  09B5                     __ptext8:	
  3757 ;; *************** function _i2c_read *****************
  3758 ;; Defined at:
  3759 ;;		line 33 in file "i2c.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  ack             1    wreg     unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  ack             1    1[COMMON] unsigned char 
  3764 ;;  data            1    2[COMMON] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      unsigned char 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0, pclath, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3774 ;;      Params:         0       0       0       0       0       0
  3775 ;;      Locals:         2       0       0       0       0       0
  3776 ;;      Temps:          1       0       0       0       0       0
  3777 ;;      Totals:         3       0       0       0       0       0
  3778 ;;Total ram usage:        3 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    1
  3781 ;; This function calls:
  3782 ;;		_i2c_wait
  3783 ;; This function is called by:
  3784 ;;		__read
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function _i2c_read
  3790  09B5                     _i2c_read:
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3794                           ;i2c_read@ack stored from wreg
  3795  09B5  00F1               	movwf	i2c_read@ack
  3796  09B6                     l2380:
  3797                           
  3798                           ;i2c.c: 34:     uint8_t data;;i2c.c: 36:     SSP2CON2bits.ACKDT = ack;
  3799  09B6  0C71               	rrf	i2c_read@ack,w
  3800  09B7  0024               	movlb	4	; select bank4
  3801  09B8  1C03               	skipc
  3802  09B9  129E               	bcf	30,5	;volatile
  3803  09BA  1803               	skipnc
  3804  09BB  169E               	bsf	30,5	;volatile
  3805  09BC                     l2382:
  3806                           
  3807                           ;i2c.c: 37:     SSP2CON2bits.RCEN = 1;
  3808  09BC  159E               	bsf	30,3	;volatile
  3809  09BD                     l174:	
  3810                           ;i2c.c: 38:     while(!SSP2STATbits.BF);
  3811                           
  3812  09BD  1C1C               	btfss	28,0	;volatile
  3813  09BE  29C0               	goto	u2041
  3814  09BF  29C1               	goto	u2040
  3815  09C0                     u2041:
  3816  09C0  29BD               	goto	l174
  3817  09C1                     u2040:
  3818  09C1                     l176:
  3819                           
  3820                           ;i2c.c: 39:     SSP2CON2bits.ACKEN = 1;
  3821  09C1  161E               	bsf	30,4	;volatile
  3822  09C2                     l2384:
  3823                           
  3824                           ;i2c.c: 40:     data = SSP2BUF;
  3825  09C2  0819               	movf	25,w	;volatile
  3826  09C3  00F0               	movwf	??_i2c_read
  3827  09C4  0870               	movf	??_i2c_read,w
  3828  09C5  00F2               	movwf	i2c_read@data
  3829  09C6                     l2386:
  3830                           
  3831                           ;i2c.c: 41:     SSP2CON1bits.SSPOV = 0;
  3832  09C6  131D               	bcf	29,6	;volatile
  3833  09C7                     l2388:
  3834                           
  3835                           ;i2c.c: 42:     i2c_wait();
  3836  09C7  3189  2120  3189   	fcall	_i2c_wait
  3837  09CA                     l2390:
  3838                           
  3839                           ;i2c.c: 44:     return data;
  3840  09CA  0872               	movf	i2c_read@data,w
  3841  09CB                     l177:
  3842  09CB  0008               	return
  3843  09CC                     __end_of_i2c_read:
  3844                           
  3845                           	psect	text9
  3846  0976                     __ptext9:	
  3847 ;; *************** function _bcd_2_decimal *****************
  3848 ;; Defined at:
  3849 ;;		line 18 in file "DS3231.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  number          1    wreg     unsigned char 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  number          1    7[COMMON] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      unsigned char 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2, status,0, pclath, cstack
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3863 ;;      Params:         0       0       0       0       0       0
  3864 ;;      Locals:         1       0       0       0       0       0
  3865 ;;      Temps:          3       0       0       0       0       0
  3866 ;;      Totals:         4       0       0       0       0       0
  3867 ;;Total ram usage:        4 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    1
  3870 ;; This function calls:
  3871 ;;		___bmul
  3872 ;; This function is called by:
  3873 ;;		__read
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _bcd_2_decimal
  3879  0976                     _bcd_2_decimal:
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _bcd_2_decimal: [wreg+status,2+status,0+pclath+cstack]
  3883                           ;bcd_2_decimal@number stored from wreg
  3884  0976  00F7               	movwf	bcd_2_decimal@number
  3885  0977                     l2394:
  3886                           
  3887                           ;DS3231.c: 19:     return ((number >> 4) * 10 + (number & 0x0F));
  3888  0977  300F               	movlw	15
  3889  0978  0577               	andwf	bcd_2_decimal@number,w
  3890  0979  00F4               	movwf	??_bcd_2_decimal
  3891  097A  300A               	movlw	10
  3892  097B  00F5               	movwf	??_bcd_2_decimal+1
  3893  097C  0875               	movf	??_bcd_2_decimal+1,w
  3894  097D  00F0               	movwf	___bmul@multiplicand
  3895  097E  0877               	movf	bcd_2_decimal@number,w
  3896  097F  00F6               	movwf	??_bcd_2_decimal+2
  3897  0980  3004               	movlw	4
  3898  0981                     u2055:
  3899  0981  36F6               	lsrf	??_bcd_2_decimal+2,f
  3900  0982  0B89               	decfsz	9,f
  3901  0983  2981               	goto	u2055
  3902  0984  0876               	movf	??_bcd_2_decimal+2,w
  3903  0985  3189  218A  3189   	fcall	___bmul
  3904  0988  0774               	addwf	??_bcd_2_decimal,w
  3905  0989                     l247:
  3906  0989  0008               	return
  3907  098A                     __end_of_bcd_2_decimal:
  3908                           
  3909                           	psect	text10
  3910  098A                     __ptext10:	
  3911 ;; *************** function ___bmul *****************
  3912 ;; Defined at:
  3913 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul8.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  multiplier      1    wreg     unsigned char 
  3916 ;;  multiplicand    1    0[COMMON] unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  multiplier      1    3[COMMON] unsigned char 
  3919 ;;  product         1    2[COMMON] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      unsigned char 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3929 ;;      Params:         1       0       0       0       0       0
  3930 ;;      Locals:         2       0       0       0       0       0
  3931 ;;      Temps:          1       0       0       0       0       0
  3932 ;;      Totals:         4       0       0       0       0       0
  3933 ;;Total ram usage:        4 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_bcd_2_decimal
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function ___bmul
  3944  098A                     ___bmul:
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3948                           ;___bmul@multiplier stored from wreg
  3949  098A  00F3               	movwf	___bmul@multiplier
  3950  098B                     l2252:
  3951  098B  01F2               	clrf	___bmul@product
  3952  098C                     l2254:
  3953  098C  1C73               	btfss	___bmul@multiplier,0
  3954  098D  298F               	goto	u1881
  3955  098E  2990               	goto	u1880
  3956  098F                     u1881:
  3957  098F  2994               	goto	l2258
  3958  0990                     u1880:
  3959  0990                     l2256:
  3960  0990  0870               	movf	___bmul@multiplicand,w
  3961  0991  00F1               	movwf	??___bmul
  3962  0992  0871               	movf	??___bmul,w
  3963  0993  07F2               	addwf	___bmul@product,f
  3964  0994                     l2258:
  3965  0994  1003               	clrc
  3966  0995  0DF0               	rlf	___bmul@multiplicand,f
  3967  0996                     l2260:
  3968  0996  1003               	clrc
  3969  0997  0CF3               	rrf	___bmul@multiplier,f
  3970  0998  0873               	movf	___bmul@multiplier,w
  3971  0999  1D03               	btfss	3,2
  3972  099A  299C               	goto	u1891
  3973  099B  299D               	goto	u1890
  3974  099C                     u1891:
  3975  099C  298C               	goto	l2254
  3976  099D                     u1890:
  3977  099D                     l2262:
  3978  099D  0872               	movf	___bmul@product,w
  3979  099E                     l446:
  3980  099E  0008               	return
  3981  099F                     __end_of___bmul:
  3982                           
  3983                           	psect	text11
  3984  0D59                     __ptext11:	
  3985 ;; *************** function _print_train *****************
  3986 ;; Defined at:
  3987 ;;		line 77 in file "main.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  next            2   15[BANK1 ] struct train
  3990 ;;  next1           2   17[BANK1 ] struct train
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4002 ;;      Params:         0       0       4       0       0       0
  4003 ;;      Locals:         0       0       0       0       0       0
  4004 ;;      Temps:          0       4       0       0       0       0
  4005 ;;      Totals:         0       4       4       0       0       0
  4006 ;;Total ram usage:        8 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    8
  4009 ;; This function calls:
  4010 ;;		_lcd_clear
  4011 ;;		_lcd_print
  4012 ;;		_lcd_set_cursor
  4013 ;;		_sprintf
  4014 ;; This function is called by:
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _print_train
  4021  0D59                     _print_train:
  4022  0D59                     l2678:	
  4023                           ;incstack = 0
  4024                           ; Regs used in _print_train: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4025                           
  4026                           
  4027                           ;main.c: 78:     lcd_clear();
  4028  0D59  318A  22BD  318D   	fcall	_lcd_clear
  4029                           
  4030                           ;main.c: 80:     sprintf(line, "KW > MT %02d:%02d", next.hour, next.min);
  4031  0D5C  3002               	movlw	low (STR_1| (0+32768))
  4032  0D5D  0021               	movlb	1	; select bank1
  4033  0D5E  00A0               	movwf	sprintf@fmt^(0+128)
  4034  0D5F  3088               	movlw	high (STR_1| (0+32768))
  4035  0D60  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  4036  0D61  082F               	movf	print_train@next^(0+128),w
  4037  0D62  0020               	movlb	0	; select bank0
  4038  0D63  00EB               	movwf	??_print_train
  4039  0D64  01EC               	clrf	??_print_train+1
  4040  0D65  086B               	movf	??_print_train,w
  4041  0D66  0021               	movlb	1	; select bank1
  4042  0D67  00A2               	movwf	(?_sprintf^(0+128)+2)
  4043  0D68  0020               	movlb	0	; select bank0
  4044  0D69  086C               	movf	??_print_train+1,w
  4045  0D6A  0021               	movlb	1	; select bank1
  4046  0D6B  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  4047  0D6C  0830               	movf	(print_train@next^(0+128)+1),w
  4048  0D6D  0020               	movlb	0	; select bank0
  4049  0D6E  00ED               	movwf	??_print_train+2
  4050  0D6F  01EE               	clrf	??_print_train+3
  4051  0D70  086D               	movf	??_print_train+2,w
  4052  0D71  0021               	movlb	1	; select bank1
  4053  0D72  00A4               	movwf	(?_sprintf^(0+128)+4)
  4054  0D73  0020               	movlb	0	; select bank0
  4055  0D74  086E               	movf	??_print_train+3,w
  4056  0D75  0021               	movlb	1	; select bank1
  4057  0D76  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  4058  0D77  30D1               	movlw	(low (_line| 0))& (0+255)
  4059  0D78  318A  2297  318D   	fcall	_sprintf
  4060  0D7B                     l2680:
  4061                           
  4062                           ;main.c: 81:     lcd_set_cursor(0, 0);
  4063  0D7B  01F8               	clrf	lcd_set_cursor@row
  4064  0D7C  3000               	movlw	0
  4065  0D7D  318B  230E  318D   	fcall	_lcd_set_cursor
  4066  0D80                     l2682:
  4067                           
  4068                           ;main.c: 82:     lcd_print(line);
  4069  0D80  30D1               	movlw	low _line
  4070  0D81  00F8               	movwf	lcd_print@str
  4071  0D82  3000               	movlw	high _line
  4072  0D83  00F9               	movwf	lcd_print@str+1
  4073  0D84  318A  2218  318D   	fcall	_lcd_print
  4074  0D87                     l2684:
  4075                           
  4076                           ;main.c: 84:     sprintf(line, "KW > MT %02d:%02d", next1.hour, next1.min);
  4077  0D87  3002               	movlw	low (STR_1| (0+32768))
  4078  0D88  0021               	movlb	1	; select bank1
  4079  0D89  00A0               	movwf	sprintf@fmt^(0+128)
  4080  0D8A  3088               	movlw	high (STR_1| (0+32768))
  4081  0D8B  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  4082  0D8C  0831               	movf	print_train@next1^(0+128),w
  4083  0D8D  0020               	movlb	0	; select bank0
  4084  0D8E  00EB               	movwf	??_print_train
  4085  0D8F  01EC               	clrf	??_print_train+1
  4086  0D90  086B               	movf	??_print_train,w
  4087  0D91  0021               	movlb	1	; select bank1
  4088  0D92  00A2               	movwf	(?_sprintf^(0+128)+2)
  4089  0D93  0020               	movlb	0	; select bank0
  4090  0D94  086C               	movf	??_print_train+1,w
  4091  0D95  0021               	movlb	1	; select bank1
  4092  0D96  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  4093  0D97  0832               	movf	(print_train@next1^(0+128)+1),w
  4094  0D98  0020               	movlb	0	; select bank0
  4095  0D99  00ED               	movwf	??_print_train+2
  4096  0D9A  01EE               	clrf	??_print_train+3
  4097  0D9B  086D               	movf	??_print_train+2,w
  4098  0D9C  0021               	movlb	1	; select bank1
  4099  0D9D  00A4               	movwf	(?_sprintf^(0+128)+4)
  4100  0D9E  0020               	movlb	0	; select bank0
  4101  0D9F  086E               	movf	??_print_train+3,w
  4102  0DA0  0021               	movlb	1	; select bank1
  4103  0DA1  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  4104  0DA2  30D1               	movlw	(low (_line| 0))& (0+255)
  4105  0DA3  318A  2297  318D   	fcall	_sprintf
  4106  0DA6                     l2686:
  4107                           
  4108                           ;main.c: 85:     lcd_set_cursor(0, 1);
  4109  0DA6  01F8               	clrf	lcd_set_cursor@row
  4110  0DA7  0AF8               	incf	lcd_set_cursor@row,f
  4111  0DA8  3000               	movlw	0
  4112  0DA9  318B  230E  318D   	fcall	_lcd_set_cursor
  4113                           
  4114                           ;main.c: 86:     lcd_print(line);
  4115  0DAC  30D1               	movlw	low _line
  4116  0DAD  00F8               	movwf	lcd_print@str
  4117  0DAE  3000               	movlw	high _line
  4118  0DAF  00F9               	movwf	lcd_print@str+1
  4119  0DB0  318A  2218  318D   	fcall	_lcd_print
  4120  0DB3                     l119:
  4121  0DB3  0008               	return
  4122  0DB4                     __end_of_print_train:
  4123                           
  4124                           	psect	text12
  4125  0EDA                     __ptext12:	
  4126 ;; *************** function _print_remaing *****************
  4127 ;; Defined at:
  4128 ;;		line 89 in file "main.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  date            6   15[BANK1 ] struct Date
  4131 ;;  next            2   21[BANK1 ] struct train
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  next_min        2   25[BANK1 ] unsigned short 
  4134 ;;  now_min         2   23[BANK1 ] unsigned short 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4144 ;;      Params:         0       0       8       0       0       0
  4145 ;;      Locals:         0       0       4       0       0       0
  4146 ;;      Temps:          0       4       0       0       0       0
  4147 ;;      Totals:         0       4      12       0       0       0
  4148 ;;Total ram usage:       16 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    8
  4151 ;; This function calls:
  4152 ;;		___wmul
  4153 ;;		_lcd_clear
  4154 ;;		_lcd_print
  4155 ;;		_lcd_set_cursor
  4156 ;;		_sprintf
  4157 ;; This function is called by:
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _print_remaing
  4164  0EDA                     _print_remaing:
  4165  0EDA                     l2688:	
  4166                           ;incstack = 0
  4167                           ; Regs used in _print_remaing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4168                           
  4169                           
  4170                           ;main.c: 90:     lcd_clear();
  4171  0EDA  318A  22BD  318E   	fcall	_lcd_clear
  4172  0EDD                     l2690:
  4173                           
  4174                           ;main.c: 92:     uint16_t now_min = ((uint16_t)date.hour * 60) + date.min;
  4175  0EDD  0021               	movlb	1	; select bank1
  4176  0EDE  0833               	movf	(print_remaing@date^(0+128)+4),w
  4177  0EDF  0020               	movlb	0	; select bank0
  4178  0EE0  00EB               	movwf	??_print_remaing
  4179  0EE1  01EC               	clrf	??_print_remaing+1
  4180  0EE2  0021               	movlb	1	; select bank1
  4181  0EE3  0832               	movf	(print_remaing@date^(0+128)+3),w
  4182  0EE4  0020               	movlb	0	; select bank0
  4183  0EE5  00ED               	movwf	??_print_remaing+2
  4184  0EE6  01EE               	clrf	??_print_remaing+3
  4185  0EE7  086D               	movf	??_print_remaing+2,w
  4186  0EE8  00F0               	movwf	___wmul@multiplier
  4187  0EE9  086E               	movf	??_print_remaing+3,w
  4188  0EEA  00F1               	movwf	___wmul@multiplier+1
  4189  0EEB  303C               	movlw	60
  4190  0EEC  00F2               	movwf	___wmul@multiplicand
  4191  0EED  3000               	movlw	0
  4192  0EEE  00F3               	movwf	___wmul@multiplicand+1
  4193  0EEF  318A  2235  318E   	fcall	___wmul
  4194  0EF2  0020               	movlb	0	; select bank0
  4195  0EF3  086B               	movf	??_print_remaing,w
  4196  0EF4  0770               	addwf	?___wmul,w
  4197  0EF5  0021               	movlb	1	; select bank1
  4198  0EF6  00B7               	movwf	print_remaing@now_min^(0+128)
  4199  0EF7  0020               	movlb	0	; select bank0
  4200  0EF8  086C               	movf	??_print_remaing+1,w
  4201  0EF9  3D71               	addwfc	?___wmul+1,w
  4202  0EFA  0021               	movlb	1	; select bank1
  4203  0EFB  00B8               	movwf	(print_remaing@now_min+1)^(0+128)
  4204  0EFC                     l2692:
  4205                           
  4206                           ;main.c: 93:     uint16_t next_min = ((uint16_t)next.hour * 60) + next.min;
  4207  0EFC  0836               	movf	(print_remaing@next^(0+128)+1),w
  4208  0EFD  0020               	movlb	0	; select bank0
  4209  0EFE  00EB               	movwf	??_print_remaing
  4210  0EFF  01EC               	clrf	??_print_remaing+1
  4211  0F00  0021               	movlb	1	; select bank1
  4212  0F01  0835               	movf	print_remaing@next^(0+128),w
  4213  0F02  0020               	movlb	0	; select bank0
  4214  0F03  00ED               	movwf	??_print_remaing+2
  4215  0F04  01EE               	clrf	??_print_remaing+3
  4216  0F05  086D               	movf	??_print_remaing+2,w
  4217  0F06  00F0               	movwf	___wmul@multiplier
  4218  0F07  086E               	movf	??_print_remaing+3,w
  4219  0F08  00F1               	movwf	___wmul@multiplier+1
  4220  0F09  303C               	movlw	60
  4221  0F0A  00F2               	movwf	___wmul@multiplicand
  4222  0F0B  3000               	movlw	0
  4223  0F0C  00F3               	movwf	___wmul@multiplicand+1
  4224  0F0D  318A  2235  318E   	fcall	___wmul
  4225  0F10  0020               	movlb	0	; select bank0
  4226  0F11  086B               	movf	??_print_remaing,w
  4227  0F12  0770               	addwf	?___wmul,w
  4228  0F13  0021               	movlb	1	; select bank1
  4229  0F14  00B9               	movwf	print_remaing@next_min^(0+128)
  4230  0F15  0020               	movlb	0	; select bank0
  4231  0F16  086C               	movf	??_print_remaing+1,w
  4232  0F17  3D71               	addwfc	?___wmul+1,w
  4233  0F18  0021               	movlb	1	; select bank1
  4234  0F19  00BA               	movwf	(print_remaing@next_min+1)^(0+128)
  4235                           
  4236                           ;main.c: 95:     sprintf(line, "KW > MT %02d:%02d", next.hour, next.min);
  4237  0F1A  3002               	movlw	low (STR_1| (0+32768))
  4238  0F1B  00A0               	movwf	sprintf@fmt^(0+128)
  4239  0F1C  3088               	movlw	high (STR_1| (0+32768))
  4240  0F1D  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  4241  0F1E  0835               	movf	print_remaing@next^(0+128),w
  4242  0F1F  0020               	movlb	0	; select bank0
  4243  0F20  00EB               	movwf	??_print_remaing
  4244  0F21  01EC               	clrf	??_print_remaing+1
  4245  0F22  086B               	movf	??_print_remaing,w
  4246  0F23  0021               	movlb	1	; select bank1
  4247  0F24  00A2               	movwf	(?_sprintf^(0+128)+2)
  4248  0F25  0020               	movlb	0	; select bank0
  4249  0F26  086C               	movf	??_print_remaing+1,w
  4250  0F27  0021               	movlb	1	; select bank1
  4251  0F28  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  4252  0F29  0836               	movf	(print_remaing@next^(0+128)+1),w
  4253  0F2A  0020               	movlb	0	; select bank0
  4254  0F2B  00ED               	movwf	??_print_remaing+2
  4255  0F2C  01EE               	clrf	??_print_remaing+3
  4256  0F2D  086D               	movf	??_print_remaing+2,w
  4257  0F2E  0021               	movlb	1	; select bank1
  4258  0F2F  00A4               	movwf	(?_sprintf^(0+128)+4)
  4259  0F30  0020               	movlb	0	; select bank0
  4260  0F31  086E               	movf	??_print_remaing+3,w
  4261  0F32  0021               	movlb	1	; select bank1
  4262  0F33  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  4263  0F34  30D1               	movlw	(low (_line| 0))& (0+255)
  4264  0F35  318A  2297  318E   	fcall	_sprintf
  4265  0F38                     l2694:
  4266                           
  4267                           ;main.c: 96:     lcd_set_cursor(0, 0);
  4268  0F38  01F8               	clrf	lcd_set_cursor@row
  4269  0F39  3000               	movlw	0
  4270  0F3A  318B  230E  318E   	fcall	_lcd_set_cursor
  4271  0F3D                     l2696:
  4272                           
  4273                           ;main.c: 97:     lcd_print(line);
  4274  0F3D  30D1               	movlw	low _line
  4275  0F3E  00F8               	movwf	lcd_print@str
  4276  0F3F  3000               	movlw	high _line
  4277  0F40  00F9               	movwf	lcd_print@str+1
  4278  0F41  318A  2218  318E   	fcall	_lcd_print
  4279  0F44                     l2698:
  4280                           
  4281                           ;main.c: 99:     sprintf(line, "%d min left", (next_min - now_min));
  4282  0F44  3030               	movlw	low (STR_4| (0+32768))
  4283  0F45  0021               	movlb	1	; select bank1
  4284  0F46  00A0               	movwf	sprintf@fmt^(0+128)
  4285  0F47  3088               	movlw	high (STR_4| (0+32768))
  4286  0F48  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  4287  0F49  0837               	movf	print_remaing@now_min^(0+128),w
  4288  0F4A  0239               	subwf	print_remaing@next_min^(0+128),w
  4289  0F4B  00A2               	movwf	(?_sprintf^(0+128)+2)
  4290  0F4C  0838               	movf	(print_remaing@now_min+1)^(0+128),w
  4291  0F4D  3B3A               	subwfb	(print_remaing@next_min+1)^(0+128),w
  4292  0F4E  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  4293  0F4F  30D1               	movlw	(low (_line| 0))& (0+255)
  4294  0F50  318A  2297  318E   	fcall	_sprintf
  4295  0F53                     l2700:
  4296                           
  4297                           ;main.c: 100:     lcd_set_cursor(0, 1);
  4298  0F53  01F8               	clrf	lcd_set_cursor@row
  4299  0F54  0AF8               	incf	lcd_set_cursor@row,f
  4300  0F55  3000               	movlw	0
  4301  0F56  318B  230E  318E   	fcall	_lcd_set_cursor
  4302                           
  4303                           ;main.c: 101:     lcd_print(line);
  4304  0F59  30D1               	movlw	low _line
  4305  0F5A  00F8               	movwf	lcd_print@str
  4306  0F5B  3000               	movlw	high _line
  4307  0F5C  00F9               	movwf	lcd_print@str+1
  4308  0F5D  318A  2218  318E   	fcall	_lcd_print
  4309  0F60                     l123:
  4310  0F60  0008               	return
  4311  0F61                     __end_of_print_remaing:
  4312                           
  4313                           	psect	text13
  4314  0C15                     __ptext13:	
  4315 ;; *************** function _print_money *****************
  4316 ;; Defined at:
  4317 ;;		line 109 in file "main.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  date            6   15[BANK1 ] struct Date
  4320 ;;  money           2   21[BANK1 ] unsigned short 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4332 ;;      Params:         0       0       8       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0
  4334 ;;      Temps:          0       4       0       0       0       0
  4335 ;;      Totals:         0       4       8       0       0       0
  4336 ;;Total ram usage:       12 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    8
  4339 ;; This function calls:
  4340 ;;		_lcd_clear
  4341 ;;		_lcd_print
  4342 ;;		_lcd_set_cursor
  4343 ;;		_sprintf
  4344 ;; This function is called by:
  4345 ;;		_main
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           
  4350                           ;psect for function _print_money
  4351  0C15                     _print_money:
  4352  0C15                     l2716:	
  4353                           ;incstack = 0
  4354                           ; Regs used in _print_money: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4355                           
  4356                           
  4357                           ;main.c: 110:     lcd_clear();
  4358  0C15  318A  22BD  318C   	fcall	_lcd_clear
  4359                           
  4360                           ;main.c: 112:     sprintf(line, "Time :%02d:%02d", date.hour, date.min);
  4361  0C18  3014               	movlw	low (STR_5| (0+32768))
  4362  0C19  0021               	movlb	1	; select bank1
  4363  0C1A  00A0               	movwf	sprintf@fmt^(0+128)
  4364  0C1B  3088               	movlw	high (STR_5| (0+32768))
  4365  0C1C  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  4366  0C1D  0832               	movf	(print_money@date^(0+128)+3),w
  4367  0C1E  0020               	movlb	0	; select bank0
  4368  0C1F  00EB               	movwf	??_print_money
  4369  0C20  01EC               	clrf	??_print_money+1
  4370  0C21  086B               	movf	??_print_money,w
  4371  0C22  0021               	movlb	1	; select bank1
  4372  0C23  00A2               	movwf	(?_sprintf^(0+128)+2)
  4373  0C24  0020               	movlb	0	; select bank0
  4374  0C25  086C               	movf	??_print_money+1,w
  4375  0C26  0021               	movlb	1	; select bank1
  4376  0C27  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  4377  0C28  0833               	movf	(print_money@date^(0+128)+4),w
  4378  0C29  0020               	movlb	0	; select bank0
  4379  0C2A  00ED               	movwf	??_print_money+2
  4380  0C2B  01EE               	clrf	??_print_money+3
  4381  0C2C  086D               	movf	??_print_money+2,w
  4382  0C2D  0021               	movlb	1	; select bank1
  4383  0C2E  00A4               	movwf	(?_sprintf^(0+128)+4)
  4384  0C2F  0020               	movlb	0	; select bank0
  4385  0C30  086E               	movf	??_print_money+3,w
  4386  0C31  0021               	movlb	1	; select bank1
  4387  0C32  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  4388  0C33  30D1               	movlw	(low (_line| 0))& (0+255)
  4389  0C34  318A  2297  318C   	fcall	_sprintf
  4390  0C37                     l2718:
  4391                           
  4392                           ;main.c: 113:     lcd_set_cursor(0, 0);
  4393  0C37  01F8               	clrf	lcd_set_cursor@row
  4394  0C38  3000               	movlw	0
  4395  0C39  318B  230E  318C   	fcall	_lcd_set_cursor
  4396  0C3C                     l2720:
  4397                           
  4398                           ;main.c: 114:     lcd_print(line);
  4399  0C3C  30D1               	movlw	low _line
  4400  0C3D  00F8               	movwf	lcd_print@str
  4401  0C3E  3000               	movlw	high _line
  4402  0C3F  00F9               	movwf	lcd_print@str+1
  4403  0C40  318A  2218  318C   	fcall	_lcd_print
  4404  0C43                     l2722:
  4405                           
  4406                           ;main.c: 116:     sprintf(line, "Money:%dYEN", money);
  4407  0C43  3024               	movlw	low (STR_6| (0+32768))
  4408  0C44  0021               	movlb	1	; select bank1
  4409  0C45  00A0               	movwf	sprintf@fmt^(0+128)
  4410  0C46  3088               	movlw	high (STR_6| (0+32768))
  4411  0C47  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  4412  0C48  0836               	movf	(print_money@money+1)^(0+128),w
  4413  0C49  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  4414  0C4A  0835               	movf	print_money@money^(0+128),w
  4415  0C4B  00A2               	movwf	(?_sprintf^(0+128)+2)
  4416  0C4C  30D1               	movlw	(low (_line| 0))& (0+255)
  4417  0C4D  318A  2297  318C   	fcall	_sprintf
  4418  0C50                     l2724:
  4419                           
  4420                           ;main.c: 117:     lcd_set_cursor(0, 1);
  4421  0C50  01F8               	clrf	lcd_set_cursor@row
  4422  0C51  0AF8               	incf	lcd_set_cursor@row,f
  4423  0C52  3000               	movlw	0
  4424  0C53  318B  230E  318C   	fcall	_lcd_set_cursor
  4425                           
  4426                           ;main.c: 118:     lcd_print(line);
  4427  0C56  30D1               	movlw	low _line
  4428  0C57  00F8               	movwf	lcd_print@str
  4429  0C58  3000               	movlw	high _line
  4430  0C59  00F9               	movwf	lcd_print@str+1
  4431  0C5A  318A  2218  318C   	fcall	_lcd_print
  4432  0C5D                     l126:
  4433  0C5D  0008               	return
  4434  0C5E                     __end_of_print_money:
  4435                           
  4436                           	psect	text14
  4437  0A97                     __ptext14:	
  4438 ;; *************** function _sprintf *****************
  4439 ;; Defined at:
  4440 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  s               1    wreg     PTR unsigned char 
  4443 ;;		 -> line(16), 
  4444 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  4445 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  4446 ;;		 -> STR_2(18), STR_1(18), 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  s               1    9[BANK1 ] PTR unsigned char 
  4449 ;;		 -> line(16), 
  4450 ;;  f               5   10[BANK1 ] struct _IO_FILE
  4451 ;;  ret             2    0        int 
  4452 ;;  ap              1    8[BANK1 ] PTR void [1]
  4453 ;;		 -> ?_sprintf(2), 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  2    0[BANK1 ] int 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4463 ;;      Params:         0       0       6       0       0       0
  4464 ;;      Locals:         0       0       9       0       0       0
  4465 ;;      Temps:          1       0       0       0       0       0
  4466 ;;      Totals:         1       0      15       0       0       0
  4467 ;;Total ram usage:       16 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    7
  4470 ;; This function calls:
  4471 ;;		_vfprintf
  4472 ;; This function is called by:
  4473 ;;		_print_train
  4474 ;;		_print_remaing
  4475 ;;		_print_money
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           
  4480                           ;psect for function _sprintf
  4481  0A97                     _sprintf:
  4482                           
  4483                           ;incstack = 0
  4484                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4485                           ;sprintf@s stored from wreg
  4486  0A97  0021               	movlb	1	; select bank1
  4487  0A98  00A9               	movwf	sprintf@s^(0+128)
  4488  0A99                     l2536:
  4489  0A99  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4490  0A9A  00FD               	movwf	??_sprintf
  4491  0A9B  087D               	movf	??_sprintf,w
  4492  0A9C  00A8               	movwf	sprintf@ap^(0+128)
  4493  0A9D  0829               	movf	sprintf@s^(0+128),w
  4494  0A9E  00FD               	movwf	??_sprintf
  4495  0A9F  087D               	movf	??_sprintf,w
  4496  0AA0  00AA               	movwf	sprintf@f^(0+128)
  4497  0AA1                     l2538:
  4498  0AA1  01AB               	clrf	(sprintf@f^(0+128)+1)
  4499  0AA2  01AC               	clrf	((sprintf@f+1)^(0+128)+1)
  4500  0AA3                     l2540:
  4501  0AA3  01AD               	clrf	(sprintf@f^(0+128)+3)
  4502  0AA4  01AE               	clrf	((sprintf@f+1)^(0+128)+3)
  4503  0AA5                     l2542:
  4504  0AA5  0821               	movf	(sprintf@fmt+1)^(0+128),w
  4505  0AA6  0020               	movlb	0	; select bank0
  4506  0AA7  00E4               	movwf	vfprintf@fmt+1
  4507  0AA8  0021               	movlb	1	; select bank1
  4508  0AA9  0820               	movf	sprintf@fmt^(0+128),w
  4509  0AAA  0020               	movlb	0	; select bank0
  4510  0AAB  00E3               	movwf	vfprintf@fmt
  4511  0AAC  30A8               	movlw	(low (sprintf@ap| 0))& (0+255)
  4512  0AAD  00FD               	movwf	??_sprintf
  4513  0AAE  087D               	movf	??_sprintf,w
  4514  0AAF  00E5               	movwf	vfprintf@ap
  4515  0AB0  30AA               	movlw	(low (sprintf@f| 0))& (0+255)
  4516  0AB1  318B  2366  318A   	fcall	_vfprintf
  4517  0AB4                     l2544:
  4518  0AB4  0021               	movlb	1	; select bank1
  4519  0AB5  082B               	movf	(sprintf@f^(0+128)+1),w
  4520  0AB6  0729               	addwf	sprintf@s^(0+128),w
  4521  0AB7  00FD               	movwf	??_sprintf
  4522  0AB8  087D               	movf	??_sprintf,w
  4523  0AB9  0086               	movwf	6
  4524  0ABA  0187               	clrf	7
  4525  0ABB  0181               	clrf	1
  4526  0ABC                     l883:
  4527  0ABC  0008               	return
  4528  0ABD                     __end_of_sprintf:
  4529                           
  4530                           	psect	text15
  4531  0B66                     __ptext15:	
  4532 ;; *************** function _vfprintf *****************
  4533 ;; Defined at:
  4534 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  fp              1    wreg     PTR struct _IO_FILE
  4537 ;;		 -> sprintf@f(5), 
  4538 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  4539 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  4540 ;;		 -> STR_2(18), STR_1(18), 
  4541 ;;  ap              1   69[BANK0 ] PTR PTR void 
  4542 ;;		 -> sprintf@ap(1), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
  4545 ;;		 -> sprintf@f(5), 
  4546 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
  4547 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  4548 ;;		 -> STR_2(18), STR_1(18), 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2   67[BANK0 ] int 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4558 ;;      Params:         0       3       0       0       0       0
  4559 ;;      Locals:         0       3       0       0       0       0
  4560 ;;      Temps:          0       2       0       0       0       0
  4561 ;;      Totals:         0       8       0       0       0       0
  4562 ;;Total ram usage:        8 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    6
  4565 ;; This function calls:
  4566 ;;		_vfpfcnvrt
  4567 ;; This function is called by:
  4568 ;;		_sprintf
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function _vfprintf
  4574  0B66                     _vfprintf:
  4575                           
  4576                           ;incstack = 0
  4577                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4578                           ;vfprintf@fp stored from wreg
  4579  0B66  0020               	movlb	0	; select bank0
  4580  0B67  00E8               	movwf	vfprintf@fp
  4581  0B68                     l2480:
  4582                           
  4583                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4584  0B68  0864               	movf	vfprintf@fmt+1,w
  4585  0B69  00EA               	movwf	vfprintf@cfmt+1
  4586  0B6A  0863               	movf	vfprintf@fmt,w
  4587  0B6B  00E9               	movwf	vfprintf@cfmt
  4588  0B6C                     l2482:
  4589                           
  4590                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4591  0B6C  0021               	movlb	1	; select bank1
  4592  0B6D  01C7               	clrf	_nout^(0+128)
  4593  0B6E  01C8               	clrf	(_nout+1)^(0+128)
  4594                           
  4595                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4596  0B6F  2B84               	goto	l2486
  4597  0B70                     l2484:
  4598                           
  4599                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4600  0B70  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4601  0B71  00E6               	movwf	??_vfprintf
  4602  0B72  0866               	movf	??_vfprintf,w
  4603  0B73  00CE               	movwf	vfpfcnvrt@fmt
  4604  0B74  0865               	movf	vfprintf@ap,w
  4605  0B75  00E7               	movwf	??_vfprintf+1
  4606  0B76  0867               	movf	??_vfprintf+1,w
  4607  0B77  00CF               	movwf	vfpfcnvrt@ap
  4608  0B78  0868               	movf	vfprintf@fp,w
  4609  0B79  3186  2627  318B   	fcall	_vfpfcnvrt
  4610  0B7C  0020               	movlb	0	; select bank0
  4611  0B7D  084E               	movf	?_vfpfcnvrt,w
  4612  0B7E  0021               	movlb	1	; select bank1
  4613  0B7F  07C7               	addwf	_nout^(0+128),f
  4614  0B80  0020               	movlb	0	; select bank0
  4615  0B81  084F               	movf	?_vfpfcnvrt+1,w
  4616  0B82  0021               	movlb	1	; select bank1
  4617  0B83  3DC8               	addwfc	(_nout+1)^(0+128),f
  4618  0B84                     l2486:
  4619                           
  4620                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4621  0B84  0020               	movlb	0	; select bank0
  4622  0B85  0869               	movf	vfprintf@cfmt,w
  4623  0B86  0084               	movwf	4
  4624  0B87  086A               	movf	vfprintf@cfmt+1,w
  4625  0B88  0085               	movwf	5
  4626  0B89  0012               	moviw fsr0++
  4627  0B8A  1D03               	btfss	3,2
  4628  0B8B  2B8D               	goto	u2251
  4629  0B8C  2B8E               	goto	u2250
  4630  0B8D                     u2251:
  4631  0B8D  2B70               	goto	l2484
  4632  0B8E                     u2250:
  4633  0B8E                     l2488:
  4634                           
  4635                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4636  0B8E  0021               	movlb	1	; select bank1
  4637  0B8F  0848               	movf	(_nout+1)^(0+128),w
  4638  0B90  0020               	movlb	0	; select bank0
  4639  0B91  00E4               	movwf	?_vfprintf+1
  4640  0B92  0021               	movlb	1	; select bank1
  4641  0B93  0847               	movf	_nout^(0+128),w
  4642  0B94  0020               	movlb	0	; select bank0
  4643  0B95  00E3               	movwf	?_vfprintf
  4644  0B96                     l981:
  4645  0B96  0008               	return
  4646  0B97                     __end_of_vfprintf:
  4647                           
  4648                           	psect	text16
  4649  0627                     __ptext16:	
  4650 ;; *************** function _vfpfcnvrt *****************
  4651 ;; Defined at:
  4652 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  fp              1    wreg     PTR struct _IO_FILE
  4655 ;;		 -> sprintf@f(5), 
  4656 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4657 ;;		 -> vfprintf@cfmt(2), 
  4658 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4659 ;;		 -> sprintf@ap(1), 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
  4662 ;;		 -> sprintf@f(5), 
  4663 ;;  ll              8   54[BANK0 ] long long 
  4664 ;;  llu             8    0        unsigned long long 
  4665 ;;  f               4    0        unsigned long long 
  4666 ;;  ct              3    0        unsigned char [3]
  4667 ;;  done            2   62[BANK0 ] int 
  4668 ;;  vp              2    0        PTR void 
  4669 ;;  i               2    0        int 
  4670 ;;  cp              2    0        PTR unsigned char 
  4671 ;;  c               1    0        unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  2   46[BANK0 ] int 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4681 ;;      Params:         0       2       0       0       0       0
  4682 ;;      Locals:         0      13       0       0       0       0
  4683 ;;      Temps:          0       6       0       0       0       0
  4684 ;;      Totals:         0      21       0       0       0       0
  4685 ;;Total ram usage:       21 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    5
  4688 ;; This function calls:
  4689 ;;		_atoi
  4690 ;;		_dtoa
  4691 ;;		_fputc
  4692 ;;		_isdigit
  4693 ;; This function is called by:
  4694 ;;		_vfprintf
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function _vfpfcnvrt
  4700  0627                     _vfpfcnvrt:
  4701                           
  4702                           ;incstack = 0
  4703                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4704                           ;vfpfcnvrt@fp stored from wreg
  4705  0627  0020               	movlb	0	; select bank0
  4706  0628  00E2               	movwf	vfpfcnvrt@fp
  4707  0629                     l2266:
  4708                           
  4709                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4710  0629  084E               	movf	vfpfcnvrt@fmt,w
  4711  062A  0086               	movwf	6
  4712  062B  0187               	clrf	7
  4713  062C  3F40               	moviw [0]fsr1
  4714  062D  00D0               	movwf	??_vfpfcnvrt
  4715  062E  3F41               	moviw [1]fsr1
  4716  062F  00D1               	movwf	??_vfpfcnvrt+1
  4717  0630  0850               	movf	??_vfpfcnvrt,w
  4718  0631  0084               	movwf	4
  4719  0632  0851               	movf	??_vfpfcnvrt+1,w
  4720  0633  0085               	movwf	5
  4721  0634  0012               	moviw fsr0++
  4722  0635  3A25               	xorlw	37
  4723  0636  1D03               	btfss	3,2
  4724  0637  2E39               	goto	u1901
  4725  0638  2E3A               	goto	u1900
  4726  0639                     u1901:
  4727  0639  2FA6               	goto	l2346
  4728  063A                     u1900:
  4729  063A                     l2268:
  4730                           
  4731                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4732  063A  084E               	movf	vfpfcnvrt@fmt,w
  4733  063B  0086               	movwf	6
  4734  063C  0187               	clrf	7
  4735  063D  3001               	movlw	1
  4736  063E  0781               	addwf	1,f
  4737  063F  3141               	addfsr 1,1
  4738  0640  1803               	skipnc
  4739  0641  0A81               	incf	1,f
  4740  0642                     l2270:
  4741                           
  4742                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4743  0642  0021               	movlb	1	; select bank1
  4744  0643  01C9               	clrf	_width^(0+128)
  4745  0644  01CA               	clrf	(_width+1)^(0+128)
  4746  0645  01CD               	clrf	_flags^(0+128)
  4747  0646  01CE               	clrf	(_flags+1)^(0+128)
  4748  0647                     l2272:
  4749                           
  4750                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4751  0647  30FF               	movlw	255
  4752  0648  00CB               	movwf	_prec^(0+128)
  4753  0649  30FF               	movlw	255
  4754  064A  00CC               	movwf	(_prec^(0+128)+1)
  4755  064B                     l2274:
  4756                           
  4757                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4758  064B  0020               	movlb	0	; select bank0
  4759  064C  01DE               	clrf	vfpfcnvrt@done
  4760  064D  01DF               	clrf	vfpfcnvrt@done+1
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4763  064E  2E90               	goto	l2292
  4764  064F                     l952:	
  4765                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  4766                           
  4767                           
  4768                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4769  064F  0021               	movlb	1	; select bank1
  4770  0650  144D               	bsf	_flags^(0+128),0
  4771  0651                     l2276:
  4772                           
  4773                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4774  0651  0020               	movlb	0	; select bank0
  4775  0652  084E               	movf	vfpfcnvrt@fmt,w
  4776  0653  0086               	movwf	6
  4777  0654  0187               	clrf	7
  4778  0655  3001               	movlw	1
  4779  0656  0781               	addwf	1,f
  4780  0657  3141               	addfsr 1,1
  4781  0658  1803               	skipnc
  4782  0659  0A81               	incf	1,f
  4783                           
  4784                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4785  065A  2E90               	goto	l2292
  4786  065B                     l954:	
  4787                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  4788                           
  4789                           
  4790                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4791  065B  0021               	movlb	1	; select bank1
  4792  065C  14CD               	bsf	_flags^(0+128),1
  4793  065D  2E51               	goto	l2276
  4794  065E                     l955:	
  4795                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  4796                           
  4797                           
  4798                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4799  065E  0021               	movlb	1	; select bank1
  4800  065F  154D               	bsf	_flags^(0+128),2
  4801  0660  2E51               	goto	l2276
  4802  0661                     l956:	
  4803                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  4804                           
  4805                           
  4806                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4807  0661  0021               	movlb	1	; select bank1
  4808  0662  15CD               	bsf	_flags^(0+128),3
  4809  0663  2E51               	goto	l2276
  4810  0664                     l957:	
  4811                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  4812                           
  4813                           
  4814                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4815  0664  0021               	movlb	1	; select bank1
  4816  0665  164D               	bsf	_flags^(0+128),4
  4817  0666  2E51               	goto	l2276
  4818  0667                     l2286:
  4819                           
  4820                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4821  0667  3001               	movlw	1
  4822  0668  00DE               	movwf	vfpfcnvrt@done
  4823  0669  3000               	movlw	0
  4824  066A  00DF               	movwf	vfpfcnvrt@done+1
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4827  066B  2E90               	goto	l2292
  4828  066C                     l2290:
  4829  066C  084E               	movf	vfpfcnvrt@fmt,w
  4830  066D  0086               	movwf	6
  4831  066E  0187               	clrf	7
  4832  066F  3F40               	moviw [0]fsr1
  4833  0670  00D0               	movwf	??_vfpfcnvrt
  4834  0671  3F41               	moviw [1]fsr1
  4835  0672  00D1               	movwf	??_vfpfcnvrt+1
  4836  0673  0850               	movf	??_vfpfcnvrt,w
  4837  0674  0084               	movwf	4
  4838  0675  0851               	movf	??_vfpfcnvrt+1,w
  4839  0676  0085               	movwf	5
  4840  0677  0800               	movf	0,w	;code access
  4841  0678  00D2               	movwf	??_vfpfcnvrt+2
  4842  0679  01D3               	clrf	??_vfpfcnvrt+3
  4843                           
  4844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4845                           ; Switch size 1, requested type "simple"
  4846                           ; Number of cases is 1, Range of values is 0 to 0
  4847                           ; switch strategies available:
  4848                           ; Name         Instructions Cycles
  4849                           ; simple_byte            4     3 (average)
  4850                           ; direct_byte            8     6 (fixed)
  4851                           ; jumptable            260     6 (fixed)
  4852                           ;	Chosen strategy is simple_byte
  4853  067A  0853               	movf	??_vfpfcnvrt+3,w
  4854  067B  3A00               	xorlw	0	; case 0
  4855  067C  1903               	skipnz
  4856  067D  2E7F               	goto	l2832
  4857  067E  2E67               	goto	l2286
  4858  067F                     l2832:
  4859                           
  4860                           ; Switch size 1, requested type "simple"
  4861                           ; Number of cases is 5, Range of values is 32 to 48
  4862                           ; switch strategies available:
  4863                           ; Name         Instructions Cycles
  4864                           ; simple_byte           16     9 (average)
  4865                           ; direct_byte           43     9 (fixed)
  4866                           ; jumptable            263     9 (fixed)
  4867                           ;	Chosen strategy is simple_byte
  4868  067F  0852               	movf	??_vfpfcnvrt+2,w
  4869  0680  3A20               	xorlw	32	; case 32
  4870  0681  1903               	skipnz
  4871  0682  2E61               	goto	l956
  4872  0683  3A03               	xorlw	3	; case 35
  4873  0684  1903               	skipnz
  4874  0685  2E64               	goto	l957
  4875  0686  3A08               	xorlw	8	; case 43
  4876  0687  1903               	skipnz
  4877  0688  2E5E               	goto	l955
  4878  0689  3A06               	xorlw	6	; case 45
  4879  068A  1903               	skipnz
  4880  068B  2E4F               	goto	l952
  4881  068C  3A1D               	xorlw	29	; case 48
  4882  068D  1903               	skipnz
  4883  068E  2E5B               	goto	l954
  4884  068F  2E67               	goto	l2286
  4885  0690                     l2292:
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4888  0690  085E               	movf	vfpfcnvrt@done,w
  4889  0691  045F               	iorwf	vfpfcnvrt@done+1,w
  4890  0692  1903               	btfsc	3,2
  4891  0693  2E95               	goto	u1911
  4892  0694  2E96               	goto	u1910
  4893  0695                     u1911:
  4894  0695  2E6C               	goto	l2290
  4895  0696                     u1910:
  4896  0696                     l959:
  4897                           
  4898                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4899  0696  0021               	movlb	1	; select bank1
  4900  0697  1C4D               	btfss	_flags^(0+128),0
  4901  0698  2E9A               	goto	u1921
  4902  0699  2E9B               	goto	u1920
  4903  069A                     u1921:
  4904  069A  2E9F               	goto	l2296
  4905  069B                     u1920:
  4906  069B                     l2294:
  4907                           
  4908                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4909  069B  30FD               	movlw	253
  4910  069C  05CD               	andwf	_flags^(0+128),f
  4911  069D  30FF               	movlw	255
  4912  069E  05CE               	andwf	(_flags+1)^(0+128),f
  4913  069F                     l2296:
  4914                           
  4915                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4916  069F  0020               	movlb	0	; select bank0
  4917  06A0  084E               	movf	vfpfcnvrt@fmt,w
  4918  06A1  0086               	movwf	6
  4919  06A2  0187               	clrf	7
  4920  06A3  3F40               	moviw [0]fsr1
  4921  06A4  00D0               	movwf	??_vfpfcnvrt
  4922  06A5  3F41               	moviw [1]fsr1
  4923  06A6  00D1               	movwf	??_vfpfcnvrt+1
  4924  06A7  0850               	movf	??_vfpfcnvrt,w
  4925  06A8  0084               	movwf	4
  4926  06A9  0851               	movf	??_vfpfcnvrt+1,w
  4927  06AA  0085               	movwf	5
  4928  06AB  0012               	moviw fsr0++
  4929  06AC  3A2A               	xorlw	42
  4930  06AD  1D03               	btfss	3,2
  4931  06AE  2EB0               	goto	u1931
  4932  06AF  2EB1               	goto	u1930
  4933  06B0                     u1931:
  4934  06B0  2ED1               	goto	l2308
  4935  06B1                     u1930:
  4936  06B1                     l2298:
  4937                           
  4938                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4939  06B1  084E               	movf	vfpfcnvrt@fmt,w
  4940  06B2  0086               	movwf	6
  4941  06B3  0187               	clrf	7
  4942  06B4  3001               	movlw	1
  4943  06B5  0781               	addwf	1,f
  4944  06B6  3141               	addfsr 1,1
  4945  06B7  1803               	skipnc
  4946  06B8  0A81               	incf	1,f
  4947  06B9                     l2300:
  4948                           
  4949                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4950  06B9  084F               	movf	vfpfcnvrt@ap,w
  4951  06BA  0086               	movwf	6
  4952  06BB  0187               	clrf	7
  4953  06BC  0801               	movf	1,w
  4954  06BD  0084               	movwf	4
  4955  06BE  0185               	clrf	5
  4956  06BF  3002               	movlw	2
  4957  06C0  0781               	addwf	1,f
  4958  06C1  3F00               	moviw [0]fsr0
  4959  06C2  0021               	movlb	1	; select bank1
  4960  06C3  00C9               	movwf	_width^(0+128)
  4961  06C4  3F01               	moviw [1]fsr0
  4962  06C5  00CA               	movwf	(_width+1)^(0+128)
  4963  06C6                     l2302:
  4964                           
  4965                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4966  06C6  1FCA               	btfss	(_width+1)^(0+128),7
  4967  06C7  2EC9               	goto	u1941
  4968  06C8  2ECA               	goto	u1940
  4969  06C9                     u1941:
  4970  06C9  2F13               	goto	l2318
  4971  06CA                     u1940:
  4972  06CA                     l2304:
  4973                           
  4974                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4975  06CA  144D               	bsf	_flags^(0+128),0
  4976  06CB                     l2306:
  4977                           
  4978                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4979  06CB  09C9               	comf	_width^(0+128),f
  4980  06CC  09CA               	comf	(_width+1)^(0+128),f
  4981  06CD  0AC9               	incf	_width^(0+128),f
  4982  06CE  1903               	skipnz
  4983  06CF  0ACA               	incf	(_width+1)^(0+128),f
  4984  06D0  2F13               	goto	l2318
  4985  06D1                     l2308:
  4986                           
  4987                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4988  06D1  084E               	movf	vfpfcnvrt@fmt,w
  4989  06D2  0086               	movwf	6
  4990  06D3  0187               	clrf	7
  4991  06D4  3F40               	moviw [0]fsr1
  4992  06D5  00F6               	movwf	atoi@s
  4993  06D6  3F41               	moviw [1]fsr1
  4994  06D7  00F7               	movwf	atoi@s+1
  4995  06D8  3180  205A  3186   	fcall	_atoi
  4996  06DB  0877               	movf	?_atoi+1,w
  4997  06DC  0021               	movlb	1	; select bank1
  4998  06DD  00CA               	movwf	(_width+1)^(0+128)
  4999  06DE  0876               	movf	?_atoi,w
  5000  06DF  00C9               	movwf	_width^(0+128)
  5001                           
  5002                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5003  06E0  2EE9               	goto	l2312
  5004  06E1                     l2310:
  5005                           
  5006                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  5007  06E1  084E               	movf	vfpfcnvrt@fmt,w
  5008  06E2  0086               	movwf	6
  5009  06E3  0187               	clrf	7
  5010  06E4  3001               	movlw	1
  5011  06E5  0781               	addwf	1,f
  5012  06E6  3141               	addfsr 1,1
  5013  06E7  1803               	skipnc
  5014  06E8  0A81               	incf	1,f
  5015  06E9                     l2312:
  5016  06E9  0020               	movlb	0	; select bank0
  5017  06EA  084E               	movf	vfpfcnvrt@fmt,w
  5018  06EB  0086               	movwf	6
  5019  06EC  0187               	clrf	7
  5020  06ED  3F40               	moviw [0]fsr1
  5021  06EE  00D0               	movwf	??_vfpfcnvrt
  5022  06EF  3F41               	moviw [1]fsr1
  5023  06F0  00D1               	movwf	??_vfpfcnvrt+1
  5024  06F1  0850               	movf	??_vfpfcnvrt,w
  5025  06F2  0084               	movwf	4
  5026  06F3  0851               	movf	??_vfpfcnvrt+1,w
  5027  06F4  0085               	movwf	5
  5028  06F5  0800               	movf	0,w	;code access
  5029  06F6  3ED0               	addlw	208
  5030  06F7  00D2               	movwf	??_vfpfcnvrt+2
  5031  06F8  30FF               	movlw	255
  5032  06F9  1803               	skipnc
  5033  06FA  3000               	movlw	0
  5034  06FB  00D3               	movwf	??_vfpfcnvrt+3
  5035  06FC  3000               	movlw	0
  5036  06FD  0253               	subwf	??_vfpfcnvrt+3,w
  5037  06FE  300A               	movlw	10
  5038  06FF  1903               	skipnz
  5039  0700  0252               	subwf	??_vfpfcnvrt+2,w
  5040  0701  1C03               	skipc
  5041  0702  2F04               	goto	u1951
  5042  0703  2F06               	goto	u1950
  5043  0704                     u1951:
  5044  0704  3001               	movlw	1
  5045  0705  2F07               	goto	u1960
  5046  0706                     u1950:
  5047  0706  3000               	movlw	0
  5048  0707                     u1960:
  5049  0707  00D4               	movwf	??_vfpfcnvrt+4
  5050  0708  01D5               	clrf	??_vfpfcnvrt+5
  5051  0709  0854               	movf	??_vfpfcnvrt+4,w
  5052  070A  00E0               	movwf	_vfpfcnvrt$1048
  5053  070B  0855               	movf	??_vfpfcnvrt+5,w
  5054  070C  00E1               	movwf	_vfpfcnvrt$1048+1
  5055  070D                     l2316:
  5056  070D  0860               	movf	_vfpfcnvrt$1048,w
  5057  070E  0461               	iorwf	_vfpfcnvrt$1048+1,w
  5058  070F  1D03               	btfss	3,2
  5059  0710  2F12               	goto	u1971
  5060  0711  2F13               	goto	u1970
  5061  0712                     u1971:
  5062  0712  2EE1               	goto	l2310
  5063  0713                     u1970:
  5064  0713                     l2318:
  5065                           
  5066                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5067  0713  0020               	movlb	0	; select bank0
  5068  0714  084E               	movf	vfpfcnvrt@fmt,w
  5069  0715  0086               	movwf	6
  5070  0716  0187               	clrf	7
  5071  0717  3F40               	moviw [0]fsr1
  5072  0718  00D0               	movwf	??_vfpfcnvrt
  5073  0719  3F41               	moviw [1]fsr1
  5074  071A  00D1               	movwf	??_vfpfcnvrt+1
  5075  071B  0850               	movf	??_vfpfcnvrt,w
  5076  071C  0084               	movwf	4
  5077  071D  0851               	movf	??_vfpfcnvrt+1,w
  5078  071E  0085               	movwf	5
  5079  071F  0012               	moviw fsr0++
  5080  0720  3A64               	xorlw	100
  5081  0721  1903               	btfsc	3,2
  5082  0722  2F24               	goto	u1981
  5083  0723  2F25               	goto	u1980
  5084  0724                     u1981:
  5085  0724  2F36               	goto	l2322
  5086  0725                     u1980:
  5087  0725                     l2320:
  5088  0725  084E               	movf	vfpfcnvrt@fmt,w
  5089  0726  0086               	movwf	6
  5090  0727  0187               	clrf	7
  5091  0728  3F40               	moviw [0]fsr1
  5092  0729  00D0               	movwf	??_vfpfcnvrt
  5093  072A  3F41               	moviw [1]fsr1
  5094  072B  00D1               	movwf	??_vfpfcnvrt+1
  5095  072C  0850               	movf	??_vfpfcnvrt,w
  5096  072D  0084               	movwf	4
  5097  072E  0851               	movf	??_vfpfcnvrt+1,w
  5098  072F  0085               	movwf	5
  5099  0730  0012               	moviw fsr0++
  5100  0731  3A69               	xorlw	105
  5101  0732  1D03               	btfss	3,2
  5102  0733  2F35               	goto	u1991
  5103  0734  2F36               	goto	u1990
  5104  0735                     u1991:
  5105  0735  2F71               	goto	l2330
  5106  0736                     u1990:
  5107  0736                     l2322:
  5108                           
  5109                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5110  0736  084E               	movf	vfpfcnvrt@fmt,w
  5111  0737  0086               	movwf	6
  5112  0738  0187               	clrf	7
  5113  0739  3001               	movlw	1
  5114  073A  0781               	addwf	1,f
  5115  073B  3141               	addfsr 1,1
  5116  073C  1803               	skipnc
  5117  073D  0A81               	incf	1,f
  5118  073E                     l2324:
  5119                           
  5120                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5121  073E  084F               	movf	vfpfcnvrt@ap,w
  5122  073F  0086               	movwf	6
  5123  0740  0187               	clrf	7
  5124  0741  0801               	movf	1,w
  5125  0742  0084               	movwf	4
  5126  0743  0185               	clrf	5
  5127  0744  3002               	movlw	2
  5128  0745  0781               	addwf	1,f
  5129  0746  3F00               	moviw [0]fsr0
  5130  0747  00D0               	movwf	??_vfpfcnvrt
  5131  0748  3F01               	moviw [1]fsr0
  5132  0749  00D1               	movwf	??_vfpfcnvrt+1
  5133  074A  0850               	movf	??_vfpfcnvrt,w
  5134  074B  00D6               	movwf	vfpfcnvrt@ll
  5135  074C  0851               	movf	??_vfpfcnvrt+1,w
  5136  074D  00D7               	movwf	vfpfcnvrt@ll+1
  5137  074E  0D89               	rlf	9,f
  5138  074F  3B89               	subwfb	9,f
  5139  0750  0989               	comf	9,f
  5140  0751  00D8               	movwf	vfpfcnvrt@ll+2
  5141  0752  00D9               	movwf	vfpfcnvrt@ll+3
  5142  0753  00DA               	movwf	vfpfcnvrt@ll+4
  5143  0754  00DB               	movwf	vfpfcnvrt@ll+5
  5144  0755  00DC               	movwf	vfpfcnvrt@ll+6
  5145  0756  00DD               	movwf	vfpfcnvrt@ll+7
  5146  0757                     l2326:
  5147                           
  5148                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5149  0757  0856               	movf	vfpfcnvrt@ll,w
  5150  0758  00B0               	movwf	dtoa@d
  5151  0759  0857               	movf	vfpfcnvrt@ll+1,w
  5152  075A  00B1               	movwf	dtoa@d+1
  5153  075B  0858               	movf	vfpfcnvrt@ll+2,w
  5154  075C  00B2               	movwf	dtoa@d+2
  5155  075D  0859               	movf	vfpfcnvrt@ll+3,w
  5156  075E  00B3               	movwf	dtoa@d+3
  5157  075F  085A               	movf	vfpfcnvrt@ll+4,w
  5158  0760  00B4               	movwf	dtoa@d+4
  5159  0761  085B               	movf	vfpfcnvrt@ll+5,w
  5160  0762  00B5               	movwf	dtoa@d+5
  5161  0763  085C               	movf	vfpfcnvrt@ll+6,w
  5162  0764  00B6               	movwf	dtoa@d+6
  5163  0765  085D               	movf	vfpfcnvrt@ll+7,w
  5164  0766  00B7               	movwf	dtoa@d+7
  5165  0767  0862               	movf	vfpfcnvrt@fp,w
  5166  0768  3184  24B7  3186   	fcall	_dtoa
  5167  076B  0020               	movlb	0	; select bank0
  5168  076C  0831               	movf	?_dtoa+1,w
  5169  076D  00CF               	movwf	?_vfpfcnvrt+1
  5170  076E  0830               	movf	?_dtoa,w
  5171  076F  00CE               	movwf	?_vfpfcnvrt
  5172  0770  2FC9               	goto	l974
  5173  0771                     l2330:
  5174                           
  5175                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5176  0771  084E               	movf	vfpfcnvrt@fmt,w
  5177  0772  0086               	movwf	6
  5178  0773  0187               	clrf	7
  5179  0774  3F40               	moviw [0]fsr1
  5180  0775  00D0               	movwf	??_vfpfcnvrt
  5181  0776  3F41               	moviw [1]fsr1
  5182  0777  00D1               	movwf	??_vfpfcnvrt+1
  5183  0778  0850               	movf	??_vfpfcnvrt,w
  5184  0779  0084               	movwf	4
  5185  077A  0851               	movf	??_vfpfcnvrt+1,w
  5186  077B  0085               	movwf	5
  5187  077C  0012               	moviw fsr0++
  5188  077D  3A25               	xorlw	37
  5189  077E  1D03               	btfss	3,2
  5190  077F  2F81               	goto	u2001
  5191  0780  2F82               	goto	u2000
  5192  0781                     u2001:
  5193  0781  2F9B               	goto	l2340
  5194  0782                     u2000:
  5195  0782                     l2332:
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5198  0782  084E               	movf	vfpfcnvrt@fmt,w
  5199  0783  0086               	movwf	6
  5200  0784  0187               	clrf	7
  5201  0785  3001               	movlw	1
  5202  0786  0781               	addwf	1,f
  5203  0787  3141               	addfsr 1,1
  5204  0788  1803               	skipnc
  5205  0789  0A81               	incf	1,f
  5206  078A                     l2334:
  5207                           
  5208                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5209  078A  3025               	movlw	37
  5210  078B  00F0               	movwf	fputc@c
  5211  078C  3000               	movlw	0
  5212  078D  00F1               	movwf	fputc@c+1
  5213  078E  0862               	movf	vfpfcnvrt@fp,w
  5214  078F  00D0               	movwf	??_vfpfcnvrt
  5215  0790  0850               	movf	??_vfpfcnvrt,w
  5216  0791  00F2               	movwf	fputc@fp
  5217  0792  318C  245E  3186   	fcall	_fputc
  5218  0795                     l2336:
  5219                           
  5220                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5221  0795  3001               	movlw	1
  5222  0796  0020               	movlb	0	; select bank0
  5223  0797  00CE               	movwf	?_vfpfcnvrt
  5224  0798  3000               	movlw	0
  5225  0799  00CF               	movwf	?_vfpfcnvrt+1
  5226  079A  2FC9               	goto	l974
  5227  079B                     l2340:
  5228                           
  5229                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5230  079B  084E               	movf	vfpfcnvrt@fmt,w
  5231  079C  0086               	movwf	6
  5232  079D  0187               	clrf	7
  5233  079E  3001               	movlw	1
  5234  079F  0781               	addwf	1,f
  5235  07A0  3141               	addfsr 1,1
  5236  07A1  1803               	skipnc
  5237  07A2  0A81               	incf	1,f
  5238  07A3                     l2342:
  5239                           
  5240                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5241  07A3  01CE               	clrf	?_vfpfcnvrt
  5242  07A4  01CF               	clrf	?_vfpfcnvrt+1
  5243  07A5  2FC9               	goto	l974
  5244  07A6                     l2346:
  5245                           
  5246                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5247  07A6  084E               	movf	vfpfcnvrt@fmt,w
  5248  07A7  0086               	movwf	6
  5249  07A8  0187               	clrf	7
  5250  07A9  3F40               	moviw [0]fsr1
  5251  07AA  00D0               	movwf	??_vfpfcnvrt
  5252  07AB  3F41               	moviw [1]fsr1
  5253  07AC  00D1               	movwf	??_vfpfcnvrt+1
  5254  07AD  0850               	movf	??_vfpfcnvrt,w
  5255  07AE  0084               	movwf	4
  5256  07AF  0851               	movf	??_vfpfcnvrt+1,w
  5257  07B0  0085               	movwf	5
  5258  07B1  0800               	movf	0,w	;code access
  5259  07B2  00D2               	movwf	??_vfpfcnvrt+2
  5260  07B3  01D3               	clrf	??_vfpfcnvrt+3
  5261  07B4  0852               	movf	??_vfpfcnvrt+2,w
  5262  07B5  00F0               	movwf	fputc@c
  5263  07B6  0853               	movf	??_vfpfcnvrt+3,w
  5264  07B7  00F1               	movwf	fputc@c+1
  5265  07B8  0862               	movf	vfpfcnvrt@fp,w
  5266  07B9  00D4               	movwf	??_vfpfcnvrt+4
  5267  07BA  0854               	movf	??_vfpfcnvrt+4,w
  5268  07BB  00F2               	movwf	fputc@fp
  5269  07BC  318C  245E  3186   	fcall	_fputc
  5270  07BF                     l2348:
  5271                           
  5272                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5273  07BF  0020               	movlb	0	; select bank0
  5274  07C0  084E               	movf	vfpfcnvrt@fmt,w
  5275  07C1  0086               	movwf	6
  5276  07C2  0187               	clrf	7
  5277  07C3  3001               	movlw	1
  5278  07C4  0781               	addwf	1,f
  5279  07C5  3141               	addfsr 1,1
  5280  07C6  1803               	skipnc
  5281  07C7  0A81               	incf	1,f
  5282  07C8  2F95               	goto	l2336
  5283  07C9                     l974:
  5284  07C9  0008               	return
  5285  07CA                     __end_of_vfpfcnvrt:
  5286                           
  5287                           	psect	text17
  5288  04B7                     __ptext17:	
  5289 ;; *************** function _dtoa *****************
  5290 ;; Defined at:
  5291 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  fp              1    wreg     PTR struct _IO_FILE
  5294 ;;		 -> sprintf@f(5), 
  5295 ;;  d               8   16[BANK0 ] long long 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5298 ;;		 -> sprintf@f(5), 
  5299 ;;  n               8   36[BANK0 ] long long 
  5300 ;;  i               2   44[BANK0 ] int 
  5301 ;;  s               2   34[BANK0 ] int 
  5302 ;;  w               2   32[BANK0 ] int 
  5303 ;;  p               2   30[BANK0 ] int 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  2   16[BANK0 ] int 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5313 ;;      Params:         0       8       0       0       0       0
  5314 ;;      Locals:         0      19       0       0       0       0
  5315 ;;      Temps:          0       3       0       0       0       0
  5316 ;;      Totals:         0      30       0       0       0       0
  5317 ;;Total ram usage:       30 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    4
  5320 ;; This function calls:
  5321 ;;		___aodiv
  5322 ;;		___aomod
  5323 ;;		_abs
  5324 ;;		_pad
  5325 ;; This function is called by:
  5326 ;;		_vfpfcnvrt
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           
  5331                           ;psect for function _dtoa
  5332  04B7                     _dtoa:
  5333                           
  5334                           ;incstack = 0
  5335                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5336                           ;dtoa@fp stored from wreg
  5337  04B7  0020               	movlb	0	; select bank0
  5338  04B8  00BD               	movwf	dtoa@fp
  5339  04B9                     l2132:
  5340                           
  5341                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5342  04B9  0830               	movf	dtoa@d,w
  5343  04BA  00C4               	movwf	dtoa@n
  5344  04BB  0831               	movf	dtoa@d+1,w
  5345  04BC  00C5               	movwf	dtoa@n+1
  5346  04BD  0832               	movf	dtoa@d+2,w
  5347  04BE  00C6               	movwf	dtoa@n+2
  5348  04BF  0833               	movf	dtoa@d+3,w
  5349  04C0  00C7               	movwf	dtoa@n+3
  5350  04C1  0834               	movf	dtoa@d+4,w
  5351  04C2  00C8               	movwf	dtoa@n+4
  5352  04C3  0835               	movf	dtoa@d+5,w
  5353  04C4  00C9               	movwf	dtoa@n+5
  5354  04C5  0836               	movf	dtoa@d+6,w
  5355  04C6  00CA               	movwf	dtoa@n+6
  5356  04C7  0837               	movf	dtoa@d+7,w
  5357  04C8  00CB               	movwf	dtoa@n+7
  5358  04C9                     l2134:
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5361  04C9  3044               	movlw	low dtoa@n
  5362  04CA  0086               	movwf	6
  5363  04CB  3000               	movlw	high dtoa@n
  5364  04CC  0087               	movwf	7
  5365  04CD  3F47               	moviw [7]fsr1
  5366  04CE  00B8               	movwf	??_dtoa
  5367  04CF  1BB8               	btfsc	??_dtoa,7
  5368  04D0  2CD2               	goto	u1641
  5369  04D1  2CD4               	goto	u1640
  5370  04D2                     u1641:
  5371  04D2  3001               	movlw	1
  5372  04D3  2CD5               	goto	u1650
  5373  04D4                     u1640:
  5374  04D4  3000               	movlw	0
  5375  04D5                     u1650:
  5376  04D5  0020               	movlb	0	; select bank0
  5377  04D6  00B9               	movwf	??_dtoa+1
  5378  04D7  01BA               	clrf	??_dtoa+2
  5379  04D8  0839               	movf	??_dtoa+1,w
  5380  04D9  00C2               	movwf	dtoa@s
  5381  04DA  083A               	movf	??_dtoa+2,w
  5382  04DB  00C3               	movwf	dtoa@s+1
  5383  04DC                     l2136:
  5384                           
  5385                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5386  04DC  0842               	movf	dtoa@s,w
  5387  04DD  0443               	iorwf	dtoa@s+1,w
  5388  04DE  1903               	btfsc	3,2
  5389  04DF  2CE1               	goto	u1661
  5390  04E0  2CE2               	goto	u1660
  5391  04E1                     u1661:
  5392  04E1  2D00               	goto	l922
  5393  04E2                     u1660:
  5394  04E2                     l2138:
  5395                           
  5396                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5397  04E2  09C4               	comf	dtoa@n,f
  5398  04E3  09C5               	comf	dtoa@n+1,f
  5399  04E4  09C6               	comf	dtoa@n+2,f
  5400  04E5  09C7               	comf	dtoa@n+3,f
  5401  04E6  09C8               	comf	dtoa@n+4,f
  5402  04E7  09C9               	comf	dtoa@n+5,f
  5403  04E8  09CA               	comf	dtoa@n+6,f
  5404  04E9  09CB               	comf	dtoa@n+7,f
  5405  04EA  0AC4               	incf	dtoa@n,f
  5406  04EB  1D03               	skipz
  5407  04EC  2D00               	goto	u167lld
  5408  04ED  0AC5               	incf	dtoa@n+1,f
  5409  04EE  1D03               	skipz
  5410  04EF  2D00               	goto	u167lld
  5411  04F0  0AC6               	incf	dtoa@n+2,f
  5412  04F1  1D03               	skipz
  5413  04F2  2D00               	goto	u167lld
  5414  04F3  0AC7               	incf	dtoa@n+3,f
  5415  04F4  1D03               	skipz
  5416  04F5  2D00               	goto	u167lld
  5417  04F6  0AC8               	incf	dtoa@n+4,f
  5418  04F7  1D03               	skipz
  5419  04F8  2D00               	goto	u167lld
  5420  04F9  0AC9               	incf	dtoa@n+5,f
  5421  04FA  1D03               	skipz
  5422  04FB  2D00               	goto	u167lld
  5423  04FC  0ACA               	incf	dtoa@n+6,f
  5424  04FD  1D03               	skipz
  5425  04FE  2D00               	goto	u167lld
  5426  04FF  0ACB               	incf	dtoa@n+7,f
  5427  0500                     u167lld:
  5428  0500                     l922:	
  5429                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 297:     }
  5430                           
  5431                           
  5432                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5433  0500  0021               	movlb	1	; select bank1
  5434  0501  1BCC               	btfsc	(_prec+1)^(0+128),7
  5435  0502  2D04               	goto	u1681
  5436  0503  2D05               	goto	u1680
  5437  0504                     u1681:
  5438  0504  2D09               	goto	l923
  5439  0505                     u1680:
  5440  0505                     l2140:
  5441                           
  5442                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5443  0505  30FD               	movlw	253
  5444  0506  05CD               	andwf	_flags^(0+128),f
  5445  0507  30FF               	movlw	255
  5446  0508  05CE               	andwf	(_flags+1)^(0+128),f
  5447  0509                     l923:	
  5448                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 302:     }
  5449                           
  5450                           
  5451                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5452  0509  084C               	movf	(_prec+1)^(0+128),w
  5453  050A  3A80               	xorlw	128
  5454  050B  0020               	movlb	0	; select bank0
  5455  050C  00B8               	movwf	??_dtoa
  5456  050D  3080               	movlw	128
  5457  050E  0238               	subwf	??_dtoa,w
  5458  050F  1D03               	skipz
  5459  0510  2D14               	goto	u1695
  5460  0511  3001               	movlw	1
  5461  0512  0021               	movlb	1	; select bank1
  5462  0513  024B               	subwf	_prec^(0+128),w
  5463  0514                     u1695:
  5464  0514  1803               	skipnc
  5465  0515  2D17               	goto	u1691
  5466  0516  2D18               	goto	u1690
  5467  0517                     u1691:
  5468  0517  2D1E               	goto	l2144
  5469  0518                     u1690:
  5470  0518                     l2142:
  5471  0518  3001               	movlw	1
  5472  0519  0020               	movlb	0	; select bank0
  5473  051A  00BE               	movwf	dtoa@p
  5474  051B  3000               	movlw	0
  5475  051C  00BF               	movwf	dtoa@p+1
  5476  051D  2D26               	goto	l927
  5477  051E                     l2144:
  5478  051E  0021               	movlb	1	; select bank1
  5479  051F  084C               	movf	(_prec+1)^(0+128),w
  5480  0520  0020               	movlb	0	; select bank0
  5481  0521  00BF               	movwf	dtoa@p+1
  5482  0522  0021               	movlb	1	; select bank1
  5483  0523  084B               	movf	_prec^(0+128),w
  5484  0524  0020               	movlb	0	; select bank0
  5485  0525  00BE               	movwf	dtoa@p
  5486  0526                     l927:
  5487                           
  5488                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5489  0526  0021               	movlb	1	; select bank1
  5490  0527  084A               	movf	(_width+1)^(0+128),w
  5491  0528  0020               	movlb	0	; select bank0
  5492  0529  00C1               	movwf	dtoa@w+1
  5493  052A  0021               	movlb	1	; select bank1
  5494  052B  0849               	movf	_width^(0+128),w
  5495  052C  0020               	movlb	0	; select bank0
  5496  052D  00C0               	movwf	dtoa@w
  5497  052E                     l2146:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5500  052E  0842               	movf	dtoa@s,w
  5501  052F  0443               	iorwf	dtoa@s+1,w
  5502  0530  1D03               	btfss	3,2
  5503  0531  2D33               	goto	u1701
  5504  0532  2D34               	goto	u1700
  5505  0533                     u1701:
  5506  0533  2D39               	goto	l2150
  5507  0534                     u1700:
  5508  0534                     l2148:
  5509  0534  0021               	movlb	1	; select bank1
  5510  0535  1D4D               	btfss	_flags^(0+128),2
  5511  0536  2D38               	goto	u1711
  5512  0537  2D39               	goto	u1710
  5513  0538                     u1711:
  5514  0538  2D3E               	goto	l928
  5515  0539                     u1710:
  5516  0539                     l2150:
  5517                           
  5518                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  5519  0539  30FF               	movlw	255
  5520  053A  0020               	movlb	0	; select bank0
  5521  053B  07C0               	addwf	dtoa@w,f
  5522  053C  30FF               	movlw	255
  5523  053D  3DC1               	addwfc	dtoa@w+1,f
  5524  053E                     l928:	
  5525                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 307:     }
  5526                           
  5527                           
  5528                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5529  053E  301F               	movlw	31
  5530  053F  0020               	movlb	0	; select bank0
  5531  0540  00CC               	movwf	dtoa@i
  5532  0541  3000               	movlw	0
  5533  0542  00CD               	movwf	dtoa@i+1
  5534  0543                     l2152:
  5535                           
  5536                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5537  0543  0022               	movlb	2	; select bank2
  5538  0544  01BF               	clrf	(_dbuf^(0+256)+31)
  5539                           
  5540                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5541  0545  2DAF               	goto	l931
  5542  0546                     l2154:
  5543                           
  5544                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  5545  0546  30FF               	movlw	255
  5546  0547  0020               	movlb	0	; select bank0
  5547  0548  07CC               	addwf	dtoa@i,f
  5548  0549  30FF               	movlw	255
  5549  054A  3DCD               	addwfc	dtoa@i+1,f
  5550  054B                     l2156:
  5551                           
  5552                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5553  054B  300A               	movlw	10
  5554  054C  00A0               	movwf	___aomod@divisor
  5555  054D  01A1               	clrf	___aomod@divisor+1
  5556  054E  01A2               	clrf	___aomod@divisor+2
  5557  054F  01A3               	clrf	___aomod@divisor+3
  5558  0550  01A4               	clrf	___aomod@divisor+4
  5559  0551  01A5               	clrf	___aomod@divisor+5
  5560  0552  01A6               	clrf	___aomod@divisor+6
  5561  0553  01A7               	clrf	___aomod@divisor+7
  5562  0554  0844               	movf	dtoa@n,w
  5563  0555  00A8               	movwf	___aomod@dividend
  5564  0556  0845               	movf	dtoa@n+1,w
  5565  0557  00A9               	movwf	___aomod@dividend+1
  5566  0558  0846               	movf	dtoa@n+2,w
  5567  0559  00AA               	movwf	___aomod@dividend+2
  5568  055A  0847               	movf	dtoa@n+3,w
  5569  055B  00AB               	movwf	___aomod@dividend+3
  5570  055C  0848               	movf	dtoa@n+4,w
  5571  055D  00AC               	movwf	___aomod@dividend+4
  5572  055E  0849               	movf	dtoa@n+5,w
  5573  055F  00AD               	movwf	___aomod@dividend+5
  5574  0560  084A               	movf	dtoa@n+6,w
  5575  0561  00AE               	movwf	___aomod@dividend+6
  5576  0562  084B               	movf	dtoa@n+7,w
  5577  0563  00AF               	movwf	___aomod@dividend+7
  5578  0564  3181  21E0  3184   	fcall	___aomod
  5579  0567  0020               	movlb	0	; select bank0
  5580  0568  0821               	movf	?___aomod+1,w
  5581  0569  00F4               	movwf	abs@a+1
  5582  056A  0820               	movf	?___aomod,w
  5583  056B  00F3               	movwf	abs@a
  5584  056C  3189  21E4  3184   	fcall	_abs
  5585  056F  0873               	movf	?_abs,w
  5586  0570  3E30               	addlw	48
  5587  0571  0020               	movlb	0	; select bank0
  5588  0572  00B8               	movwf	??_dtoa
  5589  0573  084C               	movf	dtoa@i,w
  5590  0574  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5591  0575  0086               	movwf	6
  5592  0576  3001               	movlw	1	; select bank2/3
  5593  0577  0087               	movwf	7
  5594  0578  0838               	movf	??_dtoa,w
  5595  0579  0081               	movwf	1
  5596  057A                     l2158:
  5597                           
  5598                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  5599  057A  30FF               	movlw	255
  5600  057B  07BE               	addwf	dtoa@p,f
  5601  057C  30FF               	movlw	255
  5602  057D  3DBF               	addwfc	dtoa@p+1,f
  5603  057E                     l2160:
  5604                           
  5605                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  5606  057E  30FF               	movlw	255
  5607  057F  07C0               	addwf	dtoa@w,f
  5608  0580  30FF               	movlw	255
  5609  0581  3DC1               	addwfc	dtoa@w+1,f
  5610  0582                     l2162:
  5611                           
  5612                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5613  0582  300A               	movlw	10
  5614  0583  00A0               	movwf	___aodiv@divisor
  5615  0584  01A1               	clrf	___aodiv@divisor+1
  5616  0585  01A2               	clrf	___aodiv@divisor+2
  5617  0586  01A3               	clrf	___aodiv@divisor+3
  5618  0587  01A4               	clrf	___aodiv@divisor+4
  5619  0588  01A5               	clrf	___aodiv@divisor+5
  5620  0589  01A6               	clrf	___aodiv@divisor+6
  5621  058A  01A7               	clrf	___aodiv@divisor+7
  5622  058B  0844               	movf	dtoa@n,w
  5623  058C  00A8               	movwf	___aodiv@dividend
  5624  058D  0845               	movf	dtoa@n+1,w
  5625  058E  00A9               	movwf	___aodiv@dividend+1
  5626  058F  0846               	movf	dtoa@n+2,w
  5627  0590  00AA               	movwf	___aodiv@dividend+2
  5628  0591  0847               	movf	dtoa@n+3,w
  5629  0592  00AB               	movwf	___aodiv@dividend+3
  5630  0593  0848               	movf	dtoa@n+4,w
  5631  0594  00AC               	movwf	___aodiv@dividend+4
  5632  0595  0849               	movf	dtoa@n+5,w
  5633  0596  00AD               	movwf	___aodiv@dividend+5
  5634  0597  084A               	movf	dtoa@n+6,w
  5635  0598  00AE               	movwf	___aodiv@dividend+6
  5636  0599  084B               	movf	dtoa@n+7,w
  5637  059A  00AF               	movwf	___aodiv@dividend+7
  5638  059B  3183  23B6  3184   	fcall	___aodiv
  5639  059E  0020               	movlb	0	; select bank0
  5640  059F  0820               	movf	?___aodiv,w
  5641  05A0  00C4               	movwf	dtoa@n
  5642  05A1  0821               	movf	?___aodiv+1,w
  5643  05A2  00C5               	movwf	dtoa@n+1
  5644  05A3  0822               	movf	?___aodiv+2,w
  5645  05A4  00C6               	movwf	dtoa@n+2
  5646  05A5  0823               	movf	?___aodiv+3,w
  5647  05A6  00C7               	movwf	dtoa@n+3
  5648  05A7  0824               	movf	?___aodiv+4,w
  5649  05A8  00C8               	movwf	dtoa@n+4
  5650  05A9  0825               	movf	?___aodiv+5,w
  5651  05AA  00C9               	movwf	dtoa@n+5
  5652  05AB  0826               	movf	?___aodiv+6,w
  5653  05AC  00CA               	movwf	dtoa@n+6
  5654  05AD  0827               	movf	?___aodiv+7,w
  5655  05AE  00CB               	movwf	dtoa@n+7
  5656  05AF                     l931:	
  5657                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 318:     }
  5658                           
  5659                           
  5660                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5661  05AF  0020               	movlb	0	; select bank0
  5662  05B0  084D               	movf	dtoa@i+1,w
  5663  05B1  3A80               	xorlw	128
  5664  05B2  00B8               	movwf	??_dtoa
  5665  05B3  3080               	movlw	128
  5666  05B4  0238               	subwf	??_dtoa,w
  5667  05B5  1D03               	skipz
  5668  05B6  2DB9               	goto	u1725
  5669  05B7  3001               	movlw	1
  5670  05B8  024C               	subwf	dtoa@i,w
  5671  05B9                     u1725:
  5672  05B9  1C03               	skipc
  5673  05BA  2DBC               	goto	u1721
  5674  05BB  2DBD               	goto	u1720
  5675  05BC                     u1721:
  5676  05BC  2DEA               	goto	l2172
  5677  05BD                     u1720:
  5678  05BD                     l2164:
  5679  05BD  0020               	movlb	0	; select bank0
  5680  05BE  0844               	movf	dtoa@n,w
  5681  05BF  0445               	iorwf	dtoa@n+1,w
  5682  05C0  0446               	iorwf	dtoa@n+2,w
  5683  05C1  0447               	iorwf	dtoa@n+3,w
  5684  05C2  0448               	iorwf	dtoa@n+4,w
  5685  05C3  0449               	iorwf	dtoa@n+5,w
  5686  05C4  044A               	iorwf	dtoa@n+6,w
  5687  05C5  044B               	iorwf	dtoa@n+7,w
  5688  05C6  1D03               	skipz
  5689  05C7  2DC9               	goto	u1731
  5690  05C8  2DCA               	goto	u1730
  5691  05C9                     u1731:
  5692  05C9  2D46               	goto	l2154
  5693  05CA                     u1730:
  5694  05CA                     l2166:
  5695  05CA  083F               	movf	dtoa@p+1,w
  5696  05CB  3A80               	xorlw	128
  5697  05CC  00B8               	movwf	??_dtoa
  5698  05CD  3080               	movlw	128
  5699  05CE  0238               	subwf	??_dtoa,w
  5700  05CF  1D03               	skipz
  5701  05D0  2DD3               	goto	u1745
  5702  05D1  3001               	movlw	1
  5703  05D2  023E               	subwf	dtoa@p,w
  5704  05D3                     u1745:
  5705  05D3  1803               	skipnc
  5706  05D4  2DD6               	goto	u1741
  5707  05D5  2DD7               	goto	u1740
  5708  05D6                     u1741:
  5709  05D6  2D46               	goto	l2154
  5710  05D7                     u1740:
  5711  05D7                     l2168:
  5712  05D7  0020               	movlb	0	; select bank0
  5713  05D8  0841               	movf	dtoa@w+1,w
  5714  05D9  3A80               	xorlw	128
  5715  05DA  00B8               	movwf	??_dtoa
  5716  05DB  3080               	movlw	128
  5717  05DC  0238               	subwf	??_dtoa,w
  5718  05DD  1D03               	skipz
  5719  05DE  2DE1               	goto	u1755
  5720  05DF  3001               	movlw	1
  5721  05E0  0240               	subwf	dtoa@w,w
  5722  05E1                     u1755:
  5723  05E1  1C03               	skipc
  5724  05E2  2DE4               	goto	u1751
  5725  05E3  2DE5               	goto	u1750
  5726  05E4                     u1751:
  5727  05E4  2DEA               	goto	l2172
  5728  05E5                     u1750:
  5729  05E5                     l2170:
  5730  05E5  0021               	movlb	1	; select bank1
  5731  05E6  18CD               	btfsc	_flags^(0+128),1
  5732  05E7  2DE9               	goto	u1761
  5733  05E8  2DEA               	goto	u1760
  5734  05E9                     u1761:
  5735  05E9  2D46               	goto	l2154
  5736  05EA                     u1760:
  5737  05EA                     l2172:
  5738                           
  5739                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5740  05EA  0020               	movlb	0	; select bank0
  5741  05EB  0842               	movf	dtoa@s,w
  5742  05EC  0443               	iorwf	dtoa@s+1,w
  5743  05ED  1D03               	btfss	3,2
  5744  05EE  2DF0               	goto	u1771
  5745  05EF  2DF1               	goto	u1770
  5746  05F0                     u1771:
  5747  05F0  2DF6               	goto	l2176
  5748  05F1                     u1770:
  5749  05F1                     l2174:
  5750  05F1  0021               	movlb	1	; select bank1
  5751  05F2  1D4D               	btfss	_flags^(0+128),2
  5752  05F3  2DF5               	goto	u1781
  5753  05F4  2DF6               	goto	u1780
  5754  05F5                     u1781:
  5755  05F5  2E13               	goto	l2186
  5756  05F6                     u1780:
  5757  05F6                     l2176:
  5758                           
  5759                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  5760  05F6  30FF               	movlw	255
  5761  05F7  0020               	movlb	0	; select bank0
  5762  05F8  07CC               	addwf	dtoa@i,f
  5763  05F9  30FF               	movlw	255
  5764  05FA  3DCD               	addwfc	dtoa@i+1,f
  5765  05FB                     l2178:
  5766                           
  5767                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5768  05FB  0842               	movf	dtoa@s,w
  5769  05FC  0443               	iorwf	dtoa@s+1,w
  5770  05FD  1D03               	btfss	3,2
  5771  05FE  2E00               	goto	u1791
  5772  05FF  2E01               	goto	u1790
  5773  0600                     u1791:
  5774  0600  2E06               	goto	l2182
  5775  0601                     u1790:
  5776  0601                     l2180:
  5777  0601  302B               	movlw	43
  5778  0602  00BB               	movwf	_dtoa$1033
  5779  0603  3000               	movlw	0
  5780  0604  00BC               	movwf	_dtoa$1033+1
  5781  0605  2E0A               	goto	l2184
  5782  0606                     l2182:
  5783  0606  302D               	movlw	45
  5784  0607  00BB               	movwf	_dtoa$1033
  5785  0608  3000               	movlw	0
  5786  0609  00BC               	movwf	_dtoa$1033+1
  5787  060A                     l2184:
  5788  060A  083B               	movf	_dtoa$1033,w
  5789  060B  00B8               	movwf	??_dtoa
  5790  060C  084C               	movf	dtoa@i,w
  5791  060D  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5792  060E  0086               	movwf	6
  5793  060F  3001               	movlw	1	; select bank2/3
  5794  0610  0087               	movwf	7
  5795  0611  0838               	movf	??_dtoa,w
  5796  0612  0081               	movwf	1
  5797  0613                     l2186:
  5798                           
  5799                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5800  0613  0020               	movlb	0	; select bank0
  5801  0614  084C               	movf	dtoa@i,w
  5802  0615  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5803  0616  00B8               	movwf	??_dtoa
  5804  0617  0838               	movf	??_dtoa,w
  5805  0618  00A4               	movwf	pad@buf
  5806  0619  0841               	movf	dtoa@w+1,w
  5807  061A  00A6               	movwf	pad@p+1
  5808  061B  0840               	movf	dtoa@w,w
  5809  061C  00A5               	movwf	pad@p
  5810  061D  083D               	movf	dtoa@fp,w
  5811  061E  318D  2500  3184   	fcall	_pad
  5812  0621  0020               	movlb	0	; select bank0
  5813  0622  0825               	movf	?_pad+1,w
  5814  0623  00B1               	movwf	?_dtoa+1
  5815  0624  0824               	movf	?_pad,w
  5816  0625  00B0               	movwf	?_dtoa
  5817  0626                     l945:
  5818  0626  0008               	return
  5819  0627                     __end_of_dtoa:
  5820                           
  5821                           	psect	text18
  5822  0D00                     __ptext18:	
  5823 ;; *************** function _pad *****************
  5824 ;; Defined at:
  5825 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  fp              1    wreg     PTR struct _IO_FILE
  5828 ;;		 -> sprintf@f(5), 
  5829 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5830 ;;		 -> dbuf(32), 
  5831 ;;  p               2    5[BANK0 ] int 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5834 ;;		 -> sprintf@f(5), 
  5835 ;;  w               2    9[BANK0 ] int 
  5836 ;;  i               2    7[BANK0 ] int 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  2    4[BANK0 ] int 
  5839 ;; Registers used:
  5840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5846 ;;      Params:         0       3       0       0       0       0
  5847 ;;      Locals:         0       5       0       0       0       0
  5848 ;;      Temps:          1       0       0       0       0       0
  5849 ;;      Totals:         1       8       0       0       0       0
  5850 ;;Total ram usage:        9 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    3
  5853 ;; This function calls:
  5854 ;;		_fputc
  5855 ;;		_fputs
  5856 ;;		_strlen
  5857 ;; This function is called by:
  5858 ;;		_dtoa
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function _pad
  5864  0D00                     _pad:
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5868                           ;pad@fp stored from wreg
  5869  0D00  0020               	movlb	0	; select bank0
  5870  0D01  00AB               	movwf	pad@fp
  5871  0D02                     l2086:
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5874  0D02  0021               	movlb	1	; select bank1
  5875  0D03  1C4D               	btfss	_flags^(0+128),0
  5876  0D04  2D06               	goto	u1551
  5877  0D05  2D07               	goto	u1550
  5878  0D06                     u1551:
  5879  0D06  2D10               	goto	l2090
  5880  0D07                     u1550:
  5881  0D07                     l2088:
  5882                           
  5883                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5884  0D07  0020               	movlb	0	; select bank0
  5885  0D08  082B               	movf	pad@fp,w
  5886  0D09  00FC               	movwf	??_pad
  5887  0D0A  087C               	movf	??_pad,w
  5888  0D0B  00F8               	movwf	fputs@fp
  5889  0D0C  0824               	movf	pad@buf,w
  5890  0D0D  318A  22E5  318D   	fcall	_fputs
  5891  0D10                     l2090:
  5892                           
  5893                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5894  0D10  0020               	movlb	0	; select bank0
  5895  0D11  1BA6               	btfsc	pad@p+1,7
  5896  0D12  2D14               	goto	u1561
  5897  0D13  2D15               	goto	u1560
  5898  0D14                     u1561:
  5899  0D14  2D1A               	goto	l2094
  5900  0D15                     u1560:
  5901  0D15                     l2092:
  5902  0D15  0826               	movf	pad@p+1,w
  5903  0D16  00AA               	movwf	pad@w+1
  5904  0D17  0825               	movf	pad@p,w
  5905  0D18  00A9               	movwf	pad@w
  5906  0D19  2D1C               	goto	l914
  5907  0D1A                     l2094:
  5908  0D1A  01A9               	clrf	pad@w
  5909  0D1B  01AA               	clrf	pad@w+1
  5910  0D1C                     l914:
  5911                           
  5912                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5913  0D1C  01A7               	clrf	pad@i
  5914  0D1D  01A8               	clrf	pad@i+1
  5915                           
  5916                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5917  0D1E  2D30               	goto	l2100
  5918  0D1F                     l2096:
  5919                           
  5920                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5921  0D1F  3020               	movlw	32
  5922  0D20  00F0               	movwf	fputc@c
  5923  0D21  3000               	movlw	0
  5924  0D22  00F1               	movwf	fputc@c+1
  5925  0D23  0020               	movlb	0	; select bank0
  5926  0D24  082B               	movf	pad@fp,w
  5927  0D25  00FC               	movwf	??_pad
  5928  0D26  087C               	movf	??_pad,w
  5929  0D27  00F2               	movwf	fputc@fp
  5930  0D28  318C  245E  318D   	fcall	_fputc
  5931  0D2B                     l2098:
  5932                           
  5933                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5934  0D2B  3001               	movlw	1
  5935  0D2C  0020               	movlb	0	; select bank0
  5936  0D2D  07A7               	addwf	pad@i,f
  5937  0D2E  3000               	movlw	0
  5938  0D2F  3DA8               	addwfc	pad@i+1,f
  5939  0D30                     l2100:
  5940                           
  5941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5942  0D30  0828               	movf	pad@i+1,w
  5943  0D31  3A80               	xorlw	128
  5944  0D32  00FC               	movwf	??_pad
  5945  0D33  082A               	movf	pad@w+1,w
  5946  0D34  3A80               	xorlw	128
  5947  0D35  027C               	subwf	??_pad,w
  5948  0D36  1D03               	skipz
  5949  0D37  2D3A               	goto	u1575
  5950  0D38  0829               	movf	pad@w,w
  5951  0D39  0227               	subwf	pad@i,w
  5952  0D3A                     u1575:
  5953  0D3A  1C03               	skipc
  5954  0D3B  2D3D               	goto	u1571
  5955  0D3C  2D3E               	goto	u1570
  5956  0D3D                     u1571:
  5957  0D3D  2D1F               	goto	l2096
  5958  0D3E                     u1570:
  5959  0D3E                     l917:
  5960                           
  5961                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5962  0D3E  0021               	movlb	1	; select bank1
  5963  0D3F  184D               	btfsc	_flags^(0+128),0
  5964  0D40  2D42               	goto	u1581
  5965  0D41  2D43               	goto	u1580
  5966  0D42                     u1581:
  5967  0D42  2D4C               	goto	l2104
  5968  0D43                     u1580:
  5969  0D43                     l2102:
  5970                           
  5971                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5972  0D43  0020               	movlb	0	; select bank0
  5973  0D44  082B               	movf	pad@fp,w
  5974  0D45  00FC               	movwf	??_pad
  5975  0D46  087C               	movf	??_pad,w
  5976  0D47  00F8               	movwf	fputs@fp
  5977  0D48  0824               	movf	pad@buf,w
  5978  0D49  318A  22E5  318D   	fcall	_fputs
  5979  0D4C                     l2104:
  5980                           
  5981                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5982  0D4C  0020               	movlb	0	; select bank0
  5983  0D4D  0824               	movf	pad@buf,w
  5984  0D4E  3189  21FE  318D   	fcall	_strlen
  5985  0D51  0020               	movlb	0	; select bank0
  5986  0D52  0829               	movf	pad@w,w
  5987  0D53  0770               	addwf	?_strlen,w
  5988  0D54  00A4               	movwf	?_pad
  5989  0D55  082A               	movf	pad@w+1,w
  5990  0D56  3D71               	addwfc	?_strlen+1,w
  5991  0D57  00A5               	movwf	?_pad+1
  5992  0D58                     l919:
  5993  0D58  0008               	return
  5994  0D59                     __end_of_pad:
  5995                           
  5996                           	psect	text19
  5997  09FE                     __ptext19:	
  5998 ;; *************** function _strlen *****************
  5999 ;; Defined at:
  6000 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  s               1    wreg     PTR const unsigned char 
  6003 ;;		 -> dbuf(32), 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  s               1    4[COMMON] PTR const unsigned char 
  6006 ;;		 -> dbuf(32), 
  6007 ;;  a               1    3[COMMON] PTR const unsigned char 
  6008 ;;		 -> dbuf(32), 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  2    0[COMMON] unsigned int 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6018 ;;      Params:         2       0       0       0       0       0
  6019 ;;      Locals:         2       0       0       0       0       0
  6020 ;;      Temps:          1       0       0       0       0       0
  6021 ;;      Totals:         5       0       0       0       0       0
  6022 ;;Total ram usage:        5 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_pad
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           
  6032                           ;psect for function _strlen
  6033  09FE                     _strlen:
  6034                           
  6035                           ;incstack = 0
  6036                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6037                           ;strlen@s stored from wreg
  6038  09FE  00F4               	movwf	strlen@s
  6039  09FF                     l1984:
  6040  09FF  0874               	movf	strlen@s,w
  6041  0A00  00F2               	movwf	??_strlen
  6042  0A01  0872               	movf	??_strlen,w
  6043  0A02  00F3               	movwf	strlen@a
  6044  0A03  2A08               	goto	l1988
  6045  0A04                     l1986:
  6046  0A04  3001               	movlw	1
  6047  0A05  00F2               	movwf	??_strlen
  6048  0A06  0872               	movf	??_strlen,w
  6049  0A07  07F4               	addwf	strlen@s,f
  6050  0A08                     l1988:
  6051  0A08  0874               	movf	strlen@s,w
  6052  0A09  0086               	movwf	6
  6053  0A0A  3001               	movlw	1	; select bank2/3
  6054  0A0B  0087               	movwf	7
  6055  0A0C  0801               	movf	1,w
  6056  0A0D  1D03               	btfss	3,2
  6057  0A0E  2A10               	goto	u1251
  6058  0A0F  2A11               	goto	u1250
  6059  0A10                     u1251:
  6060  0A10  2A04               	goto	l1986
  6061  0A11                     u1250:
  6062  0A11                     l1990:
  6063  0A11  0873               	movf	strlen@a,w
  6064  0A12  0274               	subwf	strlen@s,w
  6065  0A13  00F0               	movwf	?_strlen
  6066  0A14  01F1               	clrf	?_strlen+1
  6067  0A15  1BF0               	btfsc	?_strlen,7
  6068  0A16  03F1               	decf	?_strlen+1,f
  6069  0A17                     l1062:
  6070  0A17  0008               	return
  6071  0A18                     __end_of_strlen:
  6072                           
  6073                           	psect	text20
  6074  0AE5                     __ptext20:	
  6075 ;; *************** function _fputs *****************
  6076 ;; Defined at:
  6077 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  s               1    wreg     PTR const unsigned char 
  6080 ;;		 -> dbuf(32), 
  6081 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6082 ;;		 -> sprintf@f(5), 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6085 ;;		 -> dbuf(32), 
  6086 ;;  i               2    1[BANK0 ] int 
  6087 ;;  c               1    0[BANK0 ] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  2    8[COMMON] int 
  6090 ;; Registers used:
  6091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6097 ;;      Params:         1       0       0       0       0       0
  6098 ;;      Locals:         0       4       0       0       0       0
  6099 ;;      Temps:          3       0       0       0       0       0
  6100 ;;      Totals:         4       4       0       0       0       0
  6101 ;;Total ram usage:        8 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    2
  6104 ;; This function calls:
  6105 ;;		_fputc
  6106 ;; This function is called by:
  6107 ;;		_pad
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           
  6112                           ;psect for function _fputs
  6113  0AE5                     _fputs:
  6114                           
  6115                           ;incstack = 0
  6116                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6117                           ;fputs@s stored from wreg
  6118  0AE5  0020               	movlb	0	; select bank0
  6119  0AE6  00A3               	movwf	fputs@s
  6120  0AE7                     l1976:
  6121  0AE7  01A1               	clrf	fputs@i
  6122  0AE8  01A2               	clrf	fputs@i+1
  6123  0AE9  2AFD               	goto	l1982
  6124  0AEA                     l1978:
  6125  0AEA  0820               	movf	fputs@c,w
  6126  0AEB  00F9               	movwf	??_fputs
  6127  0AEC  01FA               	clrf	??_fputs+1
  6128  0AED  0879               	movf	??_fputs,w
  6129  0AEE  00F0               	movwf	fputc@c
  6130  0AEF  087A               	movf	??_fputs+1,w
  6131  0AF0  00F1               	movwf	fputc@c+1
  6132  0AF1  0878               	movf	fputs@fp,w
  6133  0AF2  00FB               	movwf	??_fputs+2
  6134  0AF3  087B               	movf	??_fputs+2,w
  6135  0AF4  00F2               	movwf	fputc@fp
  6136  0AF5  318C  245E  318A   	fcall	_fputc
  6137  0AF8                     l1980:
  6138  0AF8  3001               	movlw	1
  6139  0AF9  0020               	movlb	0	; select bank0
  6140  0AFA  07A1               	addwf	fputs@i,f
  6141  0AFB  3000               	movlw	0
  6142  0AFC  3DA2               	addwfc	fputs@i+1,f
  6143  0AFD                     l1982:
  6144  0AFD  0821               	movf	fputs@i,w
  6145  0AFE  0723               	addwf	fputs@s,w
  6146  0AFF  00F9               	movwf	??_fputs
  6147  0B00  0879               	movf	??_fputs,w
  6148  0B01  0086               	movwf	6
  6149  0B02  3001               	movlw	1	; select bank2/3
  6150  0B03  0087               	movwf	7
  6151  0B04  0801               	movf	1,w
  6152  0B05  00FA               	movwf	??_fputs+1
  6153  0B06  087A               	movf	??_fputs+1,w
  6154  0B07  00A0               	movwf	fputs@c
  6155  0B08  0820               	movf	fputs@c,w
  6156  0B09  1D03               	btfss	3,2
  6157  0B0A  2B0C               	goto	u1241
  6158  0B0B  2B0D               	goto	u1240
  6159  0B0C                     u1241:
  6160  0B0C  2AEA               	goto	l1978
  6161  0B0D                     u1240:
  6162  0B0D                     l1053:
  6163  0B0D  0008               	return
  6164  0B0E                     __end_of_fputs:
  6165                           
  6166                           	psect	text21
  6167  0C5E                     __ptext21:	
  6168 ;; *************** function _fputc *****************
  6169 ;; Defined at:
  6170 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  c               2    0[COMMON] int 
  6173 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6174 ;;		 -> sprintf@f(5), 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  2    0[COMMON] int 
  6179 ;; Registers used:
  6180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6186 ;;      Params:         3       0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0
  6188 ;;      Temps:          5       0       0       0       0       0
  6189 ;;      Totals:         8       0       0       0       0       0
  6190 ;;Total ram usage:        8 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    1
  6193 ;; This function calls:
  6194 ;;		_putch
  6195 ;; This function is called by:
  6196 ;;		_pad
  6197 ;;		_vfpfcnvrt
  6198 ;;		_fputs
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function _fputc
  6204  0C5E                     _fputc:
  6205  0C5E                     l1954:	
  6206                           ;incstack = 0
  6207                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6208                           
  6209  0C5E  0872               	movf	fputc@fp,w
  6210  0C5F  1903               	btfsc	3,2
  6211  0C60  2C62               	goto	u1181
  6212  0C61  2C63               	goto	u1180
  6213  0C62                     u1181:
  6214  0C62  2C68               	goto	l1958
  6215  0C63                     u1180:
  6216  0C63                     l1956:
  6217  0C63  0872               	movf	fputc@fp,w
  6218  0C64  1D03               	btfss	3,2
  6219  0C65  2C67               	goto	u1191
  6220  0C66  2C68               	goto	u1190
  6221  0C67                     u1191:
  6222  0C67  2C6D               	goto	l1960
  6223  0C68                     u1190:
  6224  0C68                     l1958:
  6225  0C68  0870               	movf	fputc@c,w
  6226  0C69  3188  20EB  318C   	fcall	_putch
  6227  0C6C  2CAC               	goto	l1045
  6228  0C6D                     l1960:
  6229  0C6D  0872               	movf	fputc@fp,w
  6230  0C6E  3E03               	addlw	3
  6231  0C6F  0086               	movwf	6
  6232  0C70  0187               	clrf	7
  6233  0C71  0016               	moviw fsr1++
  6234  0C72  0401               	iorwf	1,w
  6235  0C73  1903               	btfsc	3,2
  6236  0C74  2C76               	goto	u1201
  6237  0C75  2C77               	goto	u1200
  6238  0C76                     u1201:
  6239  0C76  2C94               	goto	l1964
  6240  0C77                     u1200:
  6241  0C77                     l1962:
  6242  0C77  0872               	movf	fputc@fp,w
  6243  0C78  3E03               	addlw	3
  6244  0C79  0086               	movwf	6
  6245  0C7A  0187               	clrf	7
  6246  0C7B  3F40               	moviw [0]fsr1
  6247  0C7C  00F3               	movwf	??_fputc
  6248  0C7D  3F41               	moviw [1]fsr1
  6249  0C7E  00F4               	movwf	??_fputc+1
  6250  0C7F  0A72               	incf	fputc@fp,w
  6251  0C80  0086               	movwf	6
  6252  0C81  0187               	clrf	7
  6253  0C82  3F40               	moviw [0]fsr1
  6254  0C83  00F5               	movwf	??_fputc+2
  6255  0C84  3F41               	moviw [1]fsr1
  6256  0C85  00F6               	movwf	??_fputc+3
  6257  0C86  0876               	movf	??_fputc+3,w
  6258  0C87  3A80               	xorlw	128
  6259  0C88  00F7               	movwf	??_fputc+4
  6260  0C89  0874               	movf	??_fputc+1,w
  6261  0C8A  3A80               	xorlw	128
  6262  0C8B  0277               	subwf	??_fputc+4,w
  6263  0C8C  1D03               	skipz
  6264  0C8D  2C90               	goto	u1215
  6265  0C8E  0873               	movf	??_fputc,w
  6266  0C8F  0275               	subwf	??_fputc+2,w
  6267  0C90                     u1215:
  6268  0C90  1803               	skipnc
  6269  0C91  2C93               	goto	u1211
  6270  0C92  2C94               	goto	u1210
  6271  0C93                     u1211:
  6272  0C93  2CAC               	goto	l1045
  6273  0C94                     u1210:
  6274  0C94                     l1964:
  6275  0C94  0870               	movf	fputc@c,w
  6276  0C95  00F3               	movwf	??_fputc
  6277  0C96  0872               	movf	fputc@fp,w
  6278  0C97  0086               	movwf	6
  6279  0C98  0187               	clrf	7
  6280  0C99  0A72               	incf	fputc@fp,w
  6281  0C9A  0084               	movwf	4
  6282  0C9B  0185               	clrf	5
  6283  0C9C  0800               	movf	0,w
  6284  0C9D  0701               	addwf	1,w
  6285  0C9E  00F4               	movwf	??_fputc+1
  6286  0C9F  0874               	movf	??_fputc+1,w
  6287  0CA0  0086               	movwf	6
  6288  0CA1  0187               	clrf	7
  6289  0CA2  0873               	movf	??_fputc,w
  6290  0CA3  0081               	movwf	1
  6291  0CA4                     l1966:
  6292  0CA4  0A72               	incf	fputc@fp,w
  6293  0CA5  0086               	movwf	6
  6294  0CA6  0187               	clrf	7
  6295  0CA7  3001               	movlw	1
  6296  0CA8  0781               	addwf	1,f
  6297  0CA9  3141               	addfsr 1,1
  6298  0CAA  1803               	skipnc
  6299  0CAB  0A81               	incf	1,f
  6300  0CAC                     l1045:
  6301  0CAC  0008               	return
  6302  0CAD                     __end_of_fputc:
  6303                           
  6304                           	psect	text22
  6305  08EB                     __ptext22:	
  6306 ;; *************** function _putch *****************
  6307 ;; Defined at:
  6308 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  c               1    wreg     unsigned char 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  c               1    0[COMMON] unsigned char 
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      void 
  6315 ;; Registers used:
  6316 ;;		wreg
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6322 ;;      Params:         0       0       0       0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0
  6324 ;;      Temps:          0       0       0       0       0       0
  6325 ;;      Totals:         0       0       0       0       0       0
  6326 ;;Total ram usage:        0 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_fputc
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           
  6336                           ;psect for function _putch
  6337  08EB                     _putch:
  6338  08EB                     l1056:	
  6339                           ;incstack = 0
  6340                           ; Regs used in _putch: [wreg]
  6341                           
  6342  08EB  0008               	return
  6343  08EC                     __end_of_putch:
  6344                           
  6345                           	psect	text23
  6346  09E4                     __ptext23:	
  6347 ;; *************** function _abs *****************
  6348 ;; Defined at:
  6349 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  a               2    3[COMMON] int 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  2    3[COMMON] int 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6363 ;;      Params:         2       0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0
  6365 ;;      Temps:          2       0       0       0       0       0
  6366 ;;      Totals:         4       0       0       0       0       0
  6367 ;;Total ram usage:        4 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_dtoa
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           
  6377                           ;psect for function _abs
  6378  09E4                     _abs:
  6379  09E4                     l2108:	
  6380                           ;incstack = 0
  6381                           ; Regs used in _abs: [wreg+status,2+status,0]
  6382                           
  6383  09E4  0874               	movf	abs@a+1,w
  6384  09E5  3A80               	xorlw	128
  6385  09E6  00F5               	movwf	??_abs
  6386  09E7  3080               	movlw	128
  6387  09E8  0275               	subwf	??_abs,w
  6388  09E9  1D03               	skipz
  6389  09EA  29ED               	goto	u1595
  6390  09EB  3001               	movlw	1
  6391  09EC  0273               	subwf	abs@a,w
  6392  09ED                     u1595:
  6393  09ED  1803               	skipnc
  6394  09EE  29F0               	goto	u1591
  6395  09EF  29F1               	goto	u1590
  6396  09F0                     u1591:
  6397  09F0  29FD               	goto	l985
  6398  09F1                     u1590:
  6399  09F1                     l2110:
  6400  09F1  0973               	comf	abs@a,w
  6401  09F2  00F5               	movwf	??_abs
  6402  09F3  0974               	comf	abs@a+1,w
  6403  09F4  00F6               	movwf	??_abs+1
  6404  09F5  0AF5               	incf	??_abs,f
  6405  09F6  1903               	skipnz
  6406  09F7  0AF6               	incf	??_abs+1,f
  6407  09F8  0875               	movf	??_abs,w
  6408  09F9  00F3               	movwf	?_abs
  6409  09FA  0876               	movf	??_abs+1,w
  6410  09FB  00F4               	movwf	?_abs+1
  6411  09FC  29FD               	goto	l988
  6412  09FD                     l985:
  6413  09FD                     l988:
  6414  09FD  0008               	return
  6415  09FE                     __end_of_abs:
  6416                           
  6417                           	psect	text24
  6418  01E0                     __ptext24:	
  6419 ;; *************** function ___aomod *****************
  6420 ;; Defined at:
  6421 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  divisor         8    0[BANK0 ] long long 
  6424 ;;  dividend        8    8[BANK0 ] long long 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  sign            1    2[COMMON] unsigned char 
  6427 ;;  counter         1    1[COMMON] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  8    0[BANK0 ] long long 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6437 ;;      Params:         0      16       0       0       0       0
  6438 ;;      Locals:         2       0       0       0       0       0
  6439 ;;      Temps:          1       0       0       0       0       0
  6440 ;;      Totals:         3      16       0       0       0       0
  6441 ;;Total ram usage:       19 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_dtoa
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           
  6451                           ;psect for function ___aomod
  6452  01E0                     ___aomod:
  6453  01E0                     l2056:	
  6454                           ;incstack = 0
  6455                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6456                           
  6457  01E0  01F2               	clrf	___aomod@sign
  6458  01E1                     l2058:
  6459  01E1  3028               	movlw	low ___aomod@dividend
  6460  01E2  0086               	movwf	6
  6461  01E3  3000               	movlw	high ___aomod@dividend
  6462  01E4  0087               	movwf	7
  6463  01E5  3F47               	moviw [7]fsr1
  6464  01E6  00F0               	movwf	??___aomod
  6465  01E7  1FF0               	btfss	??___aomod,7
  6466  01E8  29EA               	goto	u1451
  6467  01E9  29EB               	goto	u1450
  6468  01EA                     u1451:
  6469  01EA  2A0C               	goto	l2062
  6470  01EB                     u1450:
  6471  01EB                     l2060:
  6472  01EB  0020               	movlb	0	; select bank0
  6473  01EC  09A8               	comf	___aomod@dividend,f
  6474  01ED  09A9               	comf	___aomod@dividend+1,f
  6475  01EE  09AA               	comf	___aomod@dividend+2,f
  6476  01EF  09AB               	comf	___aomod@dividend+3,f
  6477  01F0  09AC               	comf	___aomod@dividend+4,f
  6478  01F1  09AD               	comf	___aomod@dividend+5,f
  6479  01F2  09AE               	comf	___aomod@dividend+6,f
  6480  01F3  09AF               	comf	___aomod@dividend+7,f
  6481  01F4  0AA8               	incf	___aomod@dividend,f
  6482  01F5  1D03               	skipz
  6483  01F6  2A0A               	goto	u146lld
  6484  01F7  0AA9               	incf	___aomod@dividend+1,f
  6485  01F8  1D03               	skipz
  6486  01F9  2A0A               	goto	u146lld
  6487  01FA  0AAA               	incf	___aomod@dividend+2,f
  6488  01FB  1D03               	skipz
  6489  01FC  2A0A               	goto	u146lld
  6490  01FD  0AAB               	incf	___aomod@dividend+3,f
  6491  01FE  1D03               	skipz
  6492  01FF  2A0A               	goto	u146lld
  6493  0200  0AAC               	incf	___aomod@dividend+4,f
  6494  0201  1D03               	skipz
  6495  0202  2A0A               	goto	u146lld
  6496  0203  0AAD               	incf	___aomod@dividend+5,f
  6497  0204  1D03               	skipz
  6498  0205  2A0A               	goto	u146lld
  6499  0206  0AAE               	incf	___aomod@dividend+6,f
  6500  0207  1D03               	skipz
  6501  0208  2A0A               	goto	u146lld
  6502  0209  0AAF               	incf	___aomod@dividend+7,f
  6503  020A                     u146lld:
  6504  020A  01F2               	clrf	___aomod@sign
  6505  020B  0AF2               	incf	___aomod@sign,f
  6506  020C                     l2062:
  6507  020C  3020               	movlw	low ___aomod@divisor
  6508  020D  0086               	movwf	6
  6509  020E  3000               	movlw	high ___aomod@divisor
  6510  020F  0087               	movwf	7
  6511  0210  3F47               	moviw [7]fsr1
  6512  0211  00F0               	movwf	??___aomod
  6513  0212  1FF0               	btfss	??___aomod,7
  6514  0213  2A15               	goto	u1471
  6515  0214  2A16               	goto	u1470
  6516  0215                     u1471:
  6517  0215  2A35               	goto	l2066
  6518  0216                     u1470:
  6519  0216                     l2064:
  6520  0216  0020               	movlb	0	; select bank0
  6521  0217  09A0               	comf	___aomod@divisor,f
  6522  0218  09A1               	comf	___aomod@divisor+1,f
  6523  0219  09A2               	comf	___aomod@divisor+2,f
  6524  021A  09A3               	comf	___aomod@divisor+3,f
  6525  021B  09A4               	comf	___aomod@divisor+4,f
  6526  021C  09A5               	comf	___aomod@divisor+5,f
  6527  021D  09A6               	comf	___aomod@divisor+6,f
  6528  021E  09A7               	comf	___aomod@divisor+7,f
  6529  021F  0AA0               	incf	___aomod@divisor,f
  6530  0220  1D03               	skipz
  6531  0221  2A35               	goto	u148lld
  6532  0222  0AA1               	incf	___aomod@divisor+1,f
  6533  0223  1D03               	skipz
  6534  0224  2A35               	goto	u148lld
  6535  0225  0AA2               	incf	___aomod@divisor+2,f
  6536  0226  1D03               	skipz
  6537  0227  2A35               	goto	u148lld
  6538  0228  0AA3               	incf	___aomod@divisor+3,f
  6539  0229  1D03               	skipz
  6540  022A  2A35               	goto	u148lld
  6541  022B  0AA4               	incf	___aomod@divisor+4,f
  6542  022C  1D03               	skipz
  6543  022D  2A35               	goto	u148lld
  6544  022E  0AA5               	incf	___aomod@divisor+5,f
  6545  022F  1D03               	skipz
  6546  0230  2A35               	goto	u148lld
  6547  0231  0AA6               	incf	___aomod@divisor+6,f
  6548  0232  1D03               	skipz
  6549  0233  2A35               	goto	u148lld
  6550  0234  0AA7               	incf	___aomod@divisor+7,f
  6551  0235                     u148lld:
  6552  0235                     l2066:
  6553  0235  0020               	movlb	0	; select bank0
  6554  0236  0820               	movf	___aomod@divisor,w
  6555  0237  0421               	iorwf	___aomod@divisor+1,w
  6556  0238  0422               	iorwf	___aomod@divisor+2,w
  6557  0239  0423               	iorwf	___aomod@divisor+3,w
  6558  023A  0424               	iorwf	___aomod@divisor+4,w
  6559  023B  0425               	iorwf	___aomod@divisor+5,w
  6560  023C  0426               	iorwf	___aomod@divisor+6,w
  6561  023D  0427               	iorwf	___aomod@divisor+7,w
  6562  023E  1903               	skipnz
  6563  023F  2A41               	goto	u1491
  6564  0240  2A42               	goto	u1490
  6565  0241                     u1491:
  6566  0241  2A95               	goto	l2082
  6567  0242                     u1490:
  6568  0242                     l2068:
  6569  0242  01F1               	clrf	___aomod@counter
  6570  0243  0AF1               	incf	___aomod@counter,f
  6571  0244  2A51               	goto	l2074
  6572  0245                     l2070:
  6573  0245  35A0               	lslf	___aomod@divisor,f
  6574  0246  0DA1               	rlf	___aomod@divisor+1,f
  6575  0247  0DA2               	rlf	___aomod@divisor+2,f
  6576  0248  0DA3               	rlf	___aomod@divisor+3,f
  6577  0249  0DA4               	rlf	___aomod@divisor+4,f
  6578  024A  0DA5               	rlf	___aomod@divisor+5,f
  6579  024B  0DA6               	rlf	___aomod@divisor+6,f
  6580  024C  0DA7               	rlf	___aomod@divisor+7,f
  6581  024D                     l2072:
  6582  024D  3001               	movlw	1
  6583  024E  00F0               	movwf	??___aomod
  6584  024F  0870               	movf	??___aomod,w
  6585  0250  07F1               	addwf	___aomod@counter,f
  6586  0251                     l2074:
  6587  0251  1FA7               	btfss	___aomod@divisor+7,7
  6588  0252  2A54               	goto	u1501
  6589  0253  2A55               	goto	u1500
  6590  0254                     u1501:
  6591  0254  2A45               	goto	l2070
  6592  0255                     u1500:
  6593  0255                     l2076:
  6594  0255  0827               	movf	___aomod@divisor+7,w
  6595  0256  022F               	subwf	___aomod@dividend+7,w
  6596  0257  1D03               	skipz
  6597  0258  2A73               	goto	u1515
  6598  0259  0826               	movf	___aomod@divisor+6,w
  6599  025A  022E               	subwf	___aomod@dividend+6,w
  6600  025B  1D03               	skipz
  6601  025C  2A73               	goto	u1515
  6602  025D  0825               	movf	___aomod@divisor+5,w
  6603  025E  022D               	subwf	___aomod@dividend+5,w
  6604  025F  1D03               	skipz
  6605  0260  2A73               	goto	u1515
  6606  0261  0824               	movf	___aomod@divisor+4,w
  6607  0262  022C               	subwf	___aomod@dividend+4,w
  6608  0263  1D03               	skipz
  6609  0264  2A73               	goto	u1515
  6610  0265  0823               	movf	___aomod@divisor+3,w
  6611  0266  022B               	subwf	___aomod@dividend+3,w
  6612  0267  1D03               	skipz
  6613  0268  2A73               	goto	u1515
  6614  0269  0822               	movf	___aomod@divisor+2,w
  6615  026A  022A               	subwf	___aomod@dividend+2,w
  6616  026B  1D03               	skipz
  6617  026C  2A73               	goto	u1515
  6618  026D  0821               	movf	___aomod@divisor+1,w
  6619  026E  0229               	subwf	___aomod@dividend+1,w
  6620  026F  1D03               	skipz
  6621  0270  2A73               	goto	u1515
  6622  0271  0820               	movf	___aomod@divisor,w
  6623  0272  0228               	subwf	___aomod@dividend,w
  6624  0273                     u1515:
  6625  0273  1C03               	skipc
  6626  0274  2A76               	goto	u1511
  6627  0275  2A77               	goto	u1510
  6628  0276                     u1511:
  6629  0276  2A87               	goto	l2080
  6630  0277                     u1510:
  6631  0277                     l2078:
  6632  0277  0820               	movf	___aomod@divisor,w
  6633  0278  02A8               	subwf	___aomod@dividend,f
  6634  0279  0821               	movf	___aomod@divisor+1,w
  6635  027A  3BA9               	subwfb	___aomod@dividend+1,f
  6636  027B  0822               	movf	___aomod@divisor+2,w
  6637  027C  3BAA               	subwfb	___aomod@dividend+2,f
  6638  027D  0823               	movf	___aomod@divisor+3,w
  6639  027E  3BAB               	subwfb	___aomod@dividend+3,f
  6640  027F  0824               	movf	___aomod@divisor+4,w
  6641  0280  3BAC               	subwfb	___aomod@dividend+4,f
  6642  0281  0825               	movf	___aomod@divisor+5,w
  6643  0282  3BAD               	subwfb	___aomod@dividend+5,f
  6644  0283  0826               	movf	___aomod@divisor+6,w
  6645  0284  3BAE               	subwfb	___aomod@dividend+6,f
  6646  0285  0827               	movf	___aomod@divisor+7,w
  6647  0286  3BAF               	subwfb	___aomod@dividend+7,f
  6648  0287                     l2080:
  6649  0287  36A7               	lsrf	___aomod@divisor+7,f
  6650  0288  0CA6               	rrf	___aomod@divisor+6,f
  6651  0289  0CA5               	rrf	___aomod@divisor+5,f
  6652  028A  0CA4               	rrf	___aomod@divisor+4,f
  6653  028B  0CA3               	rrf	___aomod@divisor+3,f
  6654  028C  0CA2               	rrf	___aomod@divisor+2,f
  6655  028D  0CA1               	rrf	___aomod@divisor+1,f
  6656  028E  0CA0               	rrf	___aomod@divisor,f
  6657  028F  3001               	movlw	1
  6658  0290  02F1               	subwf	___aomod@counter,f
  6659  0291  1D03               	btfss	3,2
  6660  0292  2A94               	goto	u1521
  6661  0293  2A95               	goto	u1520
  6662  0294                     u1521:
  6663  0294  2A55               	goto	l2076
  6664  0295                     u1520:
  6665  0295                     l2082:
  6666  0295  0872               	movf	___aomod@sign,w
  6667  0296  1903               	btfsc	3,2
  6668  0297  2A99               	goto	u1531
  6669  0298  2A9A               	goto	u1530
  6670  0299                     u1531:
  6671  0299  2AB8               	goto	l533
  6672  029A                     u1530:
  6673  029A                     l2084:
  6674  029A  09A8               	comf	___aomod@dividend,f
  6675  029B  09A9               	comf	___aomod@dividend+1,f
  6676  029C  09AA               	comf	___aomod@dividend+2,f
  6677  029D  09AB               	comf	___aomod@dividend+3,f
  6678  029E  09AC               	comf	___aomod@dividend+4,f
  6679  029F  09AD               	comf	___aomod@dividend+5,f
  6680  02A0  09AE               	comf	___aomod@dividend+6,f
  6681  02A1  09AF               	comf	___aomod@dividend+7,f
  6682  02A2  0AA8               	incf	___aomod@dividend,f
  6683  02A3  1D03               	skipz
  6684  02A4  2AB8               	goto	u154lld
  6685  02A5  0AA9               	incf	___aomod@dividend+1,f
  6686  02A6  1D03               	skipz
  6687  02A7  2AB8               	goto	u154lld
  6688  02A8  0AAA               	incf	___aomod@dividend+2,f
  6689  02A9  1D03               	skipz
  6690  02AA  2AB8               	goto	u154lld
  6691  02AB  0AAB               	incf	___aomod@dividend+3,f
  6692  02AC  1D03               	skipz
  6693  02AD  2AB8               	goto	u154lld
  6694  02AE  0AAC               	incf	___aomod@dividend+4,f
  6695  02AF  1D03               	skipz
  6696  02B0  2AB8               	goto	u154lld
  6697  02B1  0AAD               	incf	___aomod@dividend+5,f
  6698  02B2  1D03               	skipz
  6699  02B3  2AB8               	goto	u154lld
  6700  02B4  0AAE               	incf	___aomod@dividend+6,f
  6701  02B5  1D03               	skipz
  6702  02B6  2AB8               	goto	u154lld
  6703  02B7  0AAF               	incf	___aomod@dividend+7,f
  6704  02B8                     u154lld:
  6705  02B8                     l533:
  6706  02B8  0020               	movlb	0	; select bank0
  6707  02B9  0828               	movf	___aomod@dividend,w
  6708  02BA  00A0               	movwf	?___aomod
  6709  02BB  0829               	movf	___aomod@dividend+1,w
  6710  02BC  00A1               	movwf	?___aomod+1
  6711  02BD  082A               	movf	___aomod@dividend+2,w
  6712  02BE  00A2               	movwf	?___aomod+2
  6713  02BF  082B               	movf	___aomod@dividend+3,w
  6714  02C0  00A3               	movwf	?___aomod+3
  6715  02C1  082C               	movf	___aomod@dividend+4,w
  6716  02C2  00A4               	movwf	?___aomod+4
  6717  02C3  082D               	movf	___aomod@dividend+5,w
  6718  02C4  00A5               	movwf	?___aomod+5
  6719  02C5  082E               	movf	___aomod@dividend+6,w
  6720  02C6  00A6               	movwf	?___aomod+6
  6721  02C7  082F               	movf	___aomod@dividend+7,w
  6722  02C8  00A7               	movwf	?___aomod+7
  6723  02C9                     l534:
  6724  02C9  0008               	return
  6725  02CA                     __end_of___aomod:
  6726                           
  6727                           	psect	text25
  6728  03B6                     __ptext25:	
  6729 ;; *************** function ___aodiv *****************
  6730 ;; Defined at:
  6731 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  divisor         8    0[BANK0 ] long long 
  6734 ;;  dividend        8    8[BANK0 ] long long 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  quotient        8    3[COMMON] long long 
  6737 ;;  sign            1    2[COMMON] unsigned char 
  6738 ;;  counter         1    1[COMMON] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  8    0[BANK0 ] long long 
  6741 ;; Registers used:
  6742 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6748 ;;      Params:         0      16       0       0       0       0
  6749 ;;      Locals:        10       0       0       0       0       0
  6750 ;;      Temps:          1       0       0       0       0       0
  6751 ;;      Totals:        11      16       0       0       0       0
  6752 ;;Total ram usage:       27 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_dtoa
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           
  6762                           ;psect for function ___aodiv
  6763  03B6                     ___aodiv:
  6764  03B6                     l2018:	
  6765                           ;incstack = 0
  6766                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6767                           
  6768  03B6  01F2               	clrf	___aodiv@sign
  6769  03B7                     l2020:
  6770  03B7  3020               	movlw	low ___aodiv@divisor
  6771  03B8  0086               	movwf	6
  6772  03B9  3000               	movlw	high ___aodiv@divisor
  6773  03BA  0087               	movwf	7
  6774  03BB  3F47               	moviw [7]fsr1
  6775  03BC  00F0               	movwf	??___aodiv
  6776  03BD  1FF0               	btfss	??___aodiv,7
  6777  03BE  2BC0               	goto	u1341
  6778  03BF  2BC1               	goto	u1340
  6779  03C0                     u1341:
  6780  03C0  2BE2               	goto	l2024
  6781  03C1                     u1340:
  6782  03C1                     l2022:
  6783  03C1  0020               	movlb	0	; select bank0
  6784  03C2  09A0               	comf	___aodiv@divisor,f
  6785  03C3  09A1               	comf	___aodiv@divisor+1,f
  6786  03C4  09A2               	comf	___aodiv@divisor+2,f
  6787  03C5  09A3               	comf	___aodiv@divisor+3,f
  6788  03C6  09A4               	comf	___aodiv@divisor+4,f
  6789  03C7  09A5               	comf	___aodiv@divisor+5,f
  6790  03C8  09A6               	comf	___aodiv@divisor+6,f
  6791  03C9  09A7               	comf	___aodiv@divisor+7,f
  6792  03CA  0AA0               	incf	___aodiv@divisor,f
  6793  03CB  1D03               	skipz
  6794  03CC  2BE0               	goto	u135lld
  6795  03CD  0AA1               	incf	___aodiv@divisor+1,f
  6796  03CE  1D03               	skipz
  6797  03CF  2BE0               	goto	u135lld
  6798  03D0  0AA2               	incf	___aodiv@divisor+2,f
  6799  03D1  1D03               	skipz
  6800  03D2  2BE0               	goto	u135lld
  6801  03D3  0AA3               	incf	___aodiv@divisor+3,f
  6802  03D4  1D03               	skipz
  6803  03D5  2BE0               	goto	u135lld
  6804  03D6  0AA4               	incf	___aodiv@divisor+4,f
  6805  03D7  1D03               	skipz
  6806  03D8  2BE0               	goto	u135lld
  6807  03D9  0AA5               	incf	___aodiv@divisor+5,f
  6808  03DA  1D03               	skipz
  6809  03DB  2BE0               	goto	u135lld
  6810  03DC  0AA6               	incf	___aodiv@divisor+6,f
  6811  03DD  1D03               	skipz
  6812  03DE  2BE0               	goto	u135lld
  6813  03DF  0AA7               	incf	___aodiv@divisor+7,f
  6814  03E0                     u135lld:
  6815  03E0  01F2               	clrf	___aodiv@sign
  6816  03E1  0AF2               	incf	___aodiv@sign,f
  6817  03E2                     l2024:
  6818  03E2  3028               	movlw	low ___aodiv@dividend
  6819  03E3  0086               	movwf	6
  6820  03E4  3000               	movlw	high ___aodiv@dividend
  6821  03E5  0087               	movwf	7
  6822  03E6  3F47               	moviw [7]fsr1
  6823  03E7  00F0               	movwf	??___aodiv
  6824  03E8  1FF0               	btfss	??___aodiv,7
  6825  03E9  2BEB               	goto	u1361
  6826  03EA  2BEC               	goto	u1360
  6827  03EB                     u1361:
  6828  03EB  2C0F               	goto	l2030
  6829  03EC                     u1360:
  6830  03EC                     l2026:
  6831  03EC  0020               	movlb	0	; select bank0
  6832  03ED  09A8               	comf	___aodiv@dividend,f
  6833  03EE  09A9               	comf	___aodiv@dividend+1,f
  6834  03EF  09AA               	comf	___aodiv@dividend+2,f
  6835  03F0  09AB               	comf	___aodiv@dividend+3,f
  6836  03F1  09AC               	comf	___aodiv@dividend+4,f
  6837  03F2  09AD               	comf	___aodiv@dividend+5,f
  6838  03F3  09AE               	comf	___aodiv@dividend+6,f
  6839  03F4  09AF               	comf	___aodiv@dividend+7,f
  6840  03F5  0AA8               	incf	___aodiv@dividend,f
  6841  03F6  1D03               	skipz
  6842  03F7  2C0B               	goto	u137lld
  6843  03F8  0AA9               	incf	___aodiv@dividend+1,f
  6844  03F9  1D03               	skipz
  6845  03FA  2C0B               	goto	u137lld
  6846  03FB  0AAA               	incf	___aodiv@dividend+2,f
  6847  03FC  1D03               	skipz
  6848  03FD  2C0B               	goto	u137lld
  6849  03FE  0AAB               	incf	___aodiv@dividend+3,f
  6850  03FF  1D03               	skipz
  6851  0400  2C0B               	goto	u137lld
  6852  0401  0AAC               	incf	___aodiv@dividend+4,f
  6853  0402  1D03               	skipz
  6854  0403  2C0B               	goto	u137lld
  6855  0404  0AAD               	incf	___aodiv@dividend+5,f
  6856  0405  1D03               	skipz
  6857  0406  2C0B               	goto	u137lld
  6858  0407  0AAE               	incf	___aodiv@dividend+6,f
  6859  0408  1D03               	skipz
  6860  0409  2C0B               	goto	u137lld
  6861  040A  0AAF               	incf	___aodiv@dividend+7,f
  6862  040B                     u137lld:
  6863  040B                     l2028:
  6864  040B  3001               	movlw	1
  6865  040C  00F0               	movwf	??___aodiv
  6866  040D  0870               	movf	??___aodiv,w
  6867  040E  06F2               	xorwf	___aodiv@sign,f
  6868  040F                     l2030:
  6869  040F  3073               	movlw	low ___aodiv@quotient
  6870  0410  0086               	movwf	6
  6871  0411  3000               	movlw	high ___aodiv@quotient
  6872  0412  0087               	movwf	7
  6873  0413  3008               	movlw	8
  6874  0414  00F0               	movwf	??___aodiv
  6875  0415  3000               	movlw	0
  6876  0416                     u1380:
  6877  0416  001E               	movwi fsr1++
  6878  0417  0BF0               	decfsz	??___aodiv,f
  6879  0418  2C16               	goto	u1380
  6880  0419                     l2032:
  6881  0419  0020               	movlb	0	; select bank0
  6882  041A  0820               	movf	___aodiv@divisor,w
  6883  041B  0421               	iorwf	___aodiv@divisor+1,w
  6884  041C  0422               	iorwf	___aodiv@divisor+2,w
  6885  041D  0423               	iorwf	___aodiv@divisor+3,w
  6886  041E  0424               	iorwf	___aodiv@divisor+4,w
  6887  041F  0425               	iorwf	___aodiv@divisor+5,w
  6888  0420  0426               	iorwf	___aodiv@divisor+6,w
  6889  0421  0427               	iorwf	___aodiv@divisor+7,w
  6890  0422  1903               	skipnz
  6891  0423  2C25               	goto	u1391
  6892  0424  2C26               	goto	u1390
  6893  0425                     u1391:
  6894  0425  2C82               	goto	l2052
  6895  0426                     u1390:
  6896  0426                     l2034:
  6897  0426  01F1               	clrf	___aodiv@counter
  6898  0427  0AF1               	incf	___aodiv@counter,f
  6899  0428  2C35               	goto	l2040
  6900  0429                     l2036:
  6901  0429  35A0               	lslf	___aodiv@divisor,f
  6902  042A  0DA1               	rlf	___aodiv@divisor+1,f
  6903  042B  0DA2               	rlf	___aodiv@divisor+2,f
  6904  042C  0DA3               	rlf	___aodiv@divisor+3,f
  6905  042D  0DA4               	rlf	___aodiv@divisor+4,f
  6906  042E  0DA5               	rlf	___aodiv@divisor+5,f
  6907  042F  0DA6               	rlf	___aodiv@divisor+6,f
  6908  0430  0DA7               	rlf	___aodiv@divisor+7,f
  6909  0431                     l2038:
  6910  0431  3001               	movlw	1
  6911  0432  00F0               	movwf	??___aodiv
  6912  0433  0870               	movf	??___aodiv,w
  6913  0434  07F1               	addwf	___aodiv@counter,f
  6914  0435                     l2040:
  6915  0435  1FA7               	btfss	___aodiv@divisor+7,7
  6916  0436  2C38               	goto	u1401
  6917  0437  2C39               	goto	u1400
  6918  0438                     u1401:
  6919  0438  2C29               	goto	l2036
  6920  0439                     u1400:
  6921  0439                     l2042:
  6922  0439  35F3               	lslf	___aodiv@quotient,f
  6923  043A  0DF4               	rlf	___aodiv@quotient+1,f
  6924  043B  0DF5               	rlf	___aodiv@quotient+2,f
  6925  043C  0DF6               	rlf	___aodiv@quotient+3,f
  6926  043D  0DF7               	rlf	___aodiv@quotient+4,f
  6927  043E  0DF8               	rlf	___aodiv@quotient+5,f
  6928  043F  0DF9               	rlf	___aodiv@quotient+6,f
  6929  0440  0DFA               	rlf	___aodiv@quotient+7,f
  6930  0441                     l2044:
  6931  0441  0827               	movf	___aodiv@divisor+7,w
  6932  0442  022F               	subwf	___aodiv@dividend+7,w
  6933  0443  1D03               	skipz
  6934  0444  2C5F               	goto	u1415
  6935  0445  0826               	movf	___aodiv@divisor+6,w
  6936  0446  022E               	subwf	___aodiv@dividend+6,w
  6937  0447  1D03               	skipz
  6938  0448  2C5F               	goto	u1415
  6939  0449  0825               	movf	___aodiv@divisor+5,w
  6940  044A  022D               	subwf	___aodiv@dividend+5,w
  6941  044B  1D03               	skipz
  6942  044C  2C5F               	goto	u1415
  6943  044D  0824               	movf	___aodiv@divisor+4,w
  6944  044E  022C               	subwf	___aodiv@dividend+4,w
  6945  044F  1D03               	skipz
  6946  0450  2C5F               	goto	u1415
  6947  0451  0823               	movf	___aodiv@divisor+3,w
  6948  0452  022B               	subwf	___aodiv@dividend+3,w
  6949  0453  1D03               	skipz
  6950  0454  2C5F               	goto	u1415
  6951  0455  0822               	movf	___aodiv@divisor+2,w
  6952  0456  022A               	subwf	___aodiv@dividend+2,w
  6953  0457  1D03               	skipz
  6954  0458  2C5F               	goto	u1415
  6955  0459  0821               	movf	___aodiv@divisor+1,w
  6956  045A  0229               	subwf	___aodiv@dividend+1,w
  6957  045B  1D03               	skipz
  6958  045C  2C5F               	goto	u1415
  6959  045D  0820               	movf	___aodiv@divisor,w
  6960  045E  0228               	subwf	___aodiv@dividend,w
  6961  045F                     u1415:
  6962  045F  1C03               	skipc
  6963  0460  2C62               	goto	u1411
  6964  0461  2C63               	goto	u1410
  6965  0462                     u1411:
  6966  0462  2C74               	goto	l2050
  6967  0463                     u1410:
  6968  0463                     l2046:
  6969  0463  0820               	movf	___aodiv@divisor,w
  6970  0464  02A8               	subwf	___aodiv@dividend,f
  6971  0465  0821               	movf	___aodiv@divisor+1,w
  6972  0466  3BA9               	subwfb	___aodiv@dividend+1,f
  6973  0467  0822               	movf	___aodiv@divisor+2,w
  6974  0468  3BAA               	subwfb	___aodiv@dividend+2,f
  6975  0469  0823               	movf	___aodiv@divisor+3,w
  6976  046A  3BAB               	subwfb	___aodiv@dividend+3,f
  6977  046B  0824               	movf	___aodiv@divisor+4,w
  6978  046C  3BAC               	subwfb	___aodiv@dividend+4,f
  6979  046D  0825               	movf	___aodiv@divisor+5,w
  6980  046E  3BAD               	subwfb	___aodiv@dividend+5,f
  6981  046F  0826               	movf	___aodiv@divisor+6,w
  6982  0470  3BAE               	subwfb	___aodiv@dividend+6,f
  6983  0471  0827               	movf	___aodiv@divisor+7,w
  6984  0472  3BAF               	subwfb	___aodiv@dividend+7,f
  6985  0473                     l2048:
  6986  0473  1473               	bsf	___aodiv@quotient,0
  6987  0474                     l2050:
  6988  0474  36A7               	lsrf	___aodiv@divisor+7,f
  6989  0475  0CA6               	rrf	___aodiv@divisor+6,f
  6990  0476  0CA5               	rrf	___aodiv@divisor+5,f
  6991  0477  0CA4               	rrf	___aodiv@divisor+4,f
  6992  0478  0CA3               	rrf	___aodiv@divisor+3,f
  6993  0479  0CA2               	rrf	___aodiv@divisor+2,f
  6994  047A  0CA1               	rrf	___aodiv@divisor+1,f
  6995  047B  0CA0               	rrf	___aodiv@divisor,f
  6996  047C  3001               	movlw	1
  6997  047D  02F1               	subwf	___aodiv@counter,f
  6998  047E  1D03               	btfss	3,2
  6999  047F  2C81               	goto	u1421
  7000  0480  2C82               	goto	u1420
  7001  0481                     u1421:
  7002  0481  2C39               	goto	l2042
  7003  0482                     u1420:
  7004  0482                     l2052:
  7005  0482  0872               	movf	___aodiv@sign,w
  7006  0483  1903               	btfsc	3,2
  7007  0484  2C86               	goto	u1431
  7008  0485  2C87               	goto	u1430
  7009  0486                     u1431:
  7010  0486  2CA5               	goto	l520
  7011  0487                     u1430:
  7012  0487                     l2054:
  7013  0487  09F3               	comf	___aodiv@quotient,f
  7014  0488  09F4               	comf	___aodiv@quotient+1,f
  7015  0489  09F5               	comf	___aodiv@quotient+2,f
  7016  048A  09F6               	comf	___aodiv@quotient+3,f
  7017  048B  09F7               	comf	___aodiv@quotient+4,f
  7018  048C  09F8               	comf	___aodiv@quotient+5,f
  7019  048D  09F9               	comf	___aodiv@quotient+6,f
  7020  048E  09FA               	comf	___aodiv@quotient+7,f
  7021  048F  0AF3               	incf	___aodiv@quotient,f
  7022  0490  1D03               	skipz
  7023  0491  2CA5               	goto	u144lld
  7024  0492  0AF4               	incf	___aodiv@quotient+1,f
  7025  0493  1D03               	skipz
  7026  0494  2CA5               	goto	u144lld
  7027  0495  0AF5               	incf	___aodiv@quotient+2,f
  7028  0496  1D03               	skipz
  7029  0497  2CA5               	goto	u144lld
  7030  0498  0AF6               	incf	___aodiv@quotient+3,f
  7031  0499  1D03               	skipz
  7032  049A  2CA5               	goto	u144lld
  7033  049B  0AF7               	incf	___aodiv@quotient+4,f
  7034  049C  1D03               	skipz
  7035  049D  2CA5               	goto	u144lld
  7036  049E  0AF8               	incf	___aodiv@quotient+5,f
  7037  049F  1D03               	skipz
  7038  04A0  2CA5               	goto	u144lld
  7039  04A1  0AF9               	incf	___aodiv@quotient+6,f
  7040  04A2  1D03               	skipz
  7041  04A3  2CA5               	goto	u144lld
  7042  04A4  0AFA               	incf	___aodiv@quotient+7,f
  7043  04A5                     u144lld:
  7044  04A5                     l520:
  7045  04A5  0873               	movf	___aodiv@quotient,w
  7046  04A6  0020               	movlb	0	; select bank0
  7047  04A7  00A0               	movwf	?___aodiv
  7048  04A8  0874               	movf	___aodiv@quotient+1,w
  7049  04A9  00A1               	movwf	?___aodiv+1
  7050  04AA  0875               	movf	___aodiv@quotient+2,w
  7051  04AB  00A2               	movwf	?___aodiv+2
  7052  04AC  0876               	movf	___aodiv@quotient+3,w
  7053  04AD  00A3               	movwf	?___aodiv+3
  7054  04AE  0877               	movf	___aodiv@quotient+4,w
  7055  04AF  00A4               	movwf	?___aodiv+4
  7056  04B0  0878               	movf	___aodiv@quotient+5,w
  7057  04B1  00A5               	movwf	?___aodiv+5
  7058  04B2  0879               	movf	___aodiv@quotient+6,w
  7059  04B3  00A6               	movwf	?___aodiv+6
  7060  04B4  087A               	movf	___aodiv@quotient+7,w
  7061  04B5  00A7               	movwf	?___aodiv+7
  7062  04B6                     l521:
  7063  04B6  0008               	return
  7064  04B7                     __end_of___aodiv:
  7065                           
  7066                           	psect	text26
  7067  005A                     __ptext26:	
  7068 ;; *************** function _atoi *****************
  7069 ;; Defined at:
  7070 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  s               2    6[COMMON] PTR const unsigned char 
  7073 ;;		 -> STR_6(12), STR_5(16), STR_4(12), STR_3(18), 
  7074 ;;		 -> STR_2(18), STR_1(18), 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  n               2    7[BANK0 ] int 
  7077 ;;  neg             2    0[BANK0 ] int 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  2    6[COMMON] int 
  7080 ;; Registers used:
  7081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7087 ;;      Params:         2       0       0       0       0       0
  7088 ;;      Locals:         0       9       0       0       0       0
  7089 ;;      Temps:          4       0       0       0       0       0
  7090 ;;      Totals:         6       9       0       0       0       0
  7091 ;;Total ram usage:       15 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:    1
  7094 ;; This function calls:
  7095 ;;		___wmul
  7096 ;;		_isdigit
  7097 ;;		_isspace
  7098 ;; This function is called by:
  7099 ;;		_vfpfcnvrt
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           
  7104                           ;psect for function _atoi
  7105  005A                     _atoi:
  7106  005A                     l2190:	
  7107                           ;incstack = 0
  7108                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7109                           
  7110  005A  0020               	movlb	0	; select bank0
  7111  005B  01A7               	clrf	atoi@n
  7112  005C  01A8               	clrf	atoi@n+1
  7113  005D  01A0               	clrf	atoi@neg
  7114  005E  01A1               	clrf	atoi@neg+1
  7115  005F  2864               	goto	l2194
  7116  0060                     l2192:
  7117  0060  3001               	movlw	1
  7118  0061  07F6               	addwf	atoi@s,f
  7119  0062  3000               	movlw	0
  7120  0063  3DF7               	addwfc	atoi@s+1,f
  7121  0064                     l2194:
  7122  0064  01A6               	clrf	_atoi$1069
  7123  0065  0AA6               	incf	_atoi$1069,f
  7124  0066                     l2196:
  7125  0066  0876               	movf	atoi@s,w
  7126  0067  0084               	movwf	4
  7127  0068  0877               	movf	atoi@s+1,w
  7128  0069  0085               	movwf	5
  7129  006A  0012               	moviw fsr0++
  7130  006B  3A20               	xorlw	32
  7131  006C  1903               	btfsc	3,2
  7132  006D  286F               	goto	u1801
  7133  006E  2870               	goto	u1800
  7134  006F                     u1801:
  7135  006F  2885               	goto	l2202
  7136  0070                     u1800:
  7137  0070                     l2198:
  7138  0070  0876               	movf	atoi@s,w
  7139  0071  0084               	movwf	4
  7140  0072  0877               	movf	atoi@s+1,w
  7141  0073  0085               	movwf	5
  7142  0074  0800               	movf	0,w	;code access
  7143  0075  3EF7               	addlw	247
  7144  0076  00F8               	movwf	??_atoi
  7145  0077  30FF               	movlw	255
  7146  0078  1803               	skipnc
  7147  0079  3000               	movlw	0
  7148  007A  00F9               	movwf	??_atoi+1
  7149  007B  3000               	movlw	0
  7150  007C  0279               	subwf	??_atoi+1,w
  7151  007D  3005               	movlw	5
  7152  007E  1903               	skipnz
  7153  007F  0278               	subwf	??_atoi,w
  7154  0080  1C03               	skipc
  7155  0081  2883               	goto	u1811
  7156  0082  2884               	goto	u1810
  7157  0083                     u1811:
  7158  0083  2885               	goto	l2202
  7159  0084                     u1810:
  7160  0084                     l2200:
  7161  0084  01A6               	clrf	_atoi$1069
  7162  0085                     l2202:
  7163  0085  0826               	movf	_atoi$1069,w
  7164  0086  00F8               	movwf	??_atoi
  7165  0087  01F9               	clrf	??_atoi+1
  7166  0088  0878               	movf	??_atoi,w
  7167  0089  00A2               	movwf	_atoi$1068
  7168  008A  0879               	movf	??_atoi+1,w
  7169  008B  00A3               	movwf	_atoi$1068+1
  7170  008C                     l2206:
  7171  008C  0822               	movf	_atoi$1068,w
  7172  008D  0423               	iorwf	_atoi$1068+1,w
  7173  008E  1D03               	btfss	3,2
  7174  008F  2891               	goto	u1821
  7175  0090  2892               	goto	u1820
  7176  0091                     u1821:
  7177  0091  2860               	goto	l2192
  7178  0092                     u1820:
  7179  0092  289C               	goto	l2210
  7180  0093                     l2208:
  7181  0093  3001               	movlw	1
  7182  0094  00A0               	movwf	atoi@neg
  7183  0095  3000               	movlw	0
  7184  0096  00A1               	movwf	atoi@neg+1
  7185  0097                     l1006:
  7186  0097  3001               	movlw	1
  7187  0098  07F6               	addwf	atoi@s,f
  7188  0099  3000               	movlw	0
  7189  009A  3DF7               	addwfc	atoi@s+1,f
  7190  009B  28D0               	goto	l2216
  7191  009C                     l2210:
  7192  009C  0876               	movf	atoi@s,w
  7193  009D  0084               	movwf	4
  7194  009E  0877               	movf	atoi@s+1,w
  7195  009F  0085               	movwf	5
  7196  00A0  0800               	movf	0,w	;code access
  7197  00A1  00F8               	movwf	??_atoi
  7198  00A2  01F9               	clrf	??_atoi+1
  7199                           
  7200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7201                           ; Switch size 1, requested type "simple"
  7202                           ; Number of cases is 1, Range of values is 0 to 0
  7203                           ; switch strategies available:
  7204                           ; Name         Instructions Cycles
  7205                           ; simple_byte            4     3 (average)
  7206                           ; direct_byte            8     6 (fixed)
  7207                           ; jumptable            260     6 (fixed)
  7208                           ;	Chosen strategy is simple_byte
  7209  00A3  0879               	movf	??_atoi+1,w
  7210  00A4  3A00               	xorlw	0	; case 0
  7211  00A5  1903               	skipnz
  7212  00A6  28A8               	goto	l2834
  7213  00A7  28D0               	goto	l2216
  7214  00A8                     l2834:
  7215                           
  7216                           ; Switch size 1, requested type "simple"
  7217                           ; Number of cases is 2, Range of values is 43 to 45
  7218                           ; switch strategies available:
  7219                           ; Name         Instructions Cycles
  7220                           ; simple_byte            7     4 (average)
  7221                           ; direct_byte           15     9 (fixed)
  7222                           ; jumptable            263     9 (fixed)
  7223                           ;	Chosen strategy is simple_byte
  7224  00A8  0878               	movf	??_atoi,w
  7225  00A9  3A2B               	xorlw	43	; case 43
  7226  00AA  1903               	skipnz
  7227  00AB  2897               	goto	l1006
  7228  00AC  3A06               	xorlw	6	; case 45
  7229  00AD  1903               	skipnz
  7230  00AE  2893               	goto	l2208
  7231  00AF  28D0               	goto	l2216
  7232  00B0                     l2212:
  7233  00B0  0876               	movf	atoi@s,w
  7234  00B1  0084               	movwf	4
  7235  00B2  0877               	movf	atoi@s+1,w
  7236  00B3  0085               	movwf	5
  7237  00B4  0800               	movf	0,w	;code access
  7238  00B5  00F8               	movwf	??_atoi
  7239  00B6  0828               	movf	atoi@n+1,w
  7240  00B7  00F1               	movwf	___wmul@multiplier+1
  7241  00B8  0827               	movf	atoi@n,w
  7242  00B9  00F0               	movwf	___wmul@multiplier
  7243  00BA  300A               	movlw	10
  7244  00BB  00F2               	movwf	___wmul@multiplicand
  7245  00BC  3000               	movlw	0
  7246  00BD  00F3               	movwf	___wmul@multiplicand+1
  7247  00BE  318A  2235  3180   	fcall	___wmul
  7248  00C1  0871               	movf	?___wmul+1,w
  7249  00C2  00FA               	movwf	??_atoi+2
  7250  00C3  0878               	movf	??_atoi,w
  7251  00C4  0270               	subwf	?___wmul,w
  7252  00C5  00F9               	movwf	??_atoi+1
  7253  00C6  1C03               	skipc
  7254  00C7  03FA               	decf	??_atoi+2,f
  7255  00C8  0879               	movf	??_atoi+1,w
  7256  00C9  3E30               	addlw	48
  7257  00CA  0020               	movlb	0	; select bank0
  7258  00CB  00A7               	movwf	atoi@n
  7259  00CC  3000               	movlw	0
  7260  00CD  3D7A               	addwfc	??_atoi+2,w
  7261  00CE  00A8               	movwf	atoi@n+1
  7262  00CF  2897               	goto	l1006
  7263  00D0                     l2216:
  7264  00D0  0876               	movf	atoi@s,w
  7265  00D1  0084               	movwf	4
  7266  00D2  0877               	movf	atoi@s+1,w
  7267  00D3  0085               	movwf	5
  7268  00D4  0800               	movf	0,w	;code access
  7269  00D5  3ED0               	addlw	208
  7270  00D6  00F8               	movwf	??_atoi
  7271  00D7  30FF               	movlw	255
  7272  00D8  1803               	skipnc
  7273  00D9  3000               	movlw	0
  7274  00DA  00F9               	movwf	??_atoi+1
  7275  00DB  3000               	movlw	0
  7276  00DC  0279               	subwf	??_atoi+1,w
  7277  00DD  300A               	movlw	10
  7278  00DE  1903               	skipnz
  7279  00DF  0278               	subwf	??_atoi,w
  7280  00E0  1C03               	skipc
  7281  00E1  28E3               	goto	u1831
  7282  00E2  28E5               	goto	u1830
  7283  00E3                     u1831:
  7284  00E3  3001               	movlw	1
  7285  00E4  28E6               	goto	u1840
  7286  00E5                     u1830:
  7287  00E5  3000               	movlw	0
  7288  00E6                     u1840:
  7289  00E6  00FA               	movwf	??_atoi+2
  7290  00E7  01FB               	clrf	??_atoi+3
  7291  00E8  087A               	movf	??_atoi+2,w
  7292  00E9  00A4               	movwf	_atoi$1070
  7293  00EA  087B               	movf	??_atoi+3,w
  7294  00EB  00A5               	movwf	_atoi$1070+1
  7295  00EC                     l2220:
  7296  00EC  0824               	movf	_atoi$1070,w
  7297  00ED  0425               	iorwf	_atoi$1070+1,w
  7298  00EE  1D03               	btfss	3,2
  7299  00EF  28F1               	goto	u1851
  7300  00F0  28F2               	goto	u1850
  7301  00F1                     u1851:
  7302  00F1  28B0               	goto	l2212
  7303  00F2                     u1850:
  7304  00F2                     l2222:
  7305  00F2  0820               	movf	atoi@neg,w
  7306  00F3  0421               	iorwf	atoi@neg+1,w
  7307  00F4  1D03               	btfss	3,2
  7308  00F5  28F7               	goto	u1861
  7309  00F6  28F8               	goto	u1860
  7310  00F7                     u1861:
  7311  00F7  2904               	goto	l2226
  7312  00F8                     u1860:
  7313  00F8                     l2224:
  7314  00F8  0927               	comf	atoi@n,w
  7315  00F9  00F8               	movwf	??_atoi
  7316  00FA  0928               	comf	atoi@n+1,w
  7317  00FB  00F9               	movwf	??_atoi+1
  7318  00FC  0AF8               	incf	??_atoi,f
  7319  00FD  1903               	skipnz
  7320  00FE  0AF9               	incf	??_atoi+1,f
  7321  00FF  0878               	movf	??_atoi,w
  7322  0100  00F6               	movwf	?_atoi
  7323  0101  0879               	movf	??_atoi+1,w
  7324  0102  00F7               	movwf	?_atoi+1
  7325  0103  2908               	goto	l1019
  7326  0104                     l2226:
  7327  0104  0828               	movf	atoi@n+1,w
  7328  0105  00F7               	movwf	?_atoi+1
  7329  0106  0827               	movf	atoi@n,w
  7330  0107  00F6               	movwf	?_atoi
  7331  0108                     l1019:
  7332  0108  0008               	return
  7333  0109                     __end_of_atoi:
  7334                           
  7335                           	psect	text27
  7336  0A54                     __ptext27:	
  7337 ;; *************** function _isspace *****************
  7338 ;; Defined at:
  7339 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  c               2    0[COMMON] int 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;		None
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  2    0[COMMON] int 
  7346 ;; Registers used:
  7347 ;;		wreg, status,2, status,0
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7353 ;;      Params:         2       0       0       0       0       0
  7354 ;;      Locals:         1       0       0       0       0       0
  7355 ;;      Temps:          2       0       0       0       0       0
  7356 ;;      Totals:         5       0       0       0       0       0
  7357 ;;Total ram usage:        5 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_atoi
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           
  7367                           ;psect for function _isspace
  7368  0A54                     _isspace:
  7369  0A54                     l2116:	
  7370                           ;incstack = 0
  7371                           ; Regs used in _isspace: [wreg+status,2+status,0]
  7372                           
  7373  0A54  01F4               	clrf	_isspace$1086
  7374  0A55  0AF4               	incf	_isspace$1086,f
  7375  0A56                     l2118:
  7376  0A56  3020               	movlw	32
  7377  0A57  0670               	xorwf	isspace@c,w
  7378  0A58  0471               	iorwf	isspace@c+1,w
  7379  0A59  1903               	btfsc	3,2
  7380  0A5A  2A5C               	goto	u1621
  7381  0A5B  2A5D               	goto	u1620
  7382  0A5C                     u1621:
  7383  0A5C  2A6D               	goto	l2124
  7384  0A5D                     u1620:
  7385  0A5D                     l2120:
  7386  0A5D  0870               	movf	isspace@c,w
  7387  0A5E  3EF7               	addlw	247
  7388  0A5F  00F2               	movwf	??_isspace
  7389  0A60  30FF               	movlw	255
  7390  0A61  3D71               	addwfc	isspace@c+1,w
  7391  0A62  00F3               	movwf	??_isspace+1
  7392  0A63  3000               	movlw	0
  7393  0A64  0273               	subwf	??_isspace+1,w
  7394  0A65  3005               	movlw	5
  7395  0A66  1903               	skipnz
  7396  0A67  0272               	subwf	??_isspace,w
  7397  0A68  1C03               	skipc
  7398  0A69  2A6B               	goto	u1631
  7399  0A6A  2A6C               	goto	u1630
  7400  0A6B                     u1631:
  7401  0A6B  2A6D               	goto	l2124
  7402  0A6C                     u1630:
  7403  0A6C                     l2122:
  7404  0A6C  01F4               	clrf	_isspace$1086
  7405  0A6D                     l2124:
  7406  0A6D  0874               	movf	_isspace$1086,w
  7407  0A6E  00F2               	movwf	??_isspace
  7408  0A6F  01F3               	clrf	??_isspace+1
  7409  0A70  0872               	movf	??_isspace,w
  7410  0A71  00F0               	movwf	?_isspace
  7411  0A72  0873               	movf	??_isspace+1,w
  7412  0A73  00F1               	movwf	?_isspace+1
  7413  0A74                     l1030:
  7414  0A74  0008               	return
  7415  0A75                     __end_of_isspace:
  7416                           
  7417                           	psect	text28
  7418  09CC                     __ptext28:	
  7419 ;; *************** function _isdigit *****************
  7420 ;; Defined at:
  7421 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  c               2    0[COMMON] int 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  2    0[COMMON] int 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7435 ;;      Params:         2       0       0       0       0       0
  7436 ;;      Locals:         0       0       0       0       0       0
  7437 ;;      Temps:          4       0       0       0       0       0
  7438 ;;      Totals:         6       0       0       0       0       0
  7439 ;;Total ram usage:        6 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_vfpfcnvrt
  7445 ;;		_atoi
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           
  7450                           ;psect for function _isdigit
  7451  09CC                     _isdigit:
  7452  09CC                     l2112:	
  7453                           ;incstack = 0
  7454                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7455                           
  7456  09CC  0870               	movf	isdigit@c,w
  7457  09CD  3ED0               	addlw	208
  7458  09CE  00F2               	movwf	??_isdigit
  7459  09CF  30FF               	movlw	255
  7460  09D0  3D71               	addwfc	isdigit@c+1,w
  7461  09D1  00F3               	movwf	??_isdigit+1
  7462  09D2  3000               	movlw	0
  7463  09D3  0273               	subwf	??_isdigit+1,w
  7464  09D4  300A               	movlw	10
  7465  09D5  1903               	skipnz
  7466  09D6  0272               	subwf	??_isdigit,w
  7467  09D7  1C03               	skipc
  7468  09D8  29DA               	goto	u1601
  7469  09D9  29DC               	goto	u1600
  7470  09DA                     u1601:
  7471  09DA  3001               	movlw	1
  7472  09DB  29DD               	goto	u1610
  7473  09DC                     u1600:
  7474  09DC  3000               	movlw	0
  7475  09DD                     u1610:
  7476  09DD  00F4               	movwf	??_isdigit+2
  7477  09DE  01F5               	clrf	??_isdigit+3
  7478  09DF  0874               	movf	??_isdigit+2,w
  7479  09E0  00F0               	movwf	?_isdigit
  7480  09E1  0875               	movf	??_isdigit+3,w
  7481  09E2  00F1               	movwf	?_isdigit+1
  7482  09E3                     l1022:
  7483  09E3  0008               	return
  7484  09E4                     __end_of_isdigit:
  7485                           
  7486                           	psect	text29
  7487  0ABD                     __ptext29:	
  7488 ;; *************** function _lcd_clear *****************
  7489 ;; Defined at:
  7490 ;;		line 119 in file "lcd_lib.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  col             1    7[BANK0 ] unsigned char 
  7495 ;;  row             1    6[BANK0 ] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7505 ;;      Params:         0       0       0       0       0       0
  7506 ;;      Locals:         0       2       0       0       0       0
  7507 ;;      Temps:          1       0       0       0       0       0
  7508 ;;      Totals:         1       2       0       0       0       0
  7509 ;;Total ram usage:        3 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    5
  7512 ;; This function calls:
  7513 ;;		_lcd_print
  7514 ;;		_lcd_set_cursor
  7515 ;; This function is called by:
  7516 ;;		_print_train
  7517 ;;		_print_remaing
  7518 ;;		_print_money
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           
  7523                           ;psect for function _lcd_clear
  7524  0ABD                     _lcd_clear:
  7525  0ABD                     l2512:	
  7526                           ;incstack = 0
  7527                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7528                           
  7529                           
  7530                           ;lcd_lib.c: 120:     for(uint8_t row = 0; row < 2; row++){
  7531  0ABD  0020               	movlb	0	; select bank0
  7532  0ABE  01A6               	clrf	lcd_clear@row
  7533  0ABF                     l2518:
  7534                           
  7535                           ;lcd_lib.c: 121:         for(uint8_t col = 0; col < 16; col++){
  7536  0ABF  01A7               	clrf	lcd_clear@col
  7537  0AC0                     l2524:
  7538                           
  7539                           ;lcd_lib.c: 122:             lcd_set_cursor(col, row);
  7540  0AC0  0826               	movf	lcd_clear@row,w
  7541  0AC1  00FC               	movwf	??_lcd_clear
  7542  0AC2  087C               	movf	??_lcd_clear,w
  7543  0AC3  00F8               	movwf	lcd_set_cursor@row
  7544  0AC4  0827               	movf	lcd_clear@col,w
  7545  0AC5  318B  230E  318A   	fcall	_lcd_set_cursor
  7546  0AC8                     l2526:
  7547                           
  7548                           ;lcd_lib.c: 123:             lcd_print(" ");
  7549  0AC8  3040               	movlw	low (STR_7| (0+32768))
  7550  0AC9  00F8               	movwf	lcd_print@str
  7551  0ACA  3088               	movlw	high (STR_7| (0+32768))
  7552  0ACB  00F9               	movwf	lcd_print@str+1
  7553  0ACC  318A  2218  318A   	fcall	_lcd_print
  7554  0ACF                     l2528:
  7555                           
  7556                           ;lcd_lib.c: 124:         }
  7557  0ACF  3001               	movlw	1
  7558  0AD0  00FC               	movwf	??_lcd_clear
  7559  0AD1  087C               	movf	??_lcd_clear,w
  7560  0AD2  0020               	movlb	0	; select bank0
  7561  0AD3  07A7               	addwf	lcd_clear@col,f
  7562  0AD4                     l2530:
  7563  0AD4  3010               	movlw	16
  7564  0AD5  0227               	subwf	lcd_clear@col,w
  7565  0AD6  1C03               	skipc
  7566  0AD7  2AD9               	goto	u2261
  7567  0AD8  2ADA               	goto	u2260
  7568  0AD9                     u2261:
  7569  0AD9  2AC0               	goto	l2524
  7570  0ADA                     u2260:
  7571  0ADA                     l2532:
  7572                           
  7573                           ;lcd_lib.c: 125:     }
  7574  0ADA  3001               	movlw	1
  7575  0ADB  00FC               	movwf	??_lcd_clear
  7576  0ADC  087C               	movf	??_lcd_clear,w
  7577  0ADD  07A6               	addwf	lcd_clear@row,f
  7578  0ADE                     l2534:
  7579  0ADE  3002               	movlw	2
  7580  0ADF  0226               	subwf	lcd_clear@row,w
  7581  0AE0  1C03               	skipc
  7582  0AE1  2AE3               	goto	u2271
  7583  0AE2  2AE4               	goto	u2270
  7584  0AE3                     u2271:
  7585  0AE3  2ABF               	goto	l2518
  7586  0AE4                     u2270:
  7587  0AE4                     l209:
  7588  0AE4  0008               	return
  7589  0AE5                     __end_of_lcd_clear:
  7590                           
  7591                           	psect	text30
  7592  0B0E                     __ptext30:	
  7593 ;; *************** function _lcd_set_cursor *****************
  7594 ;; Defined at:
  7595 ;;		line 128 in file "lcd_lib.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  col             1    wreg     unsigned char 
  7598 ;;  row             1    8[COMMON] unsigned char 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  col             1    4[BANK0 ] unsigned char 
  7601 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  7602 ;;  cmd             1    5[BANK0 ] unsigned char 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7612 ;;      Params:         1       0       0       0       0       0
  7613 ;;      Locals:         0       6       0       0       0       0
  7614 ;;      Temps:          1       0       0       0       0       0
  7615 ;;      Totals:         2       6       0       0       0       0
  7616 ;;Total ram usage:        8 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    4
  7619 ;; This function calls:
  7620 ;;		_command
  7621 ;; This function is called by:
  7622 ;;		_main
  7623 ;;		_print_train
  7624 ;;		_print_remaing
  7625 ;;		_print_money
  7626 ;;		_lcd_clear
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           
  7631                           ;psect for function _lcd_set_cursor
  7632  0B0E                     _lcd_set_cursor:
  7633                           
  7634                           ;incstack = 0
  7635                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7636                           ;lcd_set_cursor@col stored from wreg
  7637  0B0E  0020               	movlb	0	; select bank0
  7638  0B0F  00A4               	movwf	lcd_set_cursor@col
  7639  0B10                     l2358:
  7640                           
  7641                           ;lcd_lib.c: 129:     uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  7642  0B10  0021               	movlb	1	; select bank1
  7643  0B11  0864               	movf	(lcd_set_cursor@F2502+3)^(0+128),w
  7644  0B12  0020               	movlb	0	; select bank0
  7645  0B13  00A3               	movwf	lcd_set_cursor@row_offsets+3
  7646  0B14  0021               	movlb	1	; select bank1
  7647  0B15  0863               	movf	(lcd_set_cursor@F2502+2)^(0+128),w
  7648  0B16  0020               	movlb	0	; select bank0
  7649  0B17  00A2               	movwf	lcd_set_cursor@row_offsets+2
  7650  0B18  0021               	movlb	1	; select bank1
  7651  0B19  0862               	movf	(lcd_set_cursor@F2502+1)^(0+128),w
  7652  0B1A  0020               	movlb	0	; select bank0
  7653  0B1B  00A1               	movwf	lcd_set_cursor@row_offsets+1
  7654  0B1C  0021               	movlb	1	; select bank1
  7655  0B1D  0861               	movf	lcd_set_cursor@F2502^(0+128),w
  7656  0B1E  0020               	movlb	0	; select bank0
  7657  0B1F  00A0               	movwf	lcd_set_cursor@row_offsets
  7658                           
  7659                           ;lcd_lib.c: 130:     if(row > 2){
  7660  0B20  3003               	movlw	3
  7661  0B21  0278               	subwf	lcd_set_cursor@row,w
  7662  0B22  1C03               	skipc
  7663  0B23  2B25               	goto	u2011
  7664  0B24  2B26               	goto	u2010
  7665  0B25                     u2011:
  7666  0B25  2B28               	goto	l2362
  7667  0B26                     u2010:
  7668  0B26                     l2360:
  7669                           
  7670                           ;lcd_lib.c: 131:         row = 2 - 1;
  7671  0B26  01F8               	clrf	lcd_set_cursor@row
  7672  0B27  0AF8               	incf	lcd_set_cursor@row,f
  7673  0B28                     l2362:
  7674                           
  7675                           ;lcd_lib.c: 133:     uint8_t cmd = 0x80 | (col + row_offsets[row]);
  7676  0B28  0878               	movf	lcd_set_cursor@row,w
  7677  0B29  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  7678  0B2A  0086               	movwf	6
  7679  0B2B  0187               	clrf	7
  7680  0B2C  0801               	movf	1,w
  7681  0B2D  0724               	addwf	lcd_set_cursor@col,w
  7682  0B2E  3880               	iorlw	128
  7683  0B2F  00F9               	movwf	??_lcd_set_cursor
  7684  0B30  0879               	movf	??_lcd_set_cursor,w
  7685  0B31  00A5               	movwf	lcd_set_cursor@cmd
  7686  0B32                     l2364:
  7687                           
  7688                           ;lcd_lib.c: 134:     command(cmd, 0);
  7689  0B32  01F2               	clrf	command@mode
  7690  0B33  0825               	movf	lcd_set_cursor@cmd,w
  7691  0B34  318B  2397  318B   	fcall	_command
  7692  0B37                     l215:
  7693  0B37  0008               	return
  7694  0B38                     __end_of_lcd_set_cursor:
  7695                           
  7696                           	psect	text31
  7697  0A18                     __ptext31:	
  7698 ;; *************** function _lcd_print *****************
  7699 ;; Defined at:
  7700 ;;		line 137 in file "lcd_lib.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  str             2    8[COMMON] PTR unsigned char 
  7703 ;;		 -> STR_7(2), line(16), 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  cmd             1   11[COMMON] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7715 ;;      Params:         2       0       0       0       0       0
  7716 ;;      Locals:         1       0       0       0       0       0
  7717 ;;      Temps:          1       0       0       0       0       0
  7718 ;;      Totals:         4       0       0       0       0       0
  7719 ;;Total ram usage:        4 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    4
  7722 ;; This function calls:
  7723 ;;		_command
  7724 ;; This function is called by:
  7725 ;;		_print_train
  7726 ;;		_print_remaing
  7727 ;;		_print_money
  7728 ;;		_lcd_clear
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           
  7733                           ;psect for function _lcd_print
  7734  0A18                     _lcd_print:
  7735  0A18                     l2366:	
  7736                           ;incstack = 0
  7737                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7738                           
  7739                           
  7740                           ;lcd_lib.c: 138:     while (*str) {
  7741  0A18  2A2B               	goto	l2374
  7742  0A19                     l2368:
  7743                           
  7744                           ;lcd_lib.c: 139:         uint8_t cmd = *str++;
  7745  0A19  0878               	movf	lcd_print@str,w
  7746  0A1A  0084               	movwf	4
  7747  0A1B  0879               	movf	lcd_print@str+1,w
  7748  0A1C  0085               	movwf	5
  7749  0A1D  0800               	movf	0,w	;code access
  7750  0A1E  00FA               	movwf	??_lcd_print
  7751  0A1F  087A               	movf	??_lcd_print,w
  7752  0A20  00FB               	movwf	lcd_print@cmd
  7753  0A21                     l2370:
  7754  0A21  3001               	movlw	1
  7755  0A22  07F8               	addwf	lcd_print@str,f
  7756  0A23  3000               	movlw	0
  7757  0A24  3DF9               	addwfc	lcd_print@str+1,f
  7758  0A25                     l2372:
  7759                           
  7760                           ;lcd_lib.c: 140:         command(cmd, 0b00000001);
  7761  0A25  01F2               	clrf	command@mode
  7762  0A26  0AF2               	incf	command@mode,f
  7763  0A27  087B               	movf	lcd_print@cmd,w
  7764  0A28  318B  2397  318A   	fcall	_command
  7765  0A2B                     l2374:
  7766                           
  7767                           ;lcd_lib.c: 138:     while (*str) {
  7768  0A2B  0878               	movf	lcd_print@str,w
  7769  0A2C  0084               	movwf	4
  7770  0A2D  0879               	movf	lcd_print@str+1,w
  7771  0A2E  0085               	movwf	5
  7772  0A2F  0012               	moviw fsr0++
  7773  0A30  1D03               	btfss	3,2
  7774  0A31  2A33               	goto	u2021
  7775  0A32  2A34               	goto	u2020
  7776  0A33                     u2021:
  7777  0A33  2A19               	goto	l2368
  7778  0A34                     u2020:
  7779  0A34                     l221:
  7780  0A34  0008               	return
  7781  0A35                     __end_of_lcd_print:
  7782                           
  7783                           	psect	text32
  7784  0B97                     __ptext32:	
  7785 ;; *************** function _command *****************
  7786 ;; Defined at:
  7787 ;;		line 144 in file "lcd_lib.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  val             1    wreg     unsigned char 
  7790 ;;  mode            1    2[COMMON] unsigned char 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  val             1    5[COMMON] unsigned char 
  7793 ;;  lownib          1    7[COMMON] unsigned char 
  7794 ;;  highnib         1    6[COMMON] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0, pclath, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7804 ;;      Params:         1       0       0       0       0       0
  7805 ;;      Locals:         3       0       0       0       0       0
  7806 ;;      Temps:          2       0       0       0       0       0
  7807 ;;      Totals:         6       0       0       0       0       0
  7808 ;;Total ram usage:        6 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    3
  7811 ;; This function calls:
  7812 ;;		_lcd_cmd
  7813 ;; This function is called by:
  7814 ;;		_lcd_set_cursor
  7815 ;;		_lcd_print
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           
  7820                           ;psect for function _command
  7821  0B97                     _command:
  7822                           
  7823                           ;incstack = 0
  7824                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  7825                           ;command@val stored from wreg
  7826  0B97  00F5               	movwf	command@val
  7827  0B98                     l2236:
  7828                           
  7829                           ;lcd_lib.c: 145:     uint8_t highnib = (val & 0xf0) | _backlightval | mode;
  7830  0B98  0875               	movf	command@val,w
  7831  0B99  39F0               	andlw	240
  7832  0B9A  0020               	movlb	0	; select bank0
  7833  0B9B  046F               	iorwf	__backlightval,w
  7834  0B9C  0472               	iorwf	command@mode,w
  7835  0B9D  00F3               	movwf	??_command
  7836  0B9E  0873               	movf	??_command,w
  7837  0B9F  00F6               	movwf	command@highnib
  7838                           
  7839                           ;lcd_lib.c: 146:  uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
  7840  0BA0  0875               	movf	command@val,w
  7841  0BA1  00F3               	movwf	??_command
  7842  0BA2  3003               	movlw	3
  7843  0BA3                     u1875:
  7844  0BA3  35F3               	lslf	??_command,f
  7845  0BA4  3EFF               	addlw	-1
  7846  0BA5  1D03               	skipz
  7847  0BA6  2BA3               	goto	u1875
  7848  0BA7  3573               	lslf	??_command,w
  7849  0BA8  39F0               	andlw	240
  7850  0BA9  046F               	iorwf	__backlightval,w
  7851  0BAA  0472               	iorwf	command@mode,w
  7852  0BAB  00F4               	movwf	??_command+1
  7853  0BAC  0874               	movf	??_command+1,w
  7854  0BAD  00F7               	movwf	command@lownib
  7855  0BAE                     l2238:
  7856                           
  7857                           ;lcd_lib.c: 148:  lcd_cmd(highnib);
  7858  0BAE  0876               	movf	command@highnib,w
  7859  0BAF  3189  2162  318B   	fcall	_lcd_cmd
  7860  0BB2                     l2240:
  7861                           
  7862                           ;lcd_lib.c: 149:     lcd_cmd(highnib | 0b00000100);
  7863  0BB2  0876               	movf	command@highnib,w
  7864  0BB3  3804               	iorlw	4
  7865  0BB4  3189  2162  318B   	fcall	_lcd_cmd
  7866  0BB7                     l2242:
  7867                           
  7868                           ;lcd_lib.c: 150:     lcd_cmd(highnib & ~0b00000100);
  7869  0BB7  0876               	movf	command@highnib,w
  7870  0BB8  39FB               	andlw	251
  7871  0BB9  3189  2162  318B   	fcall	_lcd_cmd
  7872  0BBC                     l2244:
  7873                           
  7874                           ;lcd_lib.c: 152:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7875  0BBC  3042               	movlw	66
  7876  0BBD                     u2377:
  7877  0BBD  0B89               	decfsz	9,f
  7878  0BBE  2BBD               	goto	u2377
  7879  0BBF  3200               	nop2
  7880  0BC0                     l2246:
  7881                           
  7882                           ;lcd_lib.c: 154:  lcd_cmd(lownib);
  7883  0BC0  0877               	movf	command@lownib,w
  7884  0BC1  3189  2162  318B   	fcall	_lcd_cmd
  7885  0BC4                     l2248:
  7886                           
  7887                           ;lcd_lib.c: 155:     lcd_cmd(lownib | 0b00000100);
  7888  0BC4  0877               	movf	command@lownib,w
  7889  0BC5  3804               	iorlw	4
  7890  0BC6  3189  2162  318B   	fcall	_lcd_cmd
  7891  0BC9                     l2250:
  7892                           
  7893                           ;lcd_lib.c: 156:     lcd_cmd(lownib & ~0b00000100);
  7894  0BC9  0877               	movf	command@lownib,w
  7895  0BCA  39FB               	andlw	251
  7896  0BCB  3189  2162  318B   	fcall	_lcd_cmd
  7897  0BCE                     l224:
  7898  0BCE  0008               	return
  7899  0BCF                     __end_of_command:
  7900                           
  7901                           	psect	text33
  7902  02CA                     __ptext33:	
  7903 ;; *************** function _lcd_init *****************
  7904 ;; Defined at:
  7905 ;;		line 27 in file "lcd_lib.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, pclath, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7919 ;;      Params:         0       0       0       0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0
  7921 ;;      Temps:          2       0       0       0       0       0
  7922 ;;      Totals:         2       0       0       0       0       0
  7923 ;;Total ram usage:        2 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    3
  7926 ;; This function calls:
  7927 ;;		_lcd_cmd
  7928 ;; This function is called by:
  7929 ;;		_main
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           
  7934                           ;psect for function _lcd_init
  7935  02CA                     _lcd_init:
  7936  02CA                     l2560:	
  7937                           ;incstack = 0
  7938                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7939                           
  7940                           
  7941                           ;lcd_lib.c: 28:     _delay((unsigned long)((400)*(8000000/4000.0)));
  7942  02CA  3005               	movlw	5
  7943  02CB  00F3               	movwf	??_lcd_init+1
  7944  02CC  300F               	movlw	15
  7945  02CD  00F2               	movwf	??_lcd_init
  7946  02CE  30F1               	movlw	241
  7947  02CF                     u2387:
  7948  02CF  0B89               	decfsz	9,f
  7949  02D0  2ACF               	goto	u2387
  7950  02D1  0BF2               	decfsz	??_lcd_init,f
  7951  02D2  2ACF               	goto	u2387
  7952  02D3  0BF3               	decfsz	??_lcd_init+1,f
  7953  02D4  2ACF               	goto	u2387
  7954  02D5  0000               	nop
  7955  02D6                     l2562:
  7956                           
  7957                           ;lcd_lib.c: 30:     lcd_cmd(0x30);
  7958  02D6  3030               	movlw	48
  7959  02D7  3189  2162  3182   	fcall	_lcd_cmd
  7960  02DA                     l2564:
  7961                           
  7962                           ;lcd_lib.c: 31:     lcd_cmd(0x34);
  7963  02DA  3034               	movlw	52
  7964  02DB  3189  2162  3182   	fcall	_lcd_cmd
  7965  02DE                     l2566:
  7966                           
  7967                           ;lcd_lib.c: 32:     lcd_cmd(0x30);
  7968  02DE  3030               	movlw	48
  7969  02DF  3189  2162  3182   	fcall	_lcd_cmd
  7970  02E2                     l2568:
  7971                           
  7972                           ;lcd_lib.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7973  02E2  300D               	movlw	13
  7974  02E3  00F2               	movwf	??_lcd_init
  7975  02E4  30FC               	movlw	252
  7976  02E5                     u2397:
  7977  02E5  0B89               	decfsz	9,f
  7978  02E6  2AE5               	goto	u2397
  7979  02E7  0BF2               	decfsz	??_lcd_init,f
  7980  02E8  2AE5               	goto	u2397
  7981                           
  7982                           ;lcd_lib.c: 35:     lcd_cmd(0x30);
  7983  02E9  3030               	movlw	48
  7984  02EA  3189  2162  3182   	fcall	_lcd_cmd
  7985                           
  7986                           ;lcd_lib.c: 36:     lcd_cmd(0x34);
  7987  02ED  3034               	movlw	52
  7988  02EE  3189  2162  3182   	fcall	_lcd_cmd
  7989                           
  7990                           ;lcd_lib.c: 37:     lcd_cmd(0x30);
  7991  02F1  3030               	movlw	48
  7992  02F2  3189  2162  3182   	fcall	_lcd_cmd
  7993  02F5                     l2570:
  7994                           
  7995                           ;lcd_lib.c: 38:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7996  02F5  300D               	movlw	13
  7997  02F6  00F2               	movwf	??_lcd_init
  7998  02F7  30FC               	movlw	252
  7999  02F8                     u2407:
  8000  02F8  0B89               	decfsz	9,f
  8001  02F9  2AF8               	goto	u2407
  8002  02FA  0BF2               	decfsz	??_lcd_init,f
  8003  02FB  2AF8               	goto	u2407
  8004  02FC                     l2572:
  8005                           
  8006                           ;lcd_lib.c: 40:     lcd_cmd(0x30);
  8007  02FC  3030               	movlw	48
  8008  02FD  3189  2162  3182   	fcall	_lcd_cmd
  8009  0300                     l2574:
  8010                           
  8011                           ;lcd_lib.c: 41:     lcd_cmd(0x34);
  8012  0300  3034               	movlw	52
  8013  0301  3189  2162  3182   	fcall	_lcd_cmd
  8014  0304                     l2576:
  8015                           
  8016                           ;lcd_lib.c: 42:     lcd_cmd(0x30);
  8017  0304  3030               	movlw	48
  8018  0305  3189  2162  3182   	fcall	_lcd_cmd
  8019                           
  8020                           ;lcd_lib.c: 43:     _delay((unsigned long)((300)*(8000000/4000000.0)));
  8021  0308  30C8               	movlw	200
  8022  0309                     u2417:
  8023  0309  0B89               	decfsz	9,f
  8024  030A  2B09               	goto	u2417
  8025  030B                     l2578:
  8026                           
  8027                           ;lcd_lib.c: 45:     lcd_cmd(0x20);
  8028  030B  3020               	movlw	32
  8029  030C  3189  2162  3182   	fcall	_lcd_cmd
  8030  030F                     l2580:
  8031                           
  8032                           ;lcd_lib.c: 46:     lcd_cmd(0x24);
  8033  030F  3024               	movlw	36
  8034  0310  3189  2162  3182   	fcall	_lcd_cmd
  8035  0313                     l2582:
  8036                           
  8037                           ;lcd_lib.c: 47:     lcd_cmd(0x20);
  8038  0313  3020               	movlw	32
  8039  0314  3189  2162  3182   	fcall	_lcd_cmd
  8040  0317                     l2584:
  8041                           
  8042                           ;lcd_lib.c: 48:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8043  0317  3006               	movlw	6
  8044  0318                     u2427:
  8045  0318  0B89               	decfsz	9,f
  8046  0319  2B18               	goto	u2427
  8047  031A  3200               	nop2
  8048                           
  8049                           ;lcd_lib.c: 51:     lcd_cmd(0x20);
  8050  031B  3020               	movlw	32
  8051  031C  3189  2162  3182   	fcall	_lcd_cmd
  8052                           
  8053                           ;lcd_lib.c: 52:     lcd_cmd(0x24);
  8054  031F  3024               	movlw	36
  8055  0320  3189  2162  3182   	fcall	_lcd_cmd
  8056                           
  8057                           ;lcd_lib.c: 53:     lcd_cmd(0x20);
  8058  0323  3020               	movlw	32
  8059  0324  3189  2162  3182   	fcall	_lcd_cmd
  8060  0327                     l2586:
  8061                           
  8062                           ;lcd_lib.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8063  0327  3042               	movlw	66
  8064  0328                     u2437:
  8065  0328  0B89               	decfsz	9,f
  8066  0329  2B28               	goto	u2437
  8067  032A  3200               	nop2
  8068  032B                     l2588:
  8069                           
  8070                           ;lcd_lib.c: 57:     lcd_cmd(0x80);
  8071  032B  3080               	movlw	128
  8072  032C  3189  2162  3182   	fcall	_lcd_cmd
  8073  032F                     l2590:
  8074                           
  8075                           ;lcd_lib.c: 58:     lcd_cmd(0x84);
  8076  032F  3084               	movlw	132
  8077  0330  3189  2162  3182   	fcall	_lcd_cmd
  8078  0333                     l2592:
  8079                           
  8080                           ;lcd_lib.c: 59:     lcd_cmd(0x80);
  8081  0333  3080               	movlw	128
  8082  0334  3189  2162  3182   	fcall	_lcd_cmd
  8083  0337                     l2594:
  8084                           
  8085                           ;lcd_lib.c: 63:     lcd_cmd(0x00);
  8086  0337  3000               	movlw	0
  8087  0338  3189  2162  3182   	fcall	_lcd_cmd
  8088  033B                     l2596:
  8089                           
  8090                           ;lcd_lib.c: 64:     lcd_cmd(0x04);
  8091  033B  3004               	movlw	4
  8092  033C  3189  2162  3182   	fcall	_lcd_cmd
  8093  033F                     l2598:
  8094                           
  8095                           ;lcd_lib.c: 65:     lcd_cmd(0x00);
  8096  033F  3000               	movlw	0
  8097  0340  3189  2162  3182   	fcall	_lcd_cmd
  8098  0343                     l2600:
  8099                           
  8100                           ;lcd_lib.c: 67:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8101  0343  3042               	movlw	66
  8102  0344                     u2447:
  8103  0344  0B89               	decfsz	9,f
  8104  0345  2B44               	goto	u2447
  8105  0346  3200               	nop2
  8106                           
  8107                           ;lcd_lib.c: 69:     lcd_cmd(0xC0);
  8108  0347  30C0               	movlw	192
  8109  0348  3189  2162  3182   	fcall	_lcd_cmd
  8110                           
  8111                           ;lcd_lib.c: 70:     lcd_cmd(0xC4);
  8112  034B  30C4               	movlw	196
  8113  034C  3189  2162  3182   	fcall	_lcd_cmd
  8114                           
  8115                           ;lcd_lib.c: 71:     lcd_cmd(0xC0);
  8116  034F  30C0               	movlw	192
  8117  0350  3189  2162  3182   	fcall	_lcd_cmd
  8118                           
  8119                           ;lcd_lib.c: 75:     lcd_cmd(0x00);
  8120  0353  3000               	movlw	0
  8121  0354  3189  2162  3182   	fcall	_lcd_cmd
  8122                           
  8123                           ;lcd_lib.c: 76:     lcd_cmd(0x04);
  8124  0357  3004               	movlw	4
  8125  0358  3189  2162  3182   	fcall	_lcd_cmd
  8126                           
  8127                           ;lcd_lib.c: 77:     lcd_cmd(0x00);
  8128  035B  3000               	movlw	0
  8129  035C  3189  2162  3182   	fcall	_lcd_cmd
  8130  035F                     l2602:
  8131                           
  8132                           ;lcd_lib.c: 79:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8133  035F  3042               	movlw	66
  8134  0360                     u2457:
  8135  0360  0B89               	decfsz	9,f
  8136  0361  2B60               	goto	u2457
  8137  0362  3200               	nop2
  8138  0363                     l2604:
  8139                           
  8140                           ;lcd_lib.c: 81:     lcd_cmd(0x10);
  8141  0363  3010               	movlw	16
  8142  0364  3189  2162  3182   	fcall	_lcd_cmd
  8143  0367                     l2606:
  8144                           
  8145                           ;lcd_lib.c: 82:     lcd_cmd(0x14);
  8146  0367  3014               	movlw	20
  8147  0368  3189  2162  3182   	fcall	_lcd_cmd
  8148  036B                     l2608:
  8149                           
  8150                           ;lcd_lib.c: 83:     lcd_cmd(0x10);
  8151  036B  3010               	movlw	16
  8152  036C  3189  2162  3182   	fcall	_lcd_cmd
  8153                           
  8154                           ;lcd_lib.c: 85:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8155  036F  300D               	movlw	13
  8156  0370  00F2               	movwf	??_lcd_init
  8157  0371  30FC               	movlw	252
  8158  0372                     u2467:
  8159  0372  0B89               	decfsz	9,f
  8160  0373  2B72               	goto	u2467
  8161  0374  0BF2               	decfsz	??_lcd_init,f
  8162  0375  2B72               	goto	u2467
  8163  0376                     l2610:
  8164                           
  8165                           ;lcd_lib.c: 88:     lcd_cmd(0x00);
  8166  0376  3000               	movlw	0
  8167  0377  3189  2162  3182   	fcall	_lcd_cmd
  8168  037A                     l2612:
  8169                           
  8170                           ;lcd_lib.c: 89:     lcd_cmd(0x04);
  8171  037A  3004               	movlw	4
  8172  037B  3189  2162  3182   	fcall	_lcd_cmd
  8173  037E                     l2614:
  8174                           
  8175                           ;lcd_lib.c: 90:     lcd_cmd(0x00);
  8176  037E  3000               	movlw	0
  8177  037F  3189  2162  3182   	fcall	_lcd_cmd
  8178  0382                     l2616:
  8179                           
  8180                           ;lcd_lib.c: 92:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8181  0382  3042               	movlw	66
  8182  0383                     u2477:
  8183  0383  0B89               	decfsz	9,f
  8184  0384  2B83               	goto	u2477
  8185  0385  3200               	nop2
  8186                           
  8187                           ;lcd_lib.c: 94:     lcd_cmd(0x60);
  8188  0386  3060               	movlw	96
  8189  0387  3189  2162  3182   	fcall	_lcd_cmd
  8190                           
  8191                           ;lcd_lib.c: 95:     lcd_cmd(0x64);
  8192  038A  3064               	movlw	100
  8193  038B  3189  2162  3182   	fcall	_lcd_cmd
  8194                           
  8195                           ;lcd_lib.c: 96:     lcd_cmd(0x60);
  8196  038E  3060               	movlw	96
  8197  038F  3189  2162  3182   	fcall	_lcd_cmd
  8198                           
  8199                           ;lcd_lib.c: 100:     lcd_cmd(0x00);
  8200  0392  3000               	movlw	0
  8201  0393  3189  2162  3182   	fcall	_lcd_cmd
  8202                           
  8203                           ;lcd_lib.c: 101:     lcd_cmd(0x04);
  8204  0396  3004               	movlw	4
  8205  0397  3189  2162  3182   	fcall	_lcd_cmd
  8206                           
  8207                           ;lcd_lib.c: 102:     lcd_cmd(0x00);
  8208  039A  3000               	movlw	0
  8209  039B  3189  2162  3182   	fcall	_lcd_cmd
  8210  039E                     l2618:
  8211                           
  8212                           ;lcd_lib.c: 104:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8213  039E  3042               	movlw	66
  8214  039F                     u2487:
  8215  039F  0B89               	decfsz	9,f
  8216  03A0  2B9F               	goto	u2487
  8217  03A1  3200               	nop2
  8218  03A2                     l2620:
  8219                           
  8220                           ;lcd_lib.c: 106:     lcd_cmd(0x20);
  8221  03A2  3020               	movlw	32
  8222  03A3  3189  2162  3182   	fcall	_lcd_cmd
  8223  03A6                     l2622:
  8224                           
  8225                           ;lcd_lib.c: 107:     lcd_cmd(0x24);
  8226  03A6  3024               	movlw	36
  8227  03A7  3189  2162  3182   	fcall	_lcd_cmd
  8228  03AA                     l2624:
  8229                           
  8230                           ;lcd_lib.c: 108:     lcd_cmd(0x20);
  8231  03AA  3020               	movlw	32
  8232  03AB  3189  2162  3182   	fcall	_lcd_cmd
  8233                           
  8234                           ;lcd_lib.c: 110:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8235  03AE  3008               	movlw	8
  8236  03AF  00F2               	movwf	??_lcd_init
  8237  03B0  30CA               	movlw	202
  8238  03B1                     u2497:
  8239  03B1  0B89               	decfsz	9,f
  8240  03B2  2BB1               	goto	u2497
  8241  03B3  0BF2               	decfsz	??_lcd_init,f
  8242  03B4  2BB1               	goto	u2497
  8243  03B5                     l199:
  8244  03B5  0008               	return
  8245  03B6                     __end_of_lcd_init:
  8246                           
  8247                           	psect	text34
  8248  0944                     __ptext34:	
  8249 ;; *************** function _lcd_backlight *****************
  8250 ;; Defined at:
  8251 ;;		line 113 in file "lcd_lib.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, status,2, status,0, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8265 ;;      Params:         0       0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0       0
  8267 ;;      Temps:          1       0       0       0       0       0
  8268 ;;      Totals:         1       0       0       0       0       0
  8269 ;;Total ram usage:        1 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    3
  8272 ;; This function calls:
  8273 ;;		_lcd_cmd
  8274 ;; This function is called by:
  8275 ;;		_main
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           
  8280                           ;psect for function _lcd_backlight
  8281  0944                     _lcd_backlight:
  8282  0944                     l2626:	
  8283                           ;incstack = 0
  8284                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  8285                           
  8286                           
  8287                           ;lcd_lib.c: 114:     lcd_cmd(0x08);
  8288  0944  3008               	movlw	8
  8289  0945  3189  2162  3189   	fcall	_lcd_cmd
  8290  0948                     l2628:
  8291                           
  8292                           ;lcd_lib.c: 115:     _backlightval = 0x08;
  8293  0948  3008               	movlw	8
  8294  0949  00F2               	movwf	??_lcd_backlight
  8295  094A  0872               	movf	??_lcd_backlight,w
  8296  094B  0020               	movlb	0	; select bank0
  8297  094C  00EF               	movwf	__backlightval
  8298  094D                     l2630:
  8299                           
  8300                           ;lcd_lib.c: 116:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8301  094D  3006               	movlw	6
  8302  094E                     u2507:
  8303  094E  0B89               	decfsz	9,f
  8304  094F  294E               	goto	u2507
  8305  0950  3200               	nop2
  8306  0951                     l202:
  8307  0951  0008               	return
  8308  0952                     __end_of_lcd_backlight:
  8309                           
  8310                           	psect	text35
  8311  0962                     __ptext35:	
  8312 ;; *************** function _lcd_cmd *****************
  8313 ;; Defined at:
  8314 ;;		line 19 in file "lcd_lib.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  cmd             1    wreg     unsigned char 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  cmd             1    1[COMMON] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      void 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0, pclath, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8328 ;;      Params:         0       0       0       0       0       0
  8329 ;;      Locals:         1       0       0       0       0       0
  8330 ;;      Temps:          0       0       0       0       0       0
  8331 ;;      Totals:         1       0       0       0       0       0
  8332 ;;Total ram usage:        1 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; Hardware stack levels required when called:    2
  8335 ;; This function calls:
  8336 ;;		_i2c_start
  8337 ;;		_i2c_stop
  8338 ;;		_i2c_write
  8339 ;; This function is called by:
  8340 ;;		_lcd_init
  8341 ;;		_lcd_backlight
  8342 ;;		_command
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           
  8347                           ;psect for function _lcd_cmd
  8348  0962                     _lcd_cmd:
  8349                           
  8350                           ;incstack = 0
  8351                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  8352                           ;lcd_cmd@cmd stored from wreg
  8353  0962  00F1               	movwf	lcd_cmd@cmd
  8354  0963                     l2128:
  8355                           
  8356                           ;lcd_lib.c: 20:     i2c_start();
  8357  0963  3189  210C  3189   	fcall	_i2c_start
  8358                           
  8359                           ;lcd_lib.c: 21:     i2c_write(0x3F << 1);
  8360  0966  307E               	movlw	126
  8361  0967  3189  2152  3189   	fcall	_i2c_write
  8362                           
  8363                           ;lcd_lib.c: 22:     i2c_write(cmd);
  8364  096A  0871               	movf	lcd_cmd@cmd,w
  8365  096B  3189  2152  3189   	fcall	_i2c_write
  8366  096E                     l2130:
  8367                           
  8368                           ;lcd_lib.c: 23:     i2c_stop();
  8369  096E  3188  20FB  3189   	fcall	_i2c_stop
  8370                           
  8371                           ;lcd_lib.c: 24:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8372  0971  3006               	movlw	6
  8373  0972                     u2517:
  8374  0972  0B89               	decfsz	9,f
  8375  0973  2972               	goto	u2517
  8376  0974  3200               	nop2
  8377  0975                     l196:
  8378  0975  0008               	return
  8379  0976                     __end_of_lcd_cmd:
  8380                           
  8381                           	psect	text36
  8382  0952                     __ptext36:	
  8383 ;; *************** function _i2c_write *****************
  8384 ;; Defined at:
  8385 ;;		line 26 in file "i2c.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  data            1    wreg     unsigned char 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  data            1    0[COMMON] unsigned char 
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0, pclath, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8399 ;;      Params:         0       0       0       0       0       0
  8400 ;;      Locals:         1       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0
  8402 ;;      Totals:         1       0       0       0       0       0
  8403 ;;Total ram usage:        1 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    1
  8406 ;; This function calls:
  8407 ;;		_i2c_wait
  8408 ;; This function is called by:
  8409 ;;		_lcd_cmd
  8410 ;;		_write_date
  8411 ;;		__read
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           
  8416                           ;psect for function _i2c_write
  8417  0952                     _i2c_write:
  8418                           
  8419                           ;incstack = 0
  8420                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  8421                           ;i2c_write@data stored from wreg
  8422  0952  00F0               	movwf	i2c_write@data
  8423  0953                     l2000:
  8424                           
  8425                           ;i2c.c: 27:     SSP2BUF = data;
  8426  0953  0870               	movf	i2c_write@data,w
  8427  0954  0024               	movlb	4	; select bank4
  8428  0955  0099               	movwf	25	;volatile
  8429  0956                     l165:	
  8430                           ;i2c.c: 28:     while(SSP2STATbits.BF);
  8431                           
  8432  0956  181C               	btfsc	28,0	;volatile
  8433  0957  2959               	goto	u1281
  8434  0958  295A               	goto	u1280
  8435  0959                     u1281:
  8436  0959  2956               	goto	l165
  8437  095A                     u1280:
  8438  095A                     l168:
  8439  095A  1B1E               	btfsc	30,6	;volatile
  8440  095B  295D               	goto	u1291
  8441  095C  295E               	goto	u1290
  8442  095D                     u1291:
  8443  095D  295A               	goto	l168
  8444  095E                     u1290:
  8445  095E                     l2002:
  8446                           
  8447                           ;i2c.c: 30:     i2c_wait();
  8448  095E  3189  2120  3189   	fcall	_i2c_wait
  8449  0961                     l171:
  8450  0961  0008               	return
  8451  0962                     __end_of_i2c_write:
  8452                           
  8453                           	psect	text37
  8454  08FB                     __ptext37:	
  8455 ;; *************** function _i2c_stop *****************
  8456 ;; Defined at:
  8457 ;;		line 15 in file "i2c.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;		None
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		None
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8471 ;;      Params:         0       0       0       0       0       0
  8472 ;;      Locals:         0       0       0       0       0       0
  8473 ;;      Temps:          0       0       0       0       0       0
  8474 ;;      Totals:         0       0       0       0       0       0
  8475 ;;Total ram usage:        0 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		_lcd_cmd
  8481 ;;		_write_date
  8482 ;;		__read
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           
  8487                           ;psect for function _i2c_stop
  8488  08FB                     _i2c_stop:
  8489  08FB                     l1998:	
  8490                           ;incstack = 0
  8491                           ; Regs used in _i2c_stop: []
  8492                           
  8493                           
  8494                           ;i2c.c: 16:     SSP2CON2bits.PEN = 1;
  8495  08FB  0024               	movlb	4	; select bank4
  8496  08FC  151E               	bsf	30,2	;volatile
  8497  08FD                     l153:	
  8498                           ;i2c.c: 17:     while(SSP2CON2bits.PEN);
  8499                           
  8500  08FD  191E               	btfsc	30,2	;volatile
  8501  08FE  2900               	goto	u1271
  8502  08FF  2901               	goto	u1270
  8503  0900                     u1271:
  8504  0900  28FD               	goto	l153
  8505  0901                     u1270:
  8506  0901                     l156:
  8507  0901  0008               	return
  8508  0902                     __end_of_i2c_stop:
  8509                           
  8510                           	psect	text38
  8511  090C                     __ptext38:	
  8512 ;; *************** function _i2c_start *****************
  8513 ;; Defined at:
  8514 ;;		line 9 in file "i2c.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;		None
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1    wreg      void 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2, status,0, pclath, cstack
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8528 ;;      Params:         0       0       0       0       0       0
  8529 ;;      Locals:         0       0       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0
  8531 ;;      Totals:         0       0       0       0       0       0
  8532 ;;Total ram usage:        0 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; Hardware stack levels required when called:    1
  8535 ;; This function calls:
  8536 ;;		_i2c_wait
  8537 ;; This function is called by:
  8538 ;;		_lcd_cmd
  8539 ;;		_write_date
  8540 ;;		__read
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           
  8545                           ;psect for function _i2c_start
  8546  090C                     _i2c_start:
  8547  090C                     l1994:	
  8548                           ;incstack = 0
  8549                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  8550                           
  8551                           
  8552                           ;i2c.c: 10:     i2c_wait();
  8553  090C  3189  2120  3189   	fcall	_i2c_wait
  8554  090F                     l1996:
  8555                           
  8556                           ;i2c.c: 11:     SSP2CON2bits.SEN = 1;
  8557  090F  0024               	movlb	4	; select bank4
  8558  0910  141E               	bsf	30,0	;volatile
  8559  0911                     l147:	
  8560                           ;i2c.c: 12:     while(SSP2CON2bits.SEN);
  8561                           
  8562  0911  181E               	btfsc	30,0	;volatile
  8563  0912  2914               	goto	u1261
  8564  0913  2915               	goto	u1260
  8565  0914                     u1261:
  8566  0914  2911               	goto	l147
  8567  0915                     u1260:
  8568  0915                     l150:
  8569  0915  0008               	return
  8570  0916                     __end_of_i2c_start:
  8571                           
  8572                           	psect	text39
  8573  0920                     __ptext39:	
  8574 ;; *************** function _i2c_wait *****************
  8575 ;; Defined at:
  8576 ;;		line 5 in file "i2c.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg, status,2
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8590 ;;      Params:         0       0       0       0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0
  8593 ;;      Totals:         0       0       0       0       0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_i2c_start
  8600 ;;		_i2c_repeated_start
  8601 ;;		_i2c_write
  8602 ;;		_i2c_read
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           
  8607                           ;psect for function _i2c_wait
  8608  0920                     _i2c_wait:
  8609  0920                     l1970:	
  8610                           ;incstack = 0
  8611                           ; Regs used in _i2c_wait: [wreg+status,2]
  8612                           
  8613  0920                     l1972:	
  8614                           ;i2c.c: 6:     while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  8615                           
  8616  0920  0024               	movlb	4	; select bank4
  8617  0921  081E               	movf	30,w	;volatile
  8618  0922  391F               	andlw	31
  8619  0923  1D03               	btfss	3,2
  8620  0924  2926               	goto	u1221
  8621  0925  2927               	goto	u1220
  8622  0926                     u1221:
  8623  0926  2920               	goto	l1972
  8624  0927                     u1220:
  8625  0927                     l1974:
  8626  0927  191C               	btfsc	28,2	;volatile
  8627  0928  292A               	goto	u1231
  8628  0929  292B               	goto	u1230
  8629  092A                     u1231:
  8630  092A  2920               	goto	l1972
  8631  092B                     u1230:
  8632  092B                     l144:
  8633  092B  0008               	return
  8634  092C                     __end_of_i2c_wait:
  8635                           
  8636                           	psect	text40
  8637  0F61                     __ptext40:	
  8638 ;; *************** function _get_next *****************
  8639 ;; Defined at:
  8640 ;;		line 13 in file "train_lib.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  next            2    6[COMMON] PTR struct train
  8643 ;;		 -> main@next1(2), main@next(2), 
  8644 ;;  hour            1    8[COMMON] unsigned char 
  8645 ;;  min             1    9[COMMON] unsigned char 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  t_min           2   14[BANK0 ] unsigned short 
  8648 ;;  i               1   17[BANK0 ] unsigned char 
  8649 ;;  now_min         2   12[BANK0 ] unsigned short 
  8650 ;;  idx             1   16[BANK0 ] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      void 
  8653 ;; Registers used:
  8654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8660 ;;      Params:         4       0       0       0       0       0
  8661 ;;      Locals:         0       6       0       0       0       0
  8662 ;;      Temps:          0      12       0       0       0       0
  8663 ;;      Totals:         4      18       0       0       0       0
  8664 ;;Total ram usage:       22 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:    1
  8667 ;; This function calls:
  8668 ;;		___wmul
  8669 ;; This function is called by:
  8670 ;;		_main
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           
  8675                           ;psect for function _get_next
  8676  0F61                     _get_next:
  8677  0F61                     l2656:	
  8678                           ;incstack = 0
  8679                           ; Regs used in _get_next: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8680                           
  8681                           
  8682                           ;train_lib.c: 14:     uint8_t idx = 0;
  8683  0F61  0020               	movlb	0	; select bank0
  8684  0F62  01B0               	clrf	get_next@idx
  8685  0F63                     l2658:
  8686                           
  8687                           ;train_lib.c: 15:     uint16_t now_min = ((uint16_t)hour * 60) + min;
  8688  0F63  0879               	movf	get_next@min,w
  8689  0F64  00A0               	movwf	??_get_next
  8690  0F65  01A1               	clrf	??_get_next+1
  8691  0F66  0878               	movf	get_next@hour,w
  8692  0F67  00A2               	movwf	??_get_next+2
  8693  0F68  01A3               	clrf	??_get_next+3
  8694  0F69  0822               	movf	??_get_next+2,w
  8695  0F6A  00F0               	movwf	___wmul@multiplier
  8696  0F6B  0823               	movf	??_get_next+3,w
  8697  0F6C  00F1               	movwf	___wmul@multiplier+1
  8698  0F6D  303C               	movlw	60
  8699  0F6E  00F2               	movwf	___wmul@multiplicand
  8700  0F6F  3000               	movlw	0
  8701  0F70  00F3               	movwf	___wmul@multiplicand+1
  8702  0F71  318A  2235  318F   	fcall	___wmul
  8703  0F74  0020               	movlb	0	; select bank0
  8704  0F75  0820               	movf	??_get_next,w
  8705  0F76  0770               	addwf	?___wmul,w
  8706  0F77  00AC               	movwf	get_next@now_min
  8707  0F78  0821               	movf	??_get_next+1,w
  8708  0F79  3D71               	addwfc	?___wmul+1,w
  8709  0F7A  00AD               	movwf	get_next@now_min+1
  8710  0F7B                     l2660:
  8711                           
  8712                           ;train_lib.c: 17:     for(uint8_t i = 0; i < (sizeof(trains)/sizeof(trains[0])); i++){
  8713  0F7B  01B1               	clrf	get_next@i
  8714  0F7C                     l2666:
  8715                           
  8716                           ;train_lib.c: 18:         uint16_t t_min = ((uint16_t)trains[i].hour * 60) + trains[i].m
      +                          in;
  8717  0F7C  0831               	movf	get_next@i,w
  8718  0F7D  00A0               	movwf	??_get_next
  8719  0F7E  01A1               	clrf	??_get_next+1
  8720  0F7F  35A0               	lslf	??_get_next,f
  8721  0F80  0DA1               	rlf	??_get_next+1,f
  8722  0F81  301B               	movlw	27
  8723  0F82  00A2               	movwf	??_get_next+2
  8724  0F83  3021               	movlw	33
  8725  0F84  00A3               	movwf	??_get_next+3
  8726  0F85  0820               	movf	??_get_next,w
  8727  0F86  0722               	addwf	??_get_next+2,w
  8728  0F87  0086               	movwf	6
  8729  0F88  0821               	movf	??_get_next+1,w
  8730  0F89  3D23               	addwfc	??_get_next+3,w
  8731  0F8A  0087               	movwf	7
  8732  0F8B  0801               	movf	1,w
  8733  0F8C  00A4               	movwf	??_get_next+4
  8734  0F8D  01A5               	clrf	??_get_next+5
  8735  0F8E  0831               	movf	get_next@i,w
  8736  0F8F  00A6               	movwf	??_get_next+6
  8737  0F90  01A7               	clrf	??_get_next+7
  8738  0F91  35A6               	lslf	??_get_next+6,f
  8739  0F92  0DA7               	rlf	??_get_next+7,f
  8740  0F93  301A               	movlw	26
  8741  0F94  00A8               	movwf	??_get_next+8
  8742  0F95  3021               	movlw	33
  8743  0F96  00A9               	movwf	??_get_next+9
  8744  0F97  0826               	movf	??_get_next+6,w
  8745  0F98  0728               	addwf	??_get_next+8,w
  8746  0F99  0086               	movwf	6
  8747  0F9A  0827               	movf	??_get_next+7,w
  8748  0F9B  3D29               	addwfc	??_get_next+9,w
  8749  0F9C  0087               	movwf	7
  8750  0F9D  0801               	movf	1,w
  8751  0F9E  00AA               	movwf	??_get_next+10
  8752  0F9F  01AB               	clrf	??_get_next+11
  8753  0FA0  082A               	movf	??_get_next+10,w
  8754  0FA1  00F0               	movwf	___wmul@multiplier
  8755  0FA2  082B               	movf	??_get_next+11,w
  8756  0FA3  00F1               	movwf	___wmul@multiplier+1
  8757  0FA4  303C               	movlw	60
  8758  0FA5  00F2               	movwf	___wmul@multiplicand
  8759  0FA6  3000               	movlw	0
  8760  0FA7  00F3               	movwf	___wmul@multiplicand+1
  8761  0FA8  318A  2235  318F   	fcall	___wmul
  8762  0FAB  0020               	movlb	0	; select bank0
  8763  0FAC  0824               	movf	??_get_next+4,w
  8764  0FAD  0770               	addwf	?___wmul,w
  8765  0FAE  00AE               	movwf	get_next@t_min
  8766  0FAF  0825               	movf	??_get_next+5,w
  8767  0FB0  3D71               	addwfc	?___wmul+1,w
  8768  0FB1  00AF               	movwf	get_next@t_min+1
  8769  0FB2                     l2668:
  8770                           
  8771                           ;train_lib.c: 20:         if(now_min < t_min){
  8772  0FB2  082F               	movf	get_next@t_min+1,w
  8773  0FB3  022D               	subwf	get_next@now_min+1,w
  8774  0FB4  1D03               	skipz
  8775  0FB5  2FB8               	goto	u2295
  8776  0FB6  082E               	movf	get_next@t_min,w
  8777  0FB7  022C               	subwf	get_next@now_min,w
  8778  0FB8                     u2295:
  8779  0FB8  1803               	skipnc
  8780  0FB9  2FBB               	goto	u2291
  8781  0FBA  2FBC               	goto	u2290
  8782  0FBB                     u2291:
  8783  0FBB  2FC1               	goto	l2672
  8784  0FBC                     u2290:
  8785  0FBC                     l2670:
  8786                           
  8787                           ;train_lib.c: 21:             idx = i;
  8788  0FBC  0831               	movf	get_next@i,w
  8789  0FBD  00A0               	movwf	??_get_next
  8790  0FBE  0820               	movf	??_get_next,w
  8791  0FBF  00B0               	movwf	get_next@idx
  8792                           
  8793                           ;train_lib.c: 22:             break;
  8794  0FC0  2FCB               	goto	l2676
  8795  0FC1                     l2672:
  8796                           
  8797                           ;train_lib.c: 24:     }
  8798  0FC1  3001               	movlw	1
  8799  0FC2  00A0               	movwf	??_get_next
  8800  0FC3  0820               	movf	??_get_next,w
  8801  0FC4  07B1               	addwf	get_next@i,f
  8802  0FC5                     l2674:
  8803  0FC5  302B               	movlw	43
  8804  0FC6  0231               	subwf	get_next@i,w
  8805  0FC7  1C03               	skipc
  8806  0FC8  2FCA               	goto	u2301
  8807  0FC9  2FCB               	goto	u2300
  8808  0FCA                     u2301:
  8809  0FCA  2F7C               	goto	l2666
  8810  0FCB                     u2300:
  8811  0FCB                     l2676:
  8812                           
  8813                           ;train_lib.c: 26:     next->hour = trains[idx].hour;
  8814  0FCB  0830               	movf	get_next@idx,w
  8815  0FCC  00A0               	movwf	??_get_next
  8816  0FCD  01A1               	clrf	??_get_next+1
  8817  0FCE  35A0               	lslf	??_get_next,f
  8818  0FCF  0DA1               	rlf	??_get_next+1,f
  8819  0FD0  301A               	movlw	26
  8820  0FD1  00A2               	movwf	??_get_next+2
  8821  0FD2  3021               	movlw	33
  8822  0FD3  00A3               	movwf	??_get_next+3
  8823  0FD4  0820               	movf	??_get_next,w
  8824  0FD5  0722               	addwf	??_get_next+2,w
  8825  0FD6  0086               	movwf	6
  8826  0FD7  0821               	movf	??_get_next+1,w
  8827  0FD8  3D23               	addwfc	??_get_next+3,w
  8828  0FD9  0087               	movwf	7
  8829  0FDA  0801               	movf	1,w
  8830  0FDB  00A4               	movwf	??_get_next+4
  8831  0FDC  0876               	movf	get_next@next,w
  8832  0FDD  0086               	movwf	6
  8833  0FDE  0877               	movf	get_next@next+1,w
  8834  0FDF  0087               	movwf	7
  8835  0FE0  0824               	movf	??_get_next+4,w
  8836  0FE1  0081               	movwf	1
  8837                           
  8838                           ;train_lib.c: 27:     next->min = trains[idx].min;
  8839  0FE2  0830               	movf	get_next@idx,w
  8840  0FE3  00A0               	movwf	??_get_next
  8841  0FE4  01A1               	clrf	??_get_next+1
  8842  0FE5  35A0               	lslf	??_get_next,f
  8843  0FE6  0DA1               	rlf	??_get_next+1,f
  8844  0FE7  301B               	movlw	27
  8845  0FE8  00A2               	movwf	??_get_next+2
  8846  0FE9  3021               	movlw	33
  8847  0FEA  00A3               	movwf	??_get_next+3
  8848  0FEB  0820               	movf	??_get_next,w
  8849  0FEC  0722               	addwf	??_get_next+2,w
  8850  0FED  0086               	movwf	6
  8851  0FEE  0821               	movf	??_get_next+1,w
  8852  0FEF  3D23               	addwfc	??_get_next+3,w
  8853  0FF0  0087               	movwf	7
  8854  0FF1  0801               	movf	1,w
  8855  0FF2  00A4               	movwf	??_get_next+4
  8856  0FF3  0876               	movf	get_next@next,w
  8857  0FF4  3E01               	addlw	1
  8858  0FF5  00A5               	movwf	??_get_next+5
  8859  0FF6  3000               	movlw	0
  8860  0FF7  3D77               	addwfc	get_next@next+1,w
  8861  0FF8  00A6               	movwf	??_get_next+6
  8862  0FF9  0825               	movf	??_get_next+5,w
  8863  0FFA  0086               	movwf	6
  8864  0FFB  0826               	movf	??_get_next+6,w
  8865  0FFC  0087               	movwf	7
  8866  0FFD  0824               	movf	??_get_next+4,w
  8867  0FFE  0081               	movwf	1
  8868  0FFF                     l232:
  8869  0FFF  0008               	return
  8870  1000                     __end_of_get_next:
  8871                           
  8872                           	psect	text41
  8873  0E73                     __ptext41:	
  8874 ;; *************** function _calc_money *****************
  8875 ;; Defined at:
  8876 ;;		line 12 in file "money_lib.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  date            6    6[COMMON] struct Date
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  min             2    6[BANK0 ] unsigned short 
  8881 ;;  hour            2    4[BANK0 ] unsigned short 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  2    6[COMMON] unsigned short 
  8884 ;; Registers used:
  8885 ;;		wreg, status,2, status,0, pclath, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8891 ;;      Params:         6       0       0       0       0       0
  8892 ;;      Locals:         0       4       0       0       0       0
  8893 ;;      Temps:          0       4       0       0       0       0
  8894 ;;      Totals:         6       8       0       0       0       0
  8895 ;;Total ram usage:       14 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    1
  8898 ;; This function calls:
  8899 ;;		___wmul
  8900 ;; This function is called by:
  8901 ;;		_main
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           
  8906                           ;psect for function _calc_money
  8907  0E73                     _calc_money:
  8908  0E73                     l2704:	
  8909                           ;incstack = 0
  8910                           ; Regs used in _calc_money: [wreg+status,2+status,0+pclath+cstack]
  8911                           
  8912                           
  8913                           ;money_lib.c: 13:     uint16_t hour = (uint16_t)date.hour;
  8914  0E73  0879               	movf	calc_money@date+3,w
  8915  0E74  0020               	movlb	0	; select bank0
  8916  0E75  00A0               	movwf	??_calc_money
  8917  0E76  01A1               	clrf	??_calc_money+1
  8918  0E77  0820               	movf	??_calc_money,w
  8919  0E78  00A4               	movwf	calc_money@hour
  8920  0E79  0821               	movf	??_calc_money+1,w
  8921  0E7A  00A5               	movwf	calc_money@hour+1
  8922                           
  8923                           ;money_lib.c: 14:     uint16_t min = (uint16_t)date.min;
  8924  0E7B  087A               	movf	calc_money@date+4,w
  8925  0E7C  00A0               	movwf	??_calc_money
  8926  0E7D  01A1               	clrf	??_calc_money+1
  8927  0E7E  0820               	movf	??_calc_money,w
  8928  0E7F  00A6               	movwf	calc_money@min
  8929  0E80  0821               	movf	??_calc_money+1,w
  8930  0E81  00A7               	movwf	calc_money@min+1
  8931  0E82  3012               	movlw	18
  8932  0E83  0279               	subwf	calc_money@date+3,w
  8933  0E84  1C03               	skipc
  8934  0E85  2E87               	goto	u2311
  8935  0E86  2E88               	goto	u2310
  8936  0E87                     u2311:
  8937  0E87  2EB1               	goto	l2712
  8938  0E88                     u2310:
  8939  0E88                     l2706:
  8940  0E88  0825               	movf	calc_money@hour+1,w
  8941  0E89  00F1               	movwf	___wmul@multiplier+1
  8942  0E8A  0824               	movf	calc_money@hour,w
  8943  0E8B  00F0               	movwf	___wmul@multiplier
  8944  0E8C  3054               	movlw	84
  8945  0E8D  00F2               	movwf	___wmul@multiplicand
  8946  0E8E  3006               	movlw	6
  8947  0E8F  00F3               	movwf	___wmul@multiplicand+1
  8948  0E90  318A  2235  318E   	fcall	___wmul
  8949  0E93  0870               	movf	?___wmul,w
  8950  0E94  0020               	movlb	0	; select bank0
  8951  0E95  00A0               	movwf	??_calc_money
  8952  0E96  0871               	movf	?___wmul+1,w
  8953  0E97  00A1               	movwf	??_calc_money+1
  8954  0E98  0827               	movf	calc_money@min+1,w
  8955  0E99  00F1               	movwf	___wmul@multiplier+1
  8956  0E9A  0826               	movf	calc_money@min,w
  8957  0E9B  00F0               	movwf	___wmul@multiplier
  8958  0E9C  301B               	movlw	27
  8959  0E9D  00F2               	movwf	___wmul@multiplicand
  8960  0E9E  3000               	movlw	0
  8961  0E9F  00F3               	movwf	___wmul@multiplicand+1
  8962  0EA0  318A  2235  318E   	fcall	___wmul
  8963  0EA3  0870               	movf	?___wmul,w
  8964  0EA4  0020               	movlb	0	; select bank0
  8965  0EA5  0720               	addwf	??_calc_money,w
  8966  0EA6  00A2               	movwf	??_calc_money+2
  8967  0EA7  0871               	movf	?___wmul+1,w
  8968  0EA8  3D21               	addwfc	??_calc_money+1,w
  8969  0EA9  00A3               	movwf	??_calc_money+3
  8970  0EAA  0822               	movf	??_calc_money+2,w
  8971  0EAB  3E50               	addlw	80
  8972  0EAC  00F6               	movwf	?_calc_money
  8973  0EAD  3092               	movlw	146
  8974  0EAE  3D23               	addwfc	??_calc_money+3,w
  8975  0EAF  00F7               	movwf	?_calc_money+1
  8976  0EB0  2ED9               	goto	l269
  8977  0EB1                     l2712:
  8978                           
  8979                           ;money_lib.c: 19:         return ((hour - 8) * HOUR_4_MONEY) + (MIN_4_MONEY * min) - (MI
      +                          N_4_MONEY * 40);
  8980  0EB1  0825               	movf	calc_money@hour+1,w
  8981  0EB2  00F1               	movwf	___wmul@multiplier+1
  8982  0EB3  0824               	movf	calc_money@hour,w
  8983  0EB4  00F0               	movwf	___wmul@multiplier
  8984  0EB5  3054               	movlw	84
  8985  0EB6  00F2               	movwf	___wmul@multiplicand
  8986  0EB7  3006               	movlw	6
  8987  0EB8  00F3               	movwf	___wmul@multiplicand+1
  8988  0EB9  318A  2235  318E   	fcall	___wmul
  8989  0EBC  0870               	movf	?___wmul,w
  8990  0EBD  0020               	movlb	0	; select bank0
  8991  0EBE  00A0               	movwf	??_calc_money
  8992  0EBF  0871               	movf	?___wmul+1,w
  8993  0EC0  00A1               	movwf	??_calc_money+1
  8994  0EC1  0827               	movf	calc_money@min+1,w
  8995  0EC2  00F1               	movwf	___wmul@multiplier+1
  8996  0EC3  0826               	movf	calc_money@min,w
  8997  0EC4  00F0               	movwf	___wmul@multiplier
  8998  0EC5  301B               	movlw	27
  8999  0EC6  00F2               	movwf	___wmul@multiplicand
  9000  0EC7  3000               	movlw	0
  9001  0EC8  00F3               	movwf	___wmul@multiplicand+1
  9002  0EC9  318A  2235  318E   	fcall	___wmul
  9003  0ECC  0870               	movf	?___wmul,w
  9004  0ECD  0020               	movlb	0	; select bank0
  9005  0ECE  0720               	addwf	??_calc_money,w
  9006  0ECF  00A2               	movwf	??_calc_money+2
  9007  0ED0  0871               	movf	?___wmul+1,w
  9008  0ED1  3D21               	addwfc	??_calc_money+1,w
  9009  0ED2  00A3               	movwf	??_calc_money+3
  9010  0ED3  0822               	movf	??_calc_money+2,w
  9011  0ED4  3E28               	addlw	40
  9012  0ED5  00F6               	movwf	?_calc_money
  9013  0ED6  30C9               	movlw	201
  9014  0ED7  3D23               	addwfc	??_calc_money+3,w
  9015  0ED8  00F7               	movwf	?_calc_money+1
  9016  0ED9                     l269:
  9017  0ED9  0008               	return
  9018  0EDA                     __end_of_calc_money:
  9019                           
  9020                           	psect	text42
  9021  0A35                     __ptext42:	
  9022 ;; *************** function ___wmul *****************
  9023 ;; Defined at:
  9024 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  multiplier      2    0[COMMON] unsigned int 
  9027 ;;  multiplicand    2    2[COMMON] unsigned int 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  product         2    4[COMMON] unsigned int 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  2    0[COMMON] unsigned int 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9039 ;;      Params:         4       0       0       0       0       0
  9040 ;;      Locals:         2       0       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0
  9042 ;;      Totals:         6       0       0       0       0       0
  9043 ;;Total ram usage:        6 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_print_remaing
  9049 ;;		_get_next
  9050 ;;		_calc_money
  9051 ;;		_atoi
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           
  9056                           ;psect for function ___wmul
  9057  0A35                     ___wmul:
  9058  0A35                     l2004:	
  9059                           ;incstack = 0
  9060                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9061                           
  9062  0A35  01F4               	clrf	___wmul@product
  9063  0A36  01F5               	clrf	___wmul@product+1
  9064  0A37                     l2006:
  9065  0A37  1C70               	btfss	___wmul@multiplier,0
  9066  0A38  2A3A               	goto	u1301
  9067  0A39  2A3B               	goto	u1300
  9068  0A3A                     u1301:
  9069  0A3A  2A3F               	goto	l420
  9070  0A3B                     u1300:
  9071  0A3B                     l2008:
  9072  0A3B  0872               	movf	___wmul@multiplicand,w
  9073  0A3C  07F4               	addwf	___wmul@product,f
  9074  0A3D  0873               	movf	___wmul@multiplicand+1,w
  9075  0A3E  3DF5               	addwfc	___wmul@product+1,f
  9076  0A3F                     l420:
  9077  0A3F  3001               	movlw	1
  9078  0A40                     u1315:
  9079  0A40  35F2               	lslf	___wmul@multiplicand,f
  9080  0A41  0DF3               	rlf	___wmul@multiplicand+1,f
  9081  0A42  0B89               	decfsz	9,f
  9082  0A43  2A40               	goto	u1315
  9083  0A44                     l2010:
  9084  0A44  3001               	movlw	1
  9085  0A45                     u1325:
  9086  0A45  36F1               	lsrf	___wmul@multiplier+1,f
  9087  0A46  0CF0               	rrf	___wmul@multiplier,f
  9088  0A47  0B89               	decfsz	9,f
  9089  0A48  2A45               	goto	u1325
  9090  0A49                     l2012:
  9091  0A49  0870               	movf	___wmul@multiplier,w
  9092  0A4A  0471               	iorwf	___wmul@multiplier+1,w
  9093  0A4B  1D03               	btfss	3,2
  9094  0A4C  2A4E               	goto	u1331
  9095  0A4D  2A4F               	goto	u1330
  9096  0A4E                     u1331:
  9097  0A4E  2A37               	goto	l2006
  9098  0A4F                     u1330:
  9099  0A4F                     l2014:
  9100  0A4F  0875               	movf	___wmul@product+1,w
  9101  0A50  00F1               	movwf	?___wmul+1
  9102  0A51  0874               	movf	___wmul@product,w
  9103  0A52  00F0               	movwf	?___wmul
  9104  0A53                     l422:
  9105  0A53  0008               	return
  9106  0A54                     __end_of___wmul:
  9107                           
  9108                           	psect	text43
  9109  0902                     __ptext43:	
  9110 ;; *************** function _SYSTEM_Initialize *****************
  9111 ;; Defined at:
  9112 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;		None
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;		None
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  1    wreg      void 
  9119 ;; Registers used:
  9120 ;;		wreg, status,2, status,0, pclath, cstack
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9126 ;;      Params:         0       0       0       0       0       0
  9127 ;;      Locals:         0       0       0       0       0       0
  9128 ;;      Temps:          0       0       0       0       0       0
  9129 ;;      Totals:         0       0       0       0       0       0
  9130 ;;Total ram usage:        0 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:    1
  9133 ;; This function calls:
  9134 ;;		_OSCILLATOR_Initialize
  9135 ;;		_PIN_MANAGER_Initialize
  9136 ;;		_WDT_Initialize
  9137 ;; This function is called by:
  9138 ;;		_main
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           
  9143                           ;psect for function _SYSTEM_Initialize
  9144  0902                     _SYSTEM_Initialize:
  9145  0902                     l2558:	
  9146                           ;incstack = 0
  9147                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9148                           
  9149                           
  9150                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  9151  0902  3189  219F  3189   	fcall	_PIN_MANAGER_Initialize
  9152                           
  9153                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  9154  0905  3188  20F4  3189   	fcall	_OSCILLATOR_Initialize
  9155                           
  9156                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  9157  0908  3188  20EC  3189   	fcall	_WDT_Initialize
  9158  090B                     l17:
  9159  090B  0008               	return
  9160  090C                     __end_of_SYSTEM_Initialize:
  9161                           
  9162                           	psect	text44
  9163  08EC                     __ptext44:	
  9164 ;; *************** function _WDT_Initialize *****************
  9165 ;; Defined at:
  9166 ;;		line 68 in file "mcc_generated_files/mcc.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;		None
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;		None
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9180 ;;      Params:         0       0       0       0       0       0
  9181 ;;      Locals:         0       0       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0
  9183 ;;      Totals:         0       0       0       0       0       0
  9184 ;;Total ram usage:        0 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; This function calls:
  9187 ;;		Nothing
  9188 ;; This function is called by:
  9189 ;;		_SYSTEM_Initialize
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           
  9194                           ;psect for function _WDT_Initialize
  9195  08EC                     _WDT_Initialize:
  9196  08EC                     l2510:	
  9197                           ;incstack = 0
  9198                           ; Regs used in _WDT_Initialize: [wreg]
  9199                           
  9200                           
  9201                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  9202  08EC  3016               	movlw	22
  9203  08ED  0021               	movlb	1	; select bank1
  9204  08EE  0097               	movwf	23	;volatile
  9205  08EF                     l23:
  9206  08EF  0008               	return
  9207  08F0                     __end_of_WDT_Initialize:
  9208                           
  9209                           	psect	text45
  9210  099F                     __ptext45:	
  9211 ;; *************** function _PIN_MANAGER_Initialize *****************
  9212 ;; Defined at:
  9213 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;		None
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, status,2
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9227 ;;      Params:         0       0       0       0       0       0
  9228 ;;      Locals:         0       0       0       0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0
  9230 ;;      Totals:         0       0       0       0       0       0
  9231 ;;Total ram usage:        0 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_SYSTEM_Initialize
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           
  9241                           ;psect for function _PIN_MANAGER_Initialize
  9242  099F                     _PIN_MANAGER_Initialize:
  9243  099F                     l2492:	
  9244                           ;incstack = 0
  9245                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9246                           
  9247                           
  9248                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9249  099F  0022               	movlb	2	; select bank2
  9250  09A0  018C               	clrf	12	;volatile
  9251                           
  9252                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  9253  09A1  018D               	clrf	13	;volatile
  9254  09A2                     l2494:
  9255                           
  9256                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  9257  09A2  30FF               	movlw	255
  9258  09A3  0021               	movlb	1	; select bank1
  9259  09A4  008C               	movwf	12	;volatile
  9260  09A5                     l2496:
  9261                           
  9262                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  9263  09A5  30FF               	movlw	255
  9264  09A6  008D               	movwf	13	;volatile
  9265  09A7                     l2498:
  9266                           
  9267                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  9268  09A7  30FE               	movlw	254
  9269  09A8  0023               	movlb	3	; select bank3
  9270  09A9  008D               	movwf	13	;volatile
  9271  09AA                     l2500:
  9272                           
  9273                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  9274  09AA  301F               	movlw	31
  9275  09AB  008C               	movwf	12	;volatile
  9276                           
  9277                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  9278  09AC  0024               	movlb	4	; select bank4
  9279  09AD  018D               	clrf	13	;volatile
  9280                           
  9281                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  9282  09AE  018C               	clrf	12	;volatile
  9283  09AF                     l2502:
  9284                           
  9285                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  9286  09AF  0021               	movlb	1	; select bank1
  9287  09B0  1795               	bsf	21,7	;volatile
  9288                           
  9289                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  9290  09B1  0022               	movlb	2	; select bank2
  9291  09B2  019D               	clrf	29	;volatile
  9292                           
  9293                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  9294  09B3  019E               	clrf	30	;volatile
  9295  09B4                     l48:
  9296  09B4  0008               	return
  9297  09B5                     __end_of_PIN_MANAGER_Initialize:
  9298                           
  9299                           	psect	text46
  9300  08F4                     __ptext46:	
  9301 ;; *************** function _OSCILLATOR_Initialize *****************
  9302 ;; Defined at:
  9303 ;;		line 58 in file "mcc_generated_files/mcc.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, status,2
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9317 ;;      Params:         0       0       0       0       0       0
  9318 ;;      Locals:         0       0       0       0       0       0
  9319 ;;      Temps:          0       0       0       0       0       0
  9320 ;;      Totals:         0       0       0       0       0       0
  9321 ;;Total ram usage:        0 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_SYSTEM_Initialize
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           
  9331                           ;psect for function _OSCILLATOR_Initialize
  9332  08F4                     _OSCILLATOR_Initialize:
  9333  08F4                     l2504:	
  9334                           ;incstack = 0
  9335                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9336                           
  9337                           
  9338                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  9339  08F4  3070               	movlw	112
  9340  08F5  0021               	movlb	1	; select bank1
  9341  08F6  0099               	movwf	25	;volatile
  9342  08F7                     l2506:
  9343                           
  9344                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  9345  08F7  0198               	clrf	24	;volatile
  9346  08F8                     l2508:
  9347                           
  9348                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  9349  08F8  0022               	movlb	2	; select bank2
  9350  08F9  0196               	clrf	22	;volatile
  9351  08FA                     l20:
  9352  08FA  0008               	return
  9353  08FB                     __end_of_OSCILLATOR_Initialize:
  9354  007E                     btemp	set	126	;btemp
  9355  007E                     wtemp0	set	126
  9356  211A                     
  9357                           	psect	config
  9358                           
  9359                           ;Config register CONFIG1 @ 0x8007
  9360                           ;	Oscillator Selection
  9361                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9362                           ;	Watchdog Timer Enable
  9363                           ;	WDTE = OFF, WDT disabled
  9364                           ;	Power-up Timer Enable
  9365                           ;	PWRTE = OFF, PWRT disabled
  9366                           ;	MCLR Pin Function Select
  9367                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9368                           ;	Flash Program Memory Code Protection
  9369                           ;	CP = OFF, Program memory code protection is disabled
  9370                           ;	Data Memory Code Protection
  9371                           ;	CPD = OFF, Data memory code protection is disabled
  9372                           ;	Brown-out Reset Enable
  9373                           ;	BOREN = ON, Brown-out Reset enabled
  9374                           ;	Clock Out Enable
  9375                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9376                           ;	Internal/External Switchover
  9377                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9378                           ;	Fail-Safe Clock Monitor Enable
  9379                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9380  8007                     	org	32775
  9381  8007  3FE4               	dw	16356
  9382                           
  9383                           ;Config register CONFIG2 @ 0x8008
  9384                           ;	Flash Memory Self-Write Protection
  9385                           ;	WRT = OFF, Write protection off
  9386                           ;	PLL Enable
  9387                           ;	PLLEN = OFF, 4x PLL disabled
  9388                           ;	Stack Overflow/Underflow Reset Enable
  9389                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9390                           ;	Brown-out Reset Voltage Selection
  9391                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9392                           ;	Low-Voltage Programming Enable
  9393                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  9394  8008                     	org	32776
  9395  8008  1EFF               	dw	7935

Data Sizes:
    Strings     60
    Constant    6
    Data        90
    BSS         59
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     39      69
    BANK2            80      0      32
    BANK3            42      0       0
    BANK4             0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[12]), STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[18]), 
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S950_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 16
		 -> line(BANK1[16]), 

    read_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK1[6]), 

    write_date@date	PTR struct Date size(1) Largest target is 6
		 -> main@date(BANK1[6]), 

    get_next@next	PTR struct train size(2) Largest target is 2
		 -> main@next1(BANK1[2]), main@next(BANK1[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[2]), line(BANK1[16]), 


Critical Paths under _main in COMMON

    _write_date->_decimal_2_bcd
    _decimal_2_bcd->___awdiv
    _read_date->__read
    __read->_bcd_2_decimal
    _bcd_2_decimal->___bmul
    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _lcd_clear->_lcd_print
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_next->___wmul
    _calc_money->___wmul

Critical Paths under _main in BANK0

    _main->_print_money
    _main->_print_remaing
    _main->_print_train
    _write_date->_decimal_2_bcd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_clear->_lcd_set_cursor

Critical Paths under _main in BANK1

    _main->_print_remaing
    _print_train->_sprintf
    _print_remaing->_sprintf
    _print_money->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   51584
                                             27 BANK1     12    12      0
                  _SYSTEM_Initialize
                         _calc_money
                           _get_next
                      _lcd_backlight
                           _lcd_init
                     _lcd_set_cursor
                        _print_money
                      _print_remaing
                        _print_train
                          _read_date
                         _write_date
 ---------------------------------------------------------------------------------
 (1) _write_date                                           3     3      0    1131
                                             10 COMMON     3     3      0
                      _decimal_2_bcd
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _decimal_2_bcd                                        8     8      0     944
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_date                                            2     2      0     489
                                             11 COMMON     2     2      0
                              __read
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     324
                                              8 COMMON     3     3      0
                      _bcd_2_decimal
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _bcd_2_decimal                                        4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _print_train                                          8     4      4   14244
                                             75 BANK0      4     4      0
                                             15 BANK1      4     0      4
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_remaing                                       16     8      8   15840
                                             75 BANK0      4     4      0
                                             15 BANK1     12     4      8
                             ___wmul
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_money                                         12     4      8   14222
                                             75 BANK0      4     4      0
                                             15 BANK1      8     0      8
                          _lcd_clear
                          _lcd_print
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    9550
                                             13 COMMON     1     1      0
                                              0 BANK1     15     9      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    8695
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    41      2    8365
                                             46 BANK0     21    19      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2301
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            3     3      0    2294
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       8     7      1    1140
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            4     2      2    1018
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (3) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_next                                            22    18      4    2208
                                              6 COMMON     4     0      4
                                              0 BANK0     18    18      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _calc_money                                          14     8      6    1695
                                              6 COMMON     6     0      6
                                              0 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1460
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _calc_money
     ___wmul
   _get_next
     ___wmul
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_init
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_set_cursor
     _command
       _lcd_cmd
         _i2c_start
           _i2c_wait
         _i2c_stop
         _i2c_write
           _i2c_wait
   _print_money
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
             _i2c_start
               _i2c_wait
             _i2c_stop
             _i2c_write
               _i2c_wait
       _lcd_set_cursor
         _command
           _lcd_cmd
             _i2c_start
               _i2c_wait
             _i2c_stop
             _i2c_write
               _i2c_wait
     _lcd_print
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _lcd_set_cursor
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _print_remaing
     ___wmul
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
             _i2c_start
               _i2c_wait
             _i2c_stop
             _i2c_write
               _i2c_wait
       _lcd_set_cursor
         _command
           _lcd_cmd
             _i2c_start
               _i2c_wait
             _i2c_stop
             _i2c_write
               _i2c_wait
     _lcd_print
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _lcd_set_cursor
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _print_train
     _lcd_clear
       _lcd_print
         _command
           _lcd_cmd
             _i2c_start
               _i2c_wait
             _i2c_stop
             _i2c_write
               _i2c_wait
       _lcd_set_cursor
         _command
           _lcd_cmd
             _i2c_start
               _i2c_wait
             _i2c_stop
             _i2c_write
               _i2c_wait
     _lcd_print
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _lcd_set_cursor
       _command
         _lcd_cmd
           _i2c_start
             _i2c_wait
           _i2c_stop
           _i2c_write
             _i2c_wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _read_date
     __read
       _bcd_2_decimal
         ___bmul
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _write_date
     _decimal_2_bcd
       ___awdiv
       ___awmod
     _i2c_start
       _i2c_wait
     _i2c_stop
     _i2c_write
       _i2c_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     27      45       8       86.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               2A      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C3      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Feb 21 22:51:38 2021

                 ___bmul@product 0072                               l20 08FA                               l23 08EF  
                             l17 090B                               l48 09B4                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072            __end_of_decimal_2_bcd 0B66                     lcd_clear@col 0027  
                   lcd_clear@row 0026                              l202 0951                              l123 0F60  
                            l221 0A34                              l150 0915                              l126 0C5D  
                            l215 0B37                              l119 0DB3                              l232 0FFF  
                            l144 092B                              l224 0BCE                              l153 08FD  
                            l209 0AE4                              l162 091F                              l250 0B65  
                            l147 0911                              l171 0961                              l420 0A3F  
                            l156 0901                              l165 0956                              l253 0E72  
                            l422 0A53                              l174 09BD                              l247 0989  
                            l159 091B                              l168 095A                              l520 04A5  
                            l176 09C1                              l256 0A96                              l521 04B6  
                            l177 09CB                              l259 0C14                              l196 0975  
                            l269 0ED9                              l533 02B8                              l534 02C9  
                            l446 099E                              l199 03B5                              l573 0E12  
                            l914 0D1C                              l922 0500                              l586 0CFF  
                            l931 05AF                              l923 0509                              l917 0D3E  
                            l919 0D58                              l927 0526                              l928 053E  
                            l952 064F                              l945 0626                              l954 065B  
                            l955 065E                              l883 0ABC                              l956 0661  
                            l957 0664                              l981 0B96                              l974 07C9  
                            l959 0696                              l985 09FD                              l988 09FD  
                            _abs 09E4                              _pad 0D00                     ___awmod@sign 0076  
                            wreg 0009                    calc_money@min 0026              bcd_2_decimal@number 0077  
                    command@mode 0072                      get_next@idx 0030                      get_next@min 0079  
                 ?_bcd_2_decimal 0070                  ?_lcd_set_cursor 0078                             l1022 09E3  
                           l1030 0A74                             l1006 0097                             l2000 0953  
                           l2010 0A44                             l2002 095E                             l1019 0108  
                           ?_abs 0073                             l2012 0A49                             l2004 0A35  
                           l2020 03B7                             l2100 0D30                             l1045 0CAC  
                           l1053 0B0D                             l2014 0A4F                             l2006 0A37  
                           l2030 040F                             l2022 03C1                             l2110 09F1  
                           l1062 0A17                             l2102 0D43                             l2008 0A3B  
                           l2112 09CC                             l2120 0A5D                             l2200 0084  
                           l2040 0435                             l2032 0419                             l2024 03E2  
                           l1056 08EB                             l2104 0D4C                             l2130 096E  
                           l2122 0A6C                             l2210 009C                             l2202 0085  
                           l2050 0474                             l2042 0439                             l2034 0426  
                           l2026 03EC                             l2018 03B6                             l2124 0A6D  
                           l2116 0A54                             l2220 00EC                             l2212 00B0  
                           l2044 0441                             l2036 0429                             l2052 0482  
                           l2028 040B                             l2060 01EB                             l2108 09E4  
                           l2140 0505                             l2132 04B9                             l2300 06B9  
                           l2118 0A56                             l2222 00F2                             l2206 008C  
                           l2054 0487                             l2046 0463                             l2038 0431  
                           l2070 0245                             l2062 020C                             l2150 0539  
                           l2142 0518                             l2134 04C9                             l2310 06E1  
                           l2302 06C6                             l2128 0963                             l2240 0BB2  
                           l2224 00F8                             l2216 00D0                             l2208 0093  
                           l2048 0473                             l2080 0287                             l2072 024D  
                           l2064 0216                             l2056 01E0                             l2160 057E  
                           l2152 0543                             l2144 051E                             l2136 04DC  
                           l2320 0725                             l2312 06E9                             l2304 06CA  
                           l2400 0DB5                             l2250 0BC9                             l2242 0BB7  
                           l2226 0104                             l2074 0251                             l2082 0295  
                           l2066 0235                             l2058 01E1                             l2090 0D10  
                           l2170 05E5                             l2162 0582                             l2154 0546  
                           l2146 052E                             l2138 04E2                             l2330 0771  
                           l2322 0736                             l2306 06CB                             l2410 0DC9  
                           l2402 0DB9                             l2500 09AA                             l2244 0BBC  
                           l2236 0B98                             l2084 029A                             l2076 0255  
                           l2068 0242                             l2092 0D15                             l2180 0601  
                           l2164 05BD                             l2172 05EA                             l2156 054B  
                           l2148 0534                             l2332 0782                             l2340 079B  
                           l2324 073E                             l2316 070D                             l2308 06D1  
                           l2260 0996                             l2252 098B                             l2420 0DDD  
                           l2412 0DCD                             l2404 0DBE                             l2502 09AF  
                           l2510 08EC                             l2246 0BC0                             l2238 0BAE  
                           l2190 005A                             l2078 0277                             l2094 0D1A  
                           l2086 0D02                             l2182 0606                             l2174 05F1  
                           l2166 05CA                             l2158 057A                             l2342 07A3  
                           l2334 078A                             l2326 0757                             l2318 0713  
                           l2270 0642                             l2262 099D                             l2254 098C  
                           l2430 0DF9                             l2422 0DE1                             l2414 0DCF  
                           l2406 0DC0                             l2504 08F4                             l2600 0343  
                           l2248 0BC4                             l2360 0B26                             l2512 0ABD  
                           l2192 0060                             l2096 0D1F                             l2088 0D07  
                           l2184 060A                             l2176 05F6                             l2168 05D7  
                           l2336 0795                             l2272 0647                             l2256 0990  
                           l2432 0DFE                             l2424 0DE5                             l2416 0DD5  
                           l2408 0DC4                             l2506 08F7                             l2610 0376  
                           l2602 035F                             l2370 0A21                             l2362 0B28  
                           l2530 0AD4                             l2194 0064                             l2098 0D2B  
                           l2178 05FB                             l2186 0613                             l2290 066C  
                           l2274 064B                             l2346 07A6                             l2266 0629  
                           l2258 0994                             l2426 0DF4                             l2418 0DD8  
                           l2434 0E04                             l2450 0CB9                             l2442 0CAD  
                           l2508 08F8                             l2620 03A2                             l2612 037A  
                           l2604 0363                             l2372 0A25                             l2364 0B32  
                           l2532 0ADA                             l2524 0AC0                             l2196 0066  
                           l2348 07BF                             l2276 0651                             l2292 0690  
                           l2268 063A                             l2540 0AA3                             l2700 0F53  
                           l2380 09B6                             l2436 0E09                             l2428 0DF8  
                           l2460 0CD0                             l2452 0CBD                             l2444 0CAE  
                           l2630 094D                             l2622 03A6                             l2614 037E  
                           l2606 0367                             l2374 0A2B                             l2366 0A18  
                           l2358 0B10                             l2534 0ADE                             l2526 0AC8  
                           l2518 0ABF                             l2198 0070                             l2294 069B  
                           l2286 0667                             l2542 0AA5                             l2390 09CA  
                           l2382 09BC                             l2438 0E0E                             l2470 0CEB  
                           l2462 0CD4                             l2454 0CC2                             l2446 0CB2  
                           l2712 0EB1                             l2704 0E73                             l2624 03AA  
                           l2616 0382                             l2608 036B                             l2560 02CA  
                           l2368 0A19                             l2528 0ACF                             l2296 069F  
                           l2480 0B68                             l2544 0AB4                             l2536 0A99  
                           l2720 0C3C                             l2384 09C2                             l2376 0916  
                           l2552 0A76                             l2464 0CD8                             l2456 0CC8  
                           l2472 0CF1                             l2448 0CB7                             l2640 0E40  
                           l2632 0E14                             l2706 0E88                             l2626 0944  
                           l2618 039E                             l2570 02F5                             l2562 02D6  
                           l2298 06B1                             l2482 0B6C                             l2538 0AA1  
                           l2722 0C43                             l2394 0977                             l2386 09C6  
                           l2378 0919                             l2554 0A92                             l2650 0BF3  
                           l2474 0CF6                             l2466 0CE2                             l2458 0CCB  
                           l2642 0E63                             l2634 0E1F                             l2730 010F  
                           l2492 099F                             l2660 0F7B                             l2628 0948  
                           l2580 030F                             l2572 02FC                             l2564 02DA  
                           l2484 0B70                             l2724 0C50                             l2716 0C15  
                           l2388 09C7                             l2652 0BFE                             l2476 0CFB  
                           l2468 0CE6                             l2548 0B39                             l2644 0E66  
                           l2636 0E2A                             l2740 0118                             l2732 0111  
                           l2494 09A2                             l2558 0902                             l2670 0FBC  
                           l2590 032F                             l2582 0313                             l2574 0300  
                           l2566 02DE                             l2486 0B84                             l2718 0C37  
                           l2654 0C09                             l2646 0BD0                             l2398 0DB4  
                           l2638 0E35                             l2750 012C                             l2742 011B  
                           l2734 0114                             l2726 0109                             l2496 09A5  
                           l2672 0FC1                             l2656 0F61                             l2592 0333  
                           l2584 0317                             l2576 0304                             l2568 02E2  
                           l1960 0C6D                             l2832 067F                             l2488 0B8E  
                           l2680 0D7B                             l2648 0BEF                             l2760 013B  
                           l2752 0130                             l2744 011E                             l2736 0116  
                           l2728 010C                             l2498 09A7                             l2674 0FC5  
                           l2666 0F7C                             l2658 0F63                             l1970 0920  
                           l2594 0337                             l2586 0327                             l2578 030B  
                           l2834 00A8                             l1962 0C77                             l1954 0C5E  
                           l2690 0EDD                             l2682 0D80                             l2770 016C  
                           l2762 013F                             l2754 0134                             l2746 0123  
                           l2738 0117                             l2676 0FCB                             l2668 0FB2  
                           l1972 0920                             l2596 033B                             l2588 032B  
                           l1964 0C94                             l1956 0C63                             l1980 0AF8  
                           l2692 0EFC                             l2684 0D87                             l2780 01A6  
                           l2772 0172                             l2764 0143                             l2756 0138  
                           l2748 0128                             l1974 0927                             l2598 033F  
                           l1966 0CA4                             l1958 0C68                             l1982 0AFD  
                           l1990 0A11                             l2694 0F38                             l2686 0DA6  
                           l2678 0D59                             l2774 017E                             l2766 014C  
                           l2758 0139                             ?_pad 0024                             l1976 0AE7  
                           l1984 09FF                             l2696 0F3D                             l2688 0EDA  
                           l2776 0184                             l2768 015C                             l1994 090C  
                           l1978 0AEA                             l1986 0A04                             l2698 0F44  
                           l2778 01A0                             l1996 090F                             l1988 0A08  
                           l1998 08FB                             STR_1 0802                             STR_2 0802  
                           STR_3 0802                             STR_4 0830                             STR_5 0814  
                           STR_6 0824                             STR_7 0840                             u1200 0C77  
                           u2000 0782                             u1201 0C76                             u2001 0781  
                           u2010 0B26                             u1210 0C94                             u2011 0B25  
                           u1211 0C93                             u1300 0A3B                             u1220 0927  
                           u2020 0A34                             u2100 0DE5                             u1301 0A3A  
                           u1221 0926                             u2021 0A33                             u2101 0DE4  
                           u1230 092B                             u2030 091F                             u1231 092A  
                           u1215 0C90                             u2031 091E                             u1400 0439  
                           u1240 0B0D                             u2040 09C1                             u2120 0DF4  
                           u2200 0CD8                             u1401 0438                             u1241 0B0C  
                           u2041 09C0                             u2121 0DF3                             u2201 0CD7  
                           u1330 0A4F                             u1410 0463                             u1250 0A11  
                           u2210 0CE2                             u1331 0A4E                             u1315 0A40  
                           u1411 0462                             u1251 0A10                             u2115 0DE6  
                           u2211 0CE1                             u2300 0FCB                             u1260 0915  
                           u1420 0482                             u1340 03C1                             u1500 0255  
                           u1180 0C63                             u2140 0E04                             u2060 0DB9  
                           u1325 0A45                             u2301 0FCA                             u1261 0914  
                           u1421 0481                             u1341 03C0                             u1501 0254  
                           u1181 0C62                             u2141 0E03                             u2125 0DF0  
                           u2061 0DB8                             _LATA 010C                             u2310 0E88  
                           u1270 0901                             u1430 0487                             u1510 0277  
                           u1190 0C68                             u2150 0E09                             u2070 0DC4  
                           u2230 0CF1                             _LATB 010D                             u2311 0E87  
                           u1271 0900                             u1431 0486                             u1415 045F  
                           u1511 0276                             u1191 0C67                             u2055 0981  
                           u2151 0E08                             u2135 0DFA                             u2071 0DC3  
                           u2231 0CF0                             u2215 0CDE                             u1280 095A  
                           u1600 09DC                             u1360 03EC                             u1520 0295  
                           u2080 0DD5                             u2240 0CF6                             u2160 0CB2  
                           u2320 0172                             u1281 0959                             u1601 09DA  
                           u1361 03EB                             u1521 0294                             u2081 0DD4  
                           u2241 0CF5                             u2225 0CE7                             u2161 0CB1  
                           u2321 0171                             u1290 095E                             u1610 09DD  
                           u1530 029A                             u1450 01EB                             u2250 0B8E  
                           u2170 0CBD                             u2330 0184                             u1291 095D  
                           u1531 0299                             u1515 0273                             u1451 01EA  
                           u2251 0B8D                             u2171 0CBC                             u2331 0183  
                           u2260 0ADA                             u1620 0A5D                             u1380 0416  
                           u1700 0534                             u2180 0CC8                             u2340 01A6  
                           u2261 0AD9                             u1621 0A5C                             u1701 0533  
                           u2181 0CC7                             u2341 01A5                             u2270 0AE4  
                           u1630 0A6C                             u1390 0426                             u1470 0216  
                           u1550 0D07                             u1710 0539                             u2407 02F8  
                           u2271 0AE3                             u1631 0A6B                             u1391 0425  
                           u1471 0215                             u1551 0D06                             u1711 0538  
                           u2095 0DD9                             u1800 0070                             u1560 0D15  
                           u1720 05BD                             u1640 04D4                             u2417 0309  
                           u1801 006F                             u1561 0D14                             u1721 05BC  
                           u1641 04D2                             u2290 0FBC                             u1810 0084  
                           u1490 0242                             u1570 0D3E                             u1730 05CA  
                           u1650 04D5                             u2291 0FBB                             u2507 094E  
                           u2427 0318                             u1811 0083                             u1491 0241  
                           u1571 0D3D                             u1731 05C9                             u2195 0CCC  
                           u1820 0092                             u1580 0D43                             u1740 05D7  
                           u1660 04E2                             u1900 063A                             u2517 0972  
                           u2437 0328                             u1821 0091                             u1581 0D42  
                           u1741 05D6                             u1725 05B9                             u1661 04E1  
                           u1901 0639                             u2285 0B5F                             u2357 0147  
                           u1830 00E5                             u1590 09F1                             u1750 05E5  
                           u1910 0696                             u2295 0FB8                             u2447 0344  
                           u1831 00E3                             u1591 09F0                             u1575 0D3A  
                           u1751 05E4                             u1911 0695                             u2367 0E6B  
                           u1840 00E6                             u1760 05EA                             u1680 0505  
                           u1920 069B                             u2457 0360                             u2377 0BBD  
                           u1761 05E9                             u1745 05D3                             u1681 0504  
                           u1921 069A                             u1850 00F2                             u1770 05F1  
                           u1690 0518                             u1930 06B1                             u2467 0372  
                           u2387 02CF                             u1851 00F1                             u1595 09ED  
                           u1771 05F0                             u1755 05E1                             u1691 0517  
                           u1931 06B0                             u1860 00F8                             u1780 05F6  
                           u1940 06CA                             u2477 0383                             u2397 02E5  
                           u1861 00F7                             u1781 05F5                             u1941 06C9  
                           u1790 0601                             u1950 0706                             u2487 039F  
                           u1791 0600                             u1695 0514                             u1951 0704  
                           u1960 0707                             u1880 0990                             u2497 03B1  
                           u1881 098F                             u1970 0713                             u1890 099D  
                           u1875 0BA3                             u1971 0712                             u1891 099C  
                           u1980 0725                             u1981 0724                             u1990 0736  
                           u1991 0735                             _WPUA 020C                             _WPUB 020D  
                           abs@a 0073                             _dbuf 0120                             _atoi 005A  
                ??_lcd_backlight 0072                             _main 0109                             _dtoa 04B7  
                           _line 00D1                             _prec 00CB                             _nout 00C7  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                             start 0002                   calc_money@date 0076  
                 calc_money@hour 0024                ___bmul@multiplier 0073                   write_date@date 007C  
                   get_next@hour 0078                     get_next@next 0076                            ??_abs 0075  
                          ??_pad 007C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 08FB  
                __end_of___aodiv 04B7                            ?_atoi 0076                            ?_main 0070  
                          ?_dtoa 0030                  __end_of___aomod 02CA                  __end_of___awdiv 0E13  
                __end_of___awmod 0D00                      i2c_read@ack 0071                  ___awdiv@divisor 0070  
                ___awdiv@counter 0075                     vfpfcnvrt@fmt 004E                            _TRISA 008C  
                          _TRISB 008D                     lcd_print@cmd 007B                     lcd_print@str 0078  
                __end_of_lcd_cmd 0976                  __end_of_command 0BCF                            __read 0A75  
                          _flags 00CD                   _WDT_Initialize 08EC                            _fputc 0C5E  
                          _fputs 0AE5                  __end_of_isdigit 09E4                            _money 00CF  
                          atoi@n 0027                            pad@fp 002B                            atoi@s 0076  
                          _width 00C9                            _putch 08EB                            dtoa@d 0030  
                          dtoa@i 004C                            dtoa@n 0044                            dtoa@p 003E  
                          dtoa@s 0042                            dtoa@w 0040                  __end_of_isspace 0A75  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0ABD  
                ??_print_remaing 006B                  __initialization 07CA                     __end_of_atoi 0109  
                   __end_of_main 01E0                     __end_of_dtoa 0627                    command@lownib 0077  
               __end_of_i2c_read 09CC                 __end_of_i2c_wait 092C                 __end_of_i2c_stop 0902  
                  get_next@t_min 002E                           ??_atoi 0078                           ??_main 00BB  
                         ??_dtoa 0038                  ??_bcd_2_decimal 0074           __end_of_WDT_Initialize 08F0  
                         ?__read 0070                           ?_fputc 0070                           ?_fputs 0078  
               ___awdiv@dividend 0072                           _ANSELA 018C                           ?_putch 0070  
                         _ANSELB 018D                           _BORCON 0116                 print_money@money 00B5  
                   i2c_read@data 0072                           _OSCCON 0099                    vfpfcnvrt@done 005E  
                         u135lld 03E0                           u144lld 04A5                           u137lld 040B  
                         u154lld 02B8                           u146lld 020A                           u148lld 0235  
                         u167lld 0500                           _WDTCON 0097               __size_of_i2c_start 000A  
             __size_of_i2c_write 0010                     vfprintf@cfmt 0069                 __end_of_lcd_init 03B6  
               __end_of_get_next 1000                           ___bmul 098A                        ??___aodiv 0070  
                      ??___aomod 0070                           ___wmul 0A35                        ??___awdiv 0074  
                      ??___awmod 0074                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                           pad@buf 0024                           _trains 211A  
                      ??_lcd_cmd 0071                           dtoa@fp 003D                        ??_command 0073  
                         _strlen 09FE                     __pdataBIGRAM 211A                           fputc@c 0070  
                         fputs@c 0020                           fputs@i 0021                           fputs@s 0023  
                      ??_isdigit 0072               _i2c_repeated_start 0916                        ??_isspace 0072  
                ?_WDT_Initialize 0070                           putch@c 0070                 __end_of_vfprintf 0B97  
                      ??_sprintf 007D              ?_i2c_repeated_start 0070                _SYSTEM_Initialize 0902  
                   ?_print_money 00AF          __end_of__initialization 07FD                     ?_print_train 00AF  
             ?_SYSTEM_Initialize 0070            print_remaing@next_min 00B9                 print_train@next1 00B1  
            ___bmul@multiplicand 0070                   command@highnib 0076                   __pcstackCOMMON 0070  
                   __pidataBANK1 08F0              ??_SYSTEM_Initialize 0070                    __end_of__read 0A97  
                  __end_of_fputc 0CAD                    __end_of_fputs 0B0E             ??_i2c_repeated_start 0070  
                  __end_of_putch 08EC                __end_of_i2c_start 0916                 ??_lcd_set_cursor 0079  
              __end_of_i2c_write 0962                   _OPTION_REGbits 0095                       _calc_money 0E73  
             __size_of_lcd_clear 0028                          ??__read 0078               __size_of_lcd_print 001D  
                        ??_fputc 0073        __end_of_SYSTEM_Initialize 090C                          ??_fputs 0079  
                     __read@data 007A                          ??_putch 0070                       __pbssBANK0 006F  
                     __pbssBANK1 00C7                       __pbssBANK2 0120                        ?_i2c_read 0070  
                      ?_i2c_wait 0070                        ?_i2c_stop 0070               __size_of_read_date 0046  
              print_remaing@date 00AF                print_remaing@next 00B5                       __pmaintext 0109  
                        ?___bmul 0070                          ?___wmul 0070                          _APFCON0 011D  
                        _APFCON1 011E                          ?_strlen 0070               __size_of_vfpfcnvrt 01A3  
                        _OSCTUNE 0098                          _SSP2ADD 021A                          _SSP2BUF 0219  
                      ?_lcd_init 0070                        ?_get_next 0076                       ??_i2c_read 0070  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070             __end_of_HOUR_4_MONEY 083E  
         __size_of_decimal_2_bcd 002E            __end_of_lcd_backlight 0952                __end_of_lcd_clear 0AE5  
                __size_of___bmul 0015                          ___aodiv 03B6                __end_of_lcd_print 0A35  
                        ___aomod 01E0                          ___awdiv 0DB4                          ___awmod 0CAD  
                __size_of___wmul 001F                        ?_vfprintf 0063                          __ptext1 0E13  
                        __ptext2 0B38                          __ptext3 0CAD                          __ptext4 0DB4  
                        __ptext5 0BCF                          __ptext6 0A75                          __ptext7 0916  
                        __ptext8 09B5                          __ptext9 0976                          _lcd_cmd 0962  
           __end_of_REGULAR_HOUR 0802                          _command 0B97                  __size_of_strlen 001A  
          _OSCILLATOR_Initialize 08F4                     __size_of_abs 001A                     __size_of_pad 0059  
                        _isdigit 09CC                __end_of_read_date 0C15                 ___awmod@dividend 0072  
                    ?_calc_money 0076         ??_PIN_MANAGER_Initialize 0070                          _isspace 0A54  
                        atoi@neg 0020       __size_of_SYSTEM_Initialize 000A                          _sprintf 0A97  
                        clrloop0 092D                       ??_lcd_init 0072                       ??_get_next 0020  
           end_of_initialization 07FD                          fputc@fp 0072                          init_ram 0938  
                        fputs@fp 0078                          initloop 0939                    __read@address 0079  
           __size_of_print_money 0049             __size_of_print_train 005B            __end_of_print_remaing 0F61  
              __end_of_vfpfcnvrt 07CA                       ??_vfprintf 0066                          strlen@a 0073  
                        strlen@s 0074                 ??_WDT_Initialize 0070                    _decimal_2_bcd 0B38  
                  i2c_write@data 0070        lcd_set_cursor@row_offsets 0020                       lcd_cmd@cmd 0071  
          __end_of_bcd_2_decimal 098A                       command@val 0075              __size_of_calc_money 0067  
                 __end_of___bmul 099F                    __pidataBIGRAM 0004                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 0062                      vfpfcnvrt@ll 0056                   __end_of___wmul 0A54  
                     _write_date 0E13                   ?_decimal_2_bcd 0070           ?_OSCILLATOR_Initialize 0070  
                 __end_of_strlen 0A18              start_initialization 07CA  __size_of_PIN_MANAGER_Initialize 0016  
                    __end_of_abs 09FE                        _i2c_start 090C                      __end_of_pad 0D59  
                      _i2c_write 0952                  print_money@date 00AF                __size_of_i2c_read 0017  
              __size_of_i2c_wait 000C                __size_of_i2c_stop 0007                  get_next@now_min 002C  
                    vfprintf@fmt 0063                         ??___bmul 0071                         ??___wmul 0074  
                    __pdataBANK1 00E1      __size_of_i2c_repeated_start 000A                         ??_strlen 0072  
                   _HOUR_4_MONEY 083C              lcd_set_cursor@F2502 00E1                        ___latbits 0001  
                print_train@next 00AF                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
               ___aodiv@dividend 0028             print_remaing@now_min 00B7                       ?_i2c_start 0070  
                     ?_i2c_write 0070                __size_of_lcd_init 00EC                __size_of_get_next 009F  
                   _REGULAR_HOUR 0800                        _atoi$1070 0024                        _atoi$1068 0022  
                      _atoi$1069 0026           _PIN_MANAGER_Initialize 099F                        _dtoa$1033 003B  
                       ?___aodiv 0020                         ?___aomod 0020                         ?___awdiv 0070  
               ___aodiv@quotient 0073                         ?___awmod 0070                  ??_decimal_2_bcd 0020  
                      _lcd_clear 0ABD                      ?_write_date 0070                        _lcd_print 0A18  
                       ?_lcd_cmd 0070                __size_of_vfprintf 0031                         ?_command 0072  
                       ?_isdigit 0070                     ??_calc_money 0020              __end_of_MIN_4_MONEY 0840  
                       ?_isspace 0070                   __size_of__read 0022                         ?_sprintf 00A0  
                      _read_date 0BCF                   __size_of_fputc 004F                   __size_of_fputs 0029  
                 __size_of_putch 0001          __size_of_lcd_set_cursor 002A                   ___wmul@product 0074  
                      clear_ram0 092C               __end_of_calc_money 0EDA                         _SSP2CON1 021D  
                       _SSP2CON2 021E                         _SSP2STAT 021C                       ?_lcd_clear 0070  
                      _vfpfcnvrt 0627                       ?_lcd_print 0078                ___wmul@multiplier 0070  
                      get_next@i 0031                        main@next1 00BD           __size_of_lcd_backlight 000E  
                    ??_i2c_start 0070                     _isspace$1086 0074                      ??_i2c_write 0070  
                     ?_read_date 0070                    ??_print_money 006B                         _i2c_read 09B5  
                  ??_print_train 006B                         _i2c_wait 0920                         _i2c_stop 08FB  
            __size_of_write_date 0060                       vfprintf@ap 0065                       vfprintf@fp 0068  
        ??_OSCILLATOR_Initialize 0070                 __size_of___aodiv 0101                 __size_of___aomod 00EA  
               __size_of___awdiv 005F                 __size_of___awmod 0053                       ?_vfpfcnvrt 004E  
                    _MIN_4_MONEY 083E                  ___aodiv@divisor 0020                  ___aodiv@counter 0071  
               __size_of_lcd_cmd 0014                 __size_of_command 0038                       sprintf@fmt 00A0  
               __size_of_isdigit 0018                 __size_of_isspace 0021                         __ptext10 098A  
                       __ptext11 0D59                         __ptext20 0AE5                         __ptext12 0EDA  
                       __ptext21 0C5E                         __ptext13 0C15                         __ptext30 0B0E  
                       __ptext22 08EB                         __ptext14 0A97                         __ptext31 0A18  
                       __ptext23 09E4                         __ptext15 0B66                         __ptext40 0F61  
                       __ptext32 0B97                         __ptext24 01E0                         __ptext16 0627  
                       __ptext41 0E73                         __ptext33 02CA                         __ptext25 03B6  
                       __ptext17 04B7                         __ptext42 0A35                         __ptext34 0944  
                       __ptext26 005A                         __ptext18 0D00                         __ptext43 0902  
                       __ptext35 0962                         __ptext27 0A54                         __ptext19 09FE  
                       __ptext44 08EC                         __ptext36 0952                         __ptext28 09CC  
                       __ptext45 099F                         __ptext37 08FB                         __ptext29 0ABD  
                       __ptext46 08F4                         __ptext38 090C                         __ptext39 0920  
         __size_of_print_remaing 0087                         _lcd_init 02CA                         _get_next 0F61  
                   _SSP2CON1bits 021D                     _SSP2CON2bits 021E                 __size_of_sprintf 0026  
                  __size_of_atoi 00AF                    __size_of_main 00D7                    __size_of_dtoa 0170  
                  _lcd_backlight 0944              __end_of_print_money 0C5E              __end_of_print_train 0DB4  
         __size_of_bcd_2_decimal 0014                         _vfprintf 0B66                         main@date 00C1  
                    ??_lcd_clear 007C                         main@next 00BF                     _SSP2STATbits 021C  
                    ??_lcd_print 007A                 ___aomod@dividend 0028                   _vfpfcnvrt$1048 0060  
                       isdigit@c 0070                    read_date@date 007C                      ??_read_date 007B  
        __size_of_WDT_Initialize 0004                   _lcd_set_cursor 0B0E                lcd_set_cursor@cmd 0025  
              lcd_set_cursor@col 0024                        sprintf@ap 00A8                lcd_set_cursor@row 0078  
                       isspace@c 0070          ?_PIN_MANAGER_Initialize 0070                   ?_lcd_backlight 0070  
     __end_of_i2c_repeated_start 0920                    _print_remaing 0EDA                  ___aomod@divisor 0020  
                   ??_write_date 007A                      ??_vfpfcnvrt 0050                  ___aomod@counter 0071  
            decimal_2_bcd@number 0079                    __pstringtext1 083C                    __pstringtext2 083E  
                  __pstringtext3 0800                    __pstringtext4 0814                    __pstringtext5 0824  
                  __pstringtext6 0830                    __pstringtext7 0840                    __pstringtext8 0000  
                       sprintf@f 00AA                         sprintf@s 00A9           __end_of_lcd_set_cursor 0B38  
                  _bcd_2_decimal 0976                     ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 09B5  
                    _print_money 0C15                      _print_train 0D59               __end_of_write_date 0E73  
                   ___aomod@sign 0072                    __backlightval 006F                   ?_print_remaing 00AF  
